import {
  v
} from "./chunk-EUVEJGWN.js";
import {
  C
} from "./chunk-GU7K6YXW.js";
import {
  o as o5,
  p as p2,
  p2 as p3
} from "./chunk-SJSAYHBJ.js";
import {
  b,
  j,
  l as l2
} from "./chunk-WXSXHXM4.js";
import {
  m,
  p
} from "./chunk-HVAOWOGC.js";
import {
  e as e2
} from "./chunk-2NTQWEQZ.js";
import {
  k
} from "./chunk-HXDFHMRK.js";
import {
  D
} from "./chunk-5HSVWQOA.js";
import {
  i
} from "./chunk-GWA3PLGA.js";
import {
  o as o4
} from "./chunk-DOQ3SAAR.js";
import {
  o as o3
} from "./chunk-F42HXUMI.js";
import {
  o as o2,
  r
} from "./chunk-NFY4EX6G.js";
import {
  l
} from "./chunk-CHTUPHTO.js";
import {
  y
} from "./chunk-453UIKKW.js";
import {
  a2
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a,
  o
} from "./chunk-IYZKKFJM.js";
import {
  has
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/layers/support/FeatureReduction.js
var t = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: ["selection", "cluster", "binning"], readOnly: true, json: { read: false, write: true } })], t.prototype, "type", void 0), t = e([a2("esri.layers.support.FeatureReduction")], t);

// node_modules/@arcgis/core/layers/support/FeatureReductionSelection.js
var t2;
var c = t2 = class extends t {
  constructor(r4) {
    super(r4), this.type = "selection";
  }
  clone() {
    return new t2();
  }
};
e([y({ type: ["selection"] })], c.prototype, "type", void 0), c = t2 = e([a2("esri.layers.support.FeatureReductionSelection")], c);
var p4 = c;

// node_modules/@arcgis/core/layers/support/ExpressionInfo.js
var p5 = class extends i(l) {
  constructor(r4) {
    super(r4), this.expression = null, this.title = null, this.returnType = null;
  }
};
e([y({ type: String, json: { write: true } })], p5.prototype, "expression", void 0), e([y({ type: String, json: { write: true } })], p5.prototype, "title", void 0), e([y({ type: String, json: { write: true } })], p5.prototype, "returnType", void 0), p5 = e([a2("esri.layers.support.ExpressionInfo")], p5);
var i2 = p5;

// node_modules/@arcgis/core/layers/support/AggregateField.js
var p6;
var n = p6 = class extends l {
  constructor(t4) {
    super(t4), this.isAutoGenerated = false, this.name = null, this.alias = null, this.onStatisticField = null, this.onStatisticExpression = null, this.statisticType = null;
  }
  clone() {
    return new p6({ name: this.name, alias: this.alias, isAutoGenerated: this.isAutoGenerated, onStatisticExpression: a(this.onStatisticExpression), onStatisticField: this.onStatisticField, statisticType: this.statisticType });
  }
};
e([y({ type: Boolean, json: { write: true } })], n.prototype, "isAutoGenerated", void 0), e([y({ type: String, json: { write: true } })], n.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], n.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], n.prototype, "onStatisticField", void 0), e([y({ type: i2, json: { write: true } })], n.prototype, "onStatisticExpression", void 0), e([y({ type: String, json: { write: true } })], n.prototype, "statisticType", void 0), n = p6 = e([a2("esri.layers.support.AggregateField")], n);
var a3 = n;

// node_modules/@arcgis/core/layers/support/FeatureReductionBinning.js
var b2;
var g = "esri.layers.support.FeatureReductionBinning";
var h = b2 = class extends t {
  constructor(e4) {
    super(e4), this.type = "binning", this.binType = "geohash", this.fixedBinLevel = 3, this.labelingInfo = null, this.labelsVisible = true, this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.fields = [], this.renderer = null;
  }
  writeFields(e4, r4, o9) {
    const t4 = e4.filter((e5) => "avg_angle" !== e5.statisticType).map((e5) => e5.toJSON());
    o(o9, t4, r4);
  }
  readRenderer(e4, r4, t4) {
    var _a;
    const s4 = (_a = r4.drawingInfo) == null ? void 0 : _a.renderer;
    return s4 ? o5(s4, r4, t4) ?? void 0 : v(r4, t4);
  }
  clone() {
    return new b2({ fields: a(this.fields), fixedBinLevel: this.fixedBinLevel, labelingInfo: a(this.labelingInfo), labelsVisible: this.labelsVisible, maxScale: this.maxScale, popupEnabled: this.popupEnabled, popupTemplate: a(this.popupTemplate), renderer: a(this.renderer) });
  }
};
e([o3({ binning: "binning" })], h.prototype, "type", void 0), e([o3({ geohash: "geohash" })], h.prototype, "binType", void 0), e([y({ type: Number, range: { min: 1, max: 9 }, json: { write: true } })], h.prototype, "fixedBinLevel", void 0), e([y({ type: [C], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], h.prototype, "labelingInfo", void 0), e([y(m)], h.prototype, "labelsVisible", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], h.prototype, "maxScale", void 0), e([y(p)], h.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], h.prototype, "popupTemplate", void 0), e([y({ type: [a3], json: { write: true } })], h.prototype, "fields", void 0), e([r("fields")], h.prototype, "writeFields", null), e([y({ types: p3, json: { write: { target: "drawingInfo.renderer" } } })], h.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], h.prototype, "readRenderer", null), h = b2 = e([a2(g)], h);
var v2 = h;

// node_modules/@arcgis/core/layers/support/FeatureReductionCluster.js
var g2;
var S = "esri.layers.support.FeatureReductionCluster";
function w(e4) {
  var _a;
  return "simple" === e4.type && !((_a = e4.visualVariables) == null ? void 0 : _a.length);
}
var I = g2 = class extends l {
  constructor(e4) {
    super(e4), this.type = "cluster", this.clusterRadius = o4("80px"), this.clusterMinSize = o4("12px"), this.clusterMaxSize = o4("50px"), this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.renderer = null, this.symbol = null, this.labelingInfo = null, this.labelsVisible = true, this.fields = null;
  }
  readRenderer(e4, r4, t4) {
    var _a, _b;
    const s4 = (_a = r4.drawingInfo) == null ? void 0 : _a.renderer;
    return ((_b = s4 == null ? void 0 : s4.authoringInfo) == null ? void 0 : _b.isAutoGenerated) ? null : s4 ? w(s4) ? null : o5(s4, r4, t4) ?? void 0 : v(r4, t4);
  }
  readSymbol(e4, r4, t4) {
    var _a, _b;
    const s4 = (_a = r4.drawingInfo) == null ? void 0 : _a.renderer;
    if ((_b = s4 == null ? void 0 : s4.authoringInfo) == null ? void 0 : _b.isAutoGenerated)
      return null;
    if (s4 && w(s4)) {
      const e5 = o5(s4, r4, t4);
      return e5 == null ? void 0 : e5.symbol;
    }
    return null;
  }
  writeSymbol(e4, r4, o9, s4) {
    var _a, _b;
    const i4 = (_b = (_a = this.renderer) == null ? void 0 : _a.authoringInfo) == null ? void 0 : _b.isAutoGenerated;
    if (!this.renderer || i4) {
      const o10 = new p2({ symbol: e4 });
      r4.drawingInfo = { renderer: o10.write({}, s4) };
    }
  }
  writeFields(e4, r4, t4) {
    const o9 = e4.filter((e5) => "avg_angle" !== e5.statisticType).map((e5) => e5.toJSON());
    o(t4, o9, r4);
  }
  readFields(e4, r4, t4) {
    return e4.filter((e5) => !e5.isAutoGenerated).map((e5) => a3.fromJSON(e5));
  }
  clone() {
    return new g2({ clusterRadius: this.clusterRadius, clusterMinSize: this.clusterMinSize, clusterMaxSize: this.clusterMaxSize, labelingInfo: a(this.labelingInfo), labelsVisible: this.labelsVisible, fields: a(this.fields), maxScale: this.maxScale, renderer: a(this.renderer), symbol: a(this.symbol), popupEnabled: this.popupEnabled, popupTemplate: a(this.popupTemplate) });
  }
};
e([y({ type: ["cluster"], readOnly: true, json: { write: true } })], I.prototype, "type", void 0), e([y({ type: Number, cast: (e4) => "auto" === e4 ? e4 : o4(e4), json: { write: true } })], I.prototype, "clusterRadius", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], I.prototype, "clusterMinSize", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], I.prototype, "clusterMaxSize", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], I.prototype, "maxScale", void 0), e([y(p)], I.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], I.prototype, "popupTemplate", void 0), e([y({ types: p3, json: { write: { target: "drawingInfo.renderer" } } })], I.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], I.prototype, "readRenderer", null), e([y({ types: D })], I.prototype, "symbol", void 0), e([o2("symbol", ["drawingInfo.renderer"])], I.prototype, "readSymbol", null), e([r("symbol")], I.prototype, "writeSymbol", null), e([y({ type: [C], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], I.prototype, "labelingInfo", void 0), e([y(m)], I.prototype, "labelsVisible", void 0), e([y({ type: [a3], json: { write: true } })], I.prototype, "fields", void 0), e([r("fields")], I.prototype, "writeFields", null), e([o2("fields")], I.prototype, "readFields", null), I = g2 = e([a2(S)], I);
var v3 = I;

// node_modules/@arcgis/core/layers/support/featureReductionUtils.js
var o6 = { key: "type", base: t, typeMap: { cluster: v3, binning: v2 } };
var r2 = { types: { key: "type", base: t, typeMap: { selection: p4, cluster: v3, binning: v2 } }, json: { name: "layerDefinition.featureReduction", write: { allowNull: true }, origins: { "web-map": { types: o6 }, "portal-item": { types: o6 }, "web-scene": { types: { key: "type", base: t, typeMap: { selection: p4 } } } } } };

// node_modules/@arcgis/core/core/MD5.js
var n2 = { Base64: 0, Hex: 1, String: 2, Raw: 3 };
var t3 = 8;
var r3 = (1 << t3) - 1;
function e3(n5, t4) {
  const r4 = (65535 & n5) + (65535 & t4);
  return (n5 >> 16) + (t4 >> 16) + (r4 >> 16) << 16 | 65535 & r4;
}
function o7(n5) {
  const e4 = [];
  for (let o9 = 0, u2 = n5.length * t3; o9 < u2; o9 += t3)
    e4[o9 >> 5] |= (n5.charCodeAt(o9 / t3) & r3) << o9 % 32;
  return e4;
}
function u(n5) {
  const e4 = [];
  for (let o9 = 0, u2 = 32 * n5.length; o9 < u2; o9 += t3)
    e4.push(String.fromCharCode(n5[o9 >> 5] >>> o9 % 32 & r3));
  return e4.join("");
}
function c2(n5) {
  const t4 = "0123456789abcdef", r4 = [];
  for (let e4 = 0, o9 = 4 * n5.length; e4 < o9; e4++)
    r4.push(t4.charAt(n5[e4 >> 2] >> e4 % 4 * 8 + 4 & 15) + t4.charAt(n5[e4 >> 2] >> e4 % 4 * 8 & 15));
  return r4.join("");
}
function f(n5) {
  const t4 = "=", r4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", e4 = [];
  for (let o9 = 0, u2 = 4 * n5.length; o9 < u2; o9 += 3) {
    const u3 = (n5[o9 >> 2] >> o9 % 4 * 8 & 255) << 16 | (n5[o9 + 1 >> 2] >> (o9 + 1) % 4 * 8 & 255) << 8 | n5[o9 + 2 >> 2] >> (o9 + 2) % 4 * 8 & 255;
    for (let c4 = 0; c4 < 4; c4++)
      8 * o9 + 6 * c4 > 32 * n5.length ? e4.push(t4) : e4.push(r4.charAt(u3 >> 6 * (3 - c4) & 63));
  }
  return e4.join("");
}
function s3(n5, t4) {
  return n5 << t4 | n5 >>> 32 - t4;
}
function i3(n5, t4, r4, o9, u2, c4) {
  return e3(s3(e3(e3(t4, n5), e3(o9, c4)), u2), r4);
}
function h2(n5, t4, r4, e4, o9, u2, c4) {
  return i3(t4 & r4 | ~t4 & e4, n5, t4, o9, u2, c4);
}
function a4(n5, t4, r4, e4, o9, u2, c4) {
  return i3(t4 & e4 | r4 & ~e4, n5, t4, o9, u2, c4);
}
function l3(n5, t4, r4, e4, o9, u2, c4) {
  return i3(t4 ^ r4 ^ e4, n5, t4, o9, u2, c4);
}
function g3(n5, t4, r4, e4, o9, u2, c4) {
  return i3(r4 ^ (t4 | ~e4), n5, t4, o9, u2, c4);
}
function p7(n5, t4) {
  n5[t4 >> 5] |= 128 << t4 % 32, n5[14 + (t4 + 64 >>> 9 << 4)] = t4;
  let r4 = 1732584193, o9 = -271733879, u2 = -1732584194, c4 = 271733878;
  for (let f2 = 0; f2 < n5.length; f2 += 16) {
    const t5 = r4, s4 = o9, i4 = u2, p9 = c4;
    r4 = h2(r4, o9, u2, c4, n5[f2], 7, -680876936), c4 = h2(c4, r4, o9, u2, n5[f2 + 1], 12, -389564586), u2 = h2(u2, c4, r4, o9, n5[f2 + 2], 17, 606105819), o9 = h2(o9, u2, c4, r4, n5[f2 + 3], 22, -1044525330), r4 = h2(r4, o9, u2, c4, n5[f2 + 4], 7, -176418897), c4 = h2(c4, r4, o9, u2, n5[f2 + 5], 12, 1200080426), u2 = h2(u2, c4, r4, o9, n5[f2 + 6], 17, -1473231341), o9 = h2(o9, u2, c4, r4, n5[f2 + 7], 22, -45705983), r4 = h2(r4, o9, u2, c4, n5[f2 + 8], 7, 1770035416), c4 = h2(c4, r4, o9, u2, n5[f2 + 9], 12, -1958414417), u2 = h2(u2, c4, r4, o9, n5[f2 + 10], 17, -42063), o9 = h2(o9, u2, c4, r4, n5[f2 + 11], 22, -1990404162), r4 = h2(r4, o9, u2, c4, n5[f2 + 12], 7, 1804603682), c4 = h2(c4, r4, o9, u2, n5[f2 + 13], 12, -40341101), u2 = h2(u2, c4, r4, o9, n5[f2 + 14], 17, -1502002290), o9 = h2(o9, u2, c4, r4, n5[f2 + 15], 22, 1236535329), r4 = a4(r4, o9, u2, c4, n5[f2 + 1], 5, -165796510), c4 = a4(c4, r4, o9, u2, n5[f2 + 6], 9, -1069501632), u2 = a4(u2, c4, r4, o9, n5[f2 + 11], 14, 643717713), o9 = a4(o9, u2, c4, r4, n5[f2], 20, -373897302), r4 = a4(r4, o9, u2, c4, n5[f2 + 5], 5, -701558691), c4 = a4(c4, r4, o9, u2, n5[f2 + 10], 9, 38016083), u2 = a4(u2, c4, r4, o9, n5[f2 + 15], 14, -660478335), o9 = a4(o9, u2, c4, r4, n5[f2 + 4], 20, -405537848), r4 = a4(r4, o9, u2, c4, n5[f2 + 9], 5, 568446438), c4 = a4(c4, r4, o9, u2, n5[f2 + 14], 9, -1019803690), u2 = a4(u2, c4, r4, o9, n5[f2 + 3], 14, -187363961), o9 = a4(o9, u2, c4, r4, n5[f2 + 8], 20, 1163531501), r4 = a4(r4, o9, u2, c4, n5[f2 + 13], 5, -1444681467), c4 = a4(c4, r4, o9, u2, n5[f2 + 2], 9, -51403784), u2 = a4(u2, c4, r4, o9, n5[f2 + 7], 14, 1735328473), o9 = a4(o9, u2, c4, r4, n5[f2 + 12], 20, -1926607734), r4 = l3(r4, o9, u2, c4, n5[f2 + 5], 4, -378558), c4 = l3(c4, r4, o9, u2, n5[f2 + 8], 11, -2022574463), u2 = l3(u2, c4, r4, o9, n5[f2 + 11], 16, 1839030562), o9 = l3(o9, u2, c4, r4, n5[f2 + 14], 23, -35309556), r4 = l3(r4, o9, u2, c4, n5[f2 + 1], 4, -1530992060), c4 = l3(c4, r4, o9, u2, n5[f2 + 4], 11, 1272893353), u2 = l3(u2, c4, r4, o9, n5[f2 + 7], 16, -155497632), o9 = l3(o9, u2, c4, r4, n5[f2 + 10], 23, -1094730640), r4 = l3(r4, o9, u2, c4, n5[f2 + 13], 4, 681279174), c4 = l3(c4, r4, o9, u2, n5[f2], 11, -358537222), u2 = l3(u2, c4, r4, o9, n5[f2 + 3], 16, -722521979), o9 = l3(o9, u2, c4, r4, n5[f2 + 6], 23, 76029189), r4 = l3(r4, o9, u2, c4, n5[f2 + 9], 4, -640364487), c4 = l3(c4, r4, o9, u2, n5[f2 + 12], 11, -421815835), u2 = l3(u2, c4, r4, o9, n5[f2 + 15], 16, 530742520), o9 = l3(o9, u2, c4, r4, n5[f2 + 2], 23, -995338651), r4 = g3(r4, o9, u2, c4, n5[f2], 6, -198630844), c4 = g3(c4, r4, o9, u2, n5[f2 + 7], 10, 1126891415), u2 = g3(u2, c4, r4, o9, n5[f2 + 14], 15, -1416354905), o9 = g3(o9, u2, c4, r4, n5[f2 + 5], 21, -57434055), r4 = g3(r4, o9, u2, c4, n5[f2 + 12], 6, 1700485571), c4 = g3(c4, r4, o9, u2, n5[f2 + 3], 10, -1894986606), u2 = g3(u2, c4, r4, o9, n5[f2 + 10], 15, -1051523), o9 = g3(o9, u2, c4, r4, n5[f2 + 1], 21, -2054922799), r4 = g3(r4, o9, u2, c4, n5[f2 + 8], 6, 1873313359), c4 = g3(c4, r4, o9, u2, n5[f2 + 15], 10, -30611744), u2 = g3(u2, c4, r4, o9, n5[f2 + 6], 15, -1560198380), o9 = g3(o9, u2, c4, r4, n5[f2 + 13], 21, 1309151649), r4 = g3(r4, o9, u2, c4, n5[f2 + 4], 6, -145523070), c4 = g3(c4, r4, o9, u2, n5[f2 + 11], 10, -1120210379), u2 = g3(u2, c4, r4, o9, n5[f2 + 2], 15, 718787259), o9 = g3(o9, u2, c4, r4, n5[f2 + 9], 21, -343485551), r4 = e3(r4, t5), o9 = e3(o9, s4), u2 = e3(u2, i4), c4 = e3(c4, p9);
  }
  return [r4, o9, u2, c4];
}
function x(r4, e4 = n2.Hex) {
  const s4 = e4 || n2.Base64, i4 = p7(o7(r4), r4.length * t3);
  switch (s4) {
    case n2.Raw:
      return i4;
    case n2.Hex:
      return c2(i4);
    case n2.String:
      return u(i4);
    case n2.Base64:
      return f(i4);
  }
}

// node_modules/@arcgis/core/views/2d/engine/LevelDependentSizeVariable.js
var l4;
var n3 = l4 = class extends b {
  writeLevels(e4, s4, i4) {
    for (const t4 in e4) {
      const e5 = this.levels[t4];
      return void (s4.stops = e5);
    }
  }
  clone() {
    return new l4({ axis: this.axis, field: this.field, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, maxDataValue: this.maxDataValue, maxSize: e2(this.maxSize) ? this.maxSize.clone() : this.maxSize, minDataValue: this.minDataValue, minSize: e2(this.minSize) ? this.minSize.clone() : this.minSize, normalizationField: this.normalizationField, stops: this.stops && this.stops.map((e4) => e4.clone()), target: this.target, useSymbolValue: this.useSymbolValue, valueRepresentation: this.valueRepresentation, valueUnit: this.valueUnit, legendOptions: this.legendOptions && this.legendOptions.clone(), levels: a(this.levels) });
  }
};
e([y()], n3.prototype, "levels", void 0), e([r("levels")], n3.prototype, "writeLevels", null), n3 = l4 = e([a2("esri.views.2d.engine.LevelDependentSizeVariable")], n3);

// node_modules/@arcgis/core/views/2d/layers/support/clusterUtils.js
var o8 = s.getLogger("esri.views.2d.layers.support.clusterUtils");
has.add("esri-cluster-arcade-enabled", true);
var p8 = has("esri-cluster-arcade-enabled");
var c3 = (e4, r4, s4, i4, n5) => {
  const t4 = r4.clone();
  if (!b3(t4))
    return t4;
  if (t4.authoringInfo || (t4.authoringInfo = new j()), t4.authoringInfo.isAutoGenerated = true, "visualVariables" in t4) {
    const r5 = (t4.visualVariables || []).filter((e5) => "$view.scale" !== e5.valueExpression), a5 = d(r5);
    r5.forEach((r6) => {
      "rotation" === r6.type ? r6.field ? r6.field = E(e4, r6.field, "avg_angle", "number") : r6.valueExpression && (r6.field = x2(e4, r6.valueExpression, "avg_angle", "number"), r6.valueExpression = null) : r6.normalizationField ? (r6.field = E(e4, r6.field, "avg_norm", "number", r6.normalizationField), r6.normalizationField = null) : r6.field ? r6.field = E(e4, r6.field, "avg", "number") : r6.valueExpression && (r6.field = x2(e4, r6.valueExpression, "avg", "number"), r6.valueExpression = null);
    }), null == a5 && !m2(r5) && n5 && (r5.push(v4(s4, i4)), t4.dynamicClusterSize = true), t4.visualVariables = r5;
  }
  switch (t4.type) {
    case "simple":
      break;
    case "pie-chart":
      for (const r5 of t4.attributes)
        r5.field ? r5.field = E(e4, r5.field, "sum", "number") : r5.valueExpression && (r5.field = x2(e4, r5.valueExpression, "sum", "number"), r5.valueExpression = null);
      break;
    case "unique-value":
      t4.field ? t4.field = E(e4, t4.field, "mode", "string") : t4.valueExpression && (t4.field = x2(e4, t4.valueExpression, "mode", "string"), t4.valueExpression = null);
      break;
    case "class-breaks":
      t4.normalizationField ? (t4.field = E(e4, t4.field, "avg_norm", "number", t4.normalizationField), t4.normalizationField = null) : t4.field ? t4.field = E(e4, t4.field, "avg", "number") : t4.valueExpression && (t4.field = x2(e4, t4.valueExpression, "avg", "number"), t4.valueExpression = null);
  }
  return t4;
};
var d = (e4) => {
  for (const r4 of e4)
    if ("size" === r4.type)
      return r4;
  return null;
};
var m2 = (e4) => {
  for (const r4 of e4)
    if ("cluster_count" === r4.field)
      return true;
  return false;
};
var v4 = (e4, r4) => {
  const s4 = [new l2({ value: 0, size: 0 }), new l2({ value: 1 })];
  if (null == r4)
    return new b({ field: "cluster_count", stops: [...s4, new l2({ value: 2, size: 0 })] });
  const i4 = Object.keys(r4).reduce((i5, n5) => ({ ...i5, [n5]: [...s4, new l2({ value: Math.max(2, r4[n5].minValue), size: e4.clusterMinSize }), new l2({ value: Math.max(3, r4[n5].maxValue), size: e4.clusterMaxSize })] }), {});
  return new n3({ field: "cluster_count", levels: i4 });
};
var b3 = (r4) => {
  const s4 = (s5) => o8.error(new s2("Unsupported-renderer", s5, { renderer: r4 }));
  if (!r4)
    return false;
  switch (r4.type) {
    case "unique-value":
      if (r4.field2 || r4.field3)
        return s4("FeatureReductionCluster does not support multi-field UniqueValueRenderers"), false;
      break;
    case "class-breaks":
      if (r4.normalizationField) {
        const e4 = r4.normalizationType;
        if ("field" !== e4)
          return s4(`FeatureReductionCluster does not support a normalizationType of ${e4}`), false;
      }
      break;
    case "simple":
    case "pie-chart":
      break;
    default:
      return s4(`FeatureReductionCluster does not support renderers of type ${r4.type}`), false;
  }
  if (!p8) {
    if ("valueExpression" in r4 && r4.valueExpression)
      return s4("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"), false;
    if (("visualVariables" in r4 && r4.visualVariables || []).some((e4) => !(!("valueExpression" in e4) || !e4.valueExpression)))
      return s4("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"), false;
  }
  return true;
};
function g4(e4, r4, i4) {
  switch (e4) {
    case "sum":
      return `cluster_sum_${r4}`;
    case "avg":
    case "avg_angle":
      return `cluster_avg_${r4}`;
    case "mode":
      return `cluster_type_${r4}`;
    case "avg_norm": {
      const e5 = i4, n5 = "field", a5 = r4.toLowerCase() + ",norm:" + n5 + "," + e5.toLowerCase();
      return "cluster_avg_" + x(a5);
    }
  }
}
function x2(e4, r4, a5, t4) {
  const l5 = x(r4), u2 = "mode" === a5 ? `cluster_type_${l5}` : "sum" === a5 ? `cluster_sum_${l5}` : `cluster_avg_${l5}`;
  return e4.some((e5) => e5.name === u2) || e4.push(new a3({ name: u2, isAutoGenerated: true, onStatisticExpression: new i2({ expression: r4, returnType: t4 }), statisticType: a5 })), u2;
}
function E(e4, r4, s4, a5, t4) {
  if ("cluster_count" === r4 || e4.some((e5) => e5.name === r4))
    return r4;
  const l5 = g4(s4, r4, t4);
  return e4.some((e5) => e5.name === l5) || ("avg_norm" === s4 ? e4.push(new a3({ name: l5, isAutoGenerated: true, onStatisticExpression: new i2({ expression: `$feature.${r4} / $feature.${t4}`, returnType: a5 }), statisticType: "avg" })) : e4.push(new a3({ name: l5, isAutoGenerated: true, onStatisticField: r4, statisticType: s4 }))), l5;
}

// node_modules/@arcgis/core/layers/mixins/FeatureReductionLayer.js
var n4 = (n5) => {
  let u2 = class extends n5 {
    constructor(...e4) {
      super(...e4), this.own(this.watch("renderer", () => {
        if (this.featureReduction) {
          const e5 = this._normalizeFeatureReduction(this.featureReduction);
          this._set("featureReduction", e5);
        }
      }, true));
    }
    set featureReduction(e4) {
      const r4 = this._normalizeFeatureReduction(e4);
      this._set("featureReduction", r4);
    }
    set renderer(e4) {
    }
    _normalizeFeatureReduction(e4) {
      var _a;
      if ("cluster" !== (e4 == null ? void 0 : e4.type))
        return e4;
      const r4 = e4.clone(), t4 = [new a3({ name: "cluster_count", isAutoGenerated: true, statisticType: "count" })], o9 = (r4.fields ?? []).filter((e5) => !e5.isAutoGenerated);
      if (e4.renderer && !((_a = e4.renderer.authoringInfo) == null ? void 0 : _a.isAutoGenerated))
        return r4.fields = [...t4, ...o9], r4;
      if (e4.symbol)
        return r4.fields = [...t4, ...o9], r4.renderer = null, r4;
      if (!this.renderer)
        return e4;
      const n6 = c3(t4, this.renderer, e4, null, false);
      return r4.fields = [...t4, ...o9], r4.renderer = n6, r4;
    }
  };
  return e([y(r2)], u2.prototype, "featureReduction", null), u2 = e([a2("esri.layers.mixins.FeatureReductionLayer")], u2), u2;
};

export {
  t,
  p4 as p,
  n2 as n,
  x,
  n4 as n2
};
//# sourceMappingURL=chunk-MWAJRN5U.js.map
