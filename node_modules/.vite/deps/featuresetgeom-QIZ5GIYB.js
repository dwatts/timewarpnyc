import {
  f2 as f,
  u2 as u
} from "./chunk-CKRZHFZR.js";
import {
  O,
  R,
  S,
  h,
  m,
  p as p2,
  x
} from "./chunk-ML3AZXMM.js";
import "./chunk-AHKW4ZTY.js";
import "./chunk-LFQ3TKCC.js";
import {
  s
} from "./chunk-L6ZSDMAP.js";
import {
  Ne,
  Q,
  V,
  oe
} from "./chunk-FCJ5IYMQ.js";
import "./chunk-YAWND7HF.js";
import "./chunk-HQEF5G5V.js";
import {
  e,
  t
} from "./chunk-FJYIB7HF.js";
import "./chunk-BFZI4PK4.js";
import "./chunk-MNR4BIGQ.js";
import "./chunk-IHCIS6PT.js";
import "./chunk-OHH3UAUS.js";
import "./chunk-EIQYIBNS.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-POEWD5LS.js";
import "./chunk-HTVQN75V.js";
import "./chunk-W3WHCGIQ.js";
import "./chunk-GWA3PLGA.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-CEXY22SC.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-REPJV7SP.js";
import "./chunk-F42HXUMI.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-T35GN7EL.js";
import {
  p
} from "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import "./chunk-453UIKKW.js";
import "./chunk-5BLDWPLW.js";
import "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import "./chunk-UYRCWUYQ.js";
import "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function y(e2) {
  return e2 instanceof p;
}
function S2(i, a, c, S3) {
  return S3(i, a, async (S4, R3, v) => {
    if (v.length < 2)
      throw new t(i, e.WrongNumberOfParameters, a);
    if (null === (v = Ne(v))[0] && null === v[1])
      return false;
    if (V(v[0])) {
      if (v[1] instanceof p)
        return new f({ parentfeatureset: v[0], relation: c, relationGeom: v[1] });
      if (null === v[1])
        return new u({ parentfeatureset: v[0] });
      throw new t(i, e.InvalidParameter, a);
    }
    if (y(v[0])) {
      if (y(v[1])) {
        switch (c) {
          case "esriSpatialRelEnvelopeIntersects":
            return h(s(v[0]), s(v[1]));
          case "esriSpatialRelIntersects":
            return h(v[0], v[1]);
          case "esriSpatialRelContains":
            return p2(v[0], v[1]);
          case "esriSpatialRelOverlaps":
            return O(v[0], v[1]);
          case "esriSpatialRelWithin":
            return x(v[0], v[1]);
          case "esriSpatialRelTouches":
            return S(v[0], v[1]);
          case "esriSpatialRelCrosses":
            return m(v[0], v[1]);
        }
        throw new t(i, e.InvalidParameter, a);
      }
      if (V(v[1]))
        return new f({ parentfeatureset: v[1], relation: c, relationGeom: v[0] });
      if (null === v[1])
        return false;
      throw new t(i, e.InvalidParameter, a);
    }
    if (null !== v[0])
      throw new t(i, e.InvalidParameter, a);
    return V(v[1]) ? new u({ parentfeatureset: v[1] }) : !(v[1] instanceof p || null === v[1]) && void 0;
  });
}
function R2(t2) {
  "async" === t2.mode && (t2.functions.intersects = function(e2, n) {
    return S2(e2, n, "esriSpatialRelIntersects", t2.standardFunctionAsync);
  }, t2.functions.envelopeintersects = function(e2, n) {
    return S2(e2, n, "esriSpatialRelEnvelopeIntersects", t2.standardFunctionAsync);
  }, t2.signatures.push({ name: "envelopeintersects", min: 2, max: 2 }), t2.functions.contains = function(e2, n) {
    return S2(e2, n, "esriSpatialRelContains", t2.standardFunctionAsync);
  }, t2.functions.overlaps = function(e2, n) {
    return S2(e2, n, "esriSpatialRelOverlaps", t2.standardFunctionAsync);
  }, t2.functions.within = function(e2, n) {
    return S2(e2, n, "esriSpatialRelWithin", t2.standardFunctionAsync);
  }, t2.functions.touches = function(e2, n) {
    return S2(e2, n, "esriSpatialRelTouches", t2.standardFunctionAsync);
  }, t2.functions.crosses = function(e2, n) {
    return S2(e2, n, "esriSpatialRelCrosses", t2.standardFunctionAsync);
  }, t2.functions.relate = function(u2, f2) {
    return t2.standardFunctionAsync(u2, f2, (t3, p3, m2) => {
      if (m2 = Ne(m2), Q(m2, 3, 3, u2, f2), y(m2[0]) && y(m2[1]))
        return R(m2[0], m2[1], oe(m2[2]));
      if (m2[0] instanceof p && null === m2[1])
        return false;
      if (m2[1] instanceof p && null === m2[0])
        return false;
      if (V(m2[0]) && null === m2[1])
        return new u({ parentfeatureset: m2[0] });
      if (V(m2[1]) && null === m2[0])
        return new u({ parentfeatureset: m2[1] });
      if (V(m2[0]) && m2[1] instanceof p)
        return m2[0].relate(m2[1], oe(m2[2]));
      if (V(m2[1]) && m2[0] instanceof p)
        return m2[1].relate(m2[0], oe(m2[2]));
      if (null === m2[0] && null === m2[1])
        return false;
      throw new t(u2, e.InvalidParameter, f2);
    });
  });
}
export {
  R2 as registerFunctions
};
//# sourceMappingURL=featuresetgeom-QIZ5GIYB.js.map
