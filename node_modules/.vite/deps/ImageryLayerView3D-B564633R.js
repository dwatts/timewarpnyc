import {
  z
} from "./chunk-UDMSDDKG.js";
import "./chunk-6DBQVE2E.js";
import "./chunk-MHABBCOV.js";
import "./chunk-2LYE3T3U.js";
import "./chunk-UVYXRE2S.js";
import "./chunk-GD75B7SP.js";
import "./chunk-AGK2CKWJ.js";
import "./chunk-3ZJOLTPQ.js";
import "./chunk-V4MUDRER.js";
import "./chunk-FUNFO42Y.js";
import "./chunk-MIJNMSZR.js";
import "./chunk-KWPMDFFW.js";
import "./chunk-N4JKQR77.js";
import "./chunk-ZPXPJ2G7.js";
import "./chunk-GXIJZVS6.js";
import "./chunk-6LC2JTLC.js";
import "./chunk-LYVSHBLV.js";
import "./chunk-NZZXHYUD.js";
import "./chunk-Z2RTGLQI.js";
import "./chunk-77DVCCTB.js";
import "./chunk-TXZY5TKH.js";
import "./chunk-M3ODSYZR.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-UG4QYACC.js";
import "./chunk-X5HNB5JI.js";
import "./chunk-K43XJEZQ.js";
import "./chunk-6JSGBXI6.js";
import "./chunk-KBPF5PFD.js";
import "./chunk-XFZB3R5P.js";
import "./chunk-YRKEWWDW.js";
import "./chunk-KHQ5TXSL.js";
import "./chunk-NU4UASX6.js";
import "./chunk-SADO52IH.js";
import "./chunk-FOJITELY.js";
import "./chunk-NCXRF7LF.js";
import "./chunk-73PNWDTS.js";
import "./chunk-PKS3ZVLN.js";
import "./chunk-XMR2X5WG.js";
import "./chunk-KUPJ3HED.js";
import "./chunk-36L3RRF7.js";
import "./chunk-BUCIQGFS.js";
import "./chunk-OUYOFOVY.js";
import "./chunk-HVLYIZVQ.js";
import "./chunk-FDGDKKWR.js";
import "./chunk-25GSBURT.js";
import "./chunk-63ERNIOV.js";
import "./chunk-L2MGQ544.js";
import "./chunk-O2CT6XUA.js";
import "./chunk-DWF7HN4X.js";
import "./chunk-2ORXZKWN.js";
import "./chunk-KTGLOZE4.js";
import "./chunk-K6DV6EVZ.js";
import "./chunk-JP7O2ZWE.js";
import "./chunk-TLBJBU3X.js";
import "./chunk-UM64E5NS.js";
import "./chunk-PCEMOYTZ.js";
import "./chunk-4RU6WIRN.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-BDWD2ZNU.js";
import "./chunk-HLBPEADQ.js";
import "./chunk-FIBWCATC.js";
import "./chunk-NLWV7Q6F.js";
import {
  p
} from "./chunk-3FVFBGNT.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-7FNOSSSO.js";
import "./chunk-LLQMBVBO.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-SS3YG6J3.js";
import {
  b as b2
} from "./chunk-CF43FEIV.js";
import "./chunk-GNESNC4Q.js";
import {
  b
} from "./chunk-HVAOWOGC.js";
import "./chunk-6NPJZOPM.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-2TWR6EVF.js";
import "./chunk-IR32DXLL.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-DR3XNW4L.js";
import "./chunk-KGA7WAD3.js";
import "./chunk-ZEMUATMN.js";
import "./chunk-RG2YRACH.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-VYGC2LVC.js";
import "./chunk-VHPS7AS5.js";
import "./chunk-3ESTI2X4.js";
import "./chunk-YK2WEG7V.js";
import "./chunk-GVQH342Z.js";
import "./chunk-W3WHCGIQ.js";
import {
  f
} from "./chunk-HPWZ2OON.js";
import "./chunk-GWA3PLGA.js";
import "./chunk-CNS4YGGN.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-7JNPZC53.js";
import "./chunk-6UW2VZVV.js";
import "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-F42HXUMI.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import "./chunk-J2V5CZSS.js";
import "./chunk-7D57YBLP.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-T35GN7EL.js";
import {
  x2 as x
} from "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import {
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import {
  k
} from "./chunk-UYRCWUYQ.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/views/layers/ImageryLayerView.js
var n = (n3) => {
  let u = class extends n3 {
    constructor() {
      super(...arguments), this.view = null;
    }
    async fetchPopupFeatures(e2, t) {
      const { layer: o2 } = this;
      if (!e2)
        throw new s("imagerylayerview:fetchPopupFeatures", "Nothing to fetch without area", { layer: o2 });
      const { popupEnabled: p2 } = o2, n4 = p(o2, t);
      if (!p2 || null == n4)
        throw new s("imagerylayerview:fetchPopupFeatures", "Missing required popupTemplate or popupEnabled", { popupEnabled: p2, popupTemplate: n4 });
      const u2 = await n4.getRequiredFields(), l = new b2();
      l.timeExtent = this.timeExtent, l.geometry = e2, l.outFields = u2, l.outSpatialReference = e2.spatialReference;
      const { resolution: m, spatialReference: c } = this.view, y2 = "2d" === this.view.type ? new x(m, m, c) : new x(0.5 * m, 0.5 * m, c), { returnTopmostRaster: d, showNoDataRecords: h } = n4.layerOptions || { returnTopmostRaster: true, showNoDataRecords: false }, w = { returnDomainValues: true, returnTopmostRaster: d, pixelSize: y2, showNoDataRecords: h, signal: null != t ? t.signal : null };
      return o2.queryVisibleRasters(l, w).then((e3) => e3);
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return e([y()], u.prototype, "layer", void 0), e([y()], u.prototype, "suspended", void 0), e([y(b)], u.prototype, "timeExtent", void 0), e([y()], u.prototype, "view", void 0), u = e([a("esri.views.layers.ImageryLayerView")], u), u;
};

// node_modules/@arcgis/core/views/3d/layers/ImageryLayerView3D.js
var o = class extends n(z) {
  constructor() {
    super(...arguments), this.type = "imagery-3d", this.redrawDebounced = k(async (e2) => {
      this.redraw((e3, a2) => this._redrawImage(e3, a2), e2);
    }, 2e3);
  }
  initialize() {
    this.handles.add([f(() => this.view.basemapTerrain.ready, () => this._initializeMaximumDataResolution(), { once: true, initial: true }), this.layer.on("redraw", () => this.updatingHandles.addPromise(this.redrawDebounced()))]), this.updatingHandles.add(() => {
      var _a, _b;
      return (_b = (_a = this.layer) == null ? void 0 : _a.exportImageServiceParameters) == null ? void 0 : _b.version;
    }, () => {
      this.updatingHandles.addPromise(this.refreshDebounced());
    }), this.updatingHandles.add(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.renderer;
    }, () => {
      this.updatingHandles.addPromise(this.refreshDebounced());
    }), this.updatingHandles.add(() => this.timeExtent, () => this.updatingHandles.addPromise(this.refreshDebounced()));
  }
  _initializeMaximumDataResolution() {
    this.maximumDataResolution = this.layer.loaded ? this.layer.serviceRasterInfo.pixelSize : null;
  }
  getFetchOptions() {
    return { timeExtent: this.timeExtent };
  }
  async processResult(e2, a2, t) {
    a2.imageOrCanvasElement ? e2.image = a2.imageOrCanvasElement : (e2.image = document.createElement("canvas"), e2.pixelData = a2.pixelData, await this._redrawImage(e2, t));
  }
  async _redrawImage(e2, a2) {
    if (!(e2.image instanceof HTMLCanvasElement) || null == e2.pixelData)
      throw new Error();
    const t = e2.image, i = t.getContext("2d"), r = await this.layer.applyRenderer(e2.pixelData, { signal: a2 }), s2 = this.layer.applyFilter(r).pixelBlock;
    if (null == s2)
      throw new Error();
    t.width = s2.width, t.height = s2.height;
    const o2 = i.createImageData(s2.width, s2.height);
    o2.data.set(s2.getAsRGBA()), i.putImageData(o2, 0, 0);
  }
};
o = e([a("esri.views.3d.layers.ImageryLayerView3D")], o);
var n2 = o;
export {
  n2 as default
};
//# sourceMappingURL=ImageryLayerView3D-B564633R.js.map
