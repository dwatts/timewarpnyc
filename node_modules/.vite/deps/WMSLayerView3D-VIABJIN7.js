import {
  z
} from "./chunk-UDMSDDKG.js";
import "./chunk-6DBQVE2E.js";
import "./chunk-MHABBCOV.js";
import "./chunk-2LYE3T3U.js";
import "./chunk-UVYXRE2S.js";
import "./chunk-GD75B7SP.js";
import "./chunk-AGK2CKWJ.js";
import {
  l as l2
} from "./chunk-3OMX7IH7.js";
import "./chunk-3ZJOLTPQ.js";
import "./chunk-V4MUDRER.js";
import "./chunk-FUNFO42Y.js";
import "./chunk-MIJNMSZR.js";
import "./chunk-KWPMDFFW.js";
import "./chunk-N4JKQR77.js";
import "./chunk-ZPXPJ2G7.js";
import "./chunk-GXIJZVS6.js";
import "./chunk-6LC2JTLC.js";
import "./chunk-LYVSHBLV.js";
import "./chunk-NZZXHYUD.js";
import "./chunk-Z2RTGLQI.js";
import "./chunk-77DVCCTB.js";
import "./chunk-TXZY5TKH.js";
import "./chunk-M3ODSYZR.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-UG4QYACC.js";
import "./chunk-X5HNB5JI.js";
import "./chunk-K43XJEZQ.js";
import "./chunk-6JSGBXI6.js";
import "./chunk-KBPF5PFD.js";
import "./chunk-XFZB3R5P.js";
import "./chunk-YRKEWWDW.js";
import "./chunk-KHQ5TXSL.js";
import "./chunk-NU4UASX6.js";
import "./chunk-SADO52IH.js";
import "./chunk-FOJITELY.js";
import "./chunk-NCXRF7LF.js";
import "./chunk-73PNWDTS.js";
import "./chunk-PKS3ZVLN.js";
import "./chunk-XMR2X5WG.js";
import "./chunk-KUPJ3HED.js";
import "./chunk-36L3RRF7.js";
import "./chunk-BUCIQGFS.js";
import "./chunk-OUYOFOVY.js";
import "./chunk-HVLYIZVQ.js";
import "./chunk-FDGDKKWR.js";
import "./chunk-25GSBURT.js";
import "./chunk-63ERNIOV.js";
import "./chunk-L2MGQ544.js";
import "./chunk-O2CT6XUA.js";
import "./chunk-DWF7HN4X.js";
import "./chunk-2ORXZKWN.js";
import "./chunk-KTGLOZE4.js";
import "./chunk-K6DV6EVZ.js";
import "./chunk-JP7O2ZWE.js";
import "./chunk-TLBJBU3X.js";
import "./chunk-UM64E5NS.js";
import "./chunk-PCEMOYTZ.js";
import "./chunk-4RU6WIRN.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-BDWD2ZNU.js";
import "./chunk-HLBPEADQ.js";
import "./chunk-FIBWCATC.js";
import "./chunk-NLWV7Q6F.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-7FNOSSSO.js";
import "./chunk-LLQMBVBO.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-SS3YG6J3.js";
import {
  b
} from "./chunk-HVAOWOGC.js";
import "./chunk-6NPJZOPM.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-2TWR6EVF.js";
import "./chunk-IR32DXLL.js";
import "./chunk-DR3XNW4L.js";
import "./chunk-KGA7WAD3.js";
import "./chunk-ZEMUATMN.js";
import "./chunk-RG2YRACH.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-VYGC2LVC.js";
import "./chunk-VHPS7AS5.js";
import "./chunk-3ESTI2X4.js";
import "./chunk-YK2WEG7V.js";
import "./chunk-W3WHCGIQ.js";
import "./chunk-HPWZ2OON.js";
import "./chunk-CNS4YGGN.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-7JNPZC53.js";
import "./chunk-6UW2VZVV.js";
import "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import "./chunk-J2V5CZSS.js";
import "./chunk-7D57YBLP.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import {
  M
} from "./chunk-T35GN7EL.js";
import "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import {
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import {
  l
} from "./chunk-UYRCWUYQ.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/views/layers/WMSLayerView.js
var i = (i2) => {
  let m = class extends i2 {
    initialize() {
      this.exportImageParameters = new l2({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters = l(this.exportImageParameters);
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), (this._get("exportImageVersion") || 0) + 1;
    }
    fetchPopupFeatures(e2) {
      const { layer: t } = this;
      if (!e2)
        return Promise.reject(new s("wmslayerview:fetchPopupFeatures", "Nothing to fetch without area", { layer: t }));
      const { popupEnabled: o } = t;
      if (!o)
        return Promise.reject(new s("wmslayerview:fetchPopupFeatures", "popupEnabled should be true", { popupEnabled: o }));
      const s2 = this.createFetchPopupFeaturesQuery(e2);
      if (!s2)
        return Promise.resolve([]);
      const { extent: p, width: a3, height: i3, x: m2, y: n2 } = s2;
      if (!(p && a3 && i3))
        throw new s("wmslayerview:fetchPopupFeatures", "WMSLayer does not support fetching features.", { extent: p, width: a3, height: i3 });
      return t.fetchFeatureInfo(p, a3, i3, m2, n2);
    }
  };
  return e([y()], m.prototype, "exportImageParameters", void 0), e([y({ readOnly: true })], m.prototype, "exportImageVersion", null), e([y()], m.prototype, "layer", void 0), e([y(b)], m.prototype, "timeExtent", void 0), m = e([a("esri.layers.mixins.WMSLayerView")], m), m;
};

// node_modules/@arcgis/core/views/3d/layers/WMSLayerView3D.js
var a2 = class extends i(z) {
  constructor() {
    super(...arguments), this.type = "wms-3d";
  }
  initialize() {
    this.layer.serviceSupportsSpatialReference(this.view.spatialReference) || this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible", "The spatial references supported by this WMS layer are incompatible with the spatial reference of the view"))), this.updatingHandles.add(() => {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.version;
    }, () => {
      this.updatingHandles.addPromise(this.refreshDebounced());
    });
  }
  createFetchPopupFeaturesQuery(e2) {
    const t = this.findExtentInfoAt(e2), r = t.extent, i2 = new M(r[0], r[1], r[2], r[3], this._spatialReference), o = t.imageSize, a3 = o.width, n2 = o.height, p = i2.width / a3;
    return { extent: i2, width: a3, height: n2, x: Math.round((e2.x - i2.xmin) / p), y: Math.round((i2.ymax - e2.y) / p) };
  }
  getFetchOptions() {
    return { timeExtent: this.timeExtent };
  }
};
a2 = e([a("esri.views.3d.layers.WMSLayerView3D")], a2);
var n = a2;
export {
  n as default
};
//# sourceMappingURL=WMSLayerView3D-VIABJIN7.js.map
