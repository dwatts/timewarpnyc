import {
  a
} from "./chunk-3CQBBMMD.js";

// node_modules/@arcgis/core/chunks/mat2d.js
function a2(t2, a4) {
  return t2[0] = a4[0], t2[1] = a4[1], t2[2] = a4[2], t2[3] = a4[3], t2[4] = a4[4], t2[5] = a4[5], t2;
}
function n(t2) {
  return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2[4] = 0, t2[5] = 0, t2;
}
function s(t2, a4, n3, s2, r3, u2, o3) {
  return t2[0] = a4, t2[1] = n3, t2[2] = s2, t2[3] = r3, t2[4] = u2, t2[5] = o3, t2;
}
function r(t2, a4) {
  const n3 = a4[0], s2 = a4[1], r3 = a4[2], u2 = a4[3], o3 = a4[4], e3 = a4[5];
  let c3 = n3 * u2 - s2 * r3;
  return c3 ? (c3 = 1 / c3, t2[0] = u2 * c3, t2[1] = -s2 * c3, t2[2] = -r3 * c3, t2[3] = n3 * c3, t2[4] = (r3 * e3 - u2 * o3) * c3, t2[5] = (s2 * o3 - n3 * e3) * c3, t2) : null;
}
function u(t2) {
  return t2[0] * t2[3] - t2[1] * t2[2];
}
function o(t2, a4, n3) {
  const s2 = a4[0], r3 = a4[1], u2 = a4[2], o3 = a4[3], e3 = a4[4], c3 = a4[5], i2 = n3[0], h2 = n3[1], M2 = n3[2], f2 = n3[3], b2 = n3[4], l2 = n3[5];
  return t2[0] = s2 * i2 + u2 * h2, t2[1] = r3 * i2 + o3 * h2, t2[2] = s2 * M2 + u2 * f2, t2[3] = r3 * M2 + o3 * f2, t2[4] = s2 * b2 + u2 * l2 + e3, t2[5] = r3 * b2 + o3 * l2 + c3, t2;
}
function e(t2, a4, n3) {
  const s2 = a4[0], r3 = a4[1], u2 = a4[2], o3 = a4[3], e3 = a4[4], c3 = a4[5], i2 = Math.sin(n3), h2 = Math.cos(n3);
  return t2[0] = s2 * h2 + u2 * i2, t2[1] = r3 * h2 + o3 * i2, t2[2] = s2 * -i2 + u2 * h2, t2[3] = r3 * -i2 + o3 * h2, t2[4] = e3, t2[5] = c3, t2;
}
function c(t2, a4, n3) {
  const s2 = a4[0], r3 = a4[1], u2 = a4[2], o3 = a4[3], e3 = a4[4], c3 = a4[5], i2 = n3[0], h2 = n3[1];
  return t2[0] = s2 * i2, t2[1] = r3 * i2, t2[2] = u2 * h2, t2[3] = o3 * h2, t2[4] = e3, t2[5] = c3, t2;
}
function i(t2, a4, n3) {
  const s2 = a4[0], r3 = a4[1], u2 = a4[2], o3 = a4[3], e3 = a4[4], c3 = a4[5], i2 = n3[0], h2 = n3[1];
  return t2[0] = s2, t2[1] = r3, t2[2] = u2, t2[3] = o3, t2[4] = s2 * i2 + u2 * h2 + e3, t2[5] = r3 * i2 + o3 * h2 + c3, t2;
}
function h(t2, a4) {
  const n3 = Math.sin(a4), s2 = Math.cos(a4);
  return t2[0] = s2, t2[1] = n3, t2[2] = -n3, t2[3] = s2, t2[4] = 0, t2[5] = 0, t2;
}
function M(t2, a4) {
  return t2[0] = a4[0], t2[1] = 0, t2[2] = 0, t2[3] = a4[1], t2[4] = 0, t2[5] = 0, t2;
}
function f(t2, a4) {
  return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2[4] = a4[0], t2[5] = a4[1], t2;
}
function b(t2) {
  return "mat2d(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ", " + t2[3] + ", " + t2[4] + ", " + t2[5] + ")";
}
function l(t2) {
  return Math.sqrt(t2[0] ** 2 + t2[1] ** 2 + t2[2] ** 2 + t2[3] ** 2 + t2[4] ** 2 + t2[5] ** 2 + 1);
}
function m(t2, a4, n3) {
  return t2[0] = a4[0] + n3[0], t2[1] = a4[1] + n3[1], t2[2] = a4[2] + n3[2], t2[3] = a4[3] + n3[3], t2[4] = a4[4] + n3[4], t2[5] = a4[5] + n3[5], t2;
}
function d(t2, a4, n3) {
  return t2[0] = a4[0] - n3[0], t2[1] = a4[1] - n3[1], t2[2] = a4[2] - n3[2], t2[3] = a4[3] - n3[3], t2[4] = a4[4] - n3[4], t2[5] = a4[5] - n3[5], t2;
}
function p(t2, a4, n3) {
  return t2[0] = a4[0] * n3, t2[1] = a4[1] * n3, t2[2] = a4[2] * n3, t2[3] = a4[3] * n3, t2[4] = a4[4] * n3, t2[5] = a4[5] * n3, t2;
}
function x(t2, a4, n3, s2) {
  return t2[0] = a4[0] + n3[0] * s2, t2[1] = a4[1] + n3[1] * s2, t2[2] = a4[2] + n3[2] * s2, t2[3] = a4[3] + n3[3] * s2, t2[4] = a4[4] + n3[4] * s2, t2[5] = a4[5] + n3[5] * s2, t2;
}
function y(t2, a4) {
  return t2[0] === a4[0] && t2[1] === a4[1] && t2[2] === a4[2] && t2[3] === a4[3] && t2[4] === a4[4] && t2[5] === a4[5];
}
function g(a4, n3) {
  const s2 = a4[0], r3 = a4[1], u2 = a4[2], o3 = a4[3], e3 = a4[4], c3 = a4[5], i2 = n3[0], h2 = n3[1], M2 = n3[2], f2 = n3[3], b2 = n3[4], l2 = n3[5], m2 = a();
  return Math.abs(s2 - i2) <= m2 * Math.max(1, Math.abs(s2), Math.abs(i2)) && Math.abs(r3 - h2) <= m2 * Math.max(1, Math.abs(r3), Math.abs(h2)) && Math.abs(u2 - M2) <= m2 * Math.max(1, Math.abs(u2), Math.abs(M2)) && Math.abs(o3 - f2) <= m2 * Math.max(1, Math.abs(o3), Math.abs(f2)) && Math.abs(e3 - b2) <= m2 * Math.max(1, Math.abs(e3), Math.abs(b2)) && Math.abs(c3 - l2) <= m2 * Math.max(1, Math.abs(c3), Math.abs(l2));
}
var S = o;
var j = d;
var q = Object.freeze(Object.defineProperty({ __proto__: null, add: m, copy: a2, determinant: u, equals: g, exactEquals: y, frob: l, fromRotation: h, fromScaling: M, fromTranslation: f, identity: n, invert: r, mul: S, multiply: o, multiplyScalar: p, multiplyScalarAndAdd: x, rotate: e, scale: c, set: s, str: b, sub: j, subtract: d, translate: i }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/chunks/mat2df32.js
function n2() {
  const n3 = new Float32Array(6);
  return n3[0] = 1, n3[3] = 1, n3;
}
function t(n3) {
  const t2 = new Float32Array(6);
  return t2[0] = n3[0], t2[1] = n3[1], t2[2] = n3[2], t2[3] = n3[3], t2[4] = n3[4], t2[5] = n3[5], t2;
}
function r2(n3, t2, r3, e3, o3, a4) {
  const c3 = new Float32Array(6);
  return c3[0] = n3, c3[1] = t2, c3[2] = r3, c3[3] = e3, c3[4] = o3, c3[5] = a4, c3;
}
function e2(n3, t2) {
  return new Float32Array(n3, t2, 6);
}
function o2(n3, t2, r3, e3) {
  const o3 = t2[e3], a4 = t2[e3 + 1];
  n3[e3] = r3[0] * o3 + r3[2] * a4 + r3[4], n3[e3 + 1] = r3[1] * o3 + r3[3] * a4 + r3[5];
}
function a3(n3, t2, r3, e3 = 0, a4 = 0, c3 = 2) {
  const s2 = a4 || t2.length / c3;
  for (let u2 = e3; u2 < s2; u2++) {
    o2(n3, t2, r3, u2 * c3);
  }
}
var c2 = Object.freeze(Object.defineProperty({ __proto__: null, clone: t, create: n2, createView: e2, fromValues: r2, transform: o2, transformMany: a3 }, Symbol.toStringTag, { value: "Module" }));

export {
  n,
  r,
  o,
  e,
  c,
  i,
  h,
  M,
  f,
  n2,
  a3 as a
};
//# sourceMappingURL=chunk-EUYJEZD4.js.map
