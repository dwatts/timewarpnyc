import {
  E
} from "./chunk-57BN4YG4.js";
import {
  r
} from "./chunk-DEBQNQHK.js";
import "./chunk-RHUGUXGR.js";
import "./chunk-PKQ2SINV.js";
import "./chunk-SYR2G6XU.js";
import "./chunk-NCJWSWGW.js";
import "./chunk-MHABBCOV.js";
import {
  n
} from "./chunk-GD75B7SP.js";
import {
  d as d2
} from "./chunk-AGK2CKWJ.js";
import "./chunk-ANLIVU2T.js";
import "./chunk-KGLSZSEH.js";
import "./chunk-WON6TZX6.js";
import {
  o as o2
} from "./chunk-Q2M27J4W.js";
import {
  o as o3
} from "./chunk-I26BSZGI.js";
import "./chunk-PM77FW2O.js";
import "./chunk-5RQTPWCM.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-FP4CFXG6.js";
import "./chunk-V5N62ACA.js";
import "./chunk-RMQ3PJIC.js";
import "./chunk-6OVHX5ZO.js";
import "./chunk-3LR4MDXK.js";
import "./chunk-V7IVNH7O.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-O2Q4W74O.js";
import "./chunk-RRRAGAMB.js";
import "./chunk-PVUG2RDQ.js";
import "./chunk-J3HE7QNA.js";
import "./chunk-GRB6LNZN.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-LFQ3TKCC.js";
import "./chunk-HSZYWTXA.js";
import "./chunk-YZ24SAPZ.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-FQPEAXKN.js";
import "./chunk-QL3WCPM7.js";
import "./chunk-JBKOFMVJ.js";
import "./chunk-LB5DD6MA.js";
import "./chunk-UYTOEYIN.js";
import "./chunk-JQKL7AD5.js";
import "./chunk-UXILD4EC.js";
import "./chunk-SU7C3V7L.js";
import "./chunk-KV3PR5T6.js";
import "./chunk-Y554AESO.js";
import "./chunk-SCHIU6CT.js";
import "./chunk-AD4YIQAV.js";
import "./chunk-4DMQJ2S2.js";
import "./chunk-SFLHXPT4.js";
import "./chunk-ICIEEFA3.js";
import "./chunk-UTDRCXKP.js";
import "./chunk-HXNDA4EJ.js";
import "./chunk-ZFRKFGUZ.js";
import "./chunk-6YRYWMPZ.js";
import "./chunk-ADAZBQKN.js";
import "./chunk-6EBCANA3.js";
import "./chunk-K7N526Q4.js";
import "./chunk-JRSZCAZV.js";
import "./chunk-YIZLAUCA.js";
import "./chunk-3ZJOLTPQ.js";
import "./chunk-V4MUDRER.js";
import {
  C
} from "./chunk-FUNFO42Y.js";
import "./chunk-N33CV3QM.js";
import "./chunk-FF3JARPY.js";
import "./chunk-UP7SW73R.js";
import "./chunk-VHOCNQAB.js";
import "./chunk-OK2X54ZK.js";
import "./chunk-RDB3JY7T.js";
import "./chunk-WO5DESPO.js";
import "./chunk-W5D3JTKS.js";
import "./chunk-JGNIGIZR.js";
import "./chunk-LUC7NVZB.js";
import "./chunk-XEG7QIWD.js";
import "./chunk-SFZTK3JV.js";
import "./chunk-GZLXOXKP.js";
import "./chunk-SME753HL.js";
import "./chunk-4QCFWJ22.js";
import "./chunk-MIJNMSZR.js";
import "./chunk-HKJ2JMCX.js";
import "./chunk-KWPMDFFW.js";
import "./chunk-O25GNIYL.js";
import "./chunk-XKYCNHCM.js";
import "./chunk-KFBN32GM.js";
import "./chunk-N4JKQR77.js";
import "./chunk-ZPXPJ2G7.js";
import "./chunk-GXIJZVS6.js";
import "./chunk-6LC2JTLC.js";
import "./chunk-LYVSHBLV.js";
import "./chunk-NZZXHYUD.js";
import "./chunk-S2XINYNZ.js";
import "./chunk-ZIP4LO57.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-5IGN7QB3.js";
import "./chunk-AN7CDKM7.js";
import "./chunk-AA5GXCZF.js";
import "./chunk-X3ONRBOR.js";
import "./chunk-UF4LSGC7.js";
import "./chunk-VG7E4EAR.js";
import "./chunk-Y5WQRWCP.js";
import "./chunk-JI3FA4UR.js";
import "./chunk-HXPEPPWJ.js";
import "./chunk-A76FH7WO.js";
import "./chunk-3JWSWLNQ.js";
import "./chunk-MUDJ2KE7.js";
import "./chunk-EVSMDRIW.js";
import "./chunk-2CJB7VCN.js";
import "./chunk-5AW2TAZE.js";
import "./chunk-Z2RTGLQI.js";
import "./chunk-77DVCCTB.js";
import "./chunk-VVBWSIUG.js";
import "./chunk-TXZY5TKH.js";
import "./chunk-YMGFO2D7.js";
import "./chunk-FZT425TB.js";
import "./chunk-6AORBEIP.js";
import "./chunk-E4SXYCGV.js";
import "./chunk-CYWA6YJM.js";
import "./chunk-5DK7WWJE.js";
import "./chunk-M3ODSYZR.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-UG4QYACC.js";
import "./chunk-GRRIWI4U.js";
import "./chunk-X5HNB5JI.js";
import "./chunk-K43XJEZQ.js";
import "./chunk-6JSGBXI6.js";
import "./chunk-KBPF5PFD.js";
import "./chunk-STAL4WDK.js";
import "./chunk-GXJIA6VA.js";
import "./chunk-L5ONWTZL.js";
import "./chunk-UI5O37MZ.js";
import "./chunk-XFZB3R5P.js";
import "./chunk-YRKEWWDW.js";
import "./chunk-KHQ5TXSL.js";
import "./chunk-NU4UASX6.js";
import "./chunk-LQIVAUXR.js";
import "./chunk-F4YTVHY4.js";
import "./chunk-4FXCMZ3U.js";
import "./chunk-SADO52IH.js";
import "./chunk-FOJITELY.js";
import "./chunk-NCXRF7LF.js";
import "./chunk-73PNWDTS.js";
import "./chunk-PKS3ZVLN.js";
import "./chunk-XMR2X5WG.js";
import "./chunk-KUPJ3HED.js";
import "./chunk-36L3RRF7.js";
import "./chunk-BUCIQGFS.js";
import "./chunk-OUYOFOVY.js";
import "./chunk-HVLYIZVQ.js";
import "./chunk-FDGDKKWR.js";
import "./chunk-25GSBURT.js";
import "./chunk-63ERNIOV.js";
import "./chunk-KKDPZLGI.js";
import "./chunk-XTOI3E3Y.js";
import "./chunk-IWGINM6K.js";
import "./chunk-WUQZO2AO.js";
import "./chunk-IVCEO3SL.js";
import "./chunk-3RKFJO4O.js";
import "./chunk-P4NNXJS3.js";
import "./chunk-LZAQ3R3T.js";
import "./chunk-Y67AAEQ4.js";
import "./chunk-L2MGQ544.js";
import "./chunk-O2CT6XUA.js";
import "./chunk-DWF7HN4X.js";
import "./chunk-2ORXZKWN.js";
import "./chunk-KTGLOZE4.js";
import "./chunk-K6DV6EVZ.js";
import "./chunk-EDILO3VR.js";
import "./chunk-2CKXYQCA.js";
import "./chunk-JP7O2ZWE.js";
import "./chunk-6AGTIZBD.js";
import "./chunk-UT4ZWPHT.js";
import "./chunk-LWDDTPWX.js";
import "./chunk-LWKRCHND.js";
import "./chunk-USOI6RP2.js";
import "./chunk-TLBJBU3X.js";
import "./chunk-YYE6WDO2.js";
import "./chunk-WDZ5AAFL.js";
import "./chunk-QNBIVGAZ.js";
import "./chunk-5KLICR5E.js";
import "./chunk-RSPVLZNN.js";
import "./chunk-PR2OEILG.js";
import "./chunk-2AUW3MT4.js";
import "./chunk-UM64E5NS.js";
import "./chunk-2SZNVP5H.js";
import "./chunk-MXVQCJ4K.js";
import "./chunk-G4LSNP77.js";
import "./chunk-S5RIUWET.js";
import "./chunk-MNDNZJD5.js";
import "./chunk-LVVQ2RQY.js";
import "./chunk-CUZNACFZ.js";
import "./chunk-ZHUFARKQ.js";
import "./chunk-ICEO3WMK.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-L3FCQBVC.js";
import "./chunk-IUCM3FNB.js";
import "./chunk-PCEMOYTZ.js";
import "./chunk-4RU6WIRN.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-OX5TJXHM.js";
import "./chunk-BDWD2ZNU.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-HLBPEADQ.js";
import "./chunk-FIBWCATC.js";
import "./chunk-NLWV7Q6F.js";
import "./chunk-JPAY3V43.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-RR3IDPQP.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-3FVFBGNT.js";
import "./chunk-AI6XUWWS.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-BZL5MAFP.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-7FNOSSSO.js";
import "./chunk-LLQMBVBO.js";
import "./chunk-DS6JZDZO.js";
import "./chunk-OTNLRAEN.js";
import "./chunk-OKABUMQT.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-SS3YG6J3.js";
import {
  d
} from "./chunk-TBKQVVVQ.js";
import "./chunk-CDI6XFV5.js";
import "./chunk-SJSAYHBJ.js";
import "./chunk-WXSXHXM4.js";
import "./chunk-PYQNXC2L.js";
import "./chunk-NHHKW3WR.js";
import "./chunk-V4EIGIRT.js";
import "./chunk-MD5VUVM5.js";
import {
  b
} from "./chunk-CF43FEIV.js";
import "./chunk-GNESNC4Q.js";
import "./chunk-VYG5A4VI.js";
import "./chunk-ANW6V73Y.js";
import "./chunk-FJ3XUIT3.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-BFZI4PK4.js";
import "./chunk-6NPJZOPM.js";
import "./chunk-2NTQWEQZ.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-E2PV5YTZ.js";
import "./chunk-GLVTFP5O.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-2NXAWKLI.js";
import "./chunk-AUKNAK3D.js";
import "./chunk-2TWR6EVF.js";
import "./chunk-IR32DXLL.js";
import "./chunk-7BMUKKBX.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-HKUQGT3G.js";
import "./chunk-LTYDGBC5.js";
import "./chunk-H2WAWDF5.js";
import "./chunk-LG2ZH3JE.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-DR3XNW4L.js";
import "./chunk-DKCDRJ5N.js";
import "./chunk-PCTUO7WS.js";
import {
  a as a2
} from "./chunk-ZEMUATMN.js";
import "./chunk-RG2YRACH.js";
import "./chunk-ZUBHLDU6.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-PZXYASUU.js";
import "./chunk-VYGC2LVC.js";
import "./chunk-VHPS7AS5.js";
import "./chunk-GH3XG2RA.js";
import "./chunk-3ESTI2X4.js";
import "./chunk-YK2WEG7V.js";
import "./chunk-GVQH342Z.js";
import "./chunk-HTVQN75V.js";
import "./chunk-W3WHCGIQ.js";
import {
  l as l2
} from "./chunk-HPWZ2OON.js";
import {
  h
} from "./chunk-WAPUHORU.js";
import "./chunk-HXDFHMRK.js";
import "./chunk-5HSVWQOA.js";
import "./chunk-C2BBLDPU.js";
import "./chunk-GWA3PLGA.js";
import "./chunk-FXWSVUF2.js";
import "./chunk-CNS4YGGN.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-CEXY22SC.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7JNPZC53.js";
import "./chunk-ZXXKE5XP.js";
import "./chunk-MATER45R.js";
import "./chunk-6UW2VZVV.js";
import "./chunk-GAARA5JM.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EHNCW2SL.js";
import {
  o
} from "./chunk-HIPTG7BJ.js";
import "./chunk-REPJV7SP.js";
import "./chunk-F42HXUMI.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import "./chunk-J2V5CZSS.js";
import {
  m as m2
} from "./chunk-7D57YBLP.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-T35GN7EL.js";
import "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import {
  m,
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import {
  l
} from "./chunk-UYRCWUYQ.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/layers/graphics/controllers/StreamController.js
var u = 2500;
var m3 = class extends h {
  getObjectId() {
    return this.objectId;
  }
};
e([y({ type: Number, json: { read: true } })], m3.prototype, "objectId", void 0), m3 = e([a("esri.layers.graphics.controllers.StreamGraphic")], m3);
var y2 = class {
  constructor(e2) {
    this.onUpdate = e2, this._idToGraphic = /* @__PURE__ */ new Map();
  }
  destroy() {
    this._idToGraphic.clear();
  }
  add(e2) {
    this._idToGraphic.set(e2.objectId, e2);
  }
  get(e2) {
    return this._idToGraphic.get(e2);
  }
  forEach(e2) {
    this._idToGraphic.forEach(e2);
  }
  removeById(e2) {
    const t = this._idToGraphic.get(e2);
    return t ? (t.sourceLayer = t.layer = null, this._idToGraphic.delete(e2), t) : null;
  }
  update(e2, t) {
    this.onUpdate(e2, t);
  }
  get size() {
    return this._idToGraphic.size;
  }
};
var f = class extends a2(m2(m)) {
  constructor() {
    super(...arguments), this.isPaused = false, this.graphics = new r(), this._updateInfo = { websocket: 0, client: 0 }, this._updateIntervalId = null, this._outSpatialReference = null;
  }
  initialize() {
    this.addResolvingPromise(this.layer.when(() => this._startup()));
  }
  destroy() {
    this.clear();
  }
  _clearInterval() {
    null !== this._updateIntervalId && (clearInterval(this._updateIntervalId), this._updateIntervalId = null);
  }
  clear() {
    this._clearInterval(), this.connection = l(this.connection), this.store = l(this.store), this.graphics.clear(), this.handles.removeAll();
  }
  get updating() {
    return !this.connection || "connected" === this.connection.connectionStatus;
  }
  _startup() {
    const { layer: e2, layerView: t } = this, { spatialReference: r2, definitionExpression: s2, geometryDefinition: o5, objectIdField: i, timeInfo: n2, purgeOptions: c, maxReconnectionAttempts: d3, maxReconnectionInterval: u2, customParameters: m5 } = e2, f2 = e2.geometryType ? o.toJSON(e2.geometryType) : null, g = r2, I = t.view.spatialReference, _ = { geometry: o5, where: s2 };
    this.clear(), this._set("connection", o3(e2.parsedUrl, g, I, f2, _, d3, u2, m5 ?? void 0)), this._outSpatialReference = I.toJSON(), this.store = new y2(this._onUpdate.bind(this)), this.featuresManager = new o2(this.store, i, n2.toJSON(), c);
    const v = "startup-watches";
    this.handles.remove(v), this.handles.add([e2.on("send-message-to-socket", (e3) => this.connection.sendMessageToSocket(e3)), e2.on("send-message-to-client", (e3) => this.connection.sendMessageToClient(e3)), this.connection.on("data-received", (e3) => this._onFeature(e3)), this.connection.on("message-received", (e3) => this._onWebSocketMessage(e3)), l2(() => [e2.definitionExpression, e2.geometryDefinition, e2.purgeOptions], () => this._startup())], v), this.isPaused || this._initUpdateInterval();
  }
  _onWebSocketMessage(e2) {
    if (this.layerView.emit("message-received", e2), "type" in e2)
      switch (e2.type) {
        case "delete":
          if (e2.objectIds)
            for (const t of e2.objectIds)
              this.featuresManager.removeById(t);
          if (e2.trackIds)
            for (const t of e2.trackIds)
              this.featuresManager.removeByTrackId(t);
          break;
        case "clear":
          this.store.forEach((e3) => this.featuresManager.removeById(e3.objectId));
      }
  }
  _onFeature(e2) {
    this._updateInfo.websocket++, this.layerView.hasEventListener("data-received") && this.layerView.emit("data-received", { attributes: e2.attributes, centroid: e2.centroid, geometry: e2.geometry });
    try {
      null == e2.geometry || e2.geometry.spatialReference || (e2.geometry.spatialReference = this._outSpatialReference);
      const t = m3.fromJSON(e2);
      t.sourceLayer = t.layer = this.layer, this.featuresManager.add(t);
    } catch {
    }
  }
  _onUpdate(e2, t) {
    null != t && this.graphics.removeMany(t), null != e2 && (this._updateInfo.client += e2.length, this.graphics.addMany(e2));
  }
  _initUpdateInterval() {
    this._clearInterval();
    const { updateInterval: e2 } = this.layer;
    let t = performance.now();
    this._updateIntervalId = setInterval(() => {
      const e3 = performance.now(), r2 = e3 - t;
      if (r2 > u) {
        t = e3;
        const s2 = Math.round(this._updateInfo.client / (r2 / 1e3)), o5 = Math.round(this._updateInfo.websocket / (r2 / 1e3));
        this._updateInfo.client = 0, this._updateInfo.websocket = 0, this.layerView.emit("update-rate", { client: s2, websocket: o5 });
      }
      this.featuresManager.checkForUpdates();
    }, e2);
  }
  pauseStream() {
    this.isPaused = true, this._clearInterval();
  }
  resumeStream() {
    this.isPaused = false, this._initUpdateInterval();
  }
};
e([y()], f.prototype, "isPaused", void 0), e([y({ constructOnly: true })], f.prototype, "layer", void 0), e([y({ constructOnly: true })], f.prototype, "layerView", void 0), e([y()], f.prototype, "connection", void 0), e([y({ readOnly: true })], f.prototype, "updating", null), f = e([a("esri.layers.graphics.controllers.StreamController")], f);

// node_modules/@arcgis/core/views/layers/StreamLayerView.js
var o4 = (o5) => {
  let i = class extends o5 {
    resume() {
      this._isUserPaused = false, this.suspended || this._doResume();
    }
    pause() {
      this._isUserPaused = true, this.suspended || this._doPause();
    }
    constructor(...s2) {
      super(...s2), this._isUserPaused = false, this.filter = null;
    }
    get connectionStatus() {
      return this._isUserPaused ? "paused" : this._streamConnectionStatus;
    }
    _onSuspendedChange(s2) {
      s2 ? this._doPause() : this._isUserPaused || this._doResume();
    }
  };
  return e([y()], i.prototype, "_isUserPaused", void 0), e([y({ readOnly: true })], i.prototype, "connectionStatus", null), e([y({ type: d })], i.prototype, "filter", void 0), i = e([a("esri.layers.mixins.StreamLayerView")], i), i;
};

// node_modules/@arcgis/core/views/3d/layers/StreamLayerView3D.js
var m4 = class extends o4(E(n(d2))) {
  constructor() {
    super(...arguments), this.type = "stream-3d", this.updatePolicy = C.ASYNC, this.hasZ = true, this.hasM = false;
  }
  initialize() {
    this.handles.add(l2(() => this.suspended, (e2) => {
      this.controller && this._onSuspendedChange(e2);
    }));
  }
  get connectionError() {
    const e2 = this.get("controller.connection.errorString");
    return e2 ? new s("stream-controller", e2) : null;
  }
  createQuery() {
    return new b({ outFields: ["*"], returnGeometry: true, outSpatialReference: this.view.spatialReference });
  }
  queryLatestObservations(e2, r2) {
    return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e2), r2 == null ? void 0 : r2.signal);
  }
  get _streamConnectionStatus() {
    var _a, _b;
    return ((_b = (_a = this.controller) == null ? void 0 : _a.connection) == null ? void 0 : _b.connectionStatus) ?? "disconnected";
  }
  createController() {
    return new f({ layer: this.layer, layerView: this });
  }
  beforeSetController() {
  }
  _doPause() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.pauseStream();
  }
  _doResume() {
    var _a;
    (_a = this.controller) == null ? void 0 : _a.resumeStream();
  }
};
e([y({ readOnly: true })], m4.prototype, "updatePolicy", void 0), e([y({ readOnly: true })], m4.prototype, "connectionError", null), e([y()], m4.prototype, "controller", void 0), e([y({ readOnly: true })], m4.prototype, "hasZ", void 0), e([y({ readOnly: true })], m4.prototype, "hasM", void 0), e([y({ readOnly: true })], m4.prototype, "_streamConnectionStatus", null), m4 = e([a("esri.views.3d.layers.StreamLayerView3D")], m4);
var y3 = m4;
export {
  y3 as default
};
//# sourceMappingURL=StreamLayerView3D-MDXMISPU.js.map
