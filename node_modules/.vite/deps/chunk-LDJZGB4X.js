import {
  x
} from "./chunk-A4HFWKMU.js";
import {
  E,
  S
} from "./chunk-YRFMBPVS.js";
import {
  e,
  n
} from "./chunk-PH45YSDU.js";
import {
  F,
  U
} from "./chunk-HLBPEADQ.js";
import {
  i
} from "./chunk-OHH3UAUS.js";
import {
  v
} from "./chunk-FFUMVAL2.js";
import {
  C,
  T,
  c2 as c,
  h,
  o,
  w
} from "./chunk-UYRCWUYQ.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js
var n2 = 8388607;
var t = 8388608;
var r = 254;
var o2 = 255;
var u = 0;
var c2 = 1;
var e2 = (n4) => (n4 & t) >>> 23;
var f = (t4) => t4 & n2;
var i2 = (n4) => e2(n4) === c2 ? r : o2;
function p(n4) {
  return e2(n4) === c2;
}
function s3(n4, r2) {
  return ((r2 ? t : 0) | n4) >>> 0;
}

// node_modules/@arcgis/core/views/support/QueueProcessor.js
var n3 = class {
  constructor(e3, s4) {
    this.item = e3, this.controller = s4, this.promise = null;
  }
};
var u2 = class {
  constructor(e3) {
    this._deferreds = /* @__PURE__ */ new Map(), this._controllers = /* @__PURE__ */ new Map(), this._processingItems = /* @__PURE__ */ new Map(), this._isPaused = false, this._schedule = null, this._task = null, this.concurrency = 1, e3.concurrency && (this.concurrency = e3.concurrency), this._queue = new i(e3.peeker), this.process = e3.process;
    const s4 = e3.scheduler;
    e3.priority && s4 && (this._task = s4.registerTask(e3.priority, this));
  }
  destroy() {
    this.clear(), this._schedule = o(this._schedule), this._task = o(this._task);
  }
  get length() {
    return this._processingItems.size + this._queue.length;
  }
  abort(e3) {
    const s4 = this._controllers.get(e3);
    s4 && s4.abort();
  }
  clear() {
    this._queue.clear();
    const e3 = [];
    this._controllers.forEach((s4) => e3.push(s4)), this._controllers.clear(), e3.forEach((e4) => e4.abort()), this._processingItems.clear(), this._cancelNext();
  }
  forEach(e3) {
    this._deferreds.forEach((s4, t4) => e3(t4));
  }
  get(e3) {
    const s4 = this._deferreds.get(e3);
    return s4 ? s4.promise : void 0;
  }
  isOngoing(e3) {
    return this._processingItems.has(e3);
  }
  has(e3) {
    return this._deferreds.has(e3);
  }
  pause() {
    this._isPaused || (this._isPaused = true, this._cancelNext());
  }
  push(e3, i3) {
    const o4 = this.get(e3);
    if (o4)
      return o4;
    const c3 = new AbortController();
    let n4 = null;
    i3 && (n4 = w(i3, () => c3.abort()));
    const u3 = () => {
      const s4 = this._processingItems.get(e3);
      s4 && s4.controller.abort(), l(), p3.reject(c());
    }, l = () => {
      _.remove(), null != n4 && n4.remove(), this._deferreds.delete(e3), this._controllers.delete(e3), this._queue.remove(e3), this._processingItems.delete(e3), this._scheduleNext();
    }, _ = h(c3.signal, u3), p3 = C();
    return this._deferreds.set(e3, p3), this._controllers.set(e3, c3), p3.promise.then(l, l), this._queue.push(e3), this._scheduleNext(), p3.promise;
  }
  last() {
    return this._queue.last();
  }
  peek() {
    return this._queue.peek();
  }
  popLast() {
    return this._queue.popLast();
  }
  reset() {
    const e3 = [];
    this._processingItems.forEach((s4) => e3.push(s4)), this._processingItems.clear();
    for (const s4 of e3)
      this._queue.push(s4.item), s4.controller.abort();
    this._scheduleNext();
  }
  resume() {
    this._isPaused && (this._isPaused = false, this._scheduleNext());
  }
  takeAll() {
    const e3 = [];
    for (; this._queue.length; )
      e3.push(this._queue.pop());
    return this.clear(), e3;
  }
  get running() {
    return !this._isPaused && this._queue.length > 0 && this._processingItems.size < this.concurrency;
  }
  runTask(e3) {
    for (; !e3.done && this._queue.length > 0 && this._processingItems.size < this.concurrency; )
      this._process(this._queue.pop()), e3.madeProgress();
  }
  _scheduleNext() {
    this._task || this._isPaused || this._schedule || (this._schedule = v(() => {
      this._schedule = null, this._next();
    }));
  }
  _next() {
    for (; this._queue.length > 0 && this._processingItems.size < this.concurrency; )
      this._process(this._queue.pop());
  }
  _cancelNext() {
    this._schedule && (this._schedule.remove(), this._schedule = null);
  }
  _processResult(e3, s4) {
    this._canProcessFulfillment(e3) && (this._scheduleNext(), this._deferreds.get(e3.item).resolve(s4));
  }
  _processError(e3, s4) {
    this._canProcessFulfillment(e3) && (this._scheduleNext(), this._deferreds.get(e3.item).reject(s4));
  }
  _canProcessFulfillment(e3) {
    return !!this._deferreds.get(e3.item) && this._processingItems.get(e3.item) === e3;
  }
  _process(e3) {
    if (null == e3)
      return;
    let s4;
    const t4 = new AbortController(), r2 = new n3(e3, t4);
    this._processingItems.set(e3, r2);
    try {
      s4 = this.process(e3, t4.signal);
    } catch (h3) {
      this._processError(r2, h3);
    }
    T(s4) ? (r2.promise = s4, s4.then((e4) => this._processResult(r2, e4), (e4) => this._processError(r2, e4))) : this._processResult(r2, s4);
  }
  get test() {
    return { update: (e3) => this.runTask(e3) };
  }
};

// node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js
var m = s.getLogger("esri.views.2d.engine.webgl.Utils");
var f2 = "geometry";
var d = [{ name: f2, strideInBytes: 12 }];
var p2 = [{ name: f2, strideInBytes: 36 }];
var y = [{ name: f2, strideInBytes: 24 }];
var I2 = [{ name: f2, strideInBytes: 12 }];
var g = [{ name: f2, strideInBytes: 40 }];
var S2 = [{ name: f2, strideInBytes: 36 }];
var T2 = [{ name: f2, strideInBytes: 36 }];
function w2(e3) {
  const t4 = {};
  for (const n4 of e3)
    t4[n4.name] = n4.strideInBytes;
  return t4;
}
var E2 = w2([{ name: f2, strideInBytes: 36 }]);
var h2 = w2(d);
var L = w2(p2);
var N = w2(y);
var D = w2(I2);
var A = w2(g);
var M = w2(S2);
var U2 = w2(T2);
function R(e3, t4) {
  switch (e3) {
    case E.MARKER:
      return t4 === S.HEATMAP ? h2 : E2;
    case E.FILL:
      switch (t4) {
        case S.DOT_DENSITY:
          return D;
        case S.SIMPLE:
        case S.OUTLINE_FILL_SIMPLE:
          return N;
        default:
          return L;
      }
    case E.LINE:
      return A;
    case E.TEXT:
      return M;
    case E.LABEL:
      return U2;
  }
}
function k(t4) {
  switch (t4) {
    case "butt":
      return e.BUTT;
    case "round":
      return e.ROUND;
    case "square":
      return e.SQUARE;
    default:
      return m.error(new s2("mapview-invalid-type", `Cap type ${t4} is not a valid option. Defaulting to round`)), e.ROUND;
  }
}
function G(t4) {
  switch (t4) {
    case "miter":
      return n.MITER;
    case "bevel":
      return n.BEVEL;
    case "round":
      return n.ROUND;
    default:
      return m.error(new s2("mapview-invalid-type", `Join type ${t4} is not a valid option. Defaulting to round`)), n.ROUND;
  }
}
var Y = { [f2]: F.STATIC_DRAW };
function W(t4) {
  switch (t4) {
    case U.UNSIGNED_BYTE:
      return Uint8Array;
    case U.UNSIGNED_SHORT_4_4_4_4:
      return Uint16Array;
    case U.FLOAT:
      return Float32Array;
    default:
      return void m.error(new s2("webgl-utils", `Unable to handle type ${t4}`));
  }
}

// node_modules/@arcgis/core/views/2d/engine/webgl/color.js
function t3(r2) {
  if (!r2)
    return 0;
  const { r: t4, g: o4, b: u3, a: i3 } = r2;
  return x(t4 * i3, o4 * i3, u3 * i3, 255 * i3);
}
function o3(r2) {
  if (!r2)
    return 0;
  const [t4, o4, u3, i3] = r2;
  return x(t4 * (i3 / 255), o4 * (i3 / 255), u3 * (i3 / 255), i3);
}

export {
  n2 as n,
  u,
  c2 as c,
  e2 as e,
  f,
  i2 as i,
  p,
  s3 as s,
  u2,
  R,
  k,
  G,
  W,
  t3 as t,
  o3 as o
};
//# sourceMappingURL=chunk-LDJZGB4X.js.map
