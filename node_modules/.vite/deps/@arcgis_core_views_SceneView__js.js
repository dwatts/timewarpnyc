import {
  d as d20,
  o as o38,
  t as t42
} from "./chunk-JASPAYV7.js";
import {
  j as j9
} from "./chunk-FMRABLCQ.js";
import {
  d as d24
} from "./chunk-DQ6VXOAL.js";
import {
  f as f24
} from "./chunk-CIR5BYUQ.js";
import {
  d as d25
} from "./chunk-QZUB5GWM.js";
import {
  t as t45
} from "./chunk-MC6BTU33.js";
import {
  F as F14,
  L as L7,
  x as x14
} from "./chunk-4MKKZVQV.js";
import {
  c as c25,
  s as s40
} from "./chunk-L5OZGOUK.js";
import {
  d as d22,
  m as m14
} from "./chunk-TSPHUFNJ.js";
import {
  d as d23
} from "./chunk-C56IZAQV.js";
import {
  a as a34,
  l as l26
} from "./chunk-MH46CQ37.js";
import {
  m as m15,
  s as s41
} from "./chunk-Q6YDY43A.js";
import {
  f as f23,
  p as p16,
  r as r41,
  t as t44
} from "./chunk-7MPON6I4.js";
import {
  u as u17,
  w as w14,
  x as x13
} from "./chunk-GQAGHPLF.js";
import {
  H as H7,
  _ as _12,
  o as o40
} from "./chunk-4OT3SMZF.js";
import {
  l as l24,
  u as u16
} from "./chunk-34IWA4TT.js";
import {
  F as F13,
  I as I11,
  a as a33,
  m as m13,
  v as v13
} from "./chunk-EM76DGSI.js";
import {
  C as C10,
  s as s39
} from "./chunk-MK4VUXL6.js";
import {
  h as h21,
  l as l23,
  n as n47,
  o as o39,
  y as y11
} from "./chunk-IFYASE2B.js";
import "./chunk-EIXGQTTU.js";
import {
  f as f22,
  l as l25
} from "./chunk-U7MFH42B.js";
import {
  d as d21,
  i as i34
} from "./chunk-4FUI7AUA.js";
import {
  i as i35,
  t as t43
} from "./chunk-HL4J7WAZ.js";
import {
  e as e31,
  n as n46,
  o as o37,
  z as z9
} from "./chunk-ZGWLER3V.js";
import {
  f as f20
} from "./chunk-7LV34AK7.js";
import {
  S as S11,
  b as b4,
  e as e32,
  i as i31,
  s as s36,
  w as w13
} from "./chunk-66QELS5L.js";
import {
  s as s37,
  s2 as s38,
  t as t40,
  v as v12
} from "./chunk-GJTR3OEJ.js";
import {
  t as t39
} from "./chunk-4YFLUPDH.js";
import {
  u as u15,
  y as y10
} from "./chunk-GKZFJZN7.js";
import {
  g as g13,
  h as h20,
  i as i32,
  r as r40
} from "./chunk-QVJUFANJ.js";
import {
  A as A16,
  i as i33,
  t as t41
} from "./chunk-6WS3O2ZJ.js";
import {
  f as f21
} from "./chunk-C7LVYPVC.js";
import {
  B as B3,
  D as D4,
  F as F10,
  U as U7
} from "./chunk-MXJTOENW.js";
import {
  m as m12
} from "./chunk-HM64G5CG.js";
import {
  e as e29,
  t as t37,
  z as z8
} from "./chunk-D4OUCQGI.js";
import {
  d2 as d18,
  e as e30,
  i as i30,
  n as n45,
  o as o36,
  t as t38,
  u as u13
} from "./chunk-HBTZJH6T.js";
import "./chunk-FCNQKNAD.js";
import {
  d as d19,
  u as u14
} from "./chunk-KD4VJNFV.js";
import {
  d as d17,
  f as f19,
  p as p14,
  r as r32
} from "./chunk-H42XE5SX.js";
import {
  a as a32
} from "./chunk-LTXHRVMM.js";
import {
  r as r39
} from "./chunk-KILCBNKU.js";
import {
  g as g12,
  i as i26,
  i2 as i29,
  n as n36,
  o as o29,
  o2 as o30,
  r as r33,
  u2 as u12
} from "./chunk-ZTGZITVH.js";
import {
  F as F12,
  c as c24,
  o as o35,
  t as t35
} from "./chunk-UY6LF23L.js";
import {
  t as t31
} from "./chunk-6XUC2FZF.js";
import {
  A as A13,
  E as E12,
  I as I8
} from "./chunk-BUKSB3RJ.js";
import "./chunk-7DUQU7X7.js";
import {
  s as s35,
  t as t36
} from "./chunk-GFS62Z72.js";
import {
  _ as _9,
  d as d14,
  i as i25,
  o as o28
} from "./chunk-A47VN5MA.js";
import {
  O as O9,
  d as d16,
  h as h19,
  l as l22,
  m as m11,
  n as n44,
  o as o34,
  q as q5,
  r as r38,
  u as u11
} from "./chunk-FQPEAXKN.js";
import {
  A as A14,
  L as L6,
  N as N6,
  j as j8,
  l as l21,
  n2 as n43,
  o as o33
} from "./chunk-QL3WCPM7.js";
import "./chunk-JBKOFMVJ.js";
import {
  u as u10
} from "./chunk-LB5DD6MA.js";
import "./chunk-UYTOEYIN.js";
import "./chunk-JQKL7AD5.js";
import {
  K as K3,
  t as t34
} from "./chunk-UXILD4EC.js";
import "./chunk-SU7C3V7L.js";
import "./chunk-KV3PR5T6.js";
import {
  a as a30
} from "./chunk-Y554AESO.js";
import "./chunk-SCHIU6CT.js";
import {
  E as E14,
  _ as _11,
  f as f18,
  he,
  i as i28,
  ie,
  m as m10,
  n as n41,
  o as o31,
  r as r34,
  r2 as r36,
  r4 as r37,
  s as s33,
  s2 as s34
} from "./chunk-AD4YIQAV.js";
import {
  J as J4,
  X as X4,
  n as n42
} from "./chunk-4DMQJ2S2.js";
import "./chunk-SFLHXPT4.js";
import {
  $ as $2,
  ht
} from "./chunk-ICIEEFA3.js";
import {
  V as V5,
  n as n38
} from "./chunk-UTDRCXKP.js";
import {
  A as A15,
  M as M8,
  c as c23,
  i as i27,
  o2 as o32,
  t as t33,
  w as w12
} from "./chunk-HXNDA4EJ.js";
import {
  G as G6,
  W as W6,
  Z as Z2,
  ls,
  ps,
  us
} from "./chunk-ZFRKFGUZ.js";
import {
  o as o27
} from "./chunk-6YRYWMPZ.js";
import "./chunk-ADAZBQKN.js";
import "./chunk-6EBCANA3.js";
import "./chunk-K7N526Q4.js";
import "./chunk-JRSZCAZV.js";
import "./chunk-YIZLAUCA.js";
import {
  st
} from "./chunk-3ZJOLTPQ.js";
import {
  E as E11,
  I as I7,
  a2 as a29
} from "./chunk-V4MUDRER.js";
import {
  C as C9
} from "./chunk-FUNFO42Y.js";
import "./chunk-N33CV3QM.js";
import "./chunk-FF3JARPY.js";
import {
  f as f17
} from "./chunk-UP7SW73R.js";
import {
  a as a31,
  t as t32
} from "./chunk-VHOCNQAB.js";
import "./chunk-OK2X54ZK.js";
import "./chunk-RDB3JY7T.js";
import {
  I as I10,
  n as n40,
  r as r35
} from "./chunk-WO5DESPO.js";
import {
  E as E13,
  I as I9,
  N as N5,
  n as n39
} from "./chunk-W5D3JTKS.js";
import "./chunk-JGNIGIZR.js";
import "./chunk-LUC7NVZB.js";
import "./chunk-XEG7QIWD.js";
import "./chunk-SFZTK3JV.js";
import {
  c as c22
} from "./chunk-GZLXOXKP.js";
import "./chunk-SME753HL.js";
import "./chunk-4QCFWJ22.js";
import {
  o as o26
} from "./chunk-PC4A4CQR.js";
import {
  n as n37
} from "./chunk-MIJNMSZR.js";
import {
  A as A11,
  A2 as A12,
  B as B4,
  C as C8,
  D as D5,
  D2 as D6,
  E as E10,
  F as F11,
  G as G7,
  H as H6,
  J as J3,
  K as K2,
  L as L5,
  N as N4,
  O as O8,
  P as P8,
  Q,
  R as R9,
  S as S9,
  S2 as S10,
  T as T10,
  T2 as T11,
  U as U6,
  V as V4,
  W as W7,
  X as X3,
  Y as Y5,
  _ as _10,
  a as a27,
  a2 as a28,
  b as b3,
  c as c21,
  d as d13,
  d2 as d15,
  f as f16,
  g as g11,
  h as h18,
  i as i24,
  j as j7,
  l as l19,
  m as m8,
  m2 as m9,
  p as p13,
  p2 as p15,
  q as q4,
  s as s31,
  s2 as s32,
  u as u9,
  w as w11,
  x as x12,
  y as y9,
  z as z7
} from "./chunk-4GKXMRJI.js";
import {
  v as v11
} from "./chunk-HKJ2JMCX.js";
import {
  t as t30
} from "./chunk-644IM3NW.js";
import {
  g as g10,
  l as l20
} from "./chunk-KWPMDFFW.js";
import {
  n as n34
} from "./chunk-G3Q2URFK.js";
import {
  n as n31,
  v as v10
} from "./chunk-O25GNIYL.js";
import {
  t as t21
} from "./chunk-XKYCNHCM.js";
import {
  L as L4,
  d as d12,
  y as y8
} from "./chunk-KFBN32GM.js";
import {
  t as t20
} from "./chunk-N4JKQR77.js";
import {
  A as A8,
  S as S8,
  _ as _8,
  c as c15,
  l as l16,
  o as o17,
  s2 as s28
} from "./chunk-ZPXPJ2G7.js";
import {
  e as e26,
  f as f14,
  t as t25,
  u as u7
} from "./chunk-GXIJZVS6.js";
import {
  E as E8
} from "./chunk-6LC2JTLC.js";
import {
  s as s30
} from "./chunk-LYVSHBLV.js";
import {
  t as t22,
  w as w8
} from "./chunk-NZZXHYUD.js";
import "./chunk-S2XINYNZ.js";
import "./chunk-ZIP4LO57.js";
import {
  e as e21,
  r as r25
} from "./chunk-D5NSNTGJ.js";
import {
  i as i18
} from "./chunk-5IGN7QB3.js";
import "./chunk-AN7CDKM7.js";
import "./chunk-AA5GXCZF.js";
import "./chunk-X3ONRBOR.js";
import "./chunk-UF4LSGC7.js";
import {
  a as a24
} from "./chunk-VG7E4EAR.js";
import "./chunk-Y5WQRWCP.js";
import {
  c as c19,
  i as i22,
  n as n33,
  w as w10
} from "./chunk-JI3FA4UR.js";
import {
  R as R8,
  i as i21,
  x as x11
} from "./chunk-HXPEPPWJ.js";
import {
  A as A10,
  c as c18,
  f as f15,
  g as g9,
  l as l17,
  t as t28,
  w as w9
} from "./chunk-A76FH7WO.js";
import {
  r as r30
} from "./chunk-3JWSWLNQ.js";
import {
  u as u8
} from "./chunk-MUDJ2KE7.js";
import {
  c as c17
} from "./chunk-EVSMDRIW.js";
import "./chunk-2CJB7VCN.js";
import "./chunk-5AW2TAZE.js";
import {
  t as t23
} from "./chunk-Z2RTGLQI.js";
import {
  M as M7,
  W as W4,
  _ as _7,
  a as a25,
  e as e25,
  h as h15,
  i as i19,
  l as l15,
  r as r27,
  s as s27,
  t as t24
} from "./chunk-77DVCCTB.js";
import "./chunk-VVBWSIUG.js";
import {
  r as r29,
  t as t26
} from "./chunk-TXZY5TKH.js";
import "./chunk-YMGFO2D7.js";
import {
  c as c20,
  v as v9
} from "./chunk-FZT425TB.js";
import {
  c as c14
} from "./chunk-6AORBEIP.js";
import {
  d as d11
} from "./chunk-E4SXYCGV.js";
import "./chunk-CYWA6YJM.js";
import "./chunk-5DK7WWJE.js";
import "./chunk-M3ODSYZR.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-UG4QYACC.js";
import "./chunk-GRRIWI4U.js";
import "./chunk-X5HNB5JI.js";
import {
  F as F9,
  W as W5
} from "./chunk-K43XJEZQ.js";
import "./chunk-6JSGBXI6.js";
import "./chunk-KBPF5PFD.js";
import "./chunk-STAL4WDK.js";
import "./chunk-GXJIA6VA.js";
import "./chunk-L5ONWTZL.js";
import "./chunk-UI5O37MZ.js";
import {
  T as T8,
  e2 as e23
} from "./chunk-XFZB3R5P.js";
import {
  R as R7,
  a as a22,
  a2 as a23,
  c as c13,
  n as n28,
  o as o19
} from "./chunk-YRKEWWDW.js";
import {
  I as I6,
  O as O6,
  T as T9,
  e as e22,
  e2 as e24,
  f as f13,
  g as g8,
  h2 as h14,
  n as n30,
  o2 as o21,
  r2 as r26,
  t as t27,
  v as v8
} from "./chunk-KHQ5TXSL.js";
import {
  E as E7
} from "./chunk-NU4UASX6.js";
import "./chunk-LQIVAUXR.js";
import {
  s as s29
} from "./chunk-F4YTVHY4.js";
import "./chunk-4FXCMZ3U.js";
import {
  o as o22
} from "./chunk-SADO52IH.js";
import "./chunk-FOJITELY.js";
import "./chunk-NCXRF7LF.js";
import {
  h as h13
} from "./chunk-73PNWDTS.js";
import {
  o as o23
} from "./chunk-PKS3ZVLN.js";
import "./chunk-XMR2X5WG.js";
import "./chunk-KUPJ3HED.js";
import {
  c as c16,
  h as h16,
  n as n32
} from "./chunk-36L3RRF7.js";
import {
  A as A9,
  E as E9,
  O as O7,
  o as o24,
  r as r28
} from "./chunk-BUCIQGFS.js";
import "./chunk-OUYOFOVY.js";
import "./chunk-HVLYIZVQ.js";
import "./chunk-FDGDKKWR.js";
import "./chunk-25GSBURT.js";
import {
  n as n27,
  o as o18
} from "./chunk-63ERNIOV.js";
import "./chunk-KKDPZLGI.js";
import "./chunk-XTOI3E3Y.js";
import {
  i as i17,
  o as o16,
  r as r24,
  s as s24
} from "./chunk-XABSD6D5.js";
import {
  t as t19,
  u as u6
} from "./chunk-T6EY72TG.js";
import {
  a as a21,
  s as s25
} from "./chunk-HMCRDYLX.js";
import "./chunk-WT7BDUIR.js";
import "./chunk-IWGINM6K.js";
import "./chunk-WUQZO2AO.js";
import "./chunk-IVCEO3SL.js";
import "./chunk-3RKFJO4O.js";
import "./chunk-P4NNXJS3.js";
import {
  e as e27
} from "./chunk-LZAQ3R3T.js";
import "./chunk-Y67AAEQ4.js";
import "./chunk-L2MGQ544.js";
import "./chunk-O2CT6XUA.js";
import "./chunk-DWF7HN4X.js";
import "./chunk-2ORXZKWN.js";
import {
  s as s26
} from "./chunk-KTGLOZE4.js";
import {
  i2 as i20,
  n as n29,
  o as o20
} from "./chunk-K6DV6EVZ.js";
import {
  l2 as l13,
  n3 as n24,
  t as t18
} from "./chunk-EDILO3VR.js";
import "./chunk-2CKXYQCA.js";
import {
  D as D3,
  N as N3,
  O as O5,
  a as a19,
  i as i16,
  n as n25,
  s as s22
} from "./chunk-JP7O2ZWE.js";
import "./chunk-6AGTIZBD.js";
import "./chunk-UT4ZWPHT.js";
import {
  e as e20
} from "./chunk-LWDDTPWX.js";
import {
  W as W3
} from "./chunk-LWKRCHND.js";
import {
  I as I5,
  L as L3,
  P as P6,
  k as k7,
  l as l12,
  p2 as p11,
  v as v6
} from "./chunk-USOI6RP2.js";
import "./chunk-TLBJBU3X.js";
import "./chunk-NHV3P5PD.js";
import {
  a as a18
} from "./chunk-JIDIC5HA.js";
import "./chunk-YYE6WDO2.js";
import {
  o as o14,
  r as r20
} from "./chunk-WDZ5AAFL.js";
import "./chunk-QNBIVGAZ.js";
import {
  M as M6,
  c as c10,
  e as e19,
  f as f11,
  h as h11,
  i as i14,
  n2 as n22,
  r as r19
} from "./chunk-EUYJEZD4.js";
import {
  t as t17
} from "./chunk-5KLICR5E.js";
import "./chunk-RSPVLZNN.js";
import "./chunk-PR2OEILG.js";
import "./chunk-Q3MNDGIO.js";
import "./chunk-6M3QJVKB.js";
import "./chunk-PH45YSDU.js";
import {
  d as d9,
  h as h10,
  x as x9
} from "./chunk-JPKFB2QL.js";
import "./chunk-2AUW3MT4.js";
import {
  t as t16
} from "./chunk-UM64E5NS.js";
import {
  f as f10
} from "./chunk-2SZNVP5H.js";
import "./chunk-MXVQCJ4K.js";
import "./chunk-G4LSNP77.js";
import "./chunk-S5RIUWET.js";
import {
  C as C4,
  F as F5,
  I as I3,
  c as c9,
  g as g5
} from "./chunk-MNDNZJD5.js";
import {
  I as I2
} from "./chunk-LVVQ2RQY.js";
import "./chunk-CUZNACFZ.js";
import {
  r as r13
} from "./chunk-ZHUFARKQ.js";
import "./chunk-ICEO3WMK.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-L3FCQBVC.js";
import "./chunk-4U545IAF.js";
import {
  A as A6,
  T as T4,
  d as d8,
  e as e15,
  m as m7,
  o as o11,
  u as u4,
  w as w6
} from "./chunk-BQBOV2CR.js";
import {
  r as r16
} from "./chunk-IUCM3FNB.js";
import {
  H as H4
} from "./chunk-PCEMOYTZ.js";
import {
  s as s20,
  u as u3
} from "./chunk-4RU6WIRN.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-OX5TJXHM.js";
import {
  t as t14,
  y as y7
} from "./chunk-BDWD2ZNU.js";
import {
  t as t13
} from "./chunk-FF5LS3YE.js";
import {
  A as A5,
  B as B2,
  C as C6,
  D as D2,
  E as E5,
  F as F6,
  G as G5,
  H as H5,
  I as I4,
  L,
  M as M4,
  N as N2,
  O as O3,
  P as P5,
  R as R5,
  S as S6,
  T as T3,
  U as U4,
  V as V3,
  X as X2,
  Y as Y3,
  _ as _4,
  e as e14,
  i as i12,
  n as n21
} from "./chunk-HLBPEADQ.js";
import {
  i as i11,
  x as x8
} from "./chunk-FIBWCATC.js";
import {
  A as A4,
  C as C5,
  a as a14,
  g as g6,
  j as j5,
  k as k4,
  l as l10,
  m as m6,
  o as o10,
  q as q2,
  r as r14,
  s as s19,
  v as v5,
  y as y6,
  z as z5
} from "./chunk-NLWV7Q6F.js";
import "./chunk-JPAY3V43.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-RR3IDPQP.js";
import "./chunk-QOWAKGE4.js";
import {
  n as n13
} from "./chunk-PF3ZV363.js";
import {
  P as P7,
  T as T7,
  ne,
  re,
  se
} from "./chunk-BPWFCV3C.js";
import {
  A as A7
} from "./chunk-AI6XUWWS.js";
import {
  s as s23
} from "./chunk-6S2FCH6S.js";
import {
  n as n26,
  r as r23
} from "./chunk-BZL5MAFP.js";
import {
  a as a20,
  l as l14,
  o as o15
} from "./chunk-RVS5HU2K.js";
import "./chunk-XY26YCFX.js";
import {
  a as a16,
  n as n23,
  r as r21
} from "./chunk-3TTW7E7W.js";
import {
  C as C7,
  F as F8,
  K,
  L as L2,
  R as R6,
  T as T6,
  U as U5,
  W as W2,
  _ as _6,
  g as g7,
  h as h12,
  k as k6,
  l as l11,
  q2 as q3,
  x as x10
} from "./chunk-7FNOSSSO.js";
import {
  F as F7,
  T as T5,
  Y as Y4,
  Z,
  _ as _5,
  a as a17,
  c as c11,
  d as d10,
  f as f12,
  i as i15,
  k2 as k5,
  p as p10,
  r as r22,
  tt,
  w as w7,
  z as z6
} from "./chunk-LLQMBVBO.js";
import "./chunk-DS6JZDZO.js";
import {
  M as M5,
  a as a15,
  f as f9,
  h as h9,
  i as i13,
  o as o13,
  p as p9,
  r as r18,
  s as s21,
  u as u5
} from "./chunk-OTNLRAEN.js";
import {
  S as S7
} from "./chunk-OKABUMQT.js";
import {
  e as e17,
  o as o12,
  t as t15
} from "./chunk-CW7LIPBH.js";
import {
  e as e18
} from "./chunk-TYOIANOD.js";
import {
  e as e16,
  r as r17
} from "./chunk-VN2IXVGV.js";
import {
  E as E6
} from "./chunk-WWUAHPIM.js";
import {
  O as O4
} from "./chunk-BN6X2OXK.js";
import {
  f as f8,
  n as n20,
  r as r15
} from "./chunk-SS3YG6J3.js";
import {
  v as v7
} from "./chunk-6NPJZOPM.js";
import {
  c as c12
} from "./chunk-MNR4BIGQ.js";
import "./chunk-FVR25IMN.js";
import "./chunk-IHCIS6PT.js";
import "./chunk-OHH3UAUS.js";
import {
  c as c4
} from "./chunk-EIQYIBNS.js";
import "./chunk-2NTQWEQZ.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-E2PV5YTZ.js";
import {
  r as r11,
  s as s18
} from "./chunk-GLVTFP5O.js";
import {
  e as e13,
  l as l9,
  n as n19,
  r as r12,
  t as t12
} from "./chunk-YGUWDSEH.js";
import {
  $,
  An,
  Cn,
  Ee,
  Hn,
  In,
  Tn,
  Y as Y2,
  ce,
  gn,
  kn,
  nn,
  yn,
  zn
} from "./chunk-2NXAWKLI.js";
import "./chunk-AUKNAK3D.js";
import "./chunk-2TWR6EVF.js";
import {
  n as n17
} from "./chunk-MIHY6FSC.js";
import {
  c as c7
} from "./chunk-IR32DXLL.js";
import "./chunk-7BMUKKBX.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import {
  j as j6
} from "./chunk-OTGLQX7J.js";
import "./chunk-HKUQGT3G.js";
import "./chunk-LTYDGBC5.js";
import "./chunk-XR4HIGQP.js";
import {
  n as n16
} from "./chunk-WIM5ZT5B.js";
import "./chunk-H2WAWDF5.js";
import "./chunk-LG2ZH3JE.js";
import {
  n as n15
} from "./chunk-4VPM7SQA.js";
import {
  r as r9,
  t as t10
} from "./chunk-DKJBDKGA.js";
import {
  n as n18
} from "./chunk-4CZO65BK.js";
import {
  _ as _3,
  d as d5
} from "./chunk-DR3XNW4L.js";
import {
  a as a12,
  f as f7,
  l as l7,
  s as s16,
  y as y5
} from "./chunk-DKCDRJ5N.js";
import "./chunk-PCTUO7WS.js";
import {
  i as i23,
  l as l18,
  p as p12
} from "./chunk-OAT35OSI.js";
import {
  a as a13,
  d as d7
} from "./chunk-ZEMUATMN.js";
import {
  c as c8
} from "./chunk-RG2YRACH.js";
import "./chunk-ZUBHLDU6.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import {
  B,
  C as C3,
  R as R4,
  b as b2,
  c as c5,
  e as e12,
  g as g4,
  h as h6,
  i as i9,
  k as k3,
  l as l8,
  m as m5,
  n as n14,
  r as r10,
  x as x6,
  z as z3
} from "./chunk-7EG7BYWF.js";
import {
  t as t11
} from "./chunk-OZXJDVTE.js";
import "./chunk-PZXYASUU.js";
import {
  t as t29
} from "./chunk-JR3QCJ2M.js";
import {
  e as e28
} from "./chunk-VYGC2LVC.js";
import {
  a as a26,
  n as n35
} from "./chunk-VHPS7AS5.js";
import {
  o as o25,
  r as r31
} from "./chunk-GH3XG2RA.js";
import "./chunk-3ESTI2X4.js";
import "./chunk-YK2WEG7V.js";
import {
  W,
  e as e10,
  e2 as e11,
  i as i6,
  n as n11,
  o as o7,
  t as t9
} from "./chunk-N34PJZVR.js";
import {
  n as n12
} from "./chunk-FQVGAALF.js";
import {
  h as h4,
  i as i7
} from "./chunk-DOLURTZY.js";
import "./chunk-5UQMANML.js";
import "./chunk-PZHYCIRU.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-POEWD5LS.js";
import "./chunk-HTVQN75V.js";
import {
  a as a10,
  n as n10
} from "./chunk-W3WHCGIQ.js";
import {
  U as U3,
  a as a9,
  f as f6,
  h as h3,
  j as j4,
  l as l6,
  w as w3
} from "./chunk-HPWZ2OON.js";
import {
  h as h17
} from "./chunk-WAPUHORU.js";
import "./chunk-HXDFHMRK.js";
import {
  h2 as h8,
  p as p8,
  w as w5,
  z as z4
} from "./chunk-5HSVWQOA.js";
import "./chunk-C2BBLDPU.js";
import {
  i as i5
} from "./chunk-GWA3PLGA.js";
import "./chunk-FXWSVUF2.js";
import {
  E as E4,
  I,
  N,
  O as O2,
  P as P4,
  S as S5,
  a as a11,
  h as h5,
  i as i8,
  k as k2,
  o as o9,
  s as s15,
  w as w4
} from "./chunk-CNS4YGGN.js";
import {
  c as c6,
  d as d6,
  i as i10,
  p as p7,
  s as s17,
  x as x7
} from "./chunk-DOQ3SAAR.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-CEXY22SC.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7JNPZC53.js";
import {
  h as h7
} from "./chunk-ZXXKE5XP.js";
import "./chunk-MATER45R.js";
import "./chunk-6UW2VZVV.js";
import {
  E as E3,
  V as V2
} from "./chunk-GAARA5JM.js";
import "./chunk-Y2CLYMXQ.js";
import {
  n as n8
} from "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-REPJV7SP.js";
import {
  o as o8
} from "./chunk-F42HXUMI.js";
import {
  p as p5
} from "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import {
  _ as _2
} from "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import {
  n as n9
} from "./chunk-J2V5CZSS.js";
import {
  m as m4,
  p as p6
} from "./chunk-7D57YBLP.js";
import {
  c as c3,
  s as s14
} from "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import {
  vt
} from "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import {
  C as C2,
  E as E2,
  F as F4,
  G as G4,
  H as H3,
  J as J2,
  M as M3,
  R as R3,
  U as U2,
  a as a8,
  b,
  c as c2,
  e as e9,
  f as f5,
  i as i4,
  m as m3,
  o as o6,
  p as p4,
  q,
  s as s13,
  v as v4,
  x as x5,
  y as y4
} from "./chunk-V3CNLYUD.js";
import {
  F as F3,
  M as M2,
  i as i3,
  k,
  l as l5,
  m as m2,
  o as o5,
  s as s12
} from "./chunk-TEHNQYQD.js";
import {
  A as A3,
  E,
  F as F2,
  G as G2,
  H as H2,
  J,
  O,
  P as P3,
  S as S4,
  U,
  V,
  X,
  Y,
  _,
  e as e8,
  g as g3,
  j as j2,
  o as o4,
  p as p3,
  r as r7,
  s as s10,
  u as u2,
  v as v3,
  x as x4,
  z as z2
} from "./chunk-TPJLFGOT.js";
import {
  e as e7,
  f as f4,
  i as i2,
  n as n7,
  r as r5,
  t as t8
} from "./chunk-CQX57DED.js";
import {
  D,
  G as G3,
  a as a6,
  a2 as a7,
  j as j3,
  l as l4,
  r as r6,
  r2 as r8,
  s as s11,
  w as w2
} from "./chunk-3CQBBMMD.js";
import {
  M,
  e as e6,
  t as t7
} from "./chunk-T35GN7EL.js";
import {
  d as d4,
  f as f2,
  f2 as f3,
  g as g2,
  p as p2,
  x as x2,
  x2 as x3
} from "./chunk-7U6V6KY2.js";
import {
  A2,
  G,
  H,
  P as P2,
  R as R2,
  S as S2,
  S2 as S3,
  T as T2,
  d as d3,
  o as o3,
  r as r2,
  s as s8
} from "./chunk-NFY4EX6G.js";
import {
  s as s7
} from "./chunk-GJ7PJ7XG.js";
import {
  s as s9
} from "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import {
  l as l3
} from "./chunk-CHTUPHTO.js";
import {
  m,
  o as o2,
  t as t2,
  t2 as t3,
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a4
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  S,
  a as a3,
  d,
  n as n2,
  v
} from "./chunk-7G6CKDLW.js";
import {
  A,
  F,
  e2 as e5,
  n as n5,
  n3 as n6,
  r as r4,
  s2 as s5,
  t2 as t6,
  u2 as u,
  v as v2,
  y2 as y3
} from "./chunk-FFUMVAL2.js";
import {
  e as e2,
  h as h2,
  l as l2,
  n as n3
} from "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import {
  t as t4
} from "./chunk-FWH3QSBQ.js";
import {
  e as e4
} from "./chunk-2UENN434.js";
import {
  C,
  P,
  T,
  a2 as a5,
  c2 as c,
  d as d2,
  e as e3,
  f,
  g,
  i,
  j,
  l,
  n as n4,
  o,
  p2 as p,
  r,
  r2 as r3,
  s2 as s6,
  t,
  t2 as t5,
  w,
  y as y2
} from "./chunk-UYRCWUYQ.js";
import {
  s2 as s3,
  s3 as s4
} from "./chunk-HMVAPW5X.js";
import {
  a as a2
} from "./chunk-IYZKKFJM.js";
import {
  R,
  a,
  h,
  has,
  n,
  s,
  s2,
  x,
  z
} from "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/Camera.js
var u18 = class extends i5(l3) {
  constructor(...o77) {
    super(...o77), this.position = new x3([0, 0, 0]), this.heading = 0, this.tilt = 0, this.fov = 55;
  }
  normalizeCtorArgs(o77, r79, t88, e78) {
    if (o77 && "object" == typeof o77 && ("x" in o77 || Array.isArray(o77))) {
      const s84 = { position: o77 };
      return null != r79 && (s84.heading = r79), null != t88 && (s84.tilt = t88), null != e78 && (s84.fov = e78), s84;
    }
    return o77;
  }
  writePosition(o77, r79, t88, e78) {
    const s84 = o77.clone();
    s84.x = a3(o77.x || 0), s84.y = a3(o77.y || 0), s84.z = o77.hasZ ? a3(o77.z || 0) : o77.z, r79[t88] = s84.write({}, e78);
  }
  readPosition(o77, r79) {
    const t88 = new x3();
    return t88.read(o77, r79), t88.x = a3(t88.x || 0), t88.y = a3(t88.y || 0), t88.z = t88.hasZ ? a3(t88.z || 0) : t88.z, t88;
  }
  equals(o77) {
    return null != o77 && (this.tilt === o77.tilt && this.heading === o77.heading && this.fov === o77.fov && this.position.equals(o77.position));
  }
};
e([y({ type: x3, json: { write: { isRequired: true } } })], u18.prototype, "position", void 0), e([r2("position")], u18.prototype, "writePosition", null), e([o3("position")], u18.prototype, "readPosition", null), e([y({ type: Number, nonNullable: true, json: { write: { isRequired: true } } }), s9((o77) => s24.normalize(a3(o77)))], u18.prototype, "heading", void 0), e([y({ type: Number, nonNullable: true, json: { write: { isRequired: true } } }), s9((o77) => i3(a3(o77), -180, 180))], u18.prototype, "tilt", void 0), e([y({ type: Number, nonNullable: true, json: { read: false, write: false } })], u18.prototype, "fov", void 0), u18 = e([a4("esri.Camera")], u18);
var d26 = u18;

// node_modules/@arcgis/core/Viewpoint.js
var p17;
var n48 = p17 = class extends l3 {
  constructor(r79) {
    super(r79), this.rotation = 0, this.scale = 0, this.targetGeometry = null, this.camera = null;
  }
  castRotation(r79) {
    return (r79 %= 360) < 0 && (r79 += 360), r79;
  }
  clone() {
    return new p17({ rotation: this.rotation, scale: this.scale, targetGeometry: null != this.targetGeometry ? this.targetGeometry.clone() : null, camera: null != this.camera ? this.camera.clone() : null });
  }
};
function m16() {
  return { enabled: !this.camera };
}
e([y({ type: Number, json: { write: true, origins: { "web-map": { default: 0, write: true }, "web-scene": { write: { overridePolicy: m16 } } } } })], n48.prototype, "rotation", void 0), e([s9("rotation")], n48.prototype, "castRotation", null), e([y({ type: Number, json: { write: true, origins: { "web-map": { default: 0, write: true }, "web-scene": { write: { overridePolicy: m16 } } } } })], n48.prototype, "scale", void 0), e([y({ types: n8, json: { read: p5, write: true, origins: { "web-scene": { read: p5, write: { overridePolicy: m16 } } } } })], n48.prototype, "targetGeometry", void 0), e([y({ type: d26, json: { write: true } })], n48.prototype, "camera", void 0), n48 = p17 = e([a4("esri.Viewpoint")], n48);
var l27 = n48;

// node_modules/@arcgis/core/support/AnalysesCollection.js
var t46 = class extends l18 {
  constructor(e78) {
    super(e78), this.handles.add(this.on("before-add", (e79) => {
      null != e79.item && e79.item.parent === this.owner && (s3.getLogger(this).warn("Analysis inside the collection must be unique. Not adding this element again."), e79.preventDefault());
    }));
  }
  _own(e78) {
    e78.parent = this.owner;
  }
  _release(e78) {
    e78.parent = null;
  }
};
t46 = e([a4("esri.support.AnalysesCollection")], t46);

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var n49 = { widthBreakpoint: { getValue(e78) {
  const i78 = e78.viewSize[0], s84 = e78.breakpoints, a85 = this.values;
  return i78 <= s84.xsmall ? a85.xsmall : i78 <= s84.small ? a85.small : i78 <= s84.medium ? a85.medium : i78 <= s84.large ? a85.large : a85.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e78) {
  const i78 = e78.viewSize[1], s84 = e78.breakpoints, a85 = this.values;
  return i78 <= s84.xsmall ? a85.xsmall : i78 <= s84.small ? a85.small : i78 <= s84.medium ? a85.medium : i78 <= s84.large ? a85.large : a85.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e78) {
  const i78 = e78.viewSize, s84 = i78[0], a85 = i78[1], t88 = this.values;
  return a85 >= s84 ? t88.portrait : t88.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var o41 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function m17(e78) {
  const i78 = e78;
  return i78 && i78.xsmall < i78.small && i78.small < i78.medium && i78.medium < i78.large;
}
function g14(e78, i78) {
  return i78 ? n49[e78].valueToClassName[i78].split(" ") : [];
}
var w15 = (w33) => {
  let d63 = class extends w33 {
    constructor(...e78) {
      super(...e78), this._breakpointsHandles = new t3(), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = o41;
    }
    initialize() {
      this._breakpointsHandles.add(l6(() => [this.breakpoints, this.size], () => this._updateClassNames(), h3));
    }
    destroy() {
      this.destroyed || (this._removeActiveClassNames(), this._breakpointsHandles = l(this._breakpointsHandles));
    }
    set breakpoints(e78) {
      if (e78 === this._get("breakpoints"))
        return;
      const i78 = m17(e78);
      if (!i78) {
        const e79 = JSON.stringify(o41, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + e79);
      }
      e78 = i78 ? e78 : o41, this._set("breakpoints", { ...e78 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e78 = t4.acquire(), s84 = t4.acquire();
      let a85, t88 = false;
      for (a85 in n49) {
        const i78 = this[a85], r79 = n49[a85].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i78 !== r79 && (t88 = true, this[a85] = r79, g14(a85, i78).forEach((e79) => s84.push(e79)), g14(a85, r79).forEach((i79) => e78.push(i79)));
      }
      t88 && (this._applyClassNameChanges(e78, s84), t4.release(e78), t4.release(s84));
    }
    _applyClassNameChanges(e78, i78) {
      const s84 = this.container;
      s84 && (i78.forEach((e79) => s84.classList.remove(e79)), e78.forEach((e79) => s84.classList.add(e79)));
    }
    _removeActiveClassNames() {
      const e78 = this.container;
      if (!e78)
        return;
      let i78;
      for (i78 in n49)
        g14(i78, this[i78]).forEach((i79) => e78.classList.remove(i79));
    }
  };
  return e([y()], d63.prototype, "breakpoints", null), e([y()], d63.prototype, "orientation", void 0), e([y()], d63.prototype, "widthBreakpoint", void 0), e([y()], d63.prototype, "heightBreakpoint", void 0), d63 = e([a4("esri.views.BreakpointsOwner")], d63), d63;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a35 = class extends m {
  constructor() {
    super(...arguments), this.items = new V2(), this._watchUpdatingTracking = new c8(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i7(), this._hiddenProjector = i7();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  initialize() {
    const t88 = document.createElement("div");
    t88.className = "esri-overlay-surface", this._set("surface", t88), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t88.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t89) => {
      for (const e78 of t89.added) {
        const t90 = () => e78.render();
        this._callbacks.set(e78, t90), this._projector.append(this.surface, t90);
      }
      for (const e78 of t89.removed) {
        const t90 = this._projector.detach(this._callbacks.get(e78));
        this.surface.removeChild(t90.domNode), this._callbacks.delete(e78);
      }
    });
  }
  addItem(t88) {
    this.items.add(t88);
  }
  removeItem(t88) {
    this.items.remove(t88);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t88) => this._projector.detach(t88)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t88) {
    const e78 = this._hiddenSurface, r79 = this._hiddenProjector;
    let o77;
    const s84 = () => (o77 = t88.render(), o77);
    r79.append(e78, s84), r79.renderNow();
    const i78 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (o77 && o77.domNode) {
      const t89 = o77.domNode.getBoundingClientRect();
      i78.left = t89.left, i78.top = t89.top, i78.right = t89.right, i78.bottom = t89.bottom;
    }
    for (r79.detach(s84); e78.firstChild; )
      e78.removeChild(e78.firstChild);
    return i78;
  }
  overlaps(t88, e78) {
    const r79 = this.computeBoundingRect(t88), o77 = this.computeBoundingRect(e78);
    return Math.max(r79.left, o77.left) <= Math.min(r79.right, o77.right) && Math.max(r79.top, o77.top) <= Math.min(r79.bottom, o77.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t88) => t88.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t88) {
    if (!this.items.some((t89) => t89.visible))
      return;
    const e78 = t88.getContext("2d");
    e78.save(), e78.font = this._fontString(), this.items.forEach((t89) => {
      e78.save(), t89.renderCanvas(e78), e78.restore();
    }), e78.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e([y({ readOnly: true })], a35.prototype, "surface", void 0), e([y({ readOnly: true })], a35.prototype, "items", void 0), e([y({ readOnly: true })], a35.prototype, "needsRender", null), e([y({ readOnly: true })], a35.prototype, "_watchUpdatingTracking", void 0), e([y({ readOnly: true })], a35.prototype, "updating", null), a35 = e([a4("esri.views.overlay.ViewOverlay")], a35);
var c26 = a35;

// node_modules/@arcgis/core/views/DOMContainer.js
var p18 = [0, 0];
function f25(e78) {
  const t88 = (e78.ownerDocument || window.document).defaultView, s84 = e78.getBoundingClientRect();
  return p18[0] = s84.left + ((t88 == null ? void 0 : t88.pageXOffset) ?? 0), p18[1] = s84.top + ((t88 == null ? void 0 : t88.pageYOffset) ?? 0), p18;
}
function m18(e78) {
  e78 && (n11(e78), e78.parentNode && e78.parentNode.removeChild(e78));
}
function y12(e78) {
  const t88 = document.createElement("div");
  return e78.appendChild(t88), t88;
}
var g15 = 16;
var v14 = 750;
var _13 = 512;
var w16 = 2;
var C11 = (i78) => {
  let p70 = class extends i78 {
    constructor(...e78) {
      super(...e78), this._freqInfo = { freq: g15, time: v14 }, this._overlayRenderTaskHandle = null, this.height = 0, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, this.addHandles([l6(() => this.cursor, (e79) => {
        const { surface: t88 } = this;
        t88 && t88.setAttribute("data-cursor", e79);
      }), l6(() => this.navigating, (e79) => {
        const { surface: t88 } = this;
        t88 && t88.setAttribute("data-navigating", e79.toString());
      })]);
    }
    initialize() {
      this.addHandles([l6(() => this.ui, (e78, t88) => this._handleUIChange(e78, t88), h3), this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused"))]);
    }
    destroy() {
      this.destroyed || (this.ui = l(this.ui), this.container = null);
    }
    get container() {
      return this._get("container") ?? null;
    }
    set container(e78) {
      const i79 = this._get("container"), o77 = e10(e78);
      if (o77 || "string" != typeof e78 || s3.getLogger(this).error("#container", `element with id '${e78}' not found`), i79 === o77)
        return;
      if (this._stopMeasuring(), i79 && (i79.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (m18(this.root), this._set("root", null)), this.userContent && (i6(this.userContent, i79), m18(this.userContent), this._set("userContent", null))), !o77)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      o77.classList.add("esri-view");
      const h58 = document.createElement("div");
      h58.className = "esri-view-user-storage", i6(o77, h58), o77.appendChild(h58), this._set("userContent", h58);
      const l75 = document.createElement("div");
      l75.className = "esri-view-root", o77.insertBefore(l75, o77.firstChild), this._set("root", l75);
      const u58 = document.createElement("div");
      u58.className = "esri-view-surface", u58.setAttribute("role", "application"), u58.tabIndex = 0, l75.appendChild(u58), this._set("surface", u58);
      const p71 = new c26();
      l75.appendChild(p71.surface), this._set("overlay", p71), this.addHandles(l6(() => p71.needsRender, (e79) => {
        e79 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = o(this._overlayRenderTaskHandle);
      })), this.forceDOMReadyCycle(), this._set("container", o77), this._startMeasuring();
    }
    get focused() {
      const e78 = document.activeElement === this.surface;
      return document.hasFocus() && e78;
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.blur();
    }
    focus() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.focus();
    }
    pageToContainer(e78, t88, s84) {
      const i79 = this.position;
      return e78 -= i79 ? i79[0] : 0, t88 -= i79 ? i79[1] : 0, s84 ? (s84[0] = e78, s84[1] = t88) : s84 = [e78, t88], s84;
    }
    containerToPage(e78, t88, s84) {
      const i79 = this.position;
      return e78 += i79 ? i79[0] : 0, t88 += i79 ? i79[1] : 0, s84 ? (s84[0] = e78, s84[1] = t88) : s84 = [e78, t88], s84;
    }
    _handleUIChange(e78, t88) {
      this.removeHandles("ui"), t88 && t88 !== e78 && t88.destroy(), e78 && (e78.view = this, this.addHandles(l6(() => this.root, (t89) => {
        e78.container = t89 ? y12(t89) : null;
      }, h3), "ui")), this._set("ui", e78);
    }
    _stopMeasuring() {
      this.removeHandles("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e78 = this._freqInfo;
      e78.freq = g15, e78.time = v14, this.addHandles([(() => {
        const t88 = () => {
          e78.freq = g15, e78.time = v14;
        };
        return window.addEventListener("resize", t88), { remove() {
          window.removeEventListener("resize", t88);
        } };
      })(), A({ prepare: (e79) => {
        const t88 = this._measure(), s84 = this._freqInfo;
        if (s84.time += e79.deltaTime, t88 && (s84.freq = g15, this._get("resizing") || this._set("resizing", true)), s84.time < s84.freq)
          return;
        s84.time = 0;
        const i79 = this._position();
        s84.freq = i79 || t88 ? g15 : Math.min(v14, s84.freq * w16), !t88 && s84.freq >= _13 && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e78 = this.container, t88 = e78 ? e78.clientWidth : 0, s84 = e78 ? e78.clientHeight : 0;
      if (0 === t88 || 0 === s84)
        return this.suspended || this._set("suspended", true), false;
      const i79 = this.width, r79 = this.height;
      return t88 === i79 && s84 === r79 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t88), this._set("height", s84), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i79, oldHeight: r79, width: t88, height: s84 }), true);
    }
    _position() {
      const e78 = this.container, t88 = this.position, s84 = e78 && f25(e78);
      return !!s84 && ((!t88 || s84[0] !== t88[0] || s84[1] !== t88[1]) && (this._set("position", [s84[0], s84[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e([y()], p70.prototype, "container", null), e([y({ readOnly: true })], p70.prototype, "focused", null), e([y({ readOnly: true })], p70.prototype, "height", void 0), e([y({ type: c26 })], p70.prototype, "overlay", void 0), e([y({ readOnly: true })], p70.prototype, "position", void 0), e([y({ readOnly: true })], p70.prototype, "resizing", void 0), e([y({ readOnly: true })], p70.prototype, "root", void 0), e([y({ value: null, readOnly: true })], p70.prototype, "size", null), e([y({ readOnly: true })], p70.prototype, "surface", void 0), e([y({ readOnly: true })], p70.prototype, "suspended", void 0), e([y()], p70.prototype, "ui", void 0), e([y({ readOnly: true })], p70.prototype, "userContent", void 0), e([y({ readOnly: true })], p70.prototype, "width", void 0), e([y()], p70.prototype, "widthBreakpoint", void 0), p70 = e([a4("esri.views.DOMContainer")], p70), p70;
};

// node_modules/@arcgis/core/views/support/GroundViewElevationSampler.js
var m19 = class extends n9.EventedAccessor {
  constructor(e78) {
    super(e78), this.demResolution = { min: -1, max: -1 }, this.noDataValue = l19;
  }
  initialize() {
    this.view.basemapTerrain.on("elevation-change", () => this.emit("changed", {}));
  }
  get extent() {
    const e78 = this.view.basemapTerrain;
    if (null == e78 || null == e78.extent || null == e78.spatialReference)
      return null;
    const t88 = c2(e78.extent, e78.spatialReference);
    return t88.zmin = e78.visibleElevationBounds.min, t88.zmax = e78.visibleElevationBounds.max, t88;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view.basemapTerrain) == null ? void 0 : _a.spatialReference) ?? f2.WGS84;
  }
  elevationAt(e78, t88) {
    var _a;
    if (null == this.extent || !e6(this.extent, e78, t88)) {
      const o77 = null != this.extent ? `${this.extent.xmin}, ${this.extent.ymin}, ${this.extent.xmax}, ${this.extent.ymax}` : null;
      return s3.getLogger(this).warn("#elevationAt()", `Point used to sample elevation (${e78}, ${t88}) is outside of the sampler extent (${o77})`), this.noDataValue;
    }
    return ((_a = this.view.elevationProvider) == null ? void 0 : _a.getElevation(e78, t88, 0, this.spatialReference, "ground")) ?? this.noDataValue;
  }
  queryElevation(e78) {
    return u6(e78.clone(), this);
  }
};
e([y({ readOnly: true })], m19.prototype, "demResolution", void 0), e([y({ readOnly: true })], m19.prototype, "extent", null), e([y({ readOnly: true })], m19.prototype, "noDataValue", void 0), e([y()], m19.prototype, "spatialReference", null), e([y({ constructOnly: true })], m19.prototype, "view", void 0), m19 = e([a4("esri.views.support.GroundViewElevationSampler")], m19);
var u19 = m19;

// node_modules/@arcgis/core/views/GroundView.js
var l28 = class extends m {
  constructor(e78) {
    super(e78), this.view = null, this.layerViews = new V2();
  }
  initialize() {
    this.addHandles(f6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground;
    }, (e78) => e78.load())), this.addHandles(this.layerViews.on("after-changes", () => this._layerViewsAfterChangesHandler()));
  }
  destroy() {
    this.removeAllHandles(), this._set("view", null);
    for (const e78 of this.layerViews)
      e78.destroy();
    this.layerViews.length = 0;
  }
  get elevationSampler() {
    return this.view ? "2d" === this.view.type ? null : this.view.ready && this.view.basemapTerrain && this.view.basemapTerrain.ready ? new u19({ view: this.view }) : null : null;
  }
  get updating() {
    return !this.suspended && this.layerViews.some((e78) => e78.updating);
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  _layerViewsAfterChangesHandler() {
    this.removeHandles("updating"), this.addHandles(this.layerViews.map((e78) => l6(() => e78.updating, () => this._updateUpdating(), U3)).toArray(), "updating"), this._updateUpdating();
  }
  _updateUpdating() {
    this.notifyChange("updating");
  }
};
e([y({ readOnly: true })], l28.prototype, "elevationSampler", null), e([y({ type: Boolean, readOnly: true })], l28.prototype, "updating", null), e([y({ constructOnly: true })], l28.prototype, "view", void 0), e([y({ type: V2, readOnly: true })], l28.prototype, "layerViews", void 0), e([y({ readOnly: true })], l28.prototype, "suspended", null), l28 = e([a4("esri.views.GroundView")], l28);
var d27 = l28;

// node_modules/@arcgis/core/views/PopupView.js
function d28(e78) {
  return null != e78 && "open" in e78 && "declaredClass" in e78;
}
function y13(e78) {
  return null != e78 && "declaredClass" in e78 && "dockOptions" in e78;
}
var w17 = (w33) => {
  let m55 = class extends w33 {
    constructor() {
      super(...arguments), this._popupSetupTask = null, this.popup = {}, this.popupEnabled = true;
    }
    initialize() {
      this.addHandles([l6(() => [this.ui, this.popup], ([e78, p70], t88) => {
        const i78 = "popup", s84 = "manual";
        if (t88) {
          const [e79, p71] = t88;
          e79 && d28(p71) && (p71.view = null, y13(p71) && e79.remove(p71, i78));
        }
        e78 && d28(p70) && (p70.view = this, y13(p70) && e78.add(p70, { key: i78, position: s84, internal: true }));
      }, h3), this.on("click", (e78) => {
        this.popup && this.popupEnabled && ("mouse" !== e78.pointerType || 0 === e78.button) && (!d28(this.popup) && "autoOpenEnabled" in this.popup && false === this.popup.autoOpenEnabled || (d28(this.popup) ? this.popup.viewModel.handleViewClick(e78) : e78.async(async () => {
          await this.setupPopup(), d28(this.popup) && !this.destroyed && this.ready && this.popupEnabled && this.popup.viewModel.handleViewClick(e78);
        })));
      }, _9.WIDGET)]), j4(() => this.ready && this.popupEnabled && !this.updating).then(() => {
        import("./Popup-OVUTNEG4.js");
      });
    }
    destroy() {
      this.destroyed || this.closePopup();
    }
    async openPopup(e78) {
      d28(this.popup) && this.popup.open(e78);
      try {
        if (await this.setupPopup(), !this.popup)
          return void s3.getLogger(this).error(new s4("view:null-popup", "Popup is null and can't be opened"));
        this.popup.open(e78);
      } catch {
      }
    }
    closePopup() {
      var _a;
      (_a = this._popupSetupTask) == null ? void 0 : _a.abort(), d28(this.popup) && this.popup.close();
    }
    async fetchPopupFeatures(e78, p70) {
      await this.when();
      const { location: t88, queryArea: i78, layerViewsAndGraphics: s84, clientOnlyGraphics: r79 } = await this._prepareFetchPopupFeatures(e78, p70), a85 = Promise.resolve(r79), n103 = this._queryLayerPopupFeatures(i78, s84, p70), u58 = n103.map((e79) => e79.promise);
      return { location: t88, clientOnlyGraphics: r79, allGraphicsPromise: P([a85, ...u58]).then((e79) => Array.from(new Set(e79.flat()))), promisesPerLayerView: n103 };
    }
    async setupPopup() {
      var _a;
      if ((_a = this._popupSetupTask) == null ? void 0 : _a.abort(), this.popup && !d28(this.popup))
        return this._popupSetupTask = d5(async (e78) => {
          const { default: p70 } = await import("./Popup-OVUTNEG4.js");
          if (s6(e78), !this.popup || d28(this.popup))
            return;
          const t88 = this.popup;
          delete t88.open, delete t88.close, this.popup = new p70(t88);
        }), this._popupSetupTask.promise;
    }
    _queryLayerPopupFeatures(e78, p70, t88) {
      return p70.map(({ layerView: p71, graphics: i78 }) => {
        const s84 = { clientGraphics: i78, event: null != t88 ? t88.event : void 0, signal: null != t88 ? t88.signal : void 0, defaultPopupTemplateEnabled: null != t88 && !!t88.defaultPopupTemplateEnabled }, o77 = p71.fetchPopupFeatures(e78, s84);
        return { layerView: p71, promise: o77 };
      });
    }
    _isValidPopupGraphic(e78, p70) {
      return e78 && !!e78.getEffectivePopupTemplate(null != p70 && p70.defaultPopupTemplateEnabled);
    }
    async _prepareFetchPopupFeatures(e78, p70) {
      const { clientGraphics: t88, queryArea: i78, location: s84 } = await this._popupHitTestGraphics(e78, p70), o77 = this._getFetchPopupLayerViews(), { layerViewsAndGraphics: r79, clientOnlyGraphics: a85 } = this._graphicsPerFetchPopupLayerView(t88, o77);
      return { clientOnlyGraphics: a85, layerViewsAndGraphics: r79, queryArea: i78, location: s84 };
    }
    async _popupHitTestGraphics(e78, p70) {
      const t88 = await this.popupHitTest(e78), i78 = t88.results, s84 = t88.mapPoint, o77 = i78.filter((e79) => "graphic" === e79.type && this._isValidPopupGraphic(e79.graphic, p70)), r79 = o77.length ? o77[0].mapPoint : null;
      return { clientGraphics: o77.map((e79) => e79.graphic), queryArea: s84, location: s84 || r79 };
    }
    _getFetchPopupLayerViews() {
      const e78 = [];
      return this.allLayerViews.forEach((p70) => {
        this._isValidPopupLayerView(p70) && e78.push(p70);
      }), null != this.graphicsView && this._isValidPopupLayerView(this.graphicsView) && e78.push(this.graphicsView), e78.reverse();
    }
    _isValidPopupLayerView(e78) {
      return null != e78 && (!("layer" in e78) || !e78.suspended) && "fetchPopupFeatures" in e78;
    }
    _graphicsPerFetchPopupLayerView(e78, p70) {
      const t88 = [], i78 = /* @__PURE__ */ new Map(), s84 = p70.map((e79) => {
        const p71 = [];
        return "layer" in e79 ? i78.set(e79.layer, p71) : i78.set(e79.graphics, p71), { layerView: e79, graphics: p71 };
      });
      for (const o77 of e78) {
        const e79 = i78.get(o77.layer) || i78.get(o77.sourceLayer) || null;
        e79 ? e79.push(o77) : t88.push(o77);
      }
      return { layerViewsAndGraphics: s84, clientOnlyGraphics: t88 };
    }
  };
  return e([y({ cast(e78) {
    return !e78 || d28(e78) || "object" == typeof e78 && (e78.open = (e79) => (r9(s3.getLogger(this), "view.popup is no longer created by default. view.popup.open() will stop working when the popup isn't created", { replacement: "Use view.openPopup() instead.", version: "4.27" }), this.openPopup(e79)), e78.close = () => (r9(s3.getLogger(this), "view.popup is no longer created by default. view.popup.close() will stop working when the popup isn't created", { replacement: "Use view.closePopup() instead.", version: "4.27" }), this.closePopup())), e78;
  } })], m55.prototype, "popup", void 0), e([y()], m55.prototype, "popupEnabled", void 0), m55 = e([a4("esri.views.PopupView")], m55), m55;
};

// node_modules/@arcgis/core/views/BasemapView.js
var n50 = class extends m {
  constructor(e78) {
    super(e78), this.view = null, this.baseLayerViews = new V2(), this.referenceLayerViews = new V2(), this._loadingHandle = l6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e79) => {
      e79 && e79.load().catch(() => {
      });
    }, h3);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
    for (const e78 of this.baseLayerViews)
      e78.destroy();
    this.baseLayerViews.length = 0;
    for (const e78 of this.referenceLayerViews)
      e78.destroy();
    this.referenceLayerViews.length = 0;
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e78 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e78 && (!!e78.loaded && (this.baseLayerViews.some((e79) => e79.updating) || this.referenceLayerViews.some((e79) => e79.updating)));
  }
};
e([y({ constructOnly: true })], n50.prototype, "view", void 0), e([y({ readOnly: true })], n50.prototype, "baseLayerViews", void 0), e([y({ readOnly: true })], n50.prototype, "referenceLayerViews", void 0), e([y({ readOnly: true })], n50.prototype, "suspended", null), e([y({ type: Boolean, readOnly: true })], n50.prototype, "updating", null), n50 = e([a4("esri.views.BasemapView")], n50);

// node_modules/@arcgis/core/views/LayerViewManager.js
function g16(e78) {
  return "tryRecycleWith" in e78;
}
var v15 = class {
  constructor(e78, r79, t88) {
    this.layer = e78, this.view = r79, this.layerViewImporter = t88, this._controller = new AbortController(), this._deferred = C(), this._started = false, this.done = false, this.promise = this._deferred.promise, w(this._controller.signal, () => {
      const r80 = new s4("cancelled:layerview-create", "layerview creation cancelled", { layer: e78 });
      this._deferred.reject(r80);
    });
  }
  tryRecycle(e78) {
    if (!this.done || !this.layerView || !g16(this.layerView))
      return null;
    const r79 = this.layer.type, i78 = this._controller.signal;
    for (let t88 = 0; t88 < e78.length; t88++) {
      const s84 = e78[t88];
      if (s84.type !== r79)
        continue;
      const a85 = this.layerView.tryRecycleWith(s84, { signal: i78 });
      if (a85) {
        e78.splice(t88, 1), this.layer = s84;
        const r80 = this.layerView, i79 = r80.view;
        return this.promise = Promise.race([a85.then(() => (s6(this._controller.signal), s84.emit("layerview-destroy", { view: i79, layerView: r80 }), i79.emit("layerview-destroy", { view: i79, layerView: r80 }), s84.emit("layerview-create", { view: i79, layerView: r80 }), i79.emit("layerview-create", { view: i79, layerView: r80 }), r80)), new Promise((e79, r81) => w(this._controller.signal, () => r81(c())))]), this.promise;
      }
    }
    return null;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e78 } = this;
    if (e78) {
      const { layer: r79, view: i78 } = this;
      r79.emit("layerview-destroy", { view: i78, layerView: e78 }), i78.emit("layerview-destroy", { layer: r79, layerView: e78 });
    }
    this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null, this._map = null;
  }
  async start() {
    var _a, _b, _c;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e78 }, layer: r79, view: t88 } = this;
    this._map = t88.map;
    try {
      let o77, l75;
      if (await r79.load({ signal: e78 }), "prefetchResources" in r79 && await ((_a = r79.prefetchResources) == null ? void 0 : _a.call(r79, { signal: e78 })), M9(r79))
        o77 = await r79.createLayerView(t88, { signal: e78 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r79))
          throw new s4("layer:view-not-supported", "No layerview implementation was found");
        const s84 = await this.layerViewImporter.importLayerView(r79);
        s6(e78), o77 = "default" in s84 ? new s84.default({ layer: r79, view: t88 }) : new s84({ layer: r79, view: t88 });
      }
      const n103 = () => {
        l75 = o(l75), o77.destroyed || o77.destroy(), o77.layer = null, o77.parent = null, o77.view = null, this.done = true;
      };
      l75 = w(e78, n103), s6(e78);
      try {
        await o77.when();
      } catch (s84) {
        throw n103(), s84;
      }
      const c75 = (_c = (_b = this._map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.includes(r79);
      if (!c75)
        return n103(), void this._deferred.reject(new s4("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r79 }));
      this.layerView = o77, r79.emit("layerview-create", { view: t88, layerView: o77 }), t88.emit("layerview-create", { layer: r79, layerView: o77 }), this.done = true, this._deferred.resolve(o77);
    } catch (s84) {
      r79.emit("layerview-create-error", { view: t88, error: s84 }), t88.emit("layerview-create-error", { layer: r79, error: s84 }), this.done = true, this._deferred.reject(new s4("layerview:create-error", "layerview creation failed", { layer: r79, error: s84 }));
    }
  }
};
var V6 = class extends m {
  constructor(e78) {
    super(e78), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._recyclingInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new c8(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e79 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e79)
        for (const r79 of e79)
          this.layerViewImporter.hasLayerViewModule(r79) && this.layerViewImporter.importLayerView(r79);
    }, this._reschedule = () => this.destroyed ? Promise.reject() : (null == this._workPromise && (this._workPromise = C(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v2(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      if (this.destroyed)
        return;
      const e79 = this.view.map;
      if (this._map !== e79 && (this.clear(), this._map = e79), null == this._workPromise)
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r79 = /* @__PURE__ */ new Set(), i78 = [], t88 = this.view.ready, s84 = (e80) => {
        if (null != e80) {
          for (const a86 of e80)
            if (a86) {
              r79.add(a86);
              const e81 = this._layerLayerViewInfoMap.get(a86);
              e81 && t88 ? e81.start() : e81 || this._recyclingInfoMap.has(a86) || i78.push(a86), "layers" in a86 && a86.layers && s84(a86.layers);
            }
        }
      };
      for (const o77 of this._rootCollectionNames)
        s84(this.get(o77));
      for (const [o77, l75] of this._layerLayerViewInfoMap)
        if (!r79.has(o77)) {
          this._layerLayerViewInfoMap.delete(l75.layer);
          const e80 = l75.tryRecycle(i78);
          e80 ? (this.notifyChange("updating"), this._recyclingInfoMap.set(l75.layer, l75), e80.then(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l75.layer), this._layerLayerViewInfoMap.set(l75.layer, l75), this._reschedule();
          }).catch(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l75.layer), l75.destroy(), this._reschedule();
          })) : l75.destroy();
        }
      for (const [o77, l75] of this._recyclingInfoMap)
        r79.has(o77) || (this.notifyChange("updating"), this._recyclingInfoMap.delete(l75.layer), l75.destroy());
      for (const o77 of i78)
        this._createLayerView(o77);
      this._refreshCollections();
      const a85 = [(_a = e79 == null ? void 0 : e79.ground) == null ? void 0 : _a.layers, (_b = e79 == null ? void 0 : e79.basemap) == null ? void 0 : _b.baseLayers, (_c = e79 == null ? void 0 : e79.basemap) == null ? void 0 : _c.referenceLayers, e79 == null ? void 0 : e79.layers].filter((e80) => !!e80);
      r79.forEach((e80) => "layers" in e80 && a85.push(e80.layers)), this.addHandles(a85.map((e80) => this._watchUpdatingTracking.addOnCollectionChange(() => e80, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.own([a9(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), l6(() => {
      const e78 = this.view, r79 = e78 == null ? void 0 : e78.map;
      return [r79 == null ? void 0 : r79.basemap, r79 == null ? void 0 : r79.ground, r79 == null ? void 0 : r79.layers, e78 == null ? void 0 : e78.ready];
    }, () => this._reschedule(), w3)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), n16(this._recyclingInfoMap), n16(this._layerLayerViewInfoMap), this._watchUpdatingTracking.destroy(), this._map = null, null != this._workPromise && (this._workPromise.reject(c()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e78 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e78.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e78);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return null != this._workPromise || this._watchUpdatingTracking.updating || n2(this._layerLayerViewInfoMap, (e78) => !e78.done) || this._recyclingInfoMap.size > 0;
  }
  get updatingRemaining() {
    let e78 = 0;
    for (const r79 of this._layerLayerViewInfoMap.values())
      r79.done || ++e78;
    return e78;
  }
  clear() {
    this.destroyed || (n16(this._layerLayerViewInfoMap), this._refreshCollections());
  }
  async whenLayerView(e78) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e78)) {
      if (this._recyclingInfoMap.has(e78))
        return this._recyclingInfoMap.get(e78).promise;
      throw new s4("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e78 });
    }
    return this._layerLayerViewInfoMap.get(e78).promise;
  }
  _refreshCollections() {
    for (const [e78, r79] of this._layersToLayerViews)
      this._populateLayerViewsOwners(this.get(e78), this.get(r79), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e78, r79, i78) {
    if (!e78 || !r79)
      return void (r79 && r79.removeAll());
    let t88 = 0;
    for (const s84 of e78) {
      const e79 = this._layerLayerViewInfoMap.get(s84);
      if (!e79 || !e79.layerView)
        continue;
      const a85 = e79.layerView;
      a85.layer = s84, a85.parent = i78, r79.at(t88) !== a85 && r79.splice(t88, 0, a85), s84.layers && this._populateLayerViewsOwners(s84.layers, a85.layerViews, a85), t88 += 1;
    }
    t88 < r79.length && r79.splice(t88, r79.length);
  }
  _createLayerView(e78) {
    e78.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e78) && this.layerViewImporter.importLayerView(e78);
    const r79 = new v15(e78, this.view, this.layerViewImporter);
    r79.promise.then(() => this._refreshCollections(), (r80) => {
      r80 && (d2(r80) || "cancelled:layerview-create" === r80.name) || s3.getLogger(this).error(`Failed to create layerview for layer title:'${e78.title ?? "no title"}', id:'${e78.id ?? "no id"}' of type '${e78.type}'.`, { layer: e78, error: r80 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e78, r79), this.view.ready && r79.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e([y()], V6.prototype, "_workPromise", void 0), e([y({ readOnly: true })], V6.prototype, "_watchUpdatingTracking", void 0), e([y({ readOnly: true })], V6.prototype, "_layersToLayerViews", null), e([y({ readOnly: true })], V6.prototype, "_rootCollectionNames", null), e([y()], V6.prototype, "layerViewImporter", void 0), e([y()], V6.prototype, "supportsGround", void 0), e([y({ readOnly: true })], V6.prototype, "updating", null), e([y({ readOnly: true })], V6.prototype, "updatingRemaining", null), e([y({ constructOnly: true })], V6.prototype, "view", void 0), V6 = e([a4("esri.views.LayerViewManager")], V6);
var L8 = V6;
function M9(e78) {
  return "createLayerView" in e78 && null != e78.createLayerView;
}

// node_modules/@arcgis/core/views/Magnifier.js
var i36 = class extends m {
  constructor(o77) {
    super(o77), this.factor = 1.5, this.offset = c6(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e([y({ type: Number })], i36.prototype, "factor", void 0), e([y({ nonNullable: true })], i36.prototype, "offset", void 0), e([y()], i36.prototype, "position", void 0), e([y({ type: Number, range: { min: 0 } })], i36.prototype, "size", void 0), e([y()], i36.prototype, "maskUrl", void 0), e([y()], i36.prototype, "maskEnabled", void 0), e([y()], i36.prototype, "overlayUrl", void 0), e([y()], i36.prototype, "overlayEnabled", void 0), e([y({ readOnly: true })], i36.prototype, "version", null), e([y({ type: Boolean })], i36.prototype, "visible", void 0), i36 = e([a4("esri.views.Magnifier")], i36);
var p19 = i36;

// node_modules/@arcgis/core/views/3d/support/TextureCollection.js
var a36 = class extends m {
  constructor(e78, t88) {
    super({}), this._stage = e78, this._textureRequests = /* @__PURE__ */ new Map(), this._frameTask = (t88 == null ? void 0 : t88.registerTask(I3.TEXTURE_UNLOAD)) ?? F5;
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    var _a, _b, _c;
    super.destroy(), (_a = this._frameTask) == null ? void 0 : _a.remove(), (_b = this._textureRequests) == null ? void 0 : _b.forEach((e78) => this._releaseTextureRequest(e78)), (_c = this._textureRequests) == null ? void 0 : _c.clear();
  }
  get updating() {
    return this._frameTask.updating;
  }
  fromData(e78, t88, r79) {
    var _a, _b;
    const s84 = this.makeUid(e78);
    let o77 = this._textureRequests.get(s84);
    if (!o77) {
      const e79 = new i37(r79);
      e79.texture = t88(), (_a = this._stage) == null ? void 0 : _a.add(e79.texture), (_b = this._stage) == null ? void 0 : _b.loadImmediate(e79.texture), this._textureRequests.set(s84, e79), o77 = e79;
    }
    return o77.referenceCount++, { uid: s84, texture: o77.texture, release: () => this._release(s84) };
  }
  _release(e78) {
    const t88 = this._textureRequests.get(e78);
    t88 ? (t88.referenceCount < 1 && console.warn("TextureCollection: reference count is < 1 for " + e78), t88.referenceCount--, t88.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e78))) : console.warn(`TextureCollection: texture doesn't exist: '${e78}'`);
  }
  get test() {
    return { textureRequests: this._textureRequests };
  }
  _releaseNow(e78) {
    if (!this._textureRequests)
      return;
    const t88 = this._textureRequests.get(e78);
    !t88 || t88.referenceCount > 0 || (this._releaseTextureRequest(t88), this._textureRequests.delete(e78));
  }
  _releaseTextureRequest(e78) {
    var _a;
    e78.onRemove && e78.onRemove(), e78.texture ? (_a = this._stage) == null ? void 0 : _a.remove(e78.texture) : e78.abortController && (e78.abortController.abort(), e78.abortController = null);
  }
  makeUid(e78, t88 = null) {
    return null != t88 ? `${e78}.${t88}px` : e78;
  }
};
e([y()], a36.prototype, "_frameTask", void 0), e([y()], a36.prototype, "updating", null), a36 = e([a4("esri.views.3d.support.TextureCollection")], a36);
var i37 = class {
  constructor(e78) {
    this.onRemove = e78, this.referenceCount = 0;
  }
};

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o42(t88) {
  return [t88.on("before-add", (o77) => {
    const i78 = o77.item;
    if (null == i78 || t88.includes(i78))
      return s3.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o77.preventDefault();
    i78.onAdd();
  }), t88.on("after-remove", (e78) => {
    const t89 = e78.item;
    t89.active && (t89.view.activeTool = null), t89.destroy();
  })];
}
function i38(e78) {
  return e78.visible && null != e78.getEditableFlag && e78.getEditableFlag(o29.USER) && e78.getEditableFlag(o29.MANAGER);
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var s42 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  hasFocusedManipulators() {
    return this._grabbedManipulators.size > 0 || this._draggedManipulators.size > 0;
  }
  handleInputEvent(t88, e78) {
    const i78 = () => t88.stopPropagation();
    switch (t88.type) {
      case "pointer-move":
        l29(t88.pointerType) && this._pointerLocations.set(t88.pointerId, { x: t88.x, y: t88.y, pointerType: t88.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (i78(), "end" === t88.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!p20(t88))
          break;
        const o77 = n36(t88), r79 = this._intersect(o77, t88.pointerType, e78.forEachTool);
        if (null == r79)
          break;
        const a85 = r79.manipulator, s84 = r79.tool;
        null == a85 || null == s84 || !a85.interactive || a85.grabbable && a85.grabbableForEvent(t88) || !a85.grabbing || a85.dragging || this._ungrabManipulatorBeforeDragging(a85, t88, e78), null != a85 && null != s84 && a85.interactive && a85.grabbable && a85.grabbableForEvent(t88) && !a85.grabbing && (this._grabbedManipulators.set(t88.pointerId, { manipulator: a85, tool: s84, start: o77, pointerType: t88.pointerType }), 1 === this._grabbedManipulators.size && null == e78.activeTool && (this._revertToNullActiveTool = true, e78.setActiveTool(r79.tool)), a85.grabbing = true, a85.events.emit("grab-changed", { action: "start", pointerType: t88.pointerType, screenPoint: o77 }), i78());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t88.pointerId) || this._handlePointerEnd(t88, e78);
        break;
      case "pointer-drag": {
        if (!p20(t88))
          break;
        const a85 = this._grabbedManipulators.get(t88.pointerId), s84 = n4(a85, ({ manipulator: t89 }) => t89), l75 = n4(a85, ({ tool: t89 }) => t89);
        if (null == s84 || null == l75)
          break;
        const u58 = n36(t88);
        u58.x = i3(u58.x, 0, e78.view.width), u58.y = i3(u58.y, 0, e78.view.height);
        const c75 = a85.start, h58 = this._draggedManipulators.get(t88.pointerId);
        switch (t88.action) {
          case "start":
          case "update":
            "update" !== t88.action && 1 !== this._grabbedManipulators.size || (s84.dragging = true, h58 ? s84.events.emit("drag", { action: "update", start: c75, screenPoint: u58 }) : s84.events.emit("drag", { action: "start", start: c75, screenPoint: u58, pointerType: t88.pointerType }), this._draggedManipulators.set(t88.pointerId, { tool: l75, manipulator: s84, start: c75 }));
            break;
          case "end":
            s84.dragging = false, h58 && s84.events.emit("drag", { action: "end", start: c75, screenPoint: u58 }), this._draggedManipulators.delete(t88.pointerId), this._handlePointerEnd(t88, e78);
        }
        i78();
        break;
      }
      case "immediate-click": {
        const o77 = n36(t88), r79 = this._intersect(o77, t88.pointerType, e78.forEachTool);
        if (u20(t88) || e78.forEachTool((t89) => {
          if ((null == r79 || r79.tool !== t89 || t89.automaticManipulatorSelection) && t89.manipulators) {
            let e79 = false;
            t89.manipulators.forEach(({ manipulator: t90 }) => {
              t90.selected && (t90.selected = false, e79 = true);
            }), e79 && t89.onManipulatorSelectionChanged && t89.onManipulatorSelectionChanged();
          }
        }), null == r79)
          break;
        const { manipulator: a85, tool: s84 } = r79;
        if (!a85.interactive)
          break;
        a85.selectable && s84.automaticManipulatorSelection && (a85.selected = !a85.selected, s84.onManipulatorSelectionChanged && s84.onManipulatorSelectionChanged());
        const l75 = t88.native.shiftKey;
        a85.events.emit("immediate-click", { screenPoint: o77, button: t88.button, pointerType: t88.pointerType, shiftKey: l75, stopPropagation: i78 });
        break;
      }
      case "click": {
        const o77 = n36(t88), r79 = this._intersect(o77, t88.pointerType, e78.forEachTool), a85 = null != r79 ? r79.manipulator : null;
        if (null == a85 || !a85.interactive)
          break;
        const s84 = t88.native.shiftKey;
        a85.events.emit(t88.type, { screenPoint: o77, button: t88.button, pointerType: t88.pointerType, shiftKey: s84 }), i78();
        break;
      }
      case "double-click": {
        const o77 = n36(t88), r79 = this._intersect(o77, t88.pointerType, e78.forEachTool), a85 = null != r79 ? r79.manipulator : null;
        if (null == a85 || !a85.interactive)
          break;
        const s84 = t88.native.shiftKey;
        a85.events.emit("double-click", { screenPoint: o77, button: t88.button, pointerType: t88.pointerType, shiftKey: s84, stopPropagation: i78 });
        break;
      }
      case "immediate-double-click": {
        const o77 = n36(t88), r79 = this._intersect(o77, t88.pointerType, e78.forEachTool), a85 = null != r79 ? r79.manipulator : null;
        if (null == a85 || !a85.interactive)
          break;
        const s84 = t88.native.shiftKey;
        a85.events.emit("immediate-double-click", { screenPoint: o77, button: t88.button, pointerType: t88.pointerType, shiftKey: s84, stopPropagation: i78 });
        break;
      }
    }
    this._onFocusChange(e78.forEachTool);
  }
  _ungrabManipulatorBeforeDragging(t88, e78, o77) {
    t88.grabbing = false, t88.events.emit("grab-changed", { action: "end", pointerType: e78.pointerType, screenPoint: n36(e78) }), this._grabbedManipulators.forEach(({ manipulator: e79 }, o78) => {
      e79 === t88 && this._grabbedManipulators.delete(o78);
    }), this._afterManipulatorUngrab(o77.setActiveTool);
  }
  _handlePointerEnd(t88, e78) {
    const o77 = n4(this._grabbedManipulators.get(t88.pointerId), ({ manipulator: t89 }) => t89);
    null != o77 && o77.grabbing && (o77.grabbing = false, o77.events.emit("grab-changed", { action: "end", pointerType: t88.pointerType, screenPoint: n36(t88) }), this._grabbedManipulators.delete(t88.pointerId), this._afterManipulatorUngrab(e78.setActiveTool));
  }
  _cursorFromMap(t88) {
    let o77 = null;
    return n2(t88, ({ manipulator: t89 }) => !(null == t89 || !t89.interactive) && (t89.grabbing && t89.grabCursor ? (o77 = t89.grabCursor, true) : !!t89.cursor && (o77 = t89.cursor, true))), o77;
  }
  _onFocusChange(t88) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t88);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e78) {
    const o77 = /* @__PURE__ */ new Set(), r79 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t88 }) => {
      o77.add(t88);
    }), this._hoveredManipulators.forEach(({ tool: t88 }) => {
      r79.add(t88);
    }), e78((e79) => {
      e79.hasGrabbedManipulators = o77.has(e79), e79.hasHoveredManipulators = r79.has(e79);
      const i78 = this._grabbedManipulators.values(), a85 = o2(i78, ({ tool: t88 }) => t88 === e79);
      e79.firstGrabbedManipulator = null != a85 ? a85.manipulator : null;
    });
  }
  clearPointers(t88, { forEachTool: e78, setActiveTool: o77 }, r79 = true, i78) {
    const a85 = (e79, o78) => e79 === t88 && (null == i78 || i78 === o78);
    this._grabbedManipulators.forEach(({ tool: t89, manipulator: e79, pointerType: o78 }, r80) => {
      a85(t89, e79) && (this._grabbedManipulators.delete(r80), e79.grabbing = false, e79.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o78 }));
    }), this._draggedManipulators.forEach(({ tool: t89, manipulator: e79 }, o78) => {
      a85(t89, e79) && (this._draggedManipulators.delete(o78), e79.dragging = false, e79.events.emit("drag", { action: "cancel" }));
    }), r79 && this._hoveredManipulators.forEach(({ tool: t89, manipulator: e79 }, o78) => {
      a85(t89, e79) && (this._hoveredManipulators.delete(o78), e79.hovering = false);
    }), this._afterManipulatorUngrab(o77), this._onFocusChange(e78);
  }
  _intersect(t88, e78, o77) {
    let r79 = null;
    return o77((o78) => {
      if (null == o78.manipulators || !i38(o78))
        return false;
      const i78 = o78.manipulators.intersect(t88, e78);
      return null != i78 && (r79 = { tool: o78, manipulator: i78 }, true);
    }), r79;
  }
  updateHoveredStateFromKnownPointers(t88) {
    this._pointerLocations.forEach((e78, o77) => {
      this._updateHoveredStateForPointerAtScreenPosition(c6(e78.x, e78.y), o77, e78.pointerType, t88);
    });
  }
  handleHoverEvent(t88, e78) {
    "pointer-up" !== t88.type && "immediate-click" !== t88.type && "pointer-move" !== t88.type || !l29(t88.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n36(t88), t88.pointerId, t88.pointerType, e78);
  }
  _updateHoveredStateForPointerAtScreenPosition(t88, e78, o77, i78) {
    let a85 = this._intersect(t88, o77, i78);
    const n103 = n4(this._hoveredManipulators.get(e78), ({ manipulator: t89 }) => t89);
    null == a85 || a85.manipulator.interactive || (a85 = null), null != a85 && n103 === a85.manipulator || (null != n103 && (n103.hovering = false), null != a85 ? (a85.manipulator.hovering = true, this._hoveredManipulators.set(e78, a85)) : this._hoveredManipulators.delete(e78), this._onFocusChange(i78));
  }
  _afterManipulatorUngrab(t88) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t88(null), this._revertToNullActiveTool = false);
  }
};
function l29(t88) {
  return "mouse" === t88;
}
function p20(t88) {
  return "mouse" !== t88.pointerType || 0 === t88.button;
}
function u20(t88) {
  return !!t88.native.shiftKey;
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var f26 = "attached";
var E15 = "tools";
var y14 = 1e3;
var w18 = class extends d7 {
  constructor(t88) {
    super(t88), this._clock = t5, this._manipulatorState = new s42(), this.tools = new V2(), this.cursor = null, this._interacting = false, this._interactingTimeout = null, this._forEachTool = (t89) => {
      for (const e78 of this.tools.items)
        if (t89(e78))
          return;
    };
  }
  initialize() {
    this.handles.add([this.view.on(r32, (t88) => {
      this._handleInputEvent(t88);
    }, _9.TOOL), ...o42(this.tools), this.tools.on("before-add", ({ item: t88 }) => {
      this._updateToolEditableFlag(t88);
    }), this.tools.on("before-remove", ({ item: t88 }) => {
      this._manipulatorState.clearPointers(t88, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.detach(), this.handles.removeAll();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t88) => {
      this.activeTool = t88;
    }, view: this.view };
  }
  set activeTool(t88) {
    if (null != t88 && !this.view.ready)
      return void s3.getLogger(this).error("Cannot set active tool while view is not ready.");
    if (t88 === this.activeTool)
      return;
    const e78 = this.activeTool;
    this._set("activeTool", t88), null != e78 && e78.deactivate(), null != t88 && t88.activate(), this._removeIncompleteTools(t88);
    for (const o77 of this.tools) {
      this._updateToolEditableFlag(o77);
      const t89 = i38(o77);
      null != this.activeTool && t89 || this._manipulatorState.clearPointers(o77, this._manipulatorStateEventArgs, !t89);
    }
    this._updateCursor();
  }
  get updating() {
    var _a;
    return this.updatingHandles.updating || this.tools.some((t88) => t88.updating) || (((_a = this.textures) == null ? void 0 : _a.updating) ?? false);
  }
  get interacting() {
    return this._interacting;
  }
  _clearInteractingTimeout() {
    this._interactingTimeout = o(this._interactingTimeout);
  }
  _startInteractingTimeout() {
    this._clearInteractingTimeout(), this._interactingTimeout = this._clock.setTimeout(() => this._interacting = false, y14);
  }
  attach() {
    var _a;
    "3d" === this.view.type ? (this._set("textures", new a36(this.view._stage, this.view.resourceController.scheduler)), this.handles.add([l6(() => {
      const { state: t88 } = this.view;
      return "camera" in t88 && t88.camera;
    }, () => this._forEachManipulator((t88) => t88.onViewChange())), (_a = this.view.elevationProvider) == null ? void 0 : _a.on("elevation-change", (t88) => this._forEachManipulator((e78) => e78.onElevationChange(t88))), e2(() => this._set("textures", l(this.textures)))], f26)) : this.handles.add(l6(() => this.view.extent, () => this._forEachManipulator((t88) => t88.onViewChange())));
  }
  detach() {
    this.activeTool = null, this.tools.removeAll(), this.handles.remove(f26), this._clearInteractingTimeout(), this._interacting = false;
  }
  _forEachManipulator(t88) {
    this._forEachTool((e78) => {
      e78.manipulators && e78.manipulators.forEach(({ manipulator: o77 }) => t88(o77, e78));
    });
  }
  _handleInputEvent(t88) {
    let e78 = false;
    const o77 = { ...t88, stopPropagation: () => {
      e78 = true, t88.stopPropagation();
    } };
    null != this.activeTool ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(o77) : this._forEachTool((t89) => {
      !e78 && t89.visible && t89.handleInputEvent(o77);
    }), !e78 && "key-down" === t88.type && "Escape" === t88.key && this.activeTool && (t88.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(o77, this._manipulatorStateEventArgs), e78 || null == this.activeTool || this.activeTool.handleInputEventAfter(o77), this._manipulatorState.handleHoverEvent(o77, this._forEachTool), this._updateCursor(), "pointer-move" === t88.type && (this._manipulatorState.hasFocusedManipulators() || this.activeTool) && (this._interacting = true, this._startInteractingTimeout());
  }
  _refreshToolWatchers() {
    this.handles.remove(E15), this._forEachTool((t88) => {
      if (t88 instanceof m) {
        const e78 = l6(() => [t88.cursor, t88.visible, t88.editable], () => {
          i38(t88) || this._manipulatorState.clearPointers(t88, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.handles.add(e78, E15);
      }
      t88.manipulators && this.handles.add([t88.manipulators.on("after-remove", (e78) => {
        this._manipulatorState.clearPointers(t88, this._manipulatorStateEventArgs, true, e78.item.manipulator);
      }), t88.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], E15);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t88) {
    var _a;
    (_a = t88.setEditableFlag) == null ? void 0 : _a.call(t88, o29.MANAGER, null == this.activeTool || t88 === this.activeTool);
  }
  _updateCursor() {
    let t88 = this._manipulatorState.cursor;
    null == t88 && this._forEachTool((e78) => !(null == e78.cursor || !e78.visible) && (t88 = e78.cursor, true)), this._get("cursor") !== t88 && this._set("cursor", t88);
  }
  _removeIncompleteTools(t88) {
    this.tools.filter((e78) => (null == t88 || e78 !== t88) && !e78.created && e78.removeIncompleteOnCancel).forEach((t89) => {
      this.tools.remove(t89);
    });
  }
  get test() {
    return { setClock: (t88) => this._clock = t88 };
  }
};
e([y({ constructOnly: true, nonNullable: true })], w18.prototype, "view", void 0), e([y({ readOnly: true, nonNullable: true })], w18.prototype, "textures", void 0), e([y({ value: null })], w18.prototype, "activeTool", null), e([y({ readOnly: true, type: V2 })], w18.prototype, "tools", void 0), e([y({ readOnly: true })], w18.prototype, "cursor", void 0), e([y({ readOnly: true })], w18.prototype, "updating", null), e([y()], w18.prototype, "_interacting", void 0), e([y({ readOnly: true })], w18.prototype, "interacting", null), w18 = e([a4("esri.views.ToolViewManager")], w18);

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n51 = class extends m {
  constructor(e78) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e78.mapping ? this._detectedDeviceType = "standard" : o43.test(e78.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e78.index;
  }
  get native() {
    const e78 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e78.length ? e78[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i39[this.deviceType];
  }
};
e([y({ nonNullable: true, readOnly: true })], n51.prototype, "nativeIndex", void 0), e([y({ type: String, readOnly: true })], n51.prototype, "deviceType", null), e([y({ type: Number, readOnly: true })], n51.prototype, "axisThreshold", null), n51 = e([a4("esri.views.input.gamepad.GamepadInputDevice")], n51);
var o43 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i39 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a37 = n51;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var c27 = class extends m {
  constructor(...e78) {
    super(...e78), this.devices = new V2(), this.enabledFocusMode = "document";
  }
};
e([y({ type: V2.ofType(a37), readOnly: true })], c27.prototype, "devices", void 0), e([y({ type: ["document", "view", "none"] })], c27.prototype, "enabledFocusMode", void 0), c27 = e([a4("esri.views.input.gamepad.GamepadSettings")], c27);
var i40 = c27;

// node_modules/@arcgis/core/views/input/Input.js
var p21 = class extends m {
  constructor() {
    super(...arguments), this.gamepad = new i40();
  }
};
e([y({ readOnly: true })], p21.prototype, "gamepad", void 0), p21 = e([a4("esri.views.input.Input")], p21);
var a38 = p21;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s43 = class extends m {
  constructor(o77) {
    super(o77), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e([y({ type: Boolean, nonNullable: true })], s43.prototype, "enabled", void 0), e([y({ type: a37 })], s43.prototype, "device", void 0), e([y({ type: ["pan", "zoom"], nonNullable: true })], s43.prototype, "mode", void 0), e([y({ type: ["forward-down", "forward-up"], nonNullable: true })], s43.prototype, "tiltDirection", void 0), e([y({ type: Number, nonNullable: true })], s43.prototype, "velocityFactor", void 0), s43 = e([a4("esri.views.navigation.gamepad.GamepadSettings")], s43);
var a39 = s43;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a40 = class extends m {
  constructor(o77) {
    super(o77), this.browserTouchPanEnabled = true, this.gamepad = new a39(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e([y({ type: Boolean })], a40.prototype, "browserTouchPanEnabled", void 0), e([y({ type: a39, nonNullable: true })], a40.prototype, "gamepad", void 0), e([y({ type: Boolean })], a40.prototype, "momentumEnabled", void 0), e([y({ type: Boolean })], a40.prototype, "mouseWheelZoomEnabled", void 0), a40 = e([a4("esri.views.navigation.Navigation")], a40);
var p22 = a40;

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n52;
var s44 = null;
async function c28(r79) {
  s44 || (s44 = import("./geometryServiceUtils-WVZ4P4NJ.js").then((e78) => n52 = e78)), await s44, s6(r79);
}
async function p23(e78, s84, a85, m55) {
  if (!e78)
    return null;
  const l75 = e78.spatialReference;
  return Y2() || Cn(l75, s84) ? nn(e78, s84) : n52 ? n52.projectGeometry(e78, s84, a85, m55) : (await Promise.race([c28(m55), $(m55)]), p23(e78, s84, a85, m55));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var d29 = class extends m {
  constructor(e78) {
    super(e78), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = e3(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return null != this.userSpatialReference ? this.userSpatialReference : this._spatialReferenceTask.spatialReference;
  }
  get extent() {
    return this._extentTask.extent;
  }
  get heightModelInfo() {
    return this._heightModelInfoTask.heightModelInfo;
  }
  get vcsWkid() {
    return this._heightModelInfoTask.vcsWkid;
  }
  get latestVcsWkid() {
    return this._heightModelInfoTask.latestVcsWkid;
  }
  get viewingMode() {
    return null == this.userSpatialReference || this.userSpatialReference.equals(this._spatialReferenceTask.spatialReference) ? this._spatialReferenceTask.viewingMode : null;
  }
  get tileInfo() {
    return this._tileInfoTask.tileInfo;
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e78 = (_a = this.map) == null ? void 0 : _a.call(this), t88 = [];
    return null != this.priorityCollection && t88.push(this.priorityCollection), t88.push({ parent: e78 == null ? void 0 : e78.basemap, layers: (_b = e78 == null ? void 0 : e78.basemap) == null ? void 0 : _b.baseLayers }, { layers: e78 == null ? void 0 : e78.layers }, { parent: e78 == null ? void 0 : e78.ground, layers: (_c = e78 == null ? void 0 : e78.ground) == null ? void 0 : _c.layers }, { parent: e78 == null ? void 0 : e78.basemap, layers: (_d = e78 == null ? void 0 : e78.basemap) == null ? void 0 : _d.referenceLayers }), t88;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    if (this.suspended)
      return this._get("_spatialReferenceTask") ?? { updating: false };
    const { layers: e78, updating: t88 } = this._allLayers;
    let n103 = null;
    for (const s84 of e78) {
      const e79 = this._getSupportedSpatialReferences(s84);
      if (e79.length > 0) {
        const t89 = this._narrowDownSpatialReferenceCandidates(n103, e79);
        null != t89 && (n103 = t89);
      }
      if (null != n103 && 1 === n103.length)
        break;
    }
    if (t88 && (null == n103 || 1 !== n103.length))
      return { updating: true };
    const a85 = this._pickSpatialReferenceCandidate(n103);
    return { spatialReference: null != a85 ? a85.spatialReference : null, viewingMode: null != a85 ? a85.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e4, _f, _g;
    if (!this.required.tileInfo)
      return this._get("_tileInfoTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e78, updating: t88 } = this._collectLayers([{ parent: (_b = (_a = this.map) == null ? void 0 : _a.call(this)) == null ? void 0 : _b.basemap, layers: (_e4 = (_d = (_c = this.map) == null ? void 0 : _c.call(this)) == null ? void 0 : _d.basemap) == null ? void 0 : _e4.baseLayers }, { layers: (_g = (_f = this.map) == null ? void 0 : _f.call(this)) == null ? void 0 : _g.layers }]);
    if (e78 && e78.length > 0 && "tileInfo" in e78[0]) {
      const t89 = e78[0].tileInfo;
      return { tileInfo: t89 && t89.spatialReference.equals(this.spatialReference) ? t89 : null, updating: false };
    }
    return { updating: t88 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return this._get("_heightModelInfoTask") ?? { updating: false };
    const { layers: e78, updating: t88 } = this._allLayers;
    for (const n103 of e78)
      if (g10(n103)) {
        const e79 = l20(n103);
        if (e79)
          return { heightModelInfo: e79, vcsWkid: (_b = n103.spatialReference) == null ? void 0 : _b.vcsWkid, latestVcsWkid: (_c = n103.spatialReference) == null ? void 0 : _c.latestVcsWkid, updating: false };
      }
    return { updating: t88 };
  }
  get _extentCandidatesTask() {
    if (this.suspended || !this.required.extent)
      return this._get("_extentCandidatesTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e78 = this._allLayers, t88 = e78.updating, n103 = [];
    for (const a85 of e78.layers) {
      const e79 = "fullExtents" in a85 && a85.fullExtents || (null != a85.fullExtent ? [a85.fullExtent] : []), t89 = this.requiresExtentInSpatialReference ? null : e79[0], s84 = e79.find((e80) => e80.spatialReference.equals(this.spatialReference)) ?? t89;
      if (s84)
        return { candidates: [{ extent: s84, layer: a85 }], updating: false };
      if (this._getSupportedSpatialReferences(a85).length > 0)
        for (const i78 of e79)
          n103.push({ extent: i78, layer: a85 });
    }
    return { candidates: n103, updating: t88 };
  }
  get _extentTask() {
    const { candidates: e78, updating: t88 } = this._extentCandidatesTask;
    if (t88)
      return { updating: t88 };
    if (null == e78 || 0 === e78.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i78 = this._pickExtentCandidate(e78), r79 = this.spatialReference;
    return i78.extent.equals(this._projectExtentTask.input) && r79.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: null != this._projectExtentTask.task && !this._projectExtentTask.task.finished } : (null != this._projectExtentTask.task && (this._projectExtentTask.task = e3(this._projectExtentTask.task)), this._projectExtentTask = { input: i78.extent.clone(), output: null, spatialReference: r79.clone(), task: d5(async (e79) => {
      try {
        const t89 = await p23(i78.extent, r79, "portalItem" in i78.layer ? i78.layer.portalItem : void 0, e79);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t89 };
      } catch (t89) {
        if (a5(e79))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e78, t88) {
    if (null == e78)
      return t88;
    const n103 = [], a85 = (e79, t89) => null != e79 ? null != t89 ? e79 === t89 && e79 : e79 : t89;
    for (const s84 of e78)
      for (const e79 of t88) {
        if (!s84.spatialReference.equals(e79.spatialReference))
          continue;
        const t89 = a85(s84.viewingMode, e79.viewingMode);
        if (false !== t89) {
          n103.push({ spatialReference: s84.spatialReference, viewingMode: t89 });
          break;
        }
      }
    return n103.length > 0 ? n103 : null;
  }
  _pickSpatialReferenceCandidate(e78) {
    const t88 = this.defaultSpatialReference;
    return null == e78 || e78.length < 1 ? null != t88 ? { spatialReference: t88, viewingMode: null } : null : (null != t88 && e78.length > 1 && e78.some(({ spatialReference: e79 }) => e79.equals(t88)) && (e78 = e78.filter(({ spatialReference: e79 }) => e79.equals(t88))), e78.length > 1 && e78.some(({ viewingMode: e79 }) => e79 !== l14.Local) && (e78 = e78.filter(({ viewingMode: e79 }) => e79 !== l14.Local)), e78[0]);
  }
  _getSupportedSpatialReferences(e78) {
    const t88 = "supportedSpatialReferences" in e78 && e78.supportedSpatialReferences || (e78.spatialReference ? [e78.spatialReference] : []);
    if (0 === t88.length)
      return [];
    const n103 = [];
    for (const a85 of t88) {
      const t89 = this.getSpatialReferenceSupport({ spatialReference: a85, layer: e78 });
      if (null != t89) {
        const e79 = null != t89.constraints ? t89.constraints : [{ spatialReference: a85, viewingMode: null }];
        for (const { spatialReference: t90, viewingMode: a86 } of e79)
          this.requiresExtentInSpatialReference && null != this.userSpatialReference && !t90.equals(this.userSpatialReference) || n103.push({ spatialReference: t90, viewingMode: a86 });
      }
    }
    return n103;
  }
  _pickExtentCandidate(e78) {
    const t88 = this.spatialReference;
    return e78.find(({ extent: e79 }) => t88.equals(e79.spatialReference)) || e78[0];
  }
  _collectLayers(e78) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t88 = new f27();
    for (const n103 of e78)
      if (this._collectCollection(n103, t88), t88.preloading === this.sourcePreloadCount)
        break;
    return { layers: t88.layers, updating: t88.updating };
  }
  _collectCollection(e78, t88) {
    if (e78.layers) {
      switch (this._loadMaybe(e78.parent)) {
        case "loading":
          return t88.updating = true, void ++t88.preloading;
        case "failed":
          return;
      }
      for (const n103 of e78.layers) {
        switch (this._loadMaybe(n103)) {
          case "failed":
            continue;
          case "loading":
            t88.updating = true, ++t88.preloading;
            break;
          case "loaded":
            t88.updating || t88.layers.push(n103), "layers" in n103 && this._collectCollection({ layers: n103.layers }, t88);
        }
        if (t88.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e78) {
    return e78 && "loadStatus" in e78 && null != e78.loadStatus ? "not-loaded" === e78.loadStatus ? (e78.load().catch((e79) => {
      d2(e79) || console.log(e79);
    }), "loading") : e78.loadStatus : "loaded";
  }
};
e([y()], d29.prototype, "required", void 0), e([y({ constructOnly: true })], d29.prototype, "map", void 0), e([y({ constructOnly: true })], d29.prototype, "getSpatialReferenceSupport", void 0), e([y()], d29.prototype, "defaultSpatialReference", void 0), e([y()], d29.prototype, "userSpatialReference", void 0), e([y()], d29.prototype, "sourcePreloadCount", void 0), e([y()], d29.prototype, "priorityCollection", void 0), e([y()], d29.prototype, "requiresExtentInSpatialReference", void 0), e([y()], d29.prototype, "suspended", void 0), e([y({ readOnly: true })], d29.prototype, "ready", null), e([y({ readOnly: true })], d29.prototype, "heightModelInfoReady", null), e([y({ readOnly: true })], d29.prototype, "spatialReference", null), e([y({ readOnly: true })], d29.prototype, "extent", null), e([y({ readOnly: true })], d29.prototype, "heightModelInfo", null), e([y({ readOnly: true })], d29.prototype, "vcsWkid", null), e([y({ readOnly: true })], d29.prototype, "latestVcsWkid", null), e([y({ readOnly: true })], d29.prototype, "viewingMode", null), e([y({ readOnly: true })], d29.prototype, "tileInfo", null), e([y({ readOnly: true })], d29.prototype, "mapCollections", null), e([y({ readOnly: true })], d29.prototype, "_allLayers", null), e([y({ readOnly: true })], d29.prototype, "_spatialReferenceTask", null), e([y({ readOnly: true })], d29.prototype, "_tileInfoTask", null), e([y({ readOnly: true })], d29.prototype, "_heightModelInfoTask", null), e([y({ readOnly: true })], d29.prototype, "_extentCandidatesTask", null), e([y()], d29.prototype, "_extentTask", null), e([y()], d29.prototype, "_projectExtentTask", void 0), d29 = e([a4("esri.views.support.DefaultsFromMap")], d29);
var f27 = class {
  constructor() {
    this.layers = new Array(), this.preloading = -1, this.updating = false;
  }
};

// node_modules/@arcgis/core/views/View.js
var k8;
var W8 = k8 = class extends a13(n9.EventedMixin(m4(m))) {
  constructor(e78) {
    super(e78), this._userSpatialReference = null, this._cursor = null, this.allLayerViews = new n15({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: A17 }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new i23(), this.analyses = new t46(), this.typeSpecificPreconditionsReady = true, this.layerViews = new V2(), this.magnifier = new p19(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.timeReference = new c4(), this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a38(), this.navigation = new p22(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new p14(this), this.persistableViewModels = new V2(), this._isValid = false, this._readyCycleForced = false, this._currentSpatialReference = null, this.handles.add(l6(() => this.preconditionsReady, (e79) => {
      var _a, _b;
      e79 ? (this._currentSpatialReference = this.spatialReference, k8.views.add(this)) : (this._currentSpatialReference = null, k8.views.remove(this)), this.notifyChange("spatialReference"), !e79 && this.ready ? ((_a = this.toolViewManager) == null ? void 0 : _a.detach(), null != this.analysisViewManager && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown()) : e79 && !this.ready && (this._startup(), null != this.analysisViewManager && this.analysisViewManager.attach(), this.toolViewManager.attach());
    }, U3));
  }
  initialize() {
    this.addResolvingPromise(this.validate().then(() => (this._isValid = true, j4(() => this.ready)))), this.basemapView = new n50({ view: this }), this.layerViewManager = new L8({ view: this, layerViewImporter: { importLayerView: (e78) => this.importLayerView(e78), hasLayerViewModule: (e78) => this.hasLayerViewModule(e78) }, supportsGround: this.supportsGround }), this.toolViewManager = new w18({ view: this }), this._setupSpatialReferenceLogger(), this.handles.add([l6(() => this.initialExtentRequired, (e78) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e78 }, { sync: true, initial: true }), l6(() => this.ready, (e78) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e78, this.defaultsFromMap.userSpatialReference = e78 ? this.spatialReference : this._userSpatialReference);
    }, { sync: true }), l6(() => this._userSpatialReference, (e78) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e78);
    }, { sync: true, initial: true })]);
  }
  _setupSpatialReferenceLogger() {
    let e78 = null;
    this.handles.add([l6(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t88) => {
      var _a;
      const i78 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t88 && !this.spatialReference && i78) {
        if (null != e78)
          return;
        const t89 = e2(() => e78 = e3(e78));
        e78 = d5(async (t90) => {
          try {
            await g(this.spatialReferenceWarningDelay, null, t90);
          } catch {
            return;
          } finally {
            e78 = null;
          }
          s3.getLogger(this).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.handles.add(t89, "spatial-reference-logger-task");
      } else
        this.handles.remove("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    var _a, _b;
    this.destroyed || (k8.views.remove(this), this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = l(this.graphics), this.analyses = l(this.analyses), this.handles.remove("defaultsFromMap"), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), l(this.analysisViewManager), this.toolViewManager = l(this.toolViewManager), this.layerViewManager = l(this.layerViewManager), this.basemapView = l(this.basemapView), (_a = this.groundView) == null ? void 0 : _a.destroy(), (_b = this.layerViews) == null ? void 0 : _b.forEach((e78) => e78.destroy()), this.layerViews.length = 0, this.invalidate(), this._emitter.clear(), this.handles.removeAll(), this.map = l(this.map));
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return s3.getLogger(this).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e78) {
    this.toolViewManager && (this.toolViewManager.activeTool = e78);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e78) {
    this._set("animation", e78);
  }
  get center() {
    return null;
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new d29({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e78) => this.getSpatialReferenceSupport(e78), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e78) {
    this._set("extent", e78);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || _2.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._currentSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  get resolution() {
    return 0;
  }
  set map(e78) {
    e78 !== this._get("map") && ((e78 == null ? void 0 : e78.destroyed) && (s3.getLogger(this).warn("#map", "The provided map is already destroyed", { map: e78 }), e78 = null), _2.isLoadable(e78) && e78.load().catch(() => {
    }), this.constructed && !this.destroyed && (this.forceReadyCycle(), this._currentSpatialReference = null), this._set("map", e78));
  }
  get spatialReference() {
    var _a, _b;
    let e78 = this._userSpatialReference || this._currentSpatialReference || this.getDefaultSpatialReference() || null;
    return e78 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo) && (e78 = e78.clone(), e78.vcsWkid = this.defaultsFromMap.vcsWkid, e78.latestVcsWkid = this.defaultsFromMap.latestVcsWkid), e78;
  }
  set spatialReference(e78) {
    const t88 = !S3(e78, this._get("spatialReference"));
    this._set("_userSpatialReference", e78), t88 && (this._set("spatialReference", e78), this._spatialReferenceChanged(e78));
  }
  _spatialReferenceChanged(e78) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    const e78 = this.toolViewManager ? this.toolViewManager.cursor : null;
    return null != e78 ? e78 : this._cursor || "default";
  }
  set cursor(e78) {
    this._cursor = e78, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  whenLayerView(e78) {
    var _a;
    return ((_a = this.layerViewManager) == null ? void 0 : _a.whenLayerView(e78)) ?? Promise.reject();
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a;
    return (this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) ?? ((_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) ?? null;
  }
  importLayerView(e78) {
    throw new s4("importLayerView() not implemented");
  }
  hasLayerViewModule(e78) {
    return false;
  }
  async validate() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e78) {
    return null != this.getSpatialReferenceSupport({ spatialReference: e78 });
  }
  when(e78, t88) {
    return this.isResolved() && !this.ready && s3.getLogger(this).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e78, t88);
  }
  forceReadyCycle() {
    this.ready && (f6(() => this.destroyed || false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e78) {
    this.toolViewManager.tools.add(e78), this.activeTool = e78;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
W8.views = new V2(), e([y()], W8.prototype, "_userSpatialReference", void 0), e([y()], W8.prototype, "activeTool", null), e([y({ readOnly: true })], W8.prototype, "allLayerViews", void 0), e([y()], W8.prototype, "groundView", void 0), e([y()], W8.prototype, "animation", null), e([y()], W8.prototype, "basemapView", void 0), e([y()], W8.prototype, "center", null), e([y({ readOnly: true })], W8.prototype, "_defaultsFromMapSettings", null), e([y()], W8.prototype, "defaultsFromMap", null), e([y()], W8.prototype, "fatalError", void 0), e([y({ type: M })], W8.prototype, "extent", null), e([y(p12(i23, "graphics"))], W8.prototype, "graphics", void 0), e([y(p12(t46, "analyses"))], W8.prototype, "analyses", void 0), e([y({ readOnly: true, type: v7 })], W8.prototype, "heightModelInfo", null), e([y({ readOnly: true })], W8.prototype, "interacting", null), e([y({ readOnly: true })], W8.prototype, "navigating", null), e([y({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_currentSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], W8.prototype, "preconditionsReady", null), e([y({ readOnly: true })], W8.prototype, "typeSpecificPreconditionsReady", void 0), e([y({ type: V2, readOnly: true })], W8.prototype, "layerViews", void 0), e([y()], W8.prototype, "resolution", null), e([y({ type: p19 })], W8.prototype, "magnifier", void 0), e([y({ value: null, type: j6 })], W8.prototype, "map", null), e([y()], W8.prototype, "padding", void 0), e([y({ readOnly: true })], W8.prototype, "ready", void 0), e([y({ type: f2 })], W8.prototype, "spatialReference", null), e([y()], W8.prototype, "spatialReferenceWarningDelay", void 0), e([y()], W8.prototype, "stationary", null), e([y({ readOnly: true })], W8.prototype, "supportsGround", void 0), e([y({ type: c7 })], W8.prototype, "timeExtent", void 0), e([y({ type: c4, nonNullable: true })], W8.prototype, "timeReference", void 0), e([y()], W8.prototype, "tools", null), e([y()], W8.prototype, "toolViewManager", void 0), e([y({ readOnly: true })], W8.prototype, "type", void 0), e([y({ type: Number })], W8.prototype, "scale", void 0), e([y({ readOnly: true })], W8.prototype, "updating", void 0), e([y({ readOnly: true })], W8.prototype, "initialExtentRequired", void 0), e([y({ readOnly: true })], W8.prototype, "initialExtent", null), e([y()], W8.prototype, "cursor", null), e([y({ readOnly: true })], W8.prototype, "input", void 0), e([y({ type: p22, nonNullable: true })], W8.prototype, "navigation", void 0), e([y()], W8.prototype, "layerViewManager", void 0), e([y()], W8.prototype, "analysisViewManager", void 0), e([y()], W8.prototype, "width", void 0), e([y()], W8.prototype, "height", void 0), e([y({ readOnly: true })], W8.prototype, "resizing", void 0), e([y({ value: null, readOnly: true })], W8.prototype, "size", null), e([y({ readOnly: true })], W8.prototype, "suspended", void 0), e([y({ readOnly: true })], W8.prototype, "viewEvents", void 0), e([y({ readOnly: true })], W8.prototype, "persistableViewModels", void 0), e([y()], W8.prototype, "_isValid", void 0), e([y()], W8.prototype, "_readyCycleForced", void 0), e([y()], W8.prototype, "_currentSpatialReference", void 0), W8 = k8 = e([a4("esri.views.View")], W8);
var z10 = W8;
function A17(e78) {
  return e78.layerViews;
}

// node_modules/@arcgis/core/views/ViewAnimation.js
var n53 = class extends p6 {
  constructor(t88) {
    super(t88), this.state = "running", this.target = null, this._resolver = null;
  }
  initialize() {
    this._resolver = C(), this.addResolvingPromise(this._resolver.promise);
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._resolver) == null ? void 0 : _a.reject(new s4("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._resolver) == null ? void 0 : _a.resolve());
  }
  update(t88, s84) {
    s84 || (s84 = T(t88) ? "waiting-for-target" : "running"), this._set("target", t88), this._set("state", s84);
  }
};
e([y({ readOnly: true })], n53.prototype, "done", null), e([y({ readOnly: true, type: String })], n53.prototype, "state", void 0), e([y()], n53.prototype, "target", void 0), n53 = e([a4("esri.views.ViewAnimation")], n53), function(t88) {
  t88.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(n53 || (n53 = {}));
var a41 = n53;

// node_modules/@arcgis/core/views/3d/layerViewModuleImportUtils.js
var r42 = () => import("./TileLayerView3D-I7PWR5J7.js");
var i41 = () => import("./ElevationLayerView3D-HB3UQZ5V.js");
var a42 = { "base-dynamic": () => import("./BaseDynamicLayerView3D-I7GNIZXP.js"), "base-elevation": i41, "base-tile": r42, "bing-maps": r42, "building-scene": () => import("./BuildingSceneLayerView3D-TLOZE2DK.js"), csv: () => import("./CSVLayerView3D-WATMXTGM.js"), dimension: () => import("./DimensionLayerView3D-JCSIG2RP.js"), elevation: i41, feature: () => import("./FeatureLayerView3D-CGEZHPBL.js"), geojson: () => import("./GeoJSONLayerView3D-WOXQORMB.js"), graphics: () => import("./GraphicsLayerView3D-WUBBHZ4B.js"), group: () => import("./GroupLayerView-BA3CCYUW.js"), imagery: () => import("./ImageryLayerView3D-B564633R.js"), "integrated-mesh": () => import("./IntegratedMeshLayerView3D-IQH5YUHU.js"), "line-of-sight": () => import("./LineOfSightLayerView3D-EQH5VYC5.js"), "map-image": () => import("./MapImageLayerView3D-CMPC6J2B.js"), media: () => import("./MediaLayerView3D-ZZ2KW3EV.js"), "ogc-feature": () => import("./OGCFeatureLayerView3D-APV3KTG3.js"), "open-street-map": r42, "oriented-imagery": () => import("./FeatureLayerView3D-CGEZHPBL.js"), "point-cloud": () => import("./PointCloudLayerView3D-KX2WBDBQ.js"), voxel: () => import("./VoxelLayerView3D-IIF6FEHD.js"), route: () => import("./RouteLayerView3D-3NBAR6RT.js"), scene: (e78) => null == e78.profile || "mesh-pyramids" === e78.profile ? import("./SceneLayerView3D-2B2DL354.js") : import("./SceneLayerGraphicsView3D-ETQDPCQC.js"), stream: () => import("./StreamLayerView3D-MDXMISPU.js"), tile: r42, "imagery-tile": () => import("./ImageryTileLayerView3D-ERMFAD5Y.js"), "vector-tile": () => import("./VectorTileLayerView3D-JBZWKQ2Y.js"), wcs: () => import("./ImageryTileLayerView3D-ERMFAD5Y.js"), "web-tile": r42, wfs: () => import("./WFSLayerView3D-RWOGYFU2.js"), wms: () => import("./WMSLayerView3D-VIABJIN7.js"), wmts: () => import("./WMTSLayerView3D-SGZXOLTP.js"), "geo-rss": null, kml: null, "knowledge-graph": null, "link-chart": null, "knowledge-graph-sublayer": null, "map-notes": null, "subtype-group": null, unknown: null, unsupported: null, video: null };
function s45(r79) {
  const i78 = r79.declaredClass ? r79.declaredClass.slice(r79.declaredClass.lastIndexOf(".") + 1) : "Unknown", a85 = i78.replaceAll(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  return new s4(`${a85}:view-not-supported`, `${i78} is not supported in 3D`);
}
var l30 = { hasLayerViewModule: (e78) => null != a42[e78.type], importLayerView: (e78) => {
  const r79 = a42[e78.type];
  if (null == r79)
    throw s45(e78);
  return r79(e78);
} };

// node_modules/@arcgis/core/views/3d/analysis/AnalysisViewManager3D.js
var y15 = "analyses-owner-handles";
var _14;
var p24;
!function(e78) {
  e78[e78.PENDING = 0] = "PENDING", e78[e78.CREATED = 1] = "CREATED";
}(_14 || (_14 = {})), function(e78) {
  e78[e78.ADDED = 0] = "ADDED", e78[e78.REMOVED = 1] = "REMOVED";
}(p24 || (p24 = {}));
var V7 = class extends d7 {
  constructor(e78) {
    super(e78), this._allAnalysisViews = new V2(), this._creatingViewCount = 0, this._items = /* @__PURE__ */ new Map(), this._scheduledUpdateHandle = null, this._attachedToViewResolver = A18(), this._analysisModules = { "area-measurement": { module: null }, dimension: { module: null }, "direct-line-measurement": { module: null }, "line-of-sight": { module: null }, slice: { module: null } };
  }
  destroy() {
    this._disconnectOwners(), this._attachedToViewResolver.reject(c("AnalysisViewManager was destroyed"));
  }
  attach() {
    this._connectOwners(), this._attachedToViewResolver.resolve();
  }
  detach() {
    this._disconnectOwners(), this._attachedToViewResolver.reject(c()), this._attachedToViewResolver = A18();
  }
  get updating() {
    return !this.view.ready || 0 !== this._creatingViewCount || this._allAnalysisViews.some((e78) => e78.updating);
  }
  get testInfo() {
    return { allAnalysisViews: this._allAnalysisViews };
  }
  async whenAnalysisView(e78) {
    await this._attachedToViewResolver.promise;
    const s84 = this._items.get(e78);
    if (null == s84 || s84.state.list === p24.REMOVED) {
      throw new s4("AnalysisViewManager:no-analysisview-for-analysis", "The analysis has not been added to view.analyses", { analysis: e78 });
    }
    return s84.createAnalysisViewTask.promise;
  }
  _connectOwners() {
    this.handles.add(this._connectAnalysesCollection(this.view.analyses), y15);
  }
  _disconnectOwners() {
    this.handles.remove(y15), this._update(), this._creatingViewCount = 0;
  }
  _connectAnalysesCollection(e78) {
    for (const i78 of e78)
      this._addAnalysis(i78);
    const s84 = e78.on("after-add", (e79) => this._addAnalysis(e79.item)), t88 = e78.on("after-remove", (e79) => this._removeAnalysis(e79.item));
    return { remove: () => {
      s84.remove(), t88.remove();
      for (const s85 of e78)
        this._removeAnalysis(s85);
    } };
  }
  _addAnalysis(e78) {
    const t88 = this._items.get(e78);
    if (null == t88) {
      const t89 = { state: { view: _14.PENDING, list: p24.ADDED }, analysis: e78, view: null, createAnalysisViewTask: null };
      this._items.set(e78, t89), t89.createAnalysisViewTask = d5((e79) => this._createAnalysisViewPromise(t89, e79));
    } else
      t88.state.list = p24.ADDED;
  }
  _removeAnalysis(e78) {
    const s84 = this._items.get(e78);
    null != s84 ? (s84.state.list = p24.REMOVED, this._scheduleUpdate()) : s3.getLogger(this).error("Trying to remove analysis which was not added");
  }
  _scheduleUpdate() {
    null == this._scheduledUpdateHandle && (this._scheduledUpdateHandle = v2(() => this._update()));
  }
  _update() {
    this._scheduledUpdateHandle = o(this._scheduledUpdateHandle), this._items.forEach((e78) => {
      if (e78.state.list === p24.REMOVED)
        switch (this._items.delete(e78.analysis), e78.state.view) {
          case _14.PENDING:
            e78.createAnalysisViewTask = e3(e78.createAnalysisViewTask);
            break;
          case _14.CREATED:
            null != e78.view && (this._allAnalysisViews.remove(e78.view), e78.view = l(e78.view), e78.createAnalysisViewTask = null);
        }
    });
  }
  async _createAnalysisViewPromise(e78, s84) {
    const t88 = e78.analysis, i78 = t88.type, a85 = this._analysisModules[i78];
    if (this._creatingViewCount += 1, null == a85.module)
      try {
        a85.module = await this._loadAnalysisModule(i78);
      } catch (o77) {
        throw this._creatingViewCount -= 1, o77;
      }
    if (a5(s84))
      throw this._creatingViewCount -= 1, c("AnalysisView creation aborted");
    const n103 = new a85.module.default({ analysis: t88, view: this.view });
    try {
      await n103.when();
    } catch (o77) {
      throw this._creatingViewCount -= 1, o77;
    }
    if (a5(s84))
      throw this._creatingViewCount -= 1, n103.destroy(), c("AnalysisView creation aborted");
    return e78.view = n103, e78.state.view = _14.CREATED, this._allAnalysisViews.add(n103), this._creatingViewCount -= 1, n103;
  }
  _loadAnalysisModule(e78) {
    switch (e78) {
      case "area-measurement":
        return import("./AreaMeasurementAnalysisView3D-OWNUYCJB.js");
      case "dimension":
        return import("./DimensionAnalysisView3D-QR6LRH4T.js");
      case "direct-line-measurement":
        return import("./DirectLineMeasurementAnalysisView3D-MBTNRYMT.js");
      case "line-of-sight":
        return import("./LineOfSightAnalysisView3D-WBMASBIE.js");
      case "slice":
        return import("./SliceAnalysisView3D-OSLLBGCD.js");
    }
  }
};
function A18() {
  const e78 = C();
  return e78.promise.catch(() => {
  }), e78;
}
e([y()], V7.prototype, "updating", null), e([y({ constructOnly: true })], V7.prototype, "view", void 0), e([y()], V7.prototype, "_allAnalysisViews", void 0), e([y()], V7.prototype, "_creatingViewCount", void 0), V7 = e([a4("esri.views.3d.analysis.AnalysisViewManager3D")], V7);
var v16 = V7;

// node_modules/@arcgis/core/views/3d/state/Constraints.js
var c29 = class extends m {
  constructor(t88) {
    super(t88), this.collision = new y16(), this.distance = 1 / 0, this.minimumPoiDistance = 4, this.tilt = null;
  }
  get altitude() {
    return this.mode === l14.Local ? null : this._get("altitude") || null;
  }
  set altitude(t88) {
    this.mode !== l14.Local ? this._set("altitude", t88) : s3.getLogger(this).warn("Altitude constraint is ignored in local scenes");
  }
  clampAltitude(t88) {
    return this.altitude ? i3(t88, this.altitude.min, this.altitude.max) : t88;
  }
  clampTilt(t88, e78) {
    if (!this.tilt)
      return e78;
    const i78 = this.tilt(t88);
    return i3(e78, i78.min, i78.max);
  }
  clampDistance(t88) {
    return Math.min(t88, this.distance);
  }
  createDefaultTilt() {
    return this.mode === l14.Local ? this._createDefaultTiltLocal() : this._createDefaultTiltGlobal();
  }
  createConstantMaxTilt(t88) {
    return (e78, i78 = h22) => (i78.min = d30.min, i78.max = t88, i78);
  }
  _createDefaultTiltLocal() {
    const t88 = this.collision.enabled ? U5([[4e3, d30.max], [1e4, M2(88)], [6e6, M2(88)]]) : () => d30.max;
    return (e78, i78 = h22) => (i78.min = d30.min, i78.max = t88(e78), i78);
  }
  _createDefaultTiltGlobal() {
    const t88 = this.collision.enabled ? U5([[4e3, d30.max], [5e4, M2(88)], [6e6, M2(88)], [2e7, d30.min]]) : U5([[3e5, d30.max], [3e6, M2(88)], [6e6, M2(88)], [2e7, d30.min]]);
    return (e78, i78 = h22) => (i78.min = d30.min, i78.max = t88(e78), i78);
  }
};
function p25(t88) {
  return { min: -2e5, max: 4 * t88.radius };
}
e([y()], c29.prototype, "altitude", null), e([y({ readOnly: true })], c29.prototype, "collision", void 0), e([y()], c29.prototype, "distance", void 0), e([y({ readOnly: true })], c29.prototype, "minimumPoiDistance", void 0), e([y()], c29.prototype, "tilt", void 0), e([y({ constructOnly: true })], c29.prototype, "mode", void 0), c29 = e([a4("esri.views.3d.state.Constraints")], c29);
var u21 = p25(s7);
var d30 = { min: M2(0.5), max: M2(179.5) };
var h22 = { min: 0, max: 0 };
var y16 = class extends m {
  constructor() {
    super(...arguments), this.enabled = true, this.elevationMargin = 5;
  }
};
e([y({ type: Boolean })], y16.prototype, "enabled", void 0), e([y({ type: Number })], y16.prototype, "elevationMargin", void 0), y16 = e([a4("esri.views.3d.state.Constraints.CollisionConstraint")], y16);

// node_modules/@arcgis/core/views/3d/constraints/AltitudeConstraint.js
var p26 = class extends m {
  constructor() {
    super(...arguments), this.min = u21.min, this.max = u21.max;
  }
};
e([y({ type: Number })], p26.prototype, "min", void 0), e([y({ type: Number })], p26.prototype, "max", void 0), p26 = e([a4("esri.views.3d.constraints.AltitudeConstraint")], p26);

// node_modules/@arcgis/core/views/3d/constraints/ClipDistanceConstraint.js
var o44 = class extends m {
  constructor() {
    super(...arguments), this.mode = "auto";
  }
  get near() {
    return this._get("near");
  }
  set near(t88) {
    this._set("near", t88), t88 >= this._get("far") && (this.far = t88 + 1e-9), this.mode = "manual";
  }
  castNear(t88) {
    return Math.max(1e-8, t88);
  }
  get far() {
    return this._get("far");
  }
  set far(t88) {
    this._set("far", t88), t88 <= this._get("near") && (this.near = t88 - 1e-9), this.mode = "manual";
  }
  castFar(t88) {
    return Math.max(1e-8, t88);
  }
  autoUpdate(t88, r79) {
    "auto" === this.mode && (this._get("near") !== t88 && this._set("near", t88), this._get("far") !== r79 && this._set("far", r79));
  }
};
e([y({ type: Number, value: 1e-8 })], o44.prototype, "near", null), e([s9("near")], o44.prototype, "castNear", null), e([y({ type: Number, value: 1e-8 })], o44.prototype, "far", null), e([s9("far")], o44.prototype, "castFar", null), e([y({ type: ["auto", "manual"] })], o44.prototype, "mode", void 0), o44 = e([a4("esri.views.3d.constraints.ClipDistanceConstraint")], o44);

// node_modules/@arcgis/core/views/3d/constraints/TiltConstraint.js
var c30 = { min: m2(d30.min), max: m2(d30.max) };
var p27 = class extends m {
  constructor() {
    super(...arguments), this.mode = "auto";
  }
  get max() {
    return this._get("max");
  }
  set max(t88) {
    this._set("max", t88), this.mode = "manual";
  }
  castMax(t88) {
    return i3(t88, c30.min, c30.max);
  }
  autoUpdate(t88) {
    "auto" === this.mode && this._get("max") !== t88 && this._set("max", t88);
  }
};
e([y({ type: ["auto", "manual"] })], p27.prototype, "mode", void 0), e([y({ type: Number, value: c30.max })], p27.prototype, "max", null), e([s9("max")], p27.prototype, "castMax", null), p27 = e([a4("esri.views.3d.constraints.TiltConstraint")], p27);

// node_modules/@arcgis/core/views/3d/constraints/Constraints.js
var c31 = class extends m {
  constructor() {
    super(...arguments), this.tilt = new p27(), this.altitude = new p26(), this.clipDistance = new o44();
  }
};
e([y({ type: p27 })], c31.prototype, "tilt", void 0), e([y({ type: p26 })], c31.prototype, "altitude", void 0), e([y({ type: o44 })], c31.prototype, "clipDistance", void 0), c31 = e([a4("esri.views.3d.constraints.Constraints")], c31);

// node_modules/@arcgis/core/webscene/SunLighting.js
var d31;
var i42 = d31 = class extends l3 {
  constructor(e78) {
    super(e78), this.type = "sun", this.date = null, this.directShadowsEnabled = false, this.displayUTCOffset = null;
  }
  readDate(e78, t88) {
    return null != t88.datetime && new Date(t88.datetime) || null;
  }
  writeDate(e78, t88, r79) {
    t88[r79] = e78.getTime();
  }
  readDirectShadowsEnabled(e78, t88) {
    return !!t88.directShadows;
  }
  writedirectShadowsEnabled(e78, t88, r79) {
    e78 && (t88[r79] = e78);
  }
  writeDisplayUTCOffset(e78, t88) {
    null != e78 && (t88.displayUTCOffset = e78);
  }
  clone() {
    return new d31(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    const e78 = { directShadowsEnabled: this.directShadowsEnabled, displayUTCOffset: null != this.displayUTCOffset ? this.displayUTCOffset : null };
    return null != this.date && (e78.date = new Date(this.date.getTime())), e78;
  }
};
e([y({ readOnly: true, type: ["sun"], json: { write: true } })], i42.prototype, "type", void 0), e([y({ type: Date, json: { type: Number, write: { target: "datetime" } } })], i42.prototype, "date", void 0), e([o3("date", ["datetime"])], i42.prototype, "readDate", null), e([r2("date")], i42.prototype, "writeDate", null), e([y({ type: Boolean, json: { default: false, write: { target: "directShadows" } } })], i42.prototype, "directShadowsEnabled", void 0), e([o3("directShadowsEnabled", ["directShadows"])], i42.prototype, "readDirectShadowsEnabled", null), e([r2("directShadowsEnabled")], i42.prototype, "writedirectShadowsEnabled", null), e([y({ type: Number, json: { write: true } })], i42.prototype, "displayUTCOffset", void 0), e([r2("displayUTCOffset")], i42.prototype, "writeDisplayUTCOffset", null), i42 = d31 = e([a4("esri.webscene.SunLighting")], i42);
var p28 = i42;

// node_modules/@arcgis/core/views/3d/environment/SunLighting.js
var r43;
var l31 = "esri.views.3d.environment.SunLighting";
var c32 = s3.getLogger(l31);
var d32 = r43 = class extends n9.EventedMixin(p28) {
  constructor(e78) {
    super(e78), this.cameraTrackingEnabled = true, this.positionTimezoneInfo = { hours: 0, minutes: 0, seconds: 0, autoUpdated: true };
    const t88 = (/* @__PURE__ */ new Date()).getFullYear(), n103 = /* @__PURE__ */ new Date("March 15, " + t88 + " 12:00:00 UTC");
    this._set("defaultDate", n103), this._set("date", n103);
  }
  get ambientOcclusionEnabled() {
    return t10(c32, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._get("ambientOcclusionEnabled") ?? false;
  }
  set ambientOcclusionEnabled(e78) {
    t10(c32, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._set("ambientOcclusionEnabled", e78);
  }
  get waterReflectionEnabled() {
    return t10(c32, "waterReflectionEnabled", { replacement: "reflections are automatically shown and this property has no effect", version: "4.27" }), this._get("waterReflectionEnabled") ?? false;
  }
  set waterReflectionEnabled(e78) {
    t10(c32, "waterReflectionEnabled", { replacement: "reflections are automatically shown and this property has no effect", version: "4.27" }), this._set("waterReflectionEnabled", e78);
  }
  get defaultDate() {
    return new Date(this._get("defaultDate").getTime());
  }
  static fromWebsceneLighting(e78) {
    return new r43(e78.cloneConstructProperties());
  }
  set defaultDate(e78) {
    const t88 = this._get("date") === this._get("defaultDate");
    e78 = new Date(e78.getTime()), this._set("defaultDate", e78), t88 && this._set("date", e78);
  }
  set date(e78) {
    null != e78 && (this.positionTimezoneInfo.autoUpdated = false, this._set("date", new Date(e78.getTime())));
  }
  autoUpdate(e78, t88) {
    const n103 = r43.calculateTimezoneOffset(this.positionTimezoneInfo);
    this.positionTimezoneInfo.hours = t88.hours, this.positionTimezoneInfo.minutes = t88.minutes, this.positionTimezoneInfo.seconds = t88.seconds;
    let o77 = null;
    null != e78 && (this.positionTimezoneInfo.autoUpdated = true, isNaN(e78.getTime()) ? (o77 = this.defaultDate.getTime(), this._set("date", this.defaultDate)) : (o77 = this.date && this.date.getTime(), this._set("date", new Date(e78.getTime()))));
    const i78 = r43.calculateTimezoneOffset(this.positionTimezoneInfo);
    if (n103 !== i78 && (u22.target = this, u22.timezoneOffset = i78, this.emit("timezone-will-change", u22), u22.target = null), null != e78)
      return isNaN(e78.getTime()) || o77 !== e78.getTime();
  }
  clone() {
    const e78 = this._get("date") === this._get("defaultDate"), t88 = new r43({ ...this.cloneConstructProperties(), defaultDate: this.defaultDate, cameraTrackingEnabled: this.cameraTrackingEnabled });
    return e78 && t88._set("date", t88._get("defaultDate")), t88.positionTimezoneInfo.autoUpdated = this.positionTimezoneInfo.autoUpdated, t88.positionTimezoneInfo.hours = this.positionTimezoneInfo.hours, t88.positionTimezoneInfo.minutes = this.positionTimezoneInfo.minutes, t88.positionTimezoneInfo.seconds = this.positionTimezoneInfo.seconds, t88;
  }
  cloneWithWebsceneLighting(e78) {
    const t88 = this.clone();
    return null != e78.date && (t88.date = e78.date), t88.directShadowsEnabled = e78.directShadowsEnabled, t88.displayUTCOffset = e78.displayUTCOffset, t88;
  }
  cloneNonPersistentConstructProperties() {
    return { cameraTrackingEnabled: this.cameraTrackingEnabled };
  }
};
e([y({ type: Boolean })], d32.prototype, "cameraTrackingEnabled", void 0), e([y({ type: Boolean })], d32.prototype, "ambientOcclusionEnabled", null), e([y({ type: Boolean })], d32.prototype, "waterReflectionEnabled", null), e([y({ type: Date })], d32.prototype, "defaultDate", null), e([y({ type: Date })], d32.prototype, "date", null), d32 = r43 = e([a4(l31)], d32), function(e78) {
  function t88({ hours: e79, minutes: t89, seconds: n103 }) {
    return Math.round(e79 + t89 / 60 + n103 / 3600);
  }
  e78.calculateTimezoneOffset = t88;
}(d32 || (d32 = {}));
var u22 = { target: null, timezoneOffset: 0 };
var m20 = d32;

// node_modules/@arcgis/core/webscene/VirtualLighting.js
var s46;
var c33 = s46 = class extends l3 {
  constructor(r79) {
    super(r79), this.type = "virtual", this.directShadowsEnabled = false;
  }
  clone() {
    return new s46(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    return { directShadowsEnabled: this.directShadowsEnabled };
  }
};
e([y({ readOnly: true, type: ["virtual"], json: { write: true } })], c33.prototype, "type", void 0), e([y({ type: Boolean, json: { default: false, name: "directShadows", write: true } })], c33.prototype, "directShadowsEnabled", void 0), c33 = s46 = e([a4("esri.webscene.VirtualLighting")], c33);
var a43 = c33;

// node_modules/@arcgis/core/views/3d/environment/VirtualLighting.js
var i43;
var c34 = "esri.views.3d.environment.VirtualLighting";
var l32 = s3.getLogger(c34);
var p29 = i43 = class extends n9.EventedMixin(a43) {
  constructor(e78) {
    super(e78), this.cameraTrackingEnabled = true;
  }
  get ambientOcclusionEnabled() {
    return t10(l32, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._get("ambientOcclusionEnabled") ?? false;
  }
  set ambientOcclusionEnabled(e78) {
    t10(l32, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._set("ambientOcclusionEnabled", e78);
  }
  get waterReflectionEnabled() {
    return t10(l32, "waterReflectionEnabled", { replacement: "water reflections are automatically shown and this property has no effect", version: "4.27" }), this._get("waterReflectionEnabled") ?? false;
  }
  set waterReflectionEnabled(e78) {
    t10(l32, "waterReflectionEnabled", { replacement: "water reflections are automatically shown and this property has no effect", version: "4.27" }), this._set("waterReflectionEnabled", e78);
  }
  clone() {
    return new i43({ ...this.cloneConstructProperties(), cameraTrackingEnabled: this.cameraTrackingEnabled });
  }
  static fromWebsceneLighting(e78) {
    return new i43(e78.cloneConstructProperties());
  }
  cloneWithWebsceneLighting(e78) {
    const t88 = this.clone();
    return t88.directShadowsEnabled = e78.directShadowsEnabled, t88;
  }
  cloneNonPersistentConstructProperties() {
    return { cameraTrackingEnabled: this.cameraTrackingEnabled };
  }
};
e([y({ type: Boolean })], p29.prototype, "ambientOcclusionEnabled", null), e([y({ type: Boolean })], p29.prototype, "waterReflectionEnabled", null), e([y({ type: Boolean })], p29.prototype, "cameraTrackingEnabled", void 0), p29 = i43 = e([a4(c34)], p29);
var m21 = p29;

// node_modules/@arcgis/core/views/3d/environment/lightingUtils.js
var i44 = { key: "type", defaultKeyValue: "sun", base: null, typeMap: { sun: m20, virtual: m21 } };

// node_modules/@arcgis/core/views/3d/environment/SceneViewAtmosphere.js
var t47;
var i45 = t47 = class extends m {
  set quality(r79) {
    ["low", "high"].includes(r79) && this._set("quality", r79);
  }
  clone() {
    return new t47({ quality: this.quality });
  }
};
e([y({ type: ["low", "high"], value: "low" })], i45.prototype, "quality", null), i45 = t47 = e([a4("esri.views.3d.environment.SceneViewAtmosphere")], i45);

// node_modules/@arcgis/core/views/3d/environment/SunnyWeather.js
var p30;
var c35 = p30 = class extends l3 {
  constructor(r79) {
    super(r79), this.type = "sunny", this.cloudCover = 0.5;
  }
  clone() {
    return new p30({ cloudCover: this.cloudCover });
  }
};
e([o8({ sunny: "sunny" })], c35.prototype, "type", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], c35.prototype, "cloudCover", void 0), c35 = p30 = e([a4("esri.views.3d.environment.SunnyWeather")], c35);
var n54 = c35;

// node_modules/@arcgis/core/views/3d/environment/CloudyWeather.js
var c36;
var p31 = c36 = class extends l3 {
  constructor(o77) {
    super(o77), this.type = "cloudy", this.cloudCover = 0.5;
  }
  clone() {
    return new c36({ cloudCover: this.cloudCover });
  }
};
e([o8({ cloudy: "cloudy" })], p31.prototype, "type", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p31.prototype, "cloudCover", void 0), p31 = c36 = e([a4("esri.views.3d.environment.CloudyWeather")], p31);
var u23 = p31;

// node_modules/@arcgis/core/views/3d/environment/FoggyWeather.js
var p32;
var c37 = p32 = class extends l3 {
  constructor(r79) {
    super(r79), this.type = "foggy", this.fogStrength = 0.5;
  }
  clone() {
    return new p32({ fogStrength: this.fogStrength });
  }
};
e([o8({ foggy: "foggy" })], c37.prototype, "type", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], c37.prototype, "fogStrength", void 0), c37 = p32 = e([a4("esri.views.3d.environment.FoggyWeather")], c37);
var n55 = c37;

// node_modules/@arcgis/core/views/3d/environment/RainyWeather.js
var i46;
var p33 = i46 = class extends l3 {
  constructor(r79) {
    super(r79), this.type = "rainy", this.cloudCover = 0.5, this.precipitation = 0.5;
  }
  clone() {
    return new i46({ cloudCover: this.cloudCover, precipitation: this.precipitation });
  }
};
e([o8({ rainy: "rainy" })], p33.prototype, "type", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p33.prototype, "cloudCover", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p33.prototype, "precipitation", void 0), p33 = i46 = e([a4("esri.views.3d.environment.RainyWeather")], p33);
var c38 = p33;

// node_modules/@arcgis/core/views/3d/environment/SnowyWeather.js
var i47;
var p34 = i47 = class extends l3 {
  constructor(o77) {
    super(o77), this.type = "snowy", this.cloudCover = 0.5, this.precipitation = 0.5, this.snowCover = "disabled";
  }
  clone() {
    return new i47({ cloudCover: this.cloudCover, precipitation: this.precipitation, snowCover: this.snowCover });
  }
};
e([o8({ snowy: "snowy" })], p34.prototype, "type", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p34.prototype, "cloudCover", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p34.prototype, "precipitation", void 0), e([y({ type: ["enabled", "disabled"], nonNullable: true, json: { write: true } })], p34.prototype, "snowCover", void 0), p34 = i47 = e([a4("esri.views.3d.environment.SnowyWeather")], p34);
var n56 = p34;

// node_modules/@arcgis/core/views/3d/environment/weather.js
var n57 = { key: "type", base: n54, typeMap: { sunny: n54, cloudy: u23, rainy: c38, snowy: n56, foggy: n55 } };
var a44 = Object.keys(n57.typeMap);
function s47(e78, r79) {
  return !!a44.includes(e78) || (r79.error(`"${e78}" is not a valid weather type`), false);
}
var p35 = 1e4;

// node_modules/@arcgis/core/webscene/lightingTypes.js
var i48 = { key: "type", defaultKeyValue: "sun", base: null, typeMap: { sun: p28, virtual: a43 } };

// node_modules/@arcgis/core/webscene/background/Background.js
var t48 = class extends l3 {
  constructor(r79) {
    super(r79);
  }
  clone() {
  }
};
e([y({ readOnly: true, json: { read: false } })], t48.prototype, "type", void 0), t48 = e([a4("esri.webscene.background.Background")], t48);
var c39 = t48;

// node_modules/@arcgis/core/webscene/background/ColorBackground.js
var l33;
var a45 = { ...p8, nonNullable: true };
var i49 = l33 = class extends c39 {
  constructor(o77) {
    super(o77), this.type = "color", this.color = new h7([0, 0, 0, 1]);
  }
  clone() {
    return new l33(this.cloneProperties());
  }
  cloneProperties() {
    return { color: this.color.clone() };
  }
};
e([o8({ color: "color" }, { readOnly: true })], i49.prototype, "type", void 0), e([y(a45)], i49.prototype, "color", void 0), i49 = l33 = e([a4("esri.webscene.background.ColorBackground")], i49);
var n58 = i49;

// node_modules/@arcgis/core/webscene/background/utils.js
var o45 = { base: c39, key: "type", typeMap: { color: n58 } };
function t49(e78) {
  return (r79, o77, t88) => {
    if (!r79)
      return r79;
    for (const n103 in e78.typeMap)
      if (r79.type === n103) {
        const o78 = new e78.typeMap[n103]();
        return o78.read(r79, t88), o78;
      }
  };
}
var n59 = { types: o45, json: { read: t49(o45), write: { overridePolicy: (e78, r79, o77) => ({ enabled: !o77 || !o77.isPresentation }) } } };

// node_modules/@arcgis/core/webscene/Environment.js
var g17;
var u24 = "esri.webscene.Environment";
var d33 = s3.getLogger(u24);
var b5 = (e78, t88, o77) => ({ enabled: !o77 || !o77.isPresentation });
var y17 = g17 = class extends l3 {
  constructor(e78) {
    super(e78), this.lighting = new p28(), this.background = null, this.atmosphereEnabled = true, this.starsEnabled = true;
  }
  set weather(e78) {
    s47(e78 == null ? void 0 : e78.type, d33) && this._set("weather", e78);
  }
  clone() {
    return new g17(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    return { lighting: this.lighting && "virtual" === this.lighting.type ? a43.prototype.clone.call(this.lighting) : p28.prototype.clone.call(this.lighting), background: a2(this.background), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, weather: this.weather.clone() };
  }
};
e([y({ types: i48, nonNullable: true, json: { write: true } })], y17.prototype, "lighting", void 0), e([y(n59)], y17.prototype, "background", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: { overridePolicy: b5 } } })], y17.prototype, "atmosphereEnabled", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: { overridePolicy: b5 } } })], y17.prototype, "starsEnabled", void 0), e([y({ types: n57, nonNullable: true, json: { write: true }, value: new n54() })], y17.prototype, "weather", null), y17 = g17 = e([a4(u24)], y17);
var j10 = y17;

// node_modules/@arcgis/core/views/3d/environment/SceneViewEnvironment.js
var u25;
var b6 = u25 = class extends j10 {
  constructor(t88) {
    super(t88), this.atmosphere = new i45(), this.lighting = new m20(), this.cachedCameraTrackingEnabled = null;
  }
  static fromWebsceneEnvironment(t88) {
    const i78 = t88.cloneConstructProperties();
    return new u25({ ...i78, lighting: i78.lighting ? "virtual" === i78.lighting.type ? m21.fromWebsceneLighting(i78.lighting) : m20.fromWebsceneLighting(i78.lighting) : void 0 });
  }
  castLighting(t88) {
    return this._convertLighting(t88);
  }
  applyLighting(t88) {
    this.lighting = this._convertLighting(t88);
  }
  _convertLighting(t88) {
    var _a, _b;
    return t88 ? t88 instanceof m20 || t88 instanceof m21 ? t88 : t88 instanceof p28 ? this.lighting && "virtual" !== this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t88) : new m20({ ...t88.cloneConstructProperties(), ...(_a = this.lighting) == null ? void 0 : _a.cloneNonPersistentConstructProperties() }) : t88 instanceof a43 ? this.lighting && "virtual" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t88) : new m21({ ...t88.cloneConstructProperties(), ...(_b = this.lighting) == null ? void 0 : _b.cloneNonPersistentConstructProperties() }) : S(i44, t88) : new m20();
  }
  clone() {
    return new u25({ lighting: this.lighting.clone(), atmosphere: this.atmosphere.clone(), weather: this.weather.clone(), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, background: a2(this.background) });
  }
  cloneWithWebsceneEnvironment(t88) {
    return new u25({ atmosphere: this.atmosphere.clone(), weather: this.weather.clone(), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, background: a2(this.background), ...t88.cloneConstructProperties(), lighting: this._getLighting(t88) });
  }
  _getLighting(t88) {
    switch (t88.lighting.type) {
      case "sun":
        return this.lighting && "sun" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t88.lighting) : m20.fromWebsceneLighting(t88.lighting);
      case "virtual":
        return this.lighting && "virtual" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t88.lighting) : m21.fromWebsceneLighting(t88.lighting);
      default:
        return n18(t88.lighting), m20.fromWebsceneLighting(t88.lighting);
    }
  }
};
e([y({ type: i45, json: { read: false }, nonNullable: true })], b6.prototype, "atmosphere", void 0), e([y({ nonNullable: true })], b6.prototype, "lighting", void 0), e([s9("lighting")], b6.prototype, "castLighting", null), b6 = u25 = e([a4("esri.views.3d.environment.SceneViewEnvironment")], b6);
var f28 = b6;

// node_modules/@arcgis/core/views/3d/environment/AtmosphereType.js
var a46;
!function(a85) {
  a85[a85.Realistic = 0] = "Realistic", a85[a85.Local = 1] = "Local", a85[a85.Mars = 2] = "Mars", a85[a85.None = 3] = "None";
}(a46 || (a46 = {}));

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphereTechnique.js
var f29 = class extends n29 {
  constructor() {
    super(...arguments), this.heightParameters = n19(), this.radii = n20(), this.innerFadeDistance = 0, this.altitudeFade = 0, this.hazeStrength = 1, this.renderScale = n20(), this.backgroundColor = n7();
  }
};
var p36 = class _p extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.reduced ? W4({ blending: s27(R5.ONE, R5.ZERO), depthTest: { func: I4.ALWAYS }, colorWrite: _7 }) : this.configuration.haze ? W4({ blending: l15(R5.ONE, R5.ZERO, R5.ONE_MINUS_SRC_COLOR, R5.ONE), colorWrite: _7 }) : W4({ blending: s27(R5.SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
p36.shader = new t24(z9, () => import("./ChapmanAtmosphere.glsl-6VT54VKB.js"));

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphereTechniqueConfiguration.js
var s48 = class extends t26 {
  constructor() {
    super(...arguments), this.haze = false, this.reduced = false;
  }
};
e([r29()], s48.prototype, "haze", void 0), e([r29()], s48.prototype, "reduced", void 0);

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphere.js
var q6 = class {
  constructor(t88, s84) {
    this._view = t88, this.type = a46.Realistic, this._handles = new t3(), this._passParameters = new f29(), this._rootTileElevationMin = NaN, this._lowerBoundEarthRadius = s7.radius, this._fadeHaze = 0, this._tmpScale = n20(), this._updateRadius(s7.radius);
    const i78 = s84.renderContext.rctx;
    this._updateRootTileElevationBounds(), this._handles.add([l6(() => {
      var _a, _b;
      return (_b = (_a = this._view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.rootTileElevationBounds;
    }, () => {
      var _a;
      return ((_a = this._view) == null ? void 0 : _a.basemapTerrain) ? this._updateRootTileElevationBounds() : null;
    }), l6(() => {
      var _a, _b;
      return (_b = (_a = this._view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.visibleElevationBounds;
    }, () => {
      var _a;
      return ((_a = this._view) == null ? void 0 : _a.basemapTerrain) ? this._updateVisibleElevationBounds() : null;
    })]);
    const a85 = new s48();
    a85.haze = false, this._atmosphereTechnique = s84.techniqueRepository.acquire(p36, a85), a85.haze = true, this._atmosphereHazeTechnique = s84.techniqueRepository.acquire(p36, a85), a85.reduced = true, a85.haze = false, this._atmosphereReducedTechnique = s84.techniqueRepository.acquire(p36, a85), a85.haze = true, this._atmosphereHazeReducedTechnique = s84.techniqueRepository.acquire(p36, a85), this._vao = f15(i78, A10);
  }
  destroy() {
    this._handles.destroy(), this._atmosphereTechnique.release(), this._atmosphereHazeTechnique.release(), this._atmosphereReducedTechnique.release(), this._atmosphereHazeReducedTechnique.release(), this._vao.dispose();
  }
  render(e78, t88) {
    this._render(e78, t88 ? this._atmosphereTechnique : this._atmosphereReducedTechnique, e78.offscreenRenderingHelper.depthTexture, t88, false);
  }
  renderHaze(e78, t88, s84) {
    this._fadeHaze = t88, this._render(e78, s84 ? this._atmosphereHazeTechnique : this._atmosphereHazeReducedTechnique, e78.offscreenRenderingHelper.linearDepthTexture, s84, true);
  }
  _render(e78, t88, i78, r79, o77) {
    if (null == i78)
      return;
    const d63 = e78.offscreenRenderingHelper;
    this._update(e78.bindParameters.camera), this._passParameters.depthTexture = i78;
    const u58 = d63.background.color;
    o4(this._passParameters.backgroundColor, u58[0] * u58[3], u58[1] * u58[3], u58[2] * u58[3]);
    const p70 = e78.rctx.bindTechnique(t88, this._passParameters, e78.bindParameters);
    if (r79)
      d63.renderDepthDetached(() => this._renderCommon(p70, e78));
    else {
      const t89 = e78.rctx.getViewport(), r80 = s10(e78.bindParameters.camera.eye) - s7.radius;
      let n103;
      if (r80 < n46) {
        const e79 = Math.min(1, Math.max(0, r80 / n46));
        n103 = o77 ? s12(0.4, 0.5, e79) : s12(0.2, 0.3, e79);
      } else {
        const e79 = Math.min(1, Math.max(0, (r80 - n46) / (15 * n46)));
        n103 = o77 ? s12(0.5, 1, e79) : s12(0.3, 0.6, e79);
      }
      const u59 = Math.floor(n103 * e78.bindParameters.camera.fullViewport[2]), c75 = Math.floor(n103 * e78.bindParameters.camera.fullViewport[3]);
      e78.rctx.setViewport(0, 0, u59, c75), d63.renderToTargets(() => this._renderCommon(p70, e78), d63.tmpColor, d63.tmpDepth, [0, 0, 0, 1], false, false), e78.rctx.setViewport(t89.x, t89.y, t89.width, t89.height), r14(this._tmpScale, u59 / e78.bindParameters.camera.fullViewport[2], c75 / e78.bindParameters.camera.fullViewport[3]), d63.compositeAtmosphereToMain(e78.bindParameters, o77, i78, this._tmpScale);
    }
  }
  _renderCommon(e78, t88) {
    null != this._vao && (t88.rctx.bindVAO(this._vao), e78.assertCompatibleVertexAttributeLocations(this._vao), t88.rctx.drawArrays(E5.TRIANGLE_STRIP, 0, 4));
  }
  _adjustRadiusForTesselation(e78) {
    return e78 * Math.cos(Math.PI / 16 / 16);
  }
  _updateRootTileElevationBounds() {
    const e78 = this._view.basemapTerrain.rootTileElevationBounds.min;
    e78 !== this._rootTileElevationMin && (this._rootTileElevationMin = e78, this._lowerBoundEarthRadius = s7.radius, this._updateVisibleElevationBounds());
  }
  _updateVisibleElevationBounds() {
    const e78 = this._adjustRadiusForTesselation(s7.radius + this._view.basemapTerrain.visibleElevationBounds.min);
    e78 < this._lowerBoundEarthRadius && this._updateRadius(e78);
  }
  _updateRadius(e78) {
    this._lowerBoundEarthRadius = e78, r14(this._passParameters.radii, e78, e78 + n46), this._passParameters.innerFadeDistance = 2 * Math.sqrt((2 * e78 - o37) * o37);
  }
  _update(e78) {
    if (!e78)
      return;
    const r79 = v3(e78.eye), a85 = Math.sqrt(r79), o77 = r79 - this._passParameters.radii[1] * this._passParameters.radii[1], n103 = i3((a85 - this._passParameters.radii[0]) / n46, 0, 1);
    r8(this._passParameters.heightParameters, a85, r79, o77, n103), this._passParameters.altitudeFade = e31(a85 - this._lowerBoundEarthRadius), this._passParameters.hazeStrength = s12(s12(0.6, 1, k(9500, 10500, a85 - s7.radius)), 1, this._fadeHaze);
  }
  static isSupported(e78) {
    return e78.renderContext.rctx.capabilities.depthTexture;
  }
};

// node_modules/@arcgis/core/views/3d/environment/CloudsCompositionTechnique.js
var u26 = class _u extends e25 {
  constructor(e78) {
    super(e78, new t26(), () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _u.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.ONE, R5.ZERO, R5.SRC_ALPHA, R5.ONE), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
u26.shader = new t24(f20, () => import("./CloudsComposition.glsl-KYWLU3S7.js"));

// node_modules/@arcgis/core/views/3d/environment/CloudsComposition.js
var u27 = class extends m {
  constructor(e78) {
    super(e78), this._technique = new u26(e78), this._vao = f15(e78.rctx);
  }
  destroy() {
    this._technique = f(this._technique), this._vao = t(this._vao);
  }
  render(e78) {
    const o77 = e78.bindParameters.cloudsFade;
    if (null == this._vao || null == o77.data)
      return;
    if (!this._technique.compiled)
      return void this.requestRender();
    const r79 = e78.rctx.bindTechnique(this._technique, m22, e78.bindParameters);
    e78.rctx.bindVAO(this._vao), r79.assertCompatibleVertexAttributeLocations(this._vao), e78.rctx.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
};
e([y({ constructOnly: true })], u27.prototype, "rctx", void 0), e([y({ constructOnly: true })], u27.prototype, "viewingMode", void 0), e([y({ constructOnly: true })], u27.prototype, "planetRadius", void 0), e([y({ constructOnly: true })], u27.prototype, "requestRender", void 0), u27 = e([a4("esri.views.3d.environment.CloudsComposition")], u27);
var m22 = new n29();

// node_modules/@arcgis/core/views/3d/environment/CloudsTechnique.js
var d34 = class _d extends e25 {
  constructor(e78, r79) {
    super(e78, r79, () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: s27(R5.CONSTANT_COLOR, R5.ONE_MINUS_CONSTANT_COLOR, T3.ADD, this.configuration.writeTextureChannels === E13.RG ? [1, 1, 0, 0] : [0, 0, 1, 1]), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
d34.shader = new t24(b4, () => import("./Clouds.glsl-6Q4DY27F.js"));

// node_modules/@arcgis/core/views/3d/environment/NoiseTextureAtlasTechnique.js
var d35 = class _d extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: this.configuration.mode === t40.Full ? s27(R5.ONE, R5.ZERO) : l15(R5.ZERO, R5.ONE, R5.ONE, R5.ZERO), depthTest: { func: I4.ALWAYS }, colorWrite: _7 });
  }
};
d35.shader = new t24(v12, () => import("./NoiseTextureAtlas.glsl-UZZR3BIJ.js"));

// node_modules/@arcgis/core/views/3d/environment/NoiseTextureAtlas.js
var f30 = class extends m {
  constructor(e78) {
    super(e78), this._needsRender = true, this._passParameters = new s38(), this._frameBuffer = new x11(e78.context.renderContext.rctx, new e23(t39)), this._vao = f15(e78.context.renderContext.rctx);
  }
  get _techniqueRepository() {
    return this.context.techniqueRepository;
  }
  get textureAtlas() {
    return null != this._texture ? null != this._weatherMapTechnique && this._weatherMapTechnique.compiled && this._needsRender && (this._texture = this._render(t40.WeatherMap)) : null != this._fullTechnique && this._fullTechnique.compiled && (this._texture = this._render(t40.Full)), this._texture;
  }
  _setDirty() {
    this._needsRender = true;
  }
  updateWeatherMap(e78) {
    this._passParameters.weatherTile[0] === e78[0] && this._passParameters.weatherTile[1] === e78[1] || (a14(this._passParameters.weatherTile, e78), this._setDirty());
  }
  destroy() {
    this._fullTechniqueCached = f(this._fullTechniqueCached), this._weatherMapTechniqueCached = f(this._weatherMapTechniqueCached), this._frameBuffer = t(this._frameBuffer), this._vao = t(this._vao);
  }
  get _fullTechnique() {
    if (null == this._fullTechniqueCached) {
      const e78 = new s37();
      e78.mode = t40.Full, this._fullTechniqueCached = this._techniqueRepository.acquire(d35, e78);
    }
    return this._fullTechniqueCached;
  }
  get _weatherMapTechnique() {
    if (null == this._weatherMapTechniqueCached) {
      const e78 = new s37();
      e78.mode = t40.WeatherMap, this._weatherMapTechniqueCached = this._techniqueRepository.acquire(d35, e78);
    }
    return this._weatherMapTechniqueCached;
  }
  _render(e78) {
    if (null == this._vao || null == this._frameBuffer)
      return null;
    const t88 = e78 === t40.Full ? this._fullTechnique : this._weatherMapTechnique, r79 = this.context.renderContext.rctx, s84 = r79.getViewport();
    r79.setViewport(0, 0, t39, t39), r79.bindFramebuffer(this._frameBuffer);
    const i78 = r79.bindTechnique(t88, this._passParameters, null);
    return r79.bindVAO(this._vao), i78.assertCompatibleVertexAttributeLocations(this._vao), r79.gl.drawArrays(r79.gl.TRIANGLE_STRIP, 0, 4), r79.setViewport(s84.x, s84.y, s84.width, s84.height), this._needsRender = false, this._frameBuffer.colorTexture;
  }
};
e([y({ constructOnly: true })], f30.prototype, "context", void 0), e([y({ readOnly: true })], f30.prototype, "_techniqueRepository", null), f30 = e([a4("esri.views.3d.environment.NoiseTextureAtlas")], f30);

// node_modules/@arcgis/core/views/3d/environment/CloudsGenerator.js
var B5 = class extends m {
  constructor(e78) {
    super(e78), this._handles = new t3(), this._techniques = new Array(), this._techniqueConfiguration = new i31(), this._bindParameters = new o31(null, null, null), this._passParameters = new w13(), this._drawParameters = new S11(), this._weatherTile = n20(), this._weatherTileCount = 128, this._faceIndex = 0, this._tileIndex = 0, this.coverage = s12(e32.default.coverage[0], e32.default.coverage[1], 0.5), this.density = s12(e32.default.density[0], e32.default.density[1], 0.5), this.absorption = s12(e32.default.absorption[0], e32.default.absorption[1], 0.5), this.cloudSize = s12(e32.default.cloudSize[0], e32.default.cloudSize[1], 0.5), this.detailSize = s12(e32.default.detailSize[0], e32.default.detailSize[1], 0.5), this.smoothness = s12(e32.default.smoothness[0], e32.default.smoothness[1], 0.5), this.cloudHeight = s12(e32.default.cloudHeight[0], e32.default.cloudHeight[1], 0.5), this.raymarchingSteps = e32.default.raymarchingSteps, this._viewMatrix = e17(), this._dirty = false, this.running = false, this._vao = f15(e78.context.renderContext.rctx);
  }
  _getTechnique(e78) {
    const t88 = 1 - this.context.renderContext.bindParameters.cloudsFade.readChannels, s84 = t88 === E13.RG ? 2 * e78 : 2 * e78 + 1, i78 = this._techniques[s84];
    return i78 || (this._techniqueConfiguration.writeTextureChannels = t88, this._techniqueConfiguration.steps = e78, this._techniques[s84] = new d34({ rctx: this.context.renderContext.rctx, viewingMode: this.view.state.viewingMode }, this._techniqueConfiguration), this._techniques[s84]);
  }
  updateWeatherTile() {
    const e78 = this.view.camera.position.latitude, t88 = this.view.camera.position.longitude;
    if (null == e78 || null == t88)
      return;
    r14(this._weatherTile, (e78 + 90) / 180, (t88 + 180) / 360);
    const s84 = Math.floor(this._weatherTileCount * Math.abs(2 * this._weatherTile[0] - 1));
    this._weatherTile[0] = Math.floor(2 * this._weatherTileCount * this._weatherTile[0]), this._weatherTile[1] = Math.floor(4 * (this._weatherTileCount - s84) * this._weatherTile[1]);
    let i78 = 0, r79 = 0;
    if (null != this.view.environment && "virtual" !== this.view.environment.lighting.type && null != this.view.environment.lighting.date) {
      const e79 = new Date(this.view.environment.lighting.date);
      e79.setUTCHours(this.view.environment.lighting.date.getUTCHours() + (this.view.environment.lighting.displayUTCOffset ?? 0)), i78 = 31 * e79.getUTCMonth() + e79.getUTCDate(), r79 = e79.getUTCFullYear();
    }
    this._weatherTile[0] = (this._weatherTile[0] + i78) % (2 * this._weatherTileCount), this._weatherTile[1] = (this._weatherTile[1] + r79 % 100) % (4 * this._weatherTileCount), k4(this._passParameters.weatherTile, this._weatherTile) || this.setDirty();
  }
  initialize() {
    const e78 = A2(this.view.spatialReference);
    this._passParameters.cloudRadius = 0.5 * e78.radius, this.setDirty(), this.updateWeatherTile(), this._handles.add([this.view.resourceController.scheduler.registerTask(I3.CLOUDS_GENERATOR, this), l6(() => [this.coverage, this.density, this.absorption, this.cloudSize, this.detailSize, this.smoothness, this.cloudHeight, this.raymarchingSteps], () => this.setDirty(), h3)]);
  }
  destroy() {
    this._handles.destroy(), this._techniques.forEach((e78) => f(e78)), this._frameBufferCube = t(this._frameBufferCube), this._techniques.length = 0, this._vao.dispose(), this._passParameters.noiseTexture = l(this._passParameters.noiseTexture);
  }
  get _tilesPerFace() {
    switch (this._techniqueConfiguration.steps) {
      case s36.SIXTEEN:
        return 1;
      case s36.HUNDRED:
        return 4;
      case s36.COUNT:
      case s36.TWOHUNDRED:
        return 8;
    }
  }
  _ensureNoiseTexture() {
    if (null != this._passParameters.noiseTexture)
      this._passParameters.noiseTexture.updateWeatherMap(this._passParameters.weatherTile);
    else {
      const e78 = this.context;
      this._passParameters.noiseTexture = new f30({ context: e78 }), this._passParameters.noiseTexture.updateWeatherMap(this._passParameters.weatherTile);
    }
    return null != this._passParameters.noiseTexture.textureAtlas;
  }
  _ensureFrameBufferCube(e78) {
    if (null == this._frameBufferCube) {
      const t88 = new e23(e78);
      t88.target = M4.TEXTURE_CUBE_MAP, t88.wrapMode = D2.CLAMP_TO_EDGE, this._frameBufferCube = new x11(this.context.renderContext.rctx, t88);
    }
    return this._frameBufferCube;
  }
  get cubeMap() {
    return this._frameBufferCube;
  }
  destroyFrameBufferCube() {
    this._frameBufferCube = t(this._frameBufferCube);
  }
  applyPreset(e78, t88) {
    const s84 = e78.median, r79 = (e79) => {
      const r80 = s12(e79[0], e79[1], s84);
      return t88 < 0.5 ? s12(e79[0], r80, 2 * t88) : s12(r80, e79[1], 2 * (t88 - 0.5));
    };
    this.coverage = r79(e78.coverage), this.density = r79(e78.density), this.absorption = r79(e78.absorption), this.cloudSize = r79(e78.cloudSize), this.detailSize = r79(e78.detailSize), this.smoothness = r79(e78.smoothness), this.cloudHeight = r79(e78.cloudHeight), this.raymarchingSteps = e78.raymarchingSteps;
  }
  setDirty() {
    this._dirty = this.running = true;
  }
  runTask(e78) {
    0 === this._faceIndex && 0 === this._tileIndex && (this._passParameters.raymarchingSteps = this.raymarchingSteps, this.updateWeatherTile(), a14(this._passParameters.weatherTile, this._weatherTile));
    const t88 = this._getTechnique(this._passParameters.raymarchingSteps);
    if (!t88.compiled)
      return g5.YIELD;
    if (!this.context.renderContext.bindParameters.cloudsFade.isCameraPositionFinal || this.context.renderContext.bindParameters.cloudsFade.isFading || !this._ensureNoiseTexture())
      return g5.YIELD;
    0 === this._faceIndex && 0 === this._tileIndex && (this.context.renderContext.bindParameters.cloudsFade.renderingStage = N5.RENDERING, this._passParameters.absorption = this.absorption, this._passParameters.density = this.density, this._passParameters.cloudSize = this.cloudSize, this._passParameters.detailSize = this.detailSize, this._passParameters.smoothness = this.smoothness, this._passParameters.cloudHeight = this.cloudHeight, this._passParameters.coverage = this.coverage, this._dirty = false);
    const s84 = this.context.renderContext.rctx, i78 = s84.bindTechnique(t88, this._passParameters, this._bindParameters);
    s84.bindVAO(this._vao), i78.assertCompatibleVertexAttributeLocations(this._vao);
    const r79 = s84.getViewport(), a85 = t88.configuration.cubeMapSize, o77 = a85 / this._tilesPerFace, n103 = this._tileIndex * o77;
    s84.setViewport(0, n103, a85, o77);
    const h58 = this._ensureFrameBufferCube(a85);
    s84.bindFramebuffer(h58);
    const u58 = N7[this._faceIndex], l75 = A19[this._faceIndex];
    z3(this._viewMatrix, O10, u58, l75), a15(this._drawParameters.viewMatrix, this._viewMatrix);
    const m55 = M4.TEXTURE_CUBE_MAP_POSITIVE_X + this._faceIndex;
    return h58.setColorTextureTarget(m55), i78.bindDraw(this._drawParameters, this._bindParameters, this._passParameters), s84.gl.drawArrays(s84.gl.TRIANGLE_STRIP, 0, 4), s84.gl.flush(), s84.setViewport(r79.x, r79.y, r79.width, r79.height), this.requestRender(), ++this._tileIndex, 4 === this._faceIndex && this._tileIndex === this._tilesPerFace ? (this.running = this._dirty, this._faceIndex = 0, this._tileIndex = 0, this.context.renderContext.bindParameters.cloudsFade.renderingStage = N5.FINISHED_RENDERING) : this._tileIndex === this._tilesPerFace && (++this._faceIndex, this._tileIndex = 0), e78.madeProgress(), g5.YIELD;
  }
};
e([y({ constructOnly: true })], B5.prototype, "context", void 0), e([y({ constructOnly: true })], B5.prototype, "view", void 0), e([y({ constructOnly: true })], B5.prototype, "requestRender", void 0), e([y()], B5.prototype, "coverage", void 0), e([y()], B5.prototype, "density", void 0), e([y()], B5.prototype, "absorption", void 0), e([y()], B5.prototype, "cloudSize", void 0), e([y()], B5.prototype, "detailSize", void 0), e([y()], B5.prototype, "smoothness", void 0), e([y()], B5.prototype, "cloudHeight", void 0), e([y()], B5.prototype, "raymarchingSteps", void 0), e([y()], B5.prototype, "running", void 0), B5 = e([a4("esri.views.3d.environment.CloudsGenerator")], B5);
var N7 = [r21(1, 0, 0), r21(-1, 0, 0), r21(0, 1, 0), r21(0, -1, 0), r21(0, 0, 1)];
var A19 = [r21(0, 1, 0), r21(0, 1, 0), r21(0, 0, -1), r21(0, 0, 1), r21(0, 1, 0)];
var O10 = a16();

// node_modules/@arcgis/core/views/3d/environment/FogTechnique.js
var m23 = class _m extends e25 {
  constructor(e78) {
    super(e78, new t26(), () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _m.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.SRC_ALPHA, R5.ZERO, R5.ONE_MINUS_SRC_ALPHA, R5.ONE), colorWrite: _7 });
  }
};
m23.shader = new t24(y10, () => import("./Fog.glsl-NY4NAKXN.js"));

// node_modules/@arcgis/core/views/3d/environment/Fog.js
var y18 = 0.95;
var b7 = 1;
var v17 = class extends m {
  constructor(t88) {
    super(t88), this._passParameters = new u15();
    const e78 = t88.context.renderContext.rctx;
    this._vao = f15(e78, A10), this._technique = new m23(t88);
    const s84 = A2(t88.view.spatialReference);
    this._planetRadius = s84.radius, this._atmosphereRadius = s84.radius + n46;
  }
  destroy() {
    this._technique.release(), this._vao.dispose();
  }
  set strength(t88) {
    this._passParameters.fogStrength = t88;
  }
  get strength() {
    return this._passParameters.fogStrength;
  }
  render(t88, e78) {
    if (this._update(t88, e78), this._passParameters.fogAmount <= 0)
      return;
    const s84 = this._technique;
    if (!s84.compiled)
      return void this.context.requestRender();
    const r79 = t88.offscreenRenderingHelper;
    r79.renderDepthDetached(() => {
      this._passParameters.depthTexture = r79.depthTexture;
      const e79 = t88.rctx.bindTechnique(s84, this._passParameters, t88.bindParameters);
      this._renderFog(e79, t88);
    });
  }
  _renderFog(t88, e78) {
    const s84 = e78.rctx;
    s84.bindVAO(this._vao), t88.assertCompatibleVertexAttributeLocations(this._vao), s84.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
  _update(t88, e78) {
    const r79 = t88.bindParameters.camera;
    z2(P9, r79.eye);
    const o77 = Math.max(0, P3(P9, t88.bindParameters.lighting.mainLight.direction)), m55 = e78.color;
    g3(w19, m55, 0.1), A3(this._passParameters.fogColor, w19, m55, o77);
    const h58 = s10(r79.eye), u58 = h58 * h58;
    this._passParameters.atmosphereC = u58 - this._atmosphereRadius * this._atmosphereRadius, this._passParameters.fogAmount = (1 - k(y18 * p35, b7 * p35, Math.abs(h58 - this._planetRadius))) * e78.amount, this._passParameters.fogStrength = e78.strength;
  }
  static isSupported(t88) {
    return t88.capabilities.depthTexture;
  }
};
e([y({ constructOnly: true })], v17.prototype, "context", void 0), e([y({ constructOnly: true })], v17.prototype, "view", void 0), e([y({ constructOnly: true })], v17.prototype, "rctx", void 0), e([y({ constructOnly: true })], v17.prototype, "viewingMode", void 0), v17 = e([a4("esri.views.3d.environment.Fog")], v17);
var x15 = class {
  constructor() {
    this.color = n7(), this.strength = 0, this.amount = 0;
  }
};
var P9 = n7();
var w19 = n7();

// node_modules/@arcgis/core/views/3d/environment/SimpleAtmosphereTechnique.js
var h23 = class _h extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _h.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.geometry === r40.Cylinder ? W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), culling: r27, depthTest: { func: I4.LEQUAL }, colorWrite: _7 }) : W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
h23.shader = new t24(h20, () => import("./SimpleAtmosphere.glsl-C46OQKZW.js"));

// node_modules/@arcgis/core/views/3d/environment/resources/SimpleAtmosphereTexture.js
var e33 = new Uint8ClampedArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 16, 0, 0, 16, 16, 0, 0, 16, 16, 0, 0, 16, 16, 0, 0, 16, 15, 0, 0, 17, 15, 0, 0, 17, 15, 0, 0, 17, 15, 0, 0, 17, 14, 0, 0, 18, 14, 0, 0, 18, 14, 0, 0, 18, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 20, 13, 0, 0, 20, 13, 0, 0, 20, 13, 0, 0, 20, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 22, 12, 0, 0, 22, 12, 0, 0, 22, 12, 0, 0, 22, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 26, 10, 0, 0, 26, 10, 0, 0, 26, 10, 0, 0, 26, 9, 0, 0, 27, 9, 0, 0, 27, 9, 0, 0, 27, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 29, 18, 0, 0, 29, 18, 0, 0, 29, 17, 0, 0, 30, 17, 0, 0, 30, 17, 0, 0, 30, 17, 0, 0, 30, 16, 0, 0, 31, 16, 0, 0, 31, 16, 0, 0, 31, 16, 0, 0, 32, 16, 0, 0, 32, 16, 0, 0, 32, 15, 0, 0, 33, 15, 0, 0, 33, 15, 0, 0, 33, 15, 0, 0, 34, 15, 8, 0, 34, 15, 8, 0, 34, 15, 8, 0, 34, 15, 7, 0, 35, 15, 7, 0, 35, 15, 7, 0, 35, 21, 7, 0, 36, 21, 7, 0, 36, 21, 7, 0, 36, 21, 7, 0, 37, 21, 7, 0, 37, 21, 7, 0, 37, 20, 7, 0, 38, 20, 7, 0, 38, 20, 7, 0, 38, 20, 7, 0, 39, 20, 7, 0, 39, 20, 7, 0, 39, 20, 7, 0, 39, 19, 6, 0, 40, 19, 6, 0, 40, 19, 6, 0, 40, 19, 6, 0, 41, 19, 6, 0, 41, 19, 6, 0, 41, 18, 6, 0, 42, 18, 6, 0, 42, 18, 6, 0, 42, 24, 6, 0, 43, 24, 6, 0, 43, 24, 6, 0, 43, 23, 6, 0, 44, 23, 6, 0, 44, 23, 6, 0, 44, 23, 6, 0, 45, 23, 6, 0, 45, 23, 6, 0, 45, 22, 6, 0, 46, 22, 6, 0, 46, 22, 6, 0, 46, 22, 5, 0, 47, 22, 5, 0, 47, 22, 5, 0, 47, 21, 5, 0, 48, 21, 5, 0, 48, 21, 5, 0, 48, 21, 5, 0, 49, 21, 5, 0, 49, 26, 5, 0, 49, 25, 5, 0, 50, 25, 5, 0, 50, 25, 5, 0, 50, 25, 5, 0, 51, 25, 5, 0, 51, 25, 5, 0, 51, 25, 5, 0, 52, 25, 5, 0, 52, 25, 5, 0, 52, 24, 5, 0, 53, 24, 5, 0, 53, 24, 5, 0, 53, 24, 9, 0, 54, 28, 9, 0, 54, 28, 9, 0, 54, 28, 9, 0, 55, 28, 9, 0, 55, 27, 9, 0, 56, 27, 9, 0, 56, 27, 9, 0, 56, 27, 9, 4, 57, 27, 9, 4, 57, 27, 9, 4, 57, 26, 9, 4, 58, 26, 9, 4, 58, 26, 9, 4, 58, 26, 9, 4, 59, 26, 9, 4, 59, 26, 9, 4, 59, 26, 8, 4, 60, 30, 8, 4, 60, 30, 8, 4, 60, 29, 8, 4, 61, 29, 8, 4, 61, 29, 8, 4, 62, 29, 8, 4, 62, 29, 8, 4, 62, 28, 8, 4, 63, 28, 8, 4, 63, 28, 8, 4, 63, 28, 12, 4, 64, 28, 12, 4, 64, 28, 12, 4, 64, 27, 12, 4, 65, 27, 12, 8, 65, 27, 12, 8, 65, 31, 12, 8, 66, 31, 12, 8, 66, 30, 11, 8, 67, 30, 11, 8, 67, 30, 11, 8, 67, 30, 11, 8, 68, 30, 11, 8, 68, 30, 11, 8, 68, 30, 15, 7, 69, 30, 15, 7, 69, 30, 15, 7, 69, 33, 15, 11, 70, 33, 15, 11, 70, 32, 14, 11, 71, 32, 14, 11, 71, 32, 14, 11, 71, 32, 18, 14, 72, 32, 18, 14, 72, 32, 18, 14, 72, 31, 17, 14, 73, 35, 17, 14, 73, 34, 17, 17, 74, 34, 21, 17, 74, 34, 21, 17, 74, 34, 20, 17, 75, 34, 20, 20, 75, 34, 20, 20, 75, 34, 23, 20, 76, 34, 23, 20, 76, 36, 23, 23, 77, 36, 23, 23, 77, 36, 23, 23, 77, 36, 23, 23, 78, 36, 26, 26, 78, 36, 26, 26, 78, 36, 26, 26, 79, 36, 26, 29, 79, 38, 26, 29, 80, 38, 29, 29, 80, 38, 29, 29, 80, 38, 28, 31, 81, 38, 28, 31, 81, 38, 31, 31, 81, 37, 31, 34, 82, 37, 31, 34, 82, 37, 31, 37, 83, 40, 34, 37, 83, 40, 34, 37, 83, 39, 33, 39, 84, 39, 33, 39, 84, 39, 36, 42, 84, 39, 36, 42, 85, 39, 36, 42, 85, 39, 36, 42, 85, 39, 39, 44, 86, 39, 39, 44, 86, 41, 38, 47, 87, 41, 41, 47, 87, 41, 41, 50, 87, 41, 41, 49, 88, 41, 41, 52, 88, 40, 43, 52, 89, 43, 43, 52, 89, 43, 43, 54, 89, 42, 45, 54, 90, 42, 45, 57, 90, 42, 45, 57, 90, 42, 45, 59, 91, 42, 48, 59, 91, 44, 47, 61, 92, 44, 47, 61, 92, 44, 50, 61, 92, 44, 49, 63, 93, 44, 49, 63, 93, 44, 52, 66, 93, 43, 52, 65, 94, 46, 54, 68, 94, 46, 54, 70, 95, 46, 54, 70, 95, 46, 54, 70, 95, 45, 56, 72, 96, 45, 56, 72, 96, 45, 58, 74, 97, 47, 58, 76, 97, 47, 58, 76, 97, 47, 60, 78, 98, 47, 60, 78, 98, 47, 60, 81, 98, 49, 62, 80, 99, 49, 62, 82, 99, 48, 61, 84, 100, 48, 64, 84, 100, 48, 64, 84, 100, 50, 63, 86, 101, 50, 66, 86, 101, 50, 66, 88, 101, 50, 65, 90, 102, 52, 67, 89, 103, 51, 69, 91, 104, 51, 68, 92, 105, 52, 69, 93, 107, 52, 71, 94, 108, 54, 70, 96, 109, 53, 71, 96, 111, 52, 73, 98, 112, 54, 72, 98, 114, 53, 73, 100, 115, 54, 72, 100, 117, 54, 73, 102, 118, 55, 74, 104, 120, 55, 76, 105, 121, 56, 77, 106, 123, 56, 76, 107, 124, 57, 79, 107, 126, 58, 78, 110, 128, 57, 79, 111, 129, 56, 80, 113, 131, 58, 79, 112, 132, 57, 82, 114, 134, 58, 81, 116, 136, 60, 82, 117, 137, 59, 83, 117, 139, 60, 83, 119, 141, 59, 84, 120, 142, 60, 85, 122, 144, 59, 86, 122, 146, 60, 86, 126, 148, 62, 87, 127, 149, 61, 88, 127, 151, 62, 88, 128, 153, 63, 89, 130, 155, 62, 90, 131, 156, 63, 90, 132, 158, 64, 91, 134, 160, 65, 91, 135, 162, 64, 92, 136, 163, 63, 93, 138, 165, 66, 95, 139, 167, 65, 95, 140, 169, 66, 95, 142, 171, 67, 96, 142, 172, 66, 97, 144, 174, 67, 99, 145, 176, 67, 97, 148, 178, 67, 99, 147, 180, 68, 100, 149, 181, 68, 100, 150, 183, 69, 101, 152, 185, 70, 102, 153, 187, 71, 103, 155, 188, 70, 103, 156, 190, 70, 104, 157, 192, 71, 105, 158, 194, 71, 106, 160, 195, 72, 106, 161, 197, 72, 108, 161, 199, 73, 108, 163, 200, 73, 109, 164, 202, 74, 109, 165, 204, 74, 110, 167, 206, 75, 111, 168, 207, 74, 112, 170, 209, 75, 112, 170, 210, 76, 113, 171, 212, 76, 114, 173, 214, 77, 115, 174, 215, 78, 115, 175, 217, 78, 116, 175, 218, 78, 117, 177, 220, 78, 118, 178, 221, 79, 118, 180, 223, 80, 120, 180, 224, 81, 120, 181, 226, 81, 120, 182, 227, 82, 121, 184, 229, 82, 122, 185, 230, 84, 123, 186, 232, 83, 123, 187, 233, 84, 124, 189, 234, 84, 125, 188, 235, 85, 126, 189, 237, 86, 126, 190, 238, 86, 127, 191, 239, 87, 127, 192, 240, 87, 129, 193, 242, 88, 129, 194, 243, 89, 130, 195, 244, 90, 131, 196, 245, 90, 132, 197, 246, 91, 132, 197, 247, 92, 133, 198, 248, 92, 134, 199, 249, 93, 135, 200, 250, 94, 136, 201, 251, 95, 137, 202, 252, 96, 138, 203, 253, 97, 140, 204, 254, 98, 141, 205, 254, 99, 142, 206, 255, 101, 143, 207, 255, 102, 144, 208, 255, 103, 146, 209, 255, 104, 147, 209, 255, 106, 148, 210, 255, 107, 149, 211, 255, 108, 151, 212, 255, 110, 152, 213, 255, 111, 153, 213, 255, 112, 154, 214, 255, 114, 156, 215, 255, 115, 157, 215, 255, 117, 158, 216, 255, 118, 160, 217, 255, 120, 161, 217, 255, 121, 162, 218, 255, 123, 164, 218, 255, 124, 165, 219, 255, 125, 166, 219, 255, 127, 167, 220, 255, 129, 169, 220, 255, 130, 170, 221, 255, 132, 171, 221, 255, 133, 173, 222, 255, 134, 174, 222, 255, 136, 175, 223, 255, 139, 178, 224, 255, 142, 180, 224, 255, 144, 182, 225, 255, 147, 185, 226, 255, 150, 187, 226, 255, 153, 189, 227, 255, 155, 191, 228, 255, 158, 194, 228, 255, 160, 196, 229, 255, 163, 198, 229, 255, 165, 200, 230, 255, 168, 202, 231, 255, 170, 203, 231, 255, 172, 205, 232, 255, 174, 207, 232, 255, 176, 209, 233, 255, 178, 210, 234, 255, 180, 212, 234, 255, 182, 214, 235, 255, 184, 215, 236, 255, 186, 217, 237, 255, 188, 219, 238, 255, 190, 220, 238, 255, 192, 221, 239, 255, 193, 222, 240, 255, 194, 224, 240, 255, 196, 225, 241, 255, 197, 226, 241, 255, 198, 226, 242, 255, 199, 227, 242, 255, 200, 228, 242, 255, 201, 228, 243, 255, 202, 229, 243, 255, 203, 230, 243, 255, 204, 230, 244, 255, 205, 231, 244, 255, 207, 232, 244, 255, 208, 233, 245, 255, 209, 233, 245, 255, 211, 234, 246, 255, 213, 235, 246, 255, 217, 238, 247, 255, 222, 240, 248, 255, 226, 242, 249, 255, 231, 245, 250, 255, 236, 247, 251, 255, 241, 249, 252, 255, 245, 251, 253, 255, 249, 252, 254, 255, 255, 255, 255, 255]);

// node_modules/@arcgis/core/views/3d/environment/LocalAtmosphere.js
var d36 = class {
  constructor(e78, t88) {
    this.type = a46.Local, this._configuration = new i32(), this._passParameters = new g13(), this._configuration.geometry = r40.Cylinder, this._technique = t88.techniqueRepository.acquire(h23, this._configuration);
    const r79 = t88.renderContext.rctx;
    this._vao = this._createVertexArrayObject(r79), this._vaoCount = n28(this._vao, "geometry");
    const p70 = new e23();
    p70.wrapMode = D2.CLAMP_TO_EDGE, p70.flipped = true, p70.width = 1, p70.height = 512, this._passParameters.texture = new T8(r79, p70, e33);
  }
  destroy() {
    this._passParameters.texture = t(this._passParameters.texture), this._vao.dispose(), this._technique.release();
  }
  render(e78) {
    const t88 = e78.rctx, r79 = t88.bindTechnique(this._technique, this._passParameters, e78.bindParameters);
    y19(v18, e78.bindParameters.camera.viewMatrix), r79.setUniformMatrix4fv("view", v18), t88.bindVAO(this._vao), r79.assertCompatibleVertexAttributeLocations(this._vao), t88.drawArrays(E5.TRIANGLES, 0, this._vaoCount);
  }
  renderHaze() {
    return false;
  }
  _createVertexArrayObject(e78) {
    const t88 = st(1, 2, false), r79 = t88.indices[0][1], s84 = t88.vertexAttributes[0][1];
    for (let a85 = 0; a85 < r79.length; a85 += 3) {
      const e79 = r79[a85];
      r79[a85] = r79[a85 + 2], r79[a85 + 2] = e79;
    }
    const o77 = s84.data, i78 = T12.createBuffer(r79.length), m55 = i78.position;
    for (let a85 = 0; a85 < r79.length; ++a85) {
      const e79 = 3 * r79[a85];
      m55.set(a85, 0, o77[e79]), m55.set(a85, 1, o77[e79 + 1]), m55.set(a85, 2, o77[e79 + 2]);
    }
    return new r30(e78, E7, { geometry: r16(T12) }, { geometry: c17.createVertex(e78, F6.STATIC_DRAW, i78.buffer) });
  }
};
function y19(e78, r79) {
  n14(e78, r79), e78[12] = 0, e78[13] = 0, e78[14] = 0, e78[15] = 1;
}
var v18 = e17();
var T12 = H4().vec3f(O4.POSITION);

// node_modules/@arcgis/core/views/3d/environment/resources/MarsAtmosphereTexture.js
var e34 = new Uint8ClampedArray([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 16, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 19, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 22, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 26, 10, 0, 0, 26, 9, 0, 0, 27, 9, 0, 0, 27, 9, 0, 0, 28, 9, 0, 0, 28, 9, 0, 0, 29, 9, 0, 0, 29, 8, 0, 0, 30, 8, 0, 0, 30, 8, 0, 0, 31, 8, 0, 0, 31, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 33, 8, 0, 0, 33, 8, 0, 0, 34, 7, 0, 0, 35, 7, 0, 0, 35, 7, 0, 0, 36, 7, 0, 0, 36, 7, 7, 0, 37, 7, 7, 0, 37, 7, 7, 0, 38, 7, 7, 0, 38, 13, 7, 0, 39, 13, 7, 0, 39, 13, 6, 0, 40, 13, 6, 0, 40, 12, 6, 0, 41, 12, 6, 0, 41, 12, 6, 0, 41, 12, 6, 0, 42, 12, 6, 0, 42, 12, 6, 0, 43, 12, 6, 0, 43, 12, 6, 0, 44, 12, 6, 0, 44, 11, 6, 0, 45, 11, 6, 6, 45, 11, 6, 6, 46, 11, 5, 5, 47, 11, 5, 5, 47, 11, 5, 5, 48, 11, 5, 5, 48, 10, 5, 5, 49, 10, 5, 5, 49, 10, 5, 5, 50, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 52, 15, 5, 5, 52, 14, 5, 5, 53, 14, 5, 5, 54, 14, 5, 5, 54, 14, 5, 5, 55, 14, 5, 5, 55, 14, 5, 5, 56, 13, 4, 4, 57, 13, 4, 4, 57, 13, 4, 4, 58, 13, 4, 4, 58, 13, 4, 4, 59, 13, 4, 4, 59, 17, 4, 4, 60, 17, 4, 4, 60, 17, 4, 4, 60, 17, 4, 4, 61, 17, 4, 4, 61, 16, 4, 4, 62, 16, 4, 4, 63, 16, 4, 4, 63, 16, 8, 4, 64, 16, 8, 4, 64, 16, 8, 4, 65, 15, 8, 4, 66, 15, 8, 4, 66, 15, 8, 4, 67, 19, 8, 4, 68, 19, 8, 4, 68, 18, 7, 4, 69, 18, 7, 4, 69, 18, 7, 4, 69, 18, 7, 4, 70, 18, 7, 4, 70, 18, 7, 4, 71, 18, 7, 4, 71, 18, 7, 4, 72, 17, 7, 3, 73, 17, 7, 3, 73, 21, 7, 3, 74, 21, 7, 3, 74, 20, 7, 3, 75, 20, 7, 3, 76, 20, 7, 3, 76, 20, 7, 3, 77, 20, 7, 3, 77, 20, 7, 3, 78, 20, 7, 3, 78, 20, 7, 7, 78, 19, 6, 6, 79, 19, 10, 6, 80, 19, 10, 6, 80, 22, 9, 6, 81, 22, 9, 6, 81, 22, 9, 6, 82, 22, 9, 6, 83, 22, 9, 6, 83, 21, 9, 6, 84, 21, 9, 6, 84, 21, 9, 6, 85, 21, 9, 6, 86, 21, 9, 6, 86, 23, 9, 6, 87, 23, 9, 6, 87, 23, 9, 6, 87, 23, 9, 6, 88, 23, 9, 6, 88, 23, 9, 6, 89, 23, 8, 6, 90, 23, 8, 6, 90, 22, 8, 6, 91, 22, 8, 6, 91, 25, 8, 6, 92, 25, 8, 5, 93, 25, 8, 5, 93, 24, 8, 5, 94, 24, 8, 5, 94, 24, 11, 5, 95, 24, 11, 5, 96, 24, 11, 5, 96, 26, 11, 5, 97, 26, 11, 5, 97, 26, 11, 5, 97, 26, 10, 5, 98, 26, 10, 5, 98, 26, 10, 5, 99, 25, 10, 5, 100, 25, 10, 5, 100, 25, 10, 5, 101, 25, 10, 5, 101, 25, 10, 5, 102, 27, 10, 5, 103, 27, 10, 5, 103, 27, 10, 5, 104, 27, 10, 5, 104, 27, 12, 5, 105, 26, 12, 5, 106, 26, 12, 5, 106, 29, 12, 5, 106, 29, 12, 5, 106, 29, 12, 7, 107, 28, 12, 7, 108, 28, 12, 7, 108, 28, 12, 7, 109, 28, 12, 7, 109, 30, 12, 7, 110, 30, 11, 7, 111, 30, 11, 7, 111, 30, 11, 7, 112, 30, 11, 7, 112, 29, 11, 7, 113, 29, 11, 7, 114, 29, 11, 7, 114, 31, 11, 7, 115, 31, 11, 7, 115, 31, 11, 7, 115, 31, 11, 7, 116, 31, 11, 7, 116, 33, 13, 7, 117, 33, 13, 9, 117, 32, 13, 9, 118, 32, 13, 9, 118, 32, 13, 9, 119, 34, 15, 8, 120, 34, 15, 8, 120, 34, 15, 8, 121, 36, 15, 8, 121, 36, 15, 8, 122, 36, 15, 8, 122, 35, 15, 8, 123, 37, 14, 8, 124, 37, 14, 8, 124, 37, 14, 8, 124, 37, 14, 8, 124, 39, 14, 8, 125, 39, 16, 8, 125, 38, 16, 8, 126, 38, 16, 8, 127, 38, 16, 8, 127, 40, 16, 10, 128, 40, 16, 10, 128, 40, 16, 10, 129, 42, 18, 10, 129, 41, 18, 10, 130, 41, 18, 10, 130, 43, 18, 10, 131, 43, 18, 10, 131, 42, 17, 10, 132, 42, 17, 12, 132, 42, 17, 12, 133, 44, 17, 12, 133, 44, 17, 12, 133, 46, 17, 11, 134, 46, 17, 11, 134, 45, 19, 11, 135, 45, 19, 11, 135, 47, 19, 11, 136, 47, 19, 11, 136, 47, 19, 11, 137, 47, 19, 11, 137, 48, 20, 11, 138, 48, 20, 11, 138, 50, 20, 13, 139, 50, 20, 13, 139, 49, 20, 13, 140, 49, 22, 13, 140, 51, 22, 13, 141, 51, 22, 13, 141, 50, 22, 13, 142, 52, 22, 13, 142, 52, 21, 12, 143, 53, 21, 12, 143, 53, 21, 12, 143, 53, 21, 12, 143, 53, 21, 14, 144, 53, 23, 14, 144, 55, 23, 14, 145, 55, 23, 14, 145, 56, 23, 14, 146, 56, 23, 14, 146, 57, 24, 14, 147, 57, 24, 14, 147, 59, 24, 16, 148, 59, 24, 16, 148, 58, 24, 15, 149, 58, 26, 15, 149, 58, 26, 15, 149, 60, 26, 15, 150, 60, 26, 15, 150, 61, 25, 15, 151, 61, 25, 15, 151, 62, 25, 17, 152, 62, 25, 17, 152, 64, 25, 17, 152, 64, 27, 17, 152, 63, 27, 17, 153, 63, 27, 17, 153, 65, 27, 17, 153, 66, 28, 17, 154, 66, 28, 17, 154, 67, 28, 16, 155, 67, 28, 16, 155, 67, 30, 16, 155, 69, 29, 18, 156, 69, 29, 18, 156, 68, 29, 18, 157, 70, 29, 18, 157, 70, 29, 18, 157, 71, 31, 18, 158, 71, 31, 18, 158, 72, 30, 19, 159, 72, 30, 19, 159, 74, 30, 19, 159, 73, 30, 19, 160, 73, 32, 19, 160, 74, 32, 19, 161, 74, 32, 21, 161, 76, 32, 21, 161, 78, 33, 21, 161, 78, 33, 21, 161, 79, 35, 20, 162, 78, 34, 20, 163, 79, 34, 22, 164, 81, 36, 22, 164, 82, 36, 22, 165, 81, 35, 22, 166, 82, 37, 21, 167, 84, 37, 21, 167, 85, 36, 21, 168, 86, 38, 23, 169, 88, 38, 23, 169, 88, 38, 23, 170, 88, 39, 23, 170, 89, 39, 24, 171, 91, 40, 24, 171, 92, 40, 24, 172, 93, 40, 24, 173, 94, 41, 25, 173, 95, 41, 25, 174, 96, 42, 25, 175, 98, 42, 25, 175, 99, 43, 26, 176, 99, 43, 26, 177, 101, 45, 26, 177, 102, 44, 26, 178, 103, 46, 27, 179, 104, 46, 27, 179, 105, 46, 27, 179, 106, 45, 28, 180, 108, 47, 28, 180, 108, 46, 28, 181, 109, 48, 28, 182, 111, 48, 29, 182, 111, 49, 29, 183, 114, 49, 29, 184, 114, 50, 30, 184, 114, 50, 30, 185, 116, 51, 30, 185, 117, 51, 30, 186, 119, 52, 31, 187, 119, 53, 31, 187, 121, 53, 31, 188, 122, 54, 33, 188, 123, 54, 32, 189, 124, 55, 32, 189, 125, 55, 32, 189, 126, 56, 34, 190, 128, 56, 34, 190, 128, 57, 33, 191, 130, 57, 33, 191, 131, 58, 35, 192, 131, 58, 35, 192, 133, 59, 34, 193, 134, 60, 35, 194, 135, 60, 35, 194, 136, 61, 37, 195, 139, 61, 37, 195, 139, 62, 36, 196, 141, 62, 36, 196, 141, 63, 38, 197, 142, 63, 38, 197, 143, 64, 39, 198, 144, 64, 39, 198, 146, 66, 39, 198, 146, 67, 39, 198, 147, 67, 38, 199, 147, 68, 40, 199, 149, 68, 40, 200, 150, 69, 40, 200, 152, 70, 41, 201, 154, 71, 41, 201, 154, 71, 42, 202, 155, 72, 42, 202, 156, 73, 41, 203, 157, 73, 43, 203, 158, 74, 42, 204, 160, 75, 44, 204, 161, 76, 44, 204, 162, 77, 44, 205, 164, 77, 45, 205, 165, 78, 45, 206, 166, 79, 45, 206, 168, 80, 46, 207, 169, 81, 46, 207, 170, 83, 47, 207, 171, 83, 47, 207, 172, 83, 47, 207, 174, 85, 48, 208, 175, 85, 48, 208, 177, 85, 48, 209, 178, 87, 49, 209, 180, 87, 49, 210, 181, 87, 49, 210, 182, 89, 50, 210, 182, 89, 50, 211, 185, 91, 50, 211, 186, 91, 51, 212, 186, 93, 51, 212, 189, 94, 52, 212, 190, 95, 51, 213, 192, 96, 51, 213, 193, 96, 53, 213, 194, 97, 52, 214, 195, 98, 54, 214, 197, 98, 55, 215, 198, 100, 55, 215, 199, 101, 55, 215, 200, 102, 55, 216, 202, 103, 55, 216, 203, 104, 55, 216, 204, 105, 57, 216, 205, 106, 57, 216, 207, 107, 58, 216, 208, 108, 58, 217, 209, 109, 59, 217, 210, 110, 60, 217, 211, 111, 60, 218, 212, 112, 61, 218, 213, 113, 61, 218, 214, 114, 62, 219, 217, 115, 63, 219, 217, 116, 64, 219, 218, 118, 64, 220, 219, 119, 65, 220, 220, 121, 66, 220, 222, 121, 67, 221, 222, 122, 67, 221, 222, 123, 68, 221, 223, 124, 69, 222, 224, 125, 70, 222, 225, 127, 71, 222, 226, 128, 72, 223, 228, 129, 73, 223, 228, 130, 74, 223, 229, 132, 75, 223, 230, 135, 79, 224, 231, 138, 81, 224, 233, 141, 84, 224, 233, 144, 87, 225, 235, 147, 91, 225, 236, 150, 94, 225, 237, 154, 97, 225, 238, 158, 102, 225, 239, 161, 107, 225, 239, 165, 110, 225, 240, 168, 114, 226, 241, 172, 118, 226, 241, 176, 122, 226, 241, 181, 126, 226, 242, 183, 130, 227, 243, 186, 135, 227, 243, 190, 139, 227, 244, 194, 143, 227, 244, 197, 147, 228, 244, 200, 150, 228, 245, 204, 154, 228, 245, 207, 157, 228, 245, 210, 161, 229, 246, 212, 164, 229, 246, 215, 167, 229, 246, 217, 169, 229, 246, 220, 172, 230, 247, 221, 174, 230]);

// node_modules/@arcgis/core/views/3d/environment/MarsAtmosphere.js
var L9 = 128;
var E16 = -o37;
var G8 = 0;
var H8 = 50;
var N8 = () => 1 - 511 / 512;
var B6 = U5([[50, 0.1015625], [500, 0.21875], [5e3, 1 - 250 / 512], [5e4, 0.4140625]]);
var z11 = class {
  constructor(e78, t88) {
    this.view = e78, this.type = a46.Mars, this._passParameters = new g13(), this._vaoCount = 0, this._texV1 = 1;
    const s84 = A2(e78.spatialReference);
    this._planetRadius = s84.radius, this._outerRimWidth = s84.outerAtmosphereRimWidth, this._innerRimFactor = (this._planetRadius + E16) / this._planetRadius, this._middleRimFactor = (this._planetRadius + G8) / this._planetRadius, this._outerRimFactor = (this._planetRadius + this._outerRimWidth) / this._planetRadius, this._texV0 = G8 / this._outerRimWidth, this._texVScale = this._texV1 - this._texV0, this._techniqueRepository = t88.techniqueRepository;
    const o77 = t88.renderContext.rctx;
    this._cameraChangeHandle = l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, () => t88.requestRender(), w3), this._vao = this._createRibbon(o77), this._vaoCount = n28(this._vao, "geometry"), this._fadeVao = f15(o77), this._fadeVaoCount = n28(this._fadeVao, "geometry");
    const a85 = new e23();
    a85.wrapMode = D2.CLAMP_TO_EDGE, a85.flipped = true, a85.width = 1, a85.height = 512, this._passParameters.texture = new T8(o77, a85, e34);
    const n103 = new i32();
    n103.geometry = r40.Cone, this._coneTechnique = this._techniqueRepository.acquire(h23, n103), n103.geometry = r40.Underground, this._undergroundTechnique = this._techniqueRepository.acquire(h23, n103);
  }
  destroy() {
    this._coneTechnique.release(), this._undergroundTechnique.release(), this._cameraChangeHandle.remove(), this._passParameters.texture = t(this._passParameters.texture), this._fadeVao.dispose(), this._vao.dispose();
  }
  render(e78) {
    const t88 = e78.bindParameters.camera;
    this._update(t88);
    const s84 = e78.rctx;
    this._passParameters.undergroundFadeAlpha < 1 && (s84.bindTechnique(this._coneTechnique, this._passParameters, e78.bindParameters), s84.bindVAO(this._vao), s84.drawArrays(E5.TRIANGLES, 0, this._vaoCount)), this._passParameters.undergroundFadeAlpha > 0 && (s84.bindTechnique(this._undergroundTechnique, this._passParameters, e78.bindParameters), s84.bindVAO(this._fadeVao), s84.drawArrays(E5.TRIANGLE_STRIP, 0, this._fadeVaoCount));
  }
  renderHaze() {
  }
  _update(s84) {
    const r79 = n7(), i78 = this._planetRadius, o77 = s10(s84.eye), a85 = o77 - i78;
    if (a85 < 0) {
      const e78 = Math.min(-a85 / 5e3, 1);
      this._passParameters.undergroundFadeAlpha = e78;
    } else
      this._passParameters.undergroundFadeAlpha = 0;
    const p70 = Math.max(H8, a85), u58 = i78 + E16;
    this._passParameters.innerScale = Y6(i78 + p70, i78, u58) - 1, this._passParameters.altitudeFade = e31(a85), g3(r79, s84.eye, (i78 + H8) / o77), J5(r79, s84.center, s84.up, i78, this._passParameters.silhouette);
    const c75 = this._computeScreenRimWidth(s84, r79, s84.up, this._passParameters.silhouette), _42 = N8(), d63 = B6(a85);
    let f59 = this._texV0 + _42 * this._texVScale, g49 = this._texV0 + c75 * d63 * this._texVScale;
    if (a85 > H8) {
      J5(s84.eye, s84.center, s84.up, i78, this._passParameters.silhouette);
      const r80 = this._computeScreenRimWidth(s84, s84.eye, s84.up, this._passParameters.silhouette), o78 = i3((r80 - 1.5) / (c75 - 1.5), 0, 1);
      f59 = this._texV0 + o78 * _42 * this._texVScale, g49 = this._texV0 + s12(this._texV1, c75 * d63, o78) * this._texVScale;
    }
    r14(this._passParameters.texV, f59, g49);
  }
  _createRibbon(e78) {
    const t88 = t20(3 + 3 * L9 * 3), s84 = new Uint32Array(3 * L9 * 5);
    t88[0] = 0, t88[1] = 0, t88[2] = -1;
    for (let o77 = 0; o77 < L9; o77++) {
      const e79 = 9 * o77 + 3;
      t88[e79] = o77, t88[e79 + 1] = this._innerRimFactor, t88[e79 + 2] = -1, t88[e79 + 3] = o77, t88[e79 + 4] = this._middleRimFactor, t88[e79 + 5] = 0, t88[e79 + 6] = o77, t88[e79 + 7] = this._outerRimFactor, t88[e79 + 8] = 1;
      const r80 = 3 * o77 + 1, i79 = o77 === L9 - 1 ? 1 : r80 + 3, a85 = 15 * o77;
      s84[a85] = r80, s84[a85 + 1] = r80 + 1, s84[a85 + 2] = i79 + 1, s84[a85 + 3] = i79 + 1, s84[a85 + 4] = i79, s84[a85 + 5] = r80, s84[a85 + 6] = r80 + 1, s84[a85 + 7] = r80 + 2, s84[a85 + 8] = i79 + 2, s84[a85 + 9] = i79 + 2, s84[a85 + 10] = i79 + 1, s84[a85 + 11] = r80 + 1, s84[a85 + 12] = r80, s84[a85 + 13] = i79, s84[a85 + 14] = 0;
    }
    const r79 = Z3.createBuffer(s84.length), i78 = r79.position;
    for (let o77 = 0; o77 < s84.length; ++o77) {
      const e79 = 3 * s84[o77];
      i78.set(o77, 0, t88[e79]), i78.set(o77, 1, t88[e79 + 1]), i78.set(o77, 2, t88[e79 + 2]);
    }
    return new r30(e78, E7, { geometry: r16(Z3) }, { geometry: c17.createVertex(e78, F6.STATIC_DRAW, r79.buffer) });
  }
  _computeScreenRimWidth(e78, t88, s84, r79) {
    return u2(Q2, r79.center, r79.v2), g3(X5, Q2, this._outerRimFactor), k3(K4, t88, Q2, s84), u3(Q2, K4, e78.projectionMatrix, e78.viewport, Q2), u3(X5, K4, e78.projectionMatrix, e78.viewport, X5), x4(Q2, X5) / e78.height;
  }
};
function J5(e78, t88, s84, r79, i78) {
  const o77 = s10(e78), a85 = r79 * Math.sqrt(o77 * o77 - r79 * r79) / o77, n103 = Math.sqrt(r79 * r79 - a85 * a85), p70 = i78.v1, u58 = i78.v2;
  return g3(i78.center, e78, n103 / o77), _(p70, e78, t88), v3(p70) < 1 && _(p70, e78, s84), g3(p70, p70, a85 / s10(p70)), _(u58, p70, e78), g3(u58, u58, a85 / s10(u58)), a85;
}
var K4 = e17();
var Q2 = n7();
var X5 = n7();
function Y6(e78, t88, s84) {
  return e78 * e78 / (Math.sqrt(e78 * e78 - t88 * t88) * Math.sqrt(e78 * e78 - s84 * s84) + t88 * s84);
}
var Z3 = H4().vec3f(O4.POSITION);

// node_modules/@arcgis/core/views/3d/environment/PrecipitationTechnique.js
var g18 = class extends n29 {
  constructor() {
    super(...arguments), this.time = 0, this.radius = 1, this.width = 500, this.opacity = 1;
  }
};
var d37 = class _d extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _d.shader.get().build(this.configuration), h24);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.ONE, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
d37.shader = new t24(A16, () => import("./Precipitation.glsl-LZRNW5ZI.js"));
var h24 = /* @__PURE__ */ new Map([[O4.POSITION, 0], [O4.INSTANCEFEATUREATTRIBUTE, 1]]);

// node_modules/@arcgis/core/views/3d/environment/Precipitation.js
var A20 = class extends m {
  constructor(e78) {
    super(e78), this._numParticles = 25e4, this._rainSpeed = 0.1, this._snowSpeed = 0.01, this._passParameters = new g18(), this._animation = new e24(), this._updatingTracking = new c8(), this._passParameters.time = 0, this._passParameters.radius = A2(e78.view.spatialReference).radius, this._techniqueRepository = e78.context.techniqueRepository;
  }
  destroy() {
    this._updatingTracking.destroy(), this._numParticles = 0, this._snowTechniqueCached = f(this._snowTechniqueCached), this._rainTechniqueCached = f(this._rainTechniqueCached), this._vao = t(this._vao), this._instanceIdBuffer = t(this._instanceIdBuffer);
  }
  get updating() {
    return this._updatingTracking.updating;
  }
  get _rainTechnique() {
    if (null == this._rainTechniqueCached) {
      const e78 = new i33();
      e78.type = t41.Rain, this._rainTechniqueCached = this._techniqueRepository.acquire(d37, e78);
    }
    return this._rainTechniqueCached;
  }
  get _snowTechnique() {
    if (null == this._snowTechniqueCached) {
      const e78 = new i33();
      e78.type = t41.Snow, this._snowTechniqueCached = this._techniqueRepository.acquire(d37, e78);
    }
    return this._snowTechniqueCached;
  }
  update(e78) {
    return this._animation.advance(e78);
  }
  render(e78, t88, r79) {
    var _a;
    const s84 = "rainy" === r79 ? this._rainTechnique : this._snowTechnique;
    if (!s84.compiled)
      return void this.context.requestRender();
    const o77 = e78.rctx;
    if (this._ensureResources(o77), null == s84 || null == this._vao || null == this._instanceIdBuffer)
      return;
    if (null != e78.bindParameters.cloudsFade.data && (this._passParameters.opacity = 1 - e78.bindParameters.cloudsFade.fadeInOutHeight.factor), this._passParameters.opacity <= 0)
      return;
    const a85 = 0.35;
    t88 = t88 < 0.5 ? s12(0, a85, 2 * t88) : s12(a85, 1, 2 * (t88 - 0.5)), this._passParameters.time = ("rainy" === r79 ? this._rainSpeed : this._snowSpeed) * u(this._animation.time) % 1e5;
    const c75 = o77.bindTechnique(s84, this._passParameters, e78.bindParameters);
    o77.bindVAO(this._vao), c75.assertCompatibleVertexAttributeLocations(this._vao), R7(o77, h24, this._instanceIdBuffer, P10, 0), (_a = o77.capabilities.instancing) == null ? void 0 : _a.drawArraysInstanced(E5.TRIANGLES, 0, 3, this._numParticles * t88), o19(o77, h24, this._instanceIdBuffer, P10);
  }
  _ensureResources(e78) {
    null == this._vao && (this._vao = this._createVertexArrayObject(e78)), null == this._instanceIdBuffer && (this._instanceIdBuffer = this._createInstanceIndices(e78));
  }
  _createInstanceIndices(e78) {
    const t88 = [];
    for (let i78 = 0; i78 < this._numParticles; i78++)
      t88.push(i78);
    return c17.createVertex(e78, F6.STATIC_DRAW, new Float32Array(t88));
  }
  _createVertexArrayObject(e78) {
    const t88 = new Float32Array([-1, 0, 1, 1, 0, -1, 1, 0, 1]);
    return new r30(e78, h24, { geometry: r16(v19) }, { geometry: c17.createVertex(e78, F6.STATIC_DRAW, t88) });
  }
};
e([y({ constructOnly: true })], A20.prototype, "context", void 0), e([y({ constructOnly: true })], A20.prototype, "view", void 0), e([y({ readOnly: true })], A20.prototype, "updating", null), e([y()], A20.prototype, "_updatingTracking", void 0), A20 = e([a4("esri.views.3d.environment.Precipitation")], A20);
var v19 = H4().vec3f(O4.POSITION);
var P10 = r16(H4().f32(O4.INSTANCEFEATUREATTRIBUTE), 1);

// node_modules/@arcgis/core/views/3d/environment/StarsTechnique.js
var d38 = class extends n29 {
  constructor() {
    super(...arguments), this.modelMatrix = e17();
  }
};
var h25 = class _h extends e25 {
  constructor(e78) {
    super(e78, new t26(), () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _h.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _7 });
  }
};
h25.shader = new t24(f21, () => import("./Stars.glsl-MLKD63W5.js"));

// node_modules/@arcgis/core/views/3d/environment/Stars.js
var x16 = class extends m {
  get updating() {
    return this._updatingTracking.updating || this.loading;
  }
  get loading() {
    return null != this._loadDataTask && !this._loadDataTask.finished;
  }
  constructor(t88) {
    super(t88), this._loadDataTask = null, this._numPoints = 0, this._renderParameter = new d38(), this._updatingTracking = new c8();
  }
  initialize() {
    this._loadDataTask = this._createLoadDataTask();
  }
  destroy() {
    this._loadDataTask = e3(this._loadDataTask), this._updatingTracking.destroy(), this._numPoints = 0, this._technique = f(this._technique), this._vao = t(this._vao), L10 = null;
  }
  render(t88) {
    const { rctx: e78 } = t88;
    if (this._ensureResources(e78), null == this._technique || null == this._vao)
      return;
    if (!this._technique.compiled)
      return void this.requestRender();
    const r79 = e78.bindTechnique(this._technique, this._renderParameter, t88.bindParameters);
    e78.bindVAO(this._vao), r79.assertCompatibleVertexAttributeLocations(this._vao), e78.drawArrays(E5.POINTS, 0, this._numPoints);
  }
  _ensureResources(t88) {
    if (null != this._technique || null == L10)
      return;
    this._technique = new h25({ rctx: t88, viewingMode: this.view.state.viewingMode }), this._numPoints = L10.byteLength / I12;
    const e78 = new Float32Array(L10, 0, 2 * this._numPoints), r79 = new Uint8Array(L10, 2 * this._numPoints * 4, this._numPoints);
    this._vao = this._createVertexArrayObject(t88, e78, r79, this._numPoints), this._updatingTracking.add(() => "virtual" !== this.view.environment.lighting.type ? this.view.environment.lighting.date : null, (t89) => this._update(t89), h3);
  }
  _computeDayDuration(t88) {
    const e78 = t88, r79 = new Date(t88.getFullYear(), 0, 1, 11, 58, 56);
    return (+e78 - +r79) / (+new Date(t88.getFullYear() + 1, 0, 1, 11, 58, 55) - +r79);
  }
  _update(t88) {
    if (!t88)
      return;
    const e78 = (t88.getHours() / 12 + t88.getMinutes() / 60 * (2 / 24) + t88.getSeconds() / 60 * (2 / 1440) - 0.9972222) % 2, r79 = 2 * this._computeDayDuration(t88), s84 = n14(this._renderParameter.modelMatrix, S12);
    x6(s84, s84, -r79 * Math.PI), c5(s84, O11, s84), x6(s84, s84, -e78 * Math.PI), this.requestRender();
  }
  _hexToRGB(t88) {
    return [parseInt(t88.substring(0, 2), 16), parseInt(t88.substring(2, 4), 16), parseInt(t88.substring(4, 6), 16)];
  }
  _unpackUint8Attributes(t88) {
    return t88 >= 192 ? [2.9, t88 - 192] : t88 >= 160 ? [2.5, t88 - 160] : t88 >= 128 ? [2, t88 - 128] : t88 >= 96 ? [1.5, t88 - 96] : t88 >= 64 ? [1, t88 - 64] : t88 >= 32 ? [0.7, t88 - 32] : [0.4, t88];
  }
  _createVertexArrayObject(t88, e78, r79, s84) {
    const i78 = M10.createBuffer(s84), a85 = i78.position, o77 = i78.color, n103 = i78.size;
    for (let c75 = 0; c75 < s84; c75++) {
      const t89 = e78[2 * c75], s85 = e78[2 * c75 + 1];
      a85.set(c75, 0, -Math.cos(t89) * Math.sin(s85)), a85.set(c75, 1, -Math.sin(t89) * Math.sin(s85)), a85.set(c75, 2, -Math.cos(s85));
      const i79 = this._unpackUint8Attributes(r79[c75]), f59 = this._hexToRGB(q7[i79[1]]);
      o77.set(c75, 0, 255 * f59[0]), o77.set(c75, 1, 255 * f59[1]), o77.set(c75, 2, 255 * f59[2]), o77.set(c75, 3, 255), n103.set(c75, i79[0]);
    }
    return new r30(t88, E7, { geometry: r16(M10) }, { geometry: c17.createVertex(t88, F6.STATIC_DRAW, i78.buffer) });
  }
  _createLoadDataTask() {
    if (null != L10)
      return null;
    const t88 = d5(async (t89) => {
      const { data: r79 } = await n10("esri/views/3d/environment/resources/stars.wsv", { responseType: "array-buffer", signal: t89 });
      this._verifyStarData(r79), L10 = r79;
    });
    return t88.promise.catch((t89) => {
      d2(t89) || s3.getLogger(this).error(t89);
    }).then(() => {
      this.destroyed || (this.requestRender(), this.notifyChange("updating"));
    }), t88;
  }
  _verifyStarData(t88) {
    if (!t88)
      throw new s4("stars:no-data-received", "Failed to create stars because star catalogue is missing");
    const e78 = t88.byteLength / I12;
    if (e78 % 1 != 0 || e78 > 5e4 || e78 < 5e3)
      throw new s4("stars:invalid-data", "Failed to create stars because star catalogue data is invalid");
  }
};
e([y({ constructOnly: true })], x16.prototype, "view", void 0), e([y({ constructOnly: true })], x16.prototype, "requestRender", void 0), e([y({ readOnly: true })], x16.prototype, "updating", null), e([y()], x16.prototype, "_loadDataTask", void 0), e([y()], x16.prototype, "_updatingTracking", void 0), x16 = e([a4("esri.views.3d.environment.Stars")], x16);
var q7 = ["9bb2ff", "9eb5ff", "aabfff", "bbccff", "ccd8ff ", "dae2ff", "e4e9ff", "eeefff", "f8f6ff", "fff9fb", "fff5ef", "fff1e5", "ffeddb", "ffe9d2", "ffe6ca", "ffe3c3", "ffe0bb", "ffddb4", "ffdaad", "ffd6a5", "ffd29c", "ffcc8f", "ffc178", "ffa94b", "ff7b00"];
var O11 = t15(1, 0, 0, 0, 0, 0.9174771405229186, 0.39778850739794974, 0, 0, -0.39778850739794974, 0.9174771405229186, 0, 0, 0, 0, 1);
var S12 = t15(1, 0, 0, 0, 0, 0.9174771405229186, -0.39778850739794974, 0, 0, 0.39778850739794974, 0.9174771405229186, 0, 0, 0, 0, 1);
var I12 = 9;
var M10 = H4().vec3f(O4.POSITION).vec4u8(O4.COLOR).f32(O4.SIZE);
var L10 = null;

// node_modules/@arcgis/core/views/3d/environment/weatherUtils.js
function h26(e78, t88, r79) {
  const o77 = e78.parallax.anchorPointClouds;
  e78.fadeIn.stage === r35.FINISHED && (e78.fadeIn.factor = 0, r7(o77, R10), e78.fadeIn.stage = r35.CHANGE_ANCHOR, e78.crossFade.enabled = false, e78.fadeInOut.stage = I10.FINISHED), e78.fadeIn.stage === r35.CHANGE_ANCHOR && e78.isCameraPositionFinal && (n39(e78.data) && e78.renderingStage !== N5.RENDERING || e78.renderingStage === N5.FADING_TEXTURE_CHANNELS) && (r7(o77, R10), e78.fadeIn.stage = r35.FADE_IN, e78.startTime = t88, e78.renderingStage === N5.FADING_TEXTURE_CHANNELS && (e78.renderingStage = N5.SWITCH_CHANNELS)), e78.fadeIn.factor < 1 && e78.fadeIn.stage === r35.FADE_IN ? e78.fadeIn.factor = r79 ? i3((t88 - e78.startTime) / (G9 * r79), 0, 1) : 1 : e78.fadeIn.factor >= 1 && e78.fadeIn.stage === r35.FADE_IN && (e78.fadeIn.stage = r35.FINISHED, e78.fadeIn.factor = 1);
}
function D7(e78, t88, r79) {
  const { fadeInOut: o77, crossFade: s84 } = e78;
  o77.stage === I10.FINISHED && (e78.startTime = t88, o77.factor = 1, o77.stage = I10.FADE_OUT), o77.factor > 0 && o77.stage === I10.FADE_OUT ? o77.factor = r79 ? 1 - i3((t88 - e78.startTime) / (U8 * r79), 0, 1) : 0 : (o77.factor <= 0 && o77.stage === I10.FADE_OUT && (o77.factor = 0, r7(e78.parallax.anchorPointClouds, R10)), o77.factor <= 0 && o77.stage === I10.FADE_OUT && e78.isCameraPositionFinal && (o77.factor = 0, o77.stage = I10.SWITCH, e78.crossFade.enabled = false, s84.factor = 1), o77.stage === I10.SWITCH && (n39(e78.data) && e78.renderingStage !== N5.RENDERING || e78.renderingStage === N5.FADING_TEXTURE_CHANNELS) && (e78.startTime = t88, o77.factor = 0, o77.stage = I10.FADE_IN, r7(e78.parallax.anchorPointClouds, R10), e78.crossFade.enabled = false, s84.factor = 1, e78.renderingStage === N5.FADING_TEXTURE_CHANNELS && (e78.renderingStage = N5.SWITCH_CHANNELS)), o77.factor < 1 && o77.stage === I10.FADE_IN ? o77.factor = r79 ? i3((t88 - e78.startTime) / (G9 * r79), 0, 1) : 1 : o77.factor >= 1 && o77.stage === I10.FADE_IN && (o77.stage = I10.FINISHED, o77.factor = 1));
}
function T13(e78, t88, r79, o77) {
  const { crossFade: s84 } = e78, d63 = e78.parallax.anchorPointClouds;
  e78.crossFade.enabled && !o77 || (r7(e78.parallaxNew.anchorPointClouds, R10), e78.startTime = t88, s84.factor = 0, e78.crossFade.enabled = true), s84.factor < 1 && e78.crossFade.enabled ? s84.factor = r79 ? i3((t88 - e78.startTime) / (b8 * r79), 0, 1) : 1 : s84.factor >= 1 && e78.crossFade.enabled && (e78.crossFade.enabled = false, s84.factor = 1, r7(d63, e78.parallaxNew.anchorPointClouds), e78.renderingStage === N5.FADING_TEXTURE_CHANNELS && (e78.renderingStage = N5.SWITCH_CHANNELS));
}
function A21(e78, t88, r79, o77) {
  const s84 = e78.fadeInOutHeight, n103 = s84.stage === n40.FINISHED ? r79 : e78.startTimeHeightFade;
  if (0 !== o77) {
    const a85 = (r79 - n103) / (j11 * o77);
    s84.factor += t88 ? -a85 : a85;
  } else
    s84.factor = t88 ? 0 : 1;
  e78.startTimeHeightFade = r79, s84.factor = i3(s84.factor, 0, 1), s84.stage = n40.HEIGHT_FADE;
}
function _15(a85, i78, c75, I29, _42) {
  a85.renderingStage === N5.FINISHED_RENDERING && (a85.renderingStage = N5.FADING_TEXTURE_CHANNELS);
  const p70 = s10(i78.eye);
  a85.fadeInOutHeight.factor < 0 && (a85.fadeInOutHeight.factor = p70 - s7.radius > p35 ? 1 : 0), a85.isCameraPositionFinal = G2(a85.cameraPositionLastFrame, i78.eye), z2(R10, i78.eye), g3(R10, R10, s7.radius);
  const G22 = a85.parallax;
  0 === G22.anchorPointClouds[0] && 0 === G22.anchorPointClouds[1] && 0 === G22.anchorPointClouds[2] && r7(G22.anchorPointClouds, R10);
  const U24 = s10(e8(L11, G22.anchorPointClouds, R10));
  let b31 = true;
  if (U24 > a85.fadeIn.distanceThresholdFactor * G22.cloudsHeight || a85.fadeIn.stage !== r35.FINISHED)
    h26(a85, I29, _42);
  else if (U24 > a85.fadeInOut.distanceThresholdFactor * G22.cloudsHeight || a85.fadeInOut.stage !== I10.FINISHED)
    D7(a85, I29, _42);
  else if (U24 > a85.crossFade.distanceThresholdFactor * G22.cloudsHeight || a85.crossFade.enabled || a85.renderingStage === N5.FADING_TEXTURE_CHANNELS) {
    T13(a85, I29, _42, (c75 !== I2.IDLE || !n39(a85.data)) && a85.renderingStage !== N5.FADING_TEXTURE_CHANNELS);
  } else
    b31 = false;
  const j29 = p70 - s7.radius;
  if ((j29 > 1.7 * p35 || j29 < -p35) && a85.fadeInOutHeight.factor < 1 ? a85.fadeInOutHeight.factor = 1 : (j29 > p35 || j29 < -0.35 * p35) && a85.fadeInOutHeight.factor < 1 ? A21(a85, false, I29, _42) : j29 < p35 && j29 > -0.35 * p35 && a85.fadeInOutHeight.factor > 0 ? A21(a85, true, I29, _42) : a85.fadeInOutHeight.stage = n40.FINISHED, a85.renderingStage === N5.SWITCH_CHANNELS && (a85.readChannels = 1 - a85.readChannels, a85.renderingStage = N5.FINISHED), G22.radiusCurvatureCorrectionFactor = 0.84 * Math.sqrt(Math.max(p70 * p70 - s7.radius * s7.radius, 0)) / p70, d9(O12, G22.anchorPointClouds, P11), b2(G22.transform, o12, P11[3], x9(P11)), b31) {
    const { parallaxNew: t88 } = a85;
    d9(O12, t88.anchorPointClouds, P11), b2(t88.transform, o12, P11[3], x9(P11));
  }
  r7(a85.cameraPositionLastFrame, i78.eye);
}
function p37(a85) {
  return a85.crossFade.enabled || a85.fadeInOut.stage !== I10.FINISHED || a85.fadeIn.stage !== r35.FINISHED || a85.fadeInOutHeight.stage !== n40.FINISHED || a85.renderingStage !== N5.FINISHED;
}
var O12 = r5(0, 0, 1);
var P11 = h10();
var R10 = n7();
var L11 = n7();
var G9 = 1;
var U8 = 0.5;
var b8 = 1.3;
var j11 = 1;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Update.js
var e35;
!function(e78) {
  e78[e78.Immediate = 0] = "Immediate", e78[e78.Faded = 1] = "Faded";
}(e35 || (e35 = {}));

// node_modules/@arcgis/core/views/3d/environment/EnvironmentRenderer.js
var H9;
var V8 = [E8.POSTPROCESSING_ENVIRONMENT_OPAQUE, E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT];
var k9 = H9 = class extends m {
  constructor(e78) {
    super(e78), this._context = null, this._atmosphere = null, this._oldWeatherParameters = new G10(), this._newWeatherParameters = new G10(), this._fadedWeatherParameters = new G10(), this._weatherParameters = this._newWeatherParameters;
  }
  initialize() {
    this.view._stage.addRenderPlugin(V8, this);
  }
  destroy() {
    var _a;
    this.removeHandles(), this.uninitializeRenderContext(), null != ((_a = this.view) == null ? void 0 : _a._stage) && this.view._stage.removeRenderPlugin(this), this._set("view", null);
  }
  get atmosphere() {
    return this._atmosphere;
  }
  get _atmosphereType() {
    return null != this.atmosphere ? this.atmosphere.type : a46.None;
  }
  get canRender() {
    return !(null === this._atmosphere && null === this._stars);
  }
  get needsLinearDepth() {
    return this._atmosphereType === a46.Realistic;
  }
  updateAnimation(e78) {
    return null != this._precipitation && this._precipitation.update(e78);
  }
  get updating() {
    return null != this._stars && this._stars.updating || null != this._clouds && this._clouds.running;
  }
  get weatherVisible() {
    return s10(this.view.state.camera.eye) - A2(this.view.spatialReference).radius <= p35;
  }
  get _stars() {
    var _a;
    const e78 = this.view, t88 = ((_a = e78.environment) == null ? void 0 : _a.starsEnabled) ?? false, s84 = this._get("_stars");
    return t88 && null != this._context ? null != s84 ? s84 : new x16({ view: e78, requestRender: () => this._setNeedsRender() }) : (l(s84), null);
  }
  get _precipitation() {
    const e78 = this._get("_precipitation");
    if (!this._precipitationEnabled || null == this._context)
      return l(e78), null;
    const t88 = this.view, s84 = this._context;
    return null != e78 && e78.context === s84 ? e78 : (l(e78), new A20({ context: s84, view: t88 }));
  }
  get _clouds() {
    const e78 = this._get("_clouds");
    if (!this.weatherEnabled || null == this._context)
      return l(e78), null;
    if (null != e78)
      return e78;
    const t88 = this.view, s84 = this._context;
    return l(e78), new B5({ context: s84, view: t88, requestRender: () => this._setNeedsRender() });
  }
  get _cloudsComposition() {
    const e78 = this._get("_cloudsComposition");
    if (!this.weatherEnabled || null == this._context)
      return l(e78), null;
    const t88 = this.view.state.viewingMode, s84 = this._context.renderContext.rctx, i78 = A2(this.view.spatialReference).radius;
    return null != e78 && e78.viewingMode === t88 && e78.planetRadius === i78 ? e78 : (l(e78), new u27({ rctx: s84, viewingMode: t88, planetRadius: i78, requestRender: () => this._setNeedsRender() }));
  }
  get _fog() {
    const e78 = this._get("_fog");
    if (!this.weatherEnabled || null == this._context)
      return l(e78), null;
    if (null != e78)
      return e78;
    const t88 = this.view, s84 = this._context, i78 = this._context.renderContext.rctx, a85 = this.view.state.viewingMode;
    return new v17({ context: s84, view: t88, rctx: i78, viewingMode: a85 });
  }
  get weatherEnabled() {
    var _a, _b;
    return !!((_b = (_a = this.view) == null ? void 0 : _a.environmentManager) == null ? void 0 : _b.weatherEnabled);
  }
  get _precipitationEnabled() {
    return this.weatherEnabled && ("rainy" === this.view.environment.weather.type || "snowy" === this.view.environment.weather.type);
  }
  initializeRenderContext(e78 = null) {
    this._context = e78;
    const t88 = () => this._setNeedsRender();
    this.addHandles([l6(() => ({ viewingMode: this.view.state.viewingMode, enabled: this.view.environment.atmosphereEnabled }), (e79) => this._updateAtmosphere(e79), w3), l6(() => this._stars, t88), l6(() => this._precipitation, t88), l6(() => this._clouds, () => this._updateWeather(), h3), l6(() => this._fog, () => this._updateFogHaze(), h3), l6(() => this.view.state.mode, () => {
      this._setNeedsRender();
    }, U3), l6(() => this._weatherUpdateParameters, () => {
      this._updateWeather(), this._updateFogHaze();
    }, w3)]);
  }
  uninitializeRenderContext() {
    this._context = null, this._atmosphere = l(this._atmosphere), this._set("_stars", l(this._stars)), this._set("_precipitation", l(this._precipitation)), this._set("_clouds", l(this._clouds)), this._set("_cloudsComposition", l(this._cloudsComposition)), this._set("_fog", l(this._fog));
  }
  prepareRender(e78) {
    var _a;
    e78.bindParameters.cloudsFade.data = I9(this._clouds) ? this._clouds : null, "local" !== this.view.viewingMode && null != ((_a = e78.bindParameters.cloudsFade.data) == null ? void 0 : _a.cubeMap) && (_15(e78.bindParameters.cloudsFade, e78.bindParameters.camera, this.view.state.mode, e78.time, this.view.qualitySettings.fadeDuration), this._updateWeatherFading(e78.bindParameters), e78.bindParameters.cloudsFade.renderingStage === N5.FINISHED && null != this._clouds && 0 === this._clouds.coverage && false === this._clouds.running && (this._clouds.destroyFrameBufferCube(), e78.bindParameters.cloudsFade.data = null));
  }
  render(e78) {
    var _a, _b, _c, _d, _e4, _f, _g, _h, _i;
    if (e78.output === h13.Color)
      switch (e78.bindParameters.slot) {
        case E8.POSTPROCESSING_ENVIRONMENT_OPAQUE:
          null != this._stars && this._stars.render(e78), null != this.atmosphere && (this.atmosphere.render(e78, ((_a = this.view) == null ? void 0 : _a.qualitySettings.highResolutionAtmosphere) || ((_d = (_c = (_b = this.view) == null ? void 0 : _b._stage) == null ? void 0 : _c.renderer) == null ? void 0 : _d.isFeatureEnabled(o38.HighResolutionAtmosphere))), null != this._cloudsComposition && null != e78.bindParameters.cloudsFade.data && (this.weatherVisible && null != this._clouds && this._clouds.updateWeatherTile(), this._cloudsComposition.render(e78)), p37(e78.bindParameters.cloudsFade) && null != this._context && null != ((_e4 = e78.bindParameters.cloudsFade.data) == null ? void 0 : _e4.cubeMap) && this._context.requestRender());
          break;
        case E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT:
          if (null != this.atmosphere && (this.atmosphere.renderHaze(e78, this._weatherParameters.hazeAmount, ((_f = this.view) == null ? void 0 : _f.qualitySettings.highResolutionAtmosphere) || ((_i = (_h = (_g = this.view) == null ? void 0 : _g._stage) == null ? void 0 : _h.renderer) == null ? void 0 : _i.isFeatureEnabled(o38.HighResolutionAtmosphere))), this._weatherParameters.fog.amount > 0 && null != this._fog && this._fog.render(e78, this._weatherParameters.fog), null != this._precipitation)) {
            const t88 = this.view.environment.weather;
            "rainy" !== t88.type && "snowy" !== t88.type || this._precipitation.render(e78, t88.precipitation, t88.type);
          }
      }
  }
  updateLightSources(e78, t88, s84, r79) {
    if (null != this._context) {
      const i78 = this._context.renderContext;
      i78.bindParameters.oldLighting.copyFrom(i78.bindParameters.lighting), i78.bindParameters.newLighting.noonFactor = t88, i78.bindParameters.newLighting.globalFactor = s84, i78.bindParameters.newLighting.set(e78);
      r79 === e35.Faded || i78.bindParameters.weatherFading ? i78.bindParameters.fadeLighting(0) : i78.bindParameters.fadeLighting(1), this._context.requestRender();
    }
  }
  get _weatherUpdateParameters() {
    const e78 = this.weatherEnabled ? this.view.environment.weather : null;
    return null == e78 ? null : "rainy" === e78.type || "snowy" === e78.type ? { type: e78.type, weatherAdjustment: e78.cloudCover, effect: e78.precipitation } : { type: e78.type, weatherAdjustment: "foggy" === e78.type ? e78.fogStrength : e78.cloudCover };
  }
  _updateWeatherFading(e78) {
    if (!e78.weatherFading)
      return;
    const t88 = e78.cloudsFade;
    return t88.fadeIn.stage === r35.FADE_IN ? (e78.fadeLighting(t88.fadeIn.factor), void this._fadeWeather(t88.fadeIn.factor)) : t88.fadeInOut.stage === I10.FADE_IN ? (e78.fadeLighting(t88.fadeInOut.factor), void this._fadeWeather(t88.fadeInOut.factor)) : t88.crossFade.enabled ? (e78.fadeLighting(t88.crossFade.factor), void this._fadeWeather(t88.crossFade.factor)) : (e78.fadeLighting(0), void this._fadeWeather(0));
  }
  _fadeWeather(e78) {
    const { _newWeatherParameters: t88, _oldWeatherParameters: s84 } = this;
    e78 >= 1 ? this._weatherParameters = t88 : (this._fadedWeatherParameters.lerp(s84, t88, e78), this._weatherParameters = this._fadedWeatherParameters);
  }
  _updateWeather() {
    const e78 = this._weatherUpdateParameters;
    null != e78 && null != this._clouds && (this._clouds.applyPreset(e32[e78.type], e78.weatherAdjustment), this._setNeedsRender());
  }
  _setNeedsRender() {
    null != this._context && this._context.requestRender();
  }
  _updateFogHaze() {
    const e78 = this._weatherUpdateParameters;
    if (null == this._fog || null == e78 || null == this._context)
      return;
    const t88 = this._context.renderContext.bindParameters;
    switch (this._oldWeatherParameters.copyFrom(this._weatherParameters), e78.type) {
      case "foggy":
        this._newWeatherParameters.fog.strength = s12(3e-5, 5e-3, e78.weatherAdjustment ** 3), r7(this._newWeatherParameters.fog.color, B7), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
        break;
      case "rainy":
        this._newWeatherParameters.fog.strength = s12(4e-6, 2e-4, (e78.effect ?? 0) ** 3), r7(this._newWeatherParameters.fog.color, D8), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 0, this._setNeedsRender();
        break;
      case "snowy":
        this._newWeatherParameters.fog.strength = s12(4e-6, 2e-4, (e78.effect ?? 0) ** 3), r7(this._newWeatherParameters.fog.color, B7), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
        break;
      default:
        this._newWeatherParameters.fog.strength = 0, this._newWeatherParameters.fog.amount = 0, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
    }
    t88.weatherFading ? this._fadeWeather(0) : this._fadeWeather(1);
  }
  _updateAtmosphere(e78) {
    const t88 = this._selectAtmosphereType(e78);
    if (t88 !== a46.None && this._context) {
      if (!this._atmosphere || this._atmosphere.type !== t88) {
        this._atmosphere = l(this._atmosphere);
        const e79 = this._getAtmosphereClass(t88);
        e79 && (this._atmosphere = new e79(this.view, this._context));
      }
    } else
      this._atmosphere = l(this._atmosphere);
    this._setNeedsRender();
  }
  _getAtmosphereClass(e78) {
    switch (e78) {
      case a46.Realistic:
        return q6;
      case a46.Local:
        return d36;
      case a46.Mars:
        return z11;
      default:
      case a46.None:
        return null;
    }
  }
  _selectAtmosphereType(e78) {
    const { enabled: t88, viewingMode: s84 } = e78;
    return !t88 || P2(this.view.spatialReference) ? a46.None : s84 === l14.Local ? a46.Local : null != this._context && q6.isSupported(this._context) && R2(this.view.spatialReference) ? a46.Realistic : T2(this.view.spatialReference) ? a46.Mars : a46.None;
  }
  get test() {
    return { atmosphere: this._atmosphere, clouds: this._clouds, selectAtmosphereType: () => this._selectAtmosphereType({ viewingMode: this.view.state.viewingMode, enabled: this.view.environment.atmosphereEnabled }), stubGetAtmosphereClass: (e78) => {
      Q3 = H9.prototype._getAtmosphereClass, H9.prototype._getAtmosphereClass = e78;
    }, restoreGetAtmosphereClass: () => {
      H9.prototype._getAtmosphereClass = Q3;
    } };
  }
};
e([y({ constructOnly: true })], k9.prototype, "view", void 0), e([y({ readOnly: true })], k9.prototype, "atmosphere", null), e([y({ readOnly: true })], k9.prototype, "_atmosphereType", null), e([y({ type: Boolean, readOnly: true })], k9.prototype, "updating", null), e([y({ readOnly: true })], k9.prototype, "weatherVisible", null), e([y()], k9.prototype, "_context", void 0), e([y()], k9.prototype, "_atmosphere", void 0), e([y({ readOnly: true })], k9.prototype, "_stars", null), e([y({ readOnly: true })], k9.prototype, "_precipitation", null), e([y({ readOnly: true })], k9.prototype, "_clouds", null), e([y({ readOnly: true })], k9.prototype, "_cloudsComposition", null), e([y({ readOnly: true })], k9.prototype, "_fog", null), e([y({ readOnly: true })], k9.prototype, "weatherEnabled", null), e([y({ readOnly: true })], k9.prototype, "_precipitationEnabled", null), e([y({ readOnly: true })], k9.prototype, "_weatherUpdateParameters", null), k9 = H9 = e([a4("esri.views.3d.environment.EnvironmentRenderer")], k9);
var G10 = class {
  constructor() {
    this.fog = new x15(), this.hazeAmount = 1;
  }
  copyFrom(e78) {
    this.fog.amount = e78.fog.amount, this.hazeAmount = e78.hazeAmount, this.fog.strength = e78.fog.strength, r7(this.fog.color, e78.fog.color);
  }
  lerp(e78, t88, r79) {
    this.fog.amount = s12(e78.fog.amount, t88.fog.amount, r79), this.hazeAmount = s12(e78.hazeAmount, t88.hazeAmount, r79), this.fog.strength = s12(e78.fog.strength, t88.fog.strength, r79), A3(this.fog.color, e78.fog.color, t88.fog.color, r79);
  }
};
var D8 = r5(0.5, 0.5, 0.5);
var B7 = r5(1.5, 1.5, 1.5);
var Q3;

// node_modules/@arcgis/core/views/3d/support/earthUtils.js
function u28(t88, n103, o77) {
  if (null == n103.longitude || null == n103.latitude || null == o77.longitude || null == o77.latitude)
    throw new Error("Invalid points: no lon/lat");
  return i50(t88, n103.longitude, n103.latitude, o77.longitude, o77.latitude);
}
function i50(t88, e78, r79, u58, i78) {
  const s84 = M2(r79), l75 = M2(i78), a85 = s84 - l75, c75 = M2(e78) - M2(u58), d63 = Math.sin(a85 / 2), h58 = Math.sin(c75 / 2), m55 = 2 * F3(Math.sqrt(d63 * d63 + Math.cos(s84) * Math.cos(l75) * h58 * h58)) * t88;
  return Math.round(1e4 * m55) / 1e4;
}
function s49(t88, n103, o77) {
  const i78 = n103.spatialReference, s84 = A2(i78), l75 = new x3(n103.x, t88.y, i78), a85 = new x3(o77.x, t88.y, i78), c75 = new x3(t88.x, n103.y, i78), d63 = new x3(t88.x, o77.y, i78);
  return { lon: u28(s84.radius, l75, a85), lat: u28(s84.radius, c75, d63) };
}
function l34(e78, r79, u58) {
  const i78 = r79 / u58, s84 = M2(e78), l75 = Math.sin(i78 / 2), a85 = Math.cos(s84), c75 = 2 * F3(Math.sqrt(l75 * l75 / (a85 * a85)));
  return m2(c75);
}
function a47(t88, n103) {
  let o77 = t88 / 15;
  return n103 || (o77 = Math.round(o77)), o77;
}
function c40(t88, n103) {
  const o77 = t88 == null ? void 0 : t88[0];
  if (null == o77)
    return null;
  n103 || (n103 = { hours: 0, minutes: 0, seconds: 0 }), n103.hours = a47(o77, true);
  const e78 = n103.hours % 1;
  n103.hours -= e78, n103.minutes = 60 * e78;
  const r79 = n103.minutes % 1;
  return n103.minutes -= r79, n103.seconds = Math.round(60 * r79), n103;
}

// node_modules/@arcgis/core/chunks/SunCalc.js
var t50;
var r44;
var e36;
var o46 = { exports: {} };
o46.exports, t50 = o46, r44 = function() {
  var n103 = Math.PI, t88 = Math.sin, r79 = Math.cos, e78 = Math.tan, o77 = Math.asin, u58 = Math.atan2, a85 = Math.acos, i78 = n103 / 180, c75 = 864e5, f59 = 2440588, s84 = 2451545, d63 = { dec: 0, ra: 0 };
  function p70(n104) {
    return n104.valueOf() / c75 - 0.5 + f59;
  }
  function v44(n104) {
    return new Date((n104 + 0.5 - f59) * c75);
  }
  function M26(n104) {
    return p70(n104) - s84;
  }
  var l75 = 23.4397 * i78;
  function h58(n104, o78) {
    return u58(t88(n104) * r79(l75) - e78(o78) * t88(l75), r79(n104));
  }
  function x36(n104, e79) {
    return o77(t88(e79) * r79(l75) + r79(e79) * t88(l75) * t88(n104));
  }
  function N21(n104, o78, a86) {
    return u58(t88(n104), r79(n104) * t88(o78) - e78(a86) * r79(o78));
  }
  function P29(n104, e79, u59) {
    return o77(t88(e79) * t88(u59) + r79(e79) * r79(u59) * r79(n104));
  }
  function m55(n104, t89) {
    return i78 * (280.16 + 360.9856235 * n104) - t89;
  }
  function E43(n104) {
    return i78 * (357.5291 + 0.98560028 * n104);
  }
  function I29(n104) {
    return i78 * (1.9148 * t88(n104) + 0.02 * t88(2 * n104) + 3e-4 * t88(3 * n104));
  }
  function g49(t89, r80) {
    return t89 + r80 + 102.9372 * i78 + n103;
  }
  function O29(n104, t89) {
    var r80 = E43(n104), e79 = g49(r80, I29(r80));
    return t89 || (t89 = { dec: 0, ra: 0 }), t89.dec = x36(e79, 0), t89.ra = h58(e79, 0), t89;
  }
  var T31 = { PolarException: { NORMAL: 0, MIDNIGHT_SUN: 1, POLAR_NIGHT: 2 }, getPosition: function(n104, t89, r80, e79) {
    var o78 = i78 * -r80, u59 = i78 * t89, a86 = M26(n104), c76 = O29(a86, d63), f60 = m55(a86, o78) - c76.ra;
    return e79 || (e79 = { azimuth: 0, altitude: 0 }), e79.azimuth = N21(f60, u59, c76.dec), e79.altitude = P29(f60, u59, c76.dec), e79;
  } }, A39 = [[-0.83, "sunrise", "sunset"]];
  T31.addTime = function(n104, t89, r80) {
    A39.push([n104, t89, r80]);
  };
  var H26 = 9e-4;
  function L28(t89, r80) {
    return Math.round(t89 - H26 - r80 / (2 * n103));
  }
  function R25(t89, r80, e79) {
    return H26 + (t89 + r80) / (2 * n103) + e79;
  }
  function _42(n104, r80, e79) {
    return s84 + n104 + 53e-4 * t88(r80) - 69e-4 * t88(2 * e79);
  }
  function G22(n104, e79, o78) {
    return a85((t88(n104) - t88(e79) * t88(o78)) / (r79(e79) * r79(o78)));
  }
  function z21(n104) {
    var e79 = i78 * (134.963 + 13.064993 * n104), o78 = i78 * (93.272 + 13.22935 * n104), u59 = i78 * (218.316 + 13.176396 * n104) + 6.289 * i78 * t88(e79), a86 = 5.128 * i78 * t88(o78), c76 = 385001 - 20905 * r79(e79);
    return { ra: h58(u59, a86), dec: x36(u59, a86), dist: c76 };
  }
  return T31.getTimes = function(n104, e79, o78) {
    var u59 = i78 * -o78, a86 = i78 * e79, c76 = L28(M26(n104), u59), f60 = R25(0, u59, c76), s85 = E43(f60), d64 = I29(s85), p71 = g49(s85, d64), l76 = x36(p71, 0), h59 = _42(f60, s85, p71);
    function N22(n105) {
      return _42(R25(G22(n105, a86, l76), u59, c76), s85, p71);
    }
    function P30(n105) {
      var e80 = (t88(n105) - t88(a86) * t88(l76)) / (r79(a86) * r79(l76));
      return e80 < -1 ? T31.PolarException.MIDNIGHT_SUN : e80 > 1 ? T31.PolarException.POLAR_NIGHT : T31.PolarException.NORMAL;
    }
    var m56, O30, H27, z22, D21, S27 = { solarNoon: v44(h59), nadir: v44(h59 - 0.5), polarException: T31.PolarException.NORMAL };
    for (m56 = 0, O30 = A39.length; m56 < O30; m56 += 1)
      D21 = h59 - ((z22 = N22((H27 = A39[m56])[0] * i78)) - h59), S27[H27[1]] = v44(D21), S27[H27[2]] = v44(z22);
    return S27.polarException = P30(A39[0][0] * i78), S27;
  }, T31.getMoonPosition = function(n104, t89, r80) {
    var o78 = i78 * -r80, u59 = i78 * t89, a86 = M26(n104), c76 = z21(a86), f60 = m55(a86, o78) - c76.ra, s85 = P29(f60, u59, c76.dec);
    return s85 += 0.017 * i78 / e78(s85 + 10.26 * i78 / (s85 + 5.1 * i78)), { azimuth: N21(f60, u59, c76.dec), altitude: s85, distance: c76.dist };
  }, T31.getMoonFraction = function(n104) {
    var e79 = M26(n104), o78 = O29(e79), i79 = z21(e79), c76 = 149598e3, f60 = a85(t88(o78.dec) * t88(i79.dec) + r79(o78.dec) * r79(i79.dec) * r79(o78.ra - i79.ra)), s85 = u58(c76 * t88(f60), i79.dist - c76 * r79(f60));
    return (1 + r79(s85)) / 2;
  }, T31;
}, void 0 !== (e36 = r44()) && (t50.exports = e36);
var u29 = t11(o46.exports);

// node_modules/@arcgis/core/views/3d/support/sunUtils.js
var j12 = { local: { altitude: 1500, ambientAtNight: 0.1, ambientAtNoon: 0.45, ambientAtTwilight: 0.2, directAtNoon: 0.65, directAtTwilight: 0.7 }, global: { altitude: 8e5, ambient: 0.015, direct: 0.75 }, planarDirection: { localAltitude: 1e4, globalAltitude: 1e6, globalAngles: { azimuth: 1.3 * Math.PI, altitude: 0.6 * Math.PI } } };
var x17 = class {
  constructor(t88, e78) {
    this.direct = t88, this.ambient = e78;
  }
};
function S13(i78, n103, o77, a85, l75, s84) {
  o4(s84.ambient.color, 1, 1, 1), s84.ambient.intensity = j12.global.ambient, o4(s84.direct.color, 1, 1, 1), s84.direct.intensity = j12.global.direct;
  const c75 = n103[2], r79 = i3((Math.abs(c75) - j12.local.altitude) / (j12.global.altitude - j12.local.altitude), 0, 1);
  let u58;
  if (s84.globalFactor = r79, null != i78 && (u58 = u29.getTimes(i78, n103[1], n103[0])), r79 < 1) {
    let e78;
    if (null != i78)
      e78 = nt(i78, u58, a85);
    else {
      const t88 = F15(a85);
      e78 = { direct: { intensity: j12.local.directAtNoon * t88.direct, color: r5(1, 1, 1) }, ambient: { intensity: j12.local.ambientAtNoon * t88.ambient, color: r5(1, 1, 1) }, timeOfDay: "early afternoon" };
    }
    A3(s84.ambient.color, e78.ambient.color, s84.ambient.color, r79), s84.ambient.intensity = s12(e78.ambient.intensity, s84.ambient.intensity, r79), A3(s84.direct.color, e78.direct.color, s84.direct.color, r79), s84.direct.intensity = s12(e78.direct.intensity, s84.direct.intensity, r79), s84.specularStrength = "rainy" === a85 || "snowy" === a85 || "foggy" === a85 ? 0 : 1, s84.environmentStrength = "rainy" === a85 ? 0.7 : "snowy" === a85 || "foggy" === a85 ? 0.75 : 1;
  }
  s84.noonFactor = null != i78 ? H10(i78, u58) : 1, null != i78 ? P12(i78, n103, o77, s84.direct.directionToLightSource) : O13(l75, o77, s84.direct.directionToLightSource);
}
function O13(t88, e78, n103) {
  e78 === l14.Global ? z2(lt, t88.eye) : o4(lt, 0, 0, 1), g3(st2, t88.viewForward, -1);
  const o77 = x10(st2, lt), a85 = Math.max(o77 - 2 * rt, 0), l75 = 0.85 * a85 / (a85 + 1), s84 = Math.max(rt, o77 - rt - l75);
  g4(at, -s84, t88.viewRight), O(n103, st2, at), u2(n103, n103, g3(ct, t88.viewRight, ut)), z2(n103, n103);
}
function P12(t88, i78, s84, c75) {
  const r79 = G11, u58 = r10(I13);
  if (s84 === l14.Global)
    u29.getPosition(t88, 0, 0, r79), o4(c75, 0, 0, -1), l8(u58, u58, -r79.azimuth), m5(u58, u58, -r79.altitude), O(c75, c75, u58);
  else {
    const n103 = j12.planarDirection, a85 = n103.globalAngles, s85 = i78[2];
    let m55 = (Math.abs(s85) - n103.localAltitude) / (n103.globalAltitude - n103.localAltitude);
    m55 = i3(m55, 0, 1), m55 < 1 ? (u29.getPosition(t88, i78[1], i78[0], r79), r79.azimuth = (1 - m55) * r79.azimuth + m55 * a85.azimuth, r79.altitude = (1 - m55) * r79.altitude + m55 * a85.altitude) : (r79.azimuth = a85.azimuth, r79.altitude = a85.altitude), o4(c75, 0, -1, 0), x6(u58, u58, -r79.azimuth), l8(u58, u58, -r79.altitude), O(c75, c75, u58);
  }
}
function z12(t88, e78) {
  if (e78 === l14.Global)
    return true;
  const i78 = j12.planarDirection;
  return Math.abs(t88) < i78.localAltitude;
}
var D9 = r5(0.5773502691896258, -0.5773502691896258, 0.5773502691896258);
var E17 = class {
  constructor() {
    this.ambient = { color: r5(1, 1, 1), intensity: 0.55 }, this.direct = { color: r5(1, 1, 1), intensity: 0.55, directionToLightSource: t8(D9) }, this.noonFactor = 0.5, this.globalFactor = 0, this.specularStrength = 1, this.environmentStrength = 1;
  }
};
var I13 = e17();
var G11 = { azimuth: 0, altitude: 0 };
function H10(t88, i78) {
  const n103 = t88.valueOf();
  let o77, a85;
  i78.polarException === u29.PolarException.MIDNIGHT_SUN ? (o77 = n103 - 60 * (t88.getHours() + 48) * 60 * 1e3 - 60 * t88.getMinutes() * 1e3, a85 = o77 + 432e6) : i78.polarException === u29.PolarException.POLAR_NIGHT ? (o77 = n103 - 2, a85 = n103 - 1) : (o77 = i78.sunrise.valueOf(), a85 = i78.sunset.valueOf());
  const l75 = o77 + (a85 - o77) / 2;
  return 1 - i3(Math.abs(n103 - l75) / 432e5, 0, 1);
}
function F15(t88) {
  switch (t88) {
    case "disabled":
    case "sunny":
    case "cloudy":
      return new x17(1, 1);
    case "rainy":
      return new x17(0.4, 1.2);
    case "snowy":
      return new x17(0.5, 1.3);
    case "foggy":
      return new x17(0.2, 1.6);
  }
}
function L12(t88, e78) {
  const i78 = (t88[0] + t88[1] + t88[2]) / 3;
  t88[0] += (i78 - t88[0]) * e78, t88[1] += (i78 - t88[1]) * e78, t88[2] += (i78 - t88[2]) * e78;
}
var R11 = r5(0.01, 0.01, 0.01);
var U9 = r5(1, 0.6, 0.5);
var _16 = r5(1, 0.98, 0.98);
var C12 = r5(1, 1, 1);
var V9 = r5(0.8, 0.8, 1);
var q8 = r5(0.8, 0.8, 1);
var B8 = r5(0.98, 0.98, 1);
var J6 = r5(1, 1, 1);
var K5 = r15(0.01, j12.local.ambientAtNight);
var Q4 = r15(j12.local.directAtTwilight, j12.local.ambientAtTwilight);
var W9 = r15(0.9 * j12.local.directAtNoon, j12.local.ambientAtNoon);
var X6 = r15(j12.local.directAtNoon, j12.local.ambientAtNoon);
var Y7 = W9;
var Z4 = _16;
var $3 = B8;
var tt2 = Q4;
var et = U9;
var it = q8;
function nt(t88, e78, i78) {
  const n103 = t88.valueOf();
  let o77, a85;
  e78.polarException === u29.PolarException.MIDNIGHT_SUN ? (o77 = n103 - 60 * (t88.getHours() + 48) * 60 * 1e3 - 60 * t88.getMinutes() * 1e3, a85 = o77 + 432e6) : e78.polarException === u29.PolarException.POLAR_NIGHT ? (o77 = n103 - 2, a85 = n103 - 1) : (o77 = e78.sunrise.valueOf(), a85 = e78.sunset.valueOf());
  const l75 = a85 - o77, s84 = o77 + l75 / 2, u58 = l75 / 4, h58 = s84 - u58, f59 = s84 + u58, g49 = 0.06 * l75, b31 = o77 - g49 / 2, y41 = o77 + g49 / 2, A39 = a85 - g49 / 2, N21 = a85 + g49 / 2, v44 = n20(), M26 = n7(), j29 = n7();
  let x36 = "";
  if (n103 < b31 || n103 > N21)
    a14(v44, K5), r7(M26, R11), r7(j29, V9), x36 = "night";
  else if (n103 < y41) {
    const t89 = (n103 - b31) / (y41 - b31);
    A4(v44, K5, Q4, t89), A3(M26, R11, U9, t89), A3(j29, V9, q8, t89), x36 = "sun rising";
  } else if (n103 < h58) {
    const t89 = (n103 - y41) / (h58 - y41);
    A4(v44, Q4, W9, t89), A3(M26, U9, _16, t89), A3(j29, q8, B8, t89), x36 = "early morning";
  } else if (n103 < s84) {
    const t89 = (n103 - h58) / (s84 - h58);
    A4(v44, W9, X6, t89), A3(M26, _16, C12, t89), A3(j29, B8, J6, t89), x36 = "late morning";
  } else if (n103 < f59) {
    const t89 = (n103 - s84) / (f59 - s84);
    A4(v44, X6, Y7, t89), A3(M26, C12, Z4, t89), A3(j29, J6, $3, t89), x36 = "early afternoon";
  } else if (n103 < A39) {
    const t89 = (n103 - f59) / (A39 - f59);
    A4(v44, Y7, tt2, t89), A3(M26, Z4, et, t89), A3(j29, $3, it, t89), x36 = "late afternoon";
  } else if (n103 < N21) {
    const t89 = (n103 - A39) / (N21 - A39);
    A4(v44, tt2, K5, t89), A3(M26, et, R11, t89), A3(j29, it, V9, t89), x36 = "sun setting";
  }
  let S27 = 0;
  switch (i78) {
    case "rainy":
    case "foggy":
      S27 = 0.8;
      break;
    case "snowy":
      S27 = 0.5;
  }
  S27 > 0 && (L12(M26, S27), L12(j29, S27));
  const O29 = F15(i78);
  return { direct: { intensity: v44[0] * O29.direct, color: M26 }, ambient: { intensity: v44[1] * O29.ambient, color: j29 }, timeOfDay: x36 };
}
var at = e17();
var lt = n7();
var st2 = n7();
var ct = n7();
var rt = 0.25;
var ut = 0.2;

// node_modules/@arcgis/core/views/3d/environment/SceneViewEnvironmentManager.js
var k10 = class extends n9.EventedAccessor {
  constructor() {
    super(), this._referencePointUpdateDelay = 200, this._referencePointUpdateInterval = 3e3, this._referencePointUpdateDistThreshold = 1e6, this._referencePosUpdateQuery = null, this._referencePosMapCoordsRequested = null, this._viewHandles = new t3(), this._preserveAbsoluteDateTime = false, this._trackingEnabled = false, this._referencePosResetPreserveAbsoluteTime = false, this._referencePosUpdateTimer = null, this._referencePosMapCoords = null, this._mainLight = new n33(), this._ambientLight = new i22(), this._moonLight = new c19(), this.disableQueries = false, this._disableWeather = false, this._renderer = null, this._referencePosWGS84Comparable = null, this._resetReferencePosition();
  }
  destroy() {
    this.disconnectView(), this._viewHandles.destroy();
  }
  get _view() {
    var _a;
    return (_a = this._renderer) == null ? void 0 : _a.view;
  }
  get updating() {
    var _a;
    return !((this.disableQueries || !this._referencePosUpdateQuery && !this._referencePosMapCoordsRequested) && !((_a = this._renderer) == null ? void 0 : _a.updating));
  }
  get weatherEnabled() {
    var _a, _b, _c;
    return ((_a = this._view) == null ? void 0 : _a.environment.atmosphereEnabled) && !this._disableWeather && ((_c = (_b = this._view) == null ? void 0 : _b.state) == null ? void 0 : _c.viewingMode) === l14.Global && R2(this._view.spatialReference);
  }
  get weatherVisible() {
    var _a;
    return this.weatherEnabled && ((_a = this._renderer) == null ? void 0 : _a.weatherVisible);
  }
  get referencePositionWGS84Comparable() {
    return this._referencePosWGS84Comparable;
  }
  connectView(e78) {
    if (this._renderer)
      return;
    this._renderer = new k9({ view: e78 });
    const t88 = () => this._updateRenderParameters(), r79 = () => this._cameraHandler();
    this._viewHandles.add([l6(() => e78.environment.lighting, (e79) => this._updateLightingHandler(e79), U3), l6(() => "virtual" !== e78.environment.lighting.type ? e78.environment.lighting.date : null, (e79) => this._lightingDateHandler(e79), U3), l6(() => e78.stationary, () => this._interactingStationaryHandler()), l6(() => e78.environment.lighting.directShadowsEnabled, t88, U3), l6(() => e78.qualitySettings.ambientOcclusion, t88, U3), l6(() => e78.qualitySettings.reflections, t88, U3), l6(() => {
      var _a;
      return (_a = e78.environment.background) == null ? void 0 : _a.color;
    }, t88, U3), l6(() => e78.spatialReference, () => this._resetReferencePosition(true), U3), l6(() => e78.environment.weather.type, () => this._updateLighting(null, e35.Faded), U3), l6(() => this.weatherEnabled, () => this._updateLighting(null, e35.Faded), U3), l6(() => e78.viewingMode, () => this._resetReferencePosition(true), w3), l6(() => "virtual" !== e78.environment.lighting.type && e78.environment.lighting.cameraTrackingEnabled, (e79) => this._updateCameraTracking(e79), w3), l6(() => e78.state.camera, r79, w3), l6(() => this.disableQueries, r79)]), this._updateRenderParameters(), this._updateLighting(), this._cameraHandler(), this.notifyChange("updating");
  }
  disconnectView() {
    this._viewHandles.removeAll(), this._resetReferencePosition(), this._renderer = l(this._renderer);
  }
  _updateLightingHandler(e78) {
    this._updateCameraTracking("virtual" !== e78.type && e78.cameraTrackingEnabled), this._lightingDateHandler("virtual" !== e78.type ? e78.date : null), this._updateRenderParameters();
  }
  _updateCameraTracking(e78) {
    if (this._trackingEnabled = e78, e78)
      this._cameraHandler();
    else {
      const e79 = this._view.environment.lighting;
      "virtual" !== (e79 == null ? void 0 : e79.type) && (e79.positionTimezoneInfo.autoUpdated = false);
    }
  }
  _lightingDateHandler(e78) {
    const t88 = this._view.environment.lighting;
    if ("virtual" !== (t88 == null ? void 0 : t88.type)) {
      if (e78) {
        if (!t88.positionTimezoneInfo.autoUpdated) {
          this._preserveAbsoluteDateTime = true;
          const r79 = this._view.spatialReference;
          if (!ce(r79)) {
            const e79 = this._view.camera.position;
            if (!this._referencePosMapCoords || !this._referencePosMapCoords.equals(e79))
              return void this._requestReferencePositionUpdate(e79);
          }
          if (this._preupdateTracking(e78), null != this._referencePosWGS84Comparable) {
            const e79 = c40(this._referencePosWGS84Comparable, D10);
            null != e79 && (t88.autoUpdate(null, e79), this._trackingEnabled && (t88.positionTimezoneInfo.autoUpdated = true));
          }
        }
        this._updateLighting(e78);
      }
    } else
      this._updateLighting();
  }
  _preupdateTracking(e78) {
    !this._trackingEnabled && "virtual" !== this._view.environment.lighting.type && this._view.environment.lighting.cameraTrackingEnabled && this._cameraHandler(e78);
  }
  _cameraHandler(e78 = null) {
    const t88 = this._view;
    if (!t88.ready)
      return;
    const r79 = t88.stateManager.camera;
    r79 && (this._cameraHandlerClientSide(r79, e78) || this._cameraHandlerServerSide(r79));
  }
  _cameraHandlerClientSide(e78, t88) {
    const r79 = R2(this._view.spatialReference);
    if (r79 && !ce(this._view.spatialReference))
      return "virtual" === this._view.environment.lighting.type && this._updateLighting(), false;
    const i78 = e78.position;
    return null == this._referencePosWGS84Comparable && (this._referencePosWGS84Comparable = n7()), r79 ? gn(i78, this._referencePosWGS84Comparable) : o4(this._referencePosWGS84Comparable, i78.longitude ?? 0, i78.latitude ?? 0, i78.z ?? 0), this.notifyChange("referencePositionWGS84Comparable"), this._autoUpdateTimezone(this._referencePosWGS84Comparable, t88) || this._updateLighting(t88), true;
  }
  _cameraHandlerServerSide(e78) {
    const t88 = e78.position;
    (!this._referencePosMapCoords || this._referencePosMapCoordsRequested || this._exceedsReferencePosDistThreshold(t88)) && this._requestReferencePositionUpdate(t88, true), this._view.mapCoordsHelper && this._referencePosWGS84Comparable && (this._referencePosWGS84Comparable[2] = (t88.z ?? 0) * this._view.mapCoordsHelper.unitInMeters, this._referencePosChanged());
  }
  _interactingStationaryHandler() {
    this._view.stationary && this._executePendingReferencePositionUpdate();
  }
  _updateLighting(e78, t88 = e35.Immediate) {
    const r79 = this._view;
    e78 = e78 || ("virtual" === r79.environment.lighting.type ? null : r79.environment.lighting.date);
    const i78 = this._referencePosWGS84Comparable, s84 = null != i78 ? q9 : E18, n103 = this.weatherVisible ? r79.environment.weather.type : "disabled";
    null != i78 ? S13(e78, i78, r79.state.viewingMode, n103, r79.state.camera, s84) : "virtual" === r79.environment.lighting.type && O13(r79.state.camera, r79.state.viewingMode, s84.direct.directionToLightSource);
    const o77 = this._mainLight, a85 = s84.direct;
    g3(o77.intensity, a85.color, a85.intensity * Math.PI), r7(o77.direction, a85.directionToLightSource), o77.specularStrength = s84.specularStrength, o77.environmentStrength = s84.environmentStrength;
    const h58 = this._ambientLight;
    g3(h58.intensity, s84.ambient.color, s84.ambient.intensity);
    const c75 = this._moonLight;
    A3(c75.intensity, A22, I14, s84.globalFactor);
    const l75 = (1 - 0.5 * s84.globalFactor) * (1 - 0.4 * s84.noonFactor * (1 - s84.globalFactor));
    g3(c75.intensity, c75.intensity, l75), r7(c75.direction, a85.directionToLightSource), this._renderer.updateLightSources([o77, h58, c75], s84.noonFactor, s84.globalFactor, t88), this._updateRenderParameters();
  }
  _autoUpdateTimezone(e78, t88 = null) {
    if ("virtual" === this._view.environment.lighting.type || !this._view.environment.lighting.cameraTrackingEnabled || null == e78)
      return false;
    const r79 = Q5;
    r79.setTime((t88 || this._view.environment.lighting.date).getTime());
    const i78 = c40(e78, D10);
    if (null == i78)
      return false;
    let s84 = this._view.environment.lighting.positionTimezoneInfo;
    if (s84.autoUpdated) {
      if (s84.hours === i78.hours && s84.minutes === i78.minutes && s84.seconds === i78.seconds)
        return false;
    } else
      s84 = i78;
    const n103 = r79.getUTCHours() - (i78.hours - s84.hours), o77 = r79.getUTCMinutes() - (i78.minutes - s84.minutes), a85 = r79.getUTCSeconds() - (i78.seconds - s84.seconds);
    return r79.setUTCHours(n103), r79.setUTCMinutes(o77), r79.setUTCSeconds(a85), !t88 && this._view.environment.lighting.autoUpdate(r79, i78);
  }
  _updateRenderParameters() {
    const e78 = this._view._stage;
    if (!e78)
      return;
    const r79 = null == this._referencePosWGS84Comparable || z12(this._referencePosWGS84Comparable[2], this._view.state.viewingMode), i78 = this._view.environment.background, s84 = i78 instanceof n58 ? { type: "color", color: e13(h7.toUnitRGBA(i78.color)) } : { type: "color", color: r12(0, 0, 0, 1) };
    e78.renderer.setParameters({ shadowMap: this._view.environment.lighting.directShadowsEnabled && r79, background: s84, environment: this._view.environment, weatherVisible: this._view.environmentManager.weatherVisible, qualitySettings: this._view.qualitySettings });
  }
  _resetReferencePosition(e78 = false) {
    this._cancelReferencePosUpdates(), this._referencePosMapCoords = null, this._referencePosMapCoordsRequested = null, this._referencePosResetPreserveAbsoluteTime = null, this._referencePosWGS84Comparable = null, this.notifyChange("updating"), e78 && this._cameraHandler();
  }
  _requestReferencePositionUpdate(e78, t88 = false) {
    if (!this.disableQueries && (this._referencePosMapCoordsRequested ? this._referencePosMapCoordsRequested.copy(e78) : this._referencePosMapCoordsRequested = e78.clone(), this._referencePosResetPreserveAbsoluteTime = !!t88, !this._referencePosUpdateQuery && !this._referencePosUpdateTimer && this._view.stationary)) {
      const e79 = this._referencePosUpdateQuery = g(this._referencePointUpdateDelay).then(() => {
        if (this._referencePosUpdateQuery === e79) {
          const t90 = () => this._referencePosUpdateQuery !== e79;
          return this._doReferencePositionUpdateQuery(t90);
        }
      }).catch((e80) => {
        "mapcoordshelper:missing-geometry-service" === e80.name && (this.disableQueries = true);
      }).then(() => {
        this._referencePosUpdateQuery === e79 && (this._referencePosUpdateQuery = null, this._referencePosUpdateTimer || this._executePendingReferencePositionUpdate(), this.notifyChange("updating"));
      }), t89 = this._referencePosUpdateTimer = g(this._referencePointUpdateInterval).then(() => {
        this._referencePosUpdateTimer === t89 && (this._referencePosUpdateTimer = null, this._referencePosUpdateQuery || this._executePendingReferencePositionUpdate());
      });
      this.notifyChange("updating");
    }
  }
  async _doReferencePositionUpdateQuery(e78) {
    this._referencePosResetPreserveAbsoluteTime && (this._preserveAbsoluteDateTime = false), this._referencePosMapCoords ? this._referencePosMapCoords.copy(this._referencePosMapCoordsRequested) : this._referencePosMapCoords = this._referencePosMapCoordsRequested.clone(), this._referencePosResetPreserveAbsoluteTime = null, this._referencePosMapCoordsRequested = null;
    const t88 = await this._view.mapCoordsHelper.toGeographic(this._referencePosMapCoords);
    if (!e78() && !isNaN(t88[0]) && !isNaN(t88[1])) {
      const e79 = (this._referencePosMapCoords.z ?? 0) * this._view.mapCoordsHelper.unitInMeters;
      this._referencePosWGS84Comparable ? (this._referencePosWGS84Comparable[0] = t88[0], this._referencePosWGS84Comparable[1] = t88[1], this._referencePosWGS84Comparable[2] = e79) : this._referencePosWGS84Comparable = [t88[0], t88[1], e79], this._referencePosChanged();
    }
  }
  _executePendingReferencePositionUpdate() {
    const e78 = this._referencePosMapCoordsRequested;
    e78 && this._requestReferencePositionUpdate(e78, this._referencePosResetPreserveAbsoluteTime);
  }
  _referencePosChanged() {
    this._preserveAbsoluteDateTime ? this._updateLighting() : this._autoUpdateTimezone(this._referencePosWGS84Comparable) || this._updateLighting(), this.notifyChange("referencePositionWGS84Comparable");
  }
  _exceedsReferencePosDistThreshold(e78) {
    if (this._referencePosMapCoords) {
      let t88 = this._referencePosMapCoords.distance(e78);
      return this._view.mapCoordsHelper && (t88 *= this._view.mapCoordsHelper.unitInMeters), t88 > this._referencePointUpdateDistThreshold;
    }
    return true;
  }
  _cancelReferencePosUpdates() {
    const e78 = !!this._referencePosUpdateQuery;
    return this._referencePosUpdateQuery = null, this._referencePosUpdateTimer = null, e78;
  }
  get test() {
    const e78 = this;
    return { get renderer() {
      return e78._renderer;
    }, set referencePointUpdateInterval(t88) {
      e78._referencePointUpdateInterval = t88;
    }, set referencePointUpdateDistThreshold(t88) {
      e78._referencePointUpdateDistThreshold = t88;
    }, set referencePosUpdateTimer(t88) {
      e78._referencePosUpdateTimer = t88;
    }, set referencePointUpdateDelay(t88) {
      e78._referencePointUpdateDelay = t88;
    }, set disableWeather(t88) {
      e78._disableWeather = t88;
    } };
  }
};
e([y({ type: Boolean, readOnly: true })], k10.prototype, "updating", null), e([y()], k10.prototype, "disableQueries", void 0), e([y()], k10.prototype, "_disableWeather", void 0), e([y()], k10.prototype, "weatherEnabled", null), e([y()], k10.prototype, "weatherVisible", null), e([y()], k10.prototype, "referencePositionWGS84Comparable", null), e([y()], k10.prototype, "_renderer", void 0), e([y()], k10.prototype, "_referencePosWGS84Comparable", void 0), k10 = e([a4("esri.views.3d.environment.SceneViewEnvironmentManager")], k10);
var q9 = new E17();
var E18 = new E17();
var Q5 = /* @__PURE__ */ new Date();
var D10 = { hours: 0, minutes: 0, seconds: 0 };
var A22 = r5(0.22, 0.22, 0.33);
var I14 = r5(0.22, 0.22, 0.22);

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/ConstraintTypes.js
var L13;
!function(L28) {
  L28[L28.NONE = 0] = "NONE", L28[L28.TILT = 1] = "TILT", L28[L28.ALTITUDE = 2] = "ALTITUDE", L28[L28.DISTANCE = 4] = "DISTANCE", L28[L28.COLLISION = 8] = "COLLISION", L28[L28.ALL = 15] = "ALL", L28[L28.ALL_EXCEPT_COLLISION = 7] = "ALL_EXCEPT_COLLISION";
}(L13 || (L13 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/InteractionType.js
var O14;
!function(O29) {
  O29[O29.NONE = 0] = "NONE", O29[O29.ZOOM = 1] = "ZOOM", O29[O29.TUMBLE = 2] = "TUMBLE", O29[O29.LOOK_AROUND = 3] = "LOOK_AROUND", O29[O29.PAN = 4] = "PAN", O29[O29.ASCEND = 5] = "ASCEND";
}(O14 || (O14 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/TiltMode.js
var O15;
!function(O29) {
  O29[O29.TUMBLE = 0] = "TUMBLE", O29[O29.LOOK_AROUND = 1] = "LOOK_AROUND";
}(O15 || (O15 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/common.js
function r45(t88, n103) {
  return 0 != (t88 & n103);
}
function e37(t88, n103, a85, i78, m55, o77) {
  0 !== t88 && (a85 ? (o77.min = Math.min(o77.min, n103), o77.max = Math.max(o77.max, n103)) : null != i78 ? (o77.min -= Math.max(0, (n103 - o77.min) * (1 - i78)), o77.max += Math.max(0, (n103 - o77.max) * (1 - i78))) : m55 && (o77.min -= Math.max(0, n103 - o77.min - m55), o77.max += Math.max(0, n103 - o77.max - m55)));
}
var c41 = { selection: L13.NONE, interactionType: O14.NONE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O15.TUMBLE };
function s50(i78, m55, o77, r79) {
  return m55 = m55 || i78.viewForward, r7(r79, m55), g3(r79, r79, Math.sign(P3(m55, o77))), r79;
}

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/altitude.js
function f31(t88, r79, n103 = c41) {
  const c75 = l35(t88, r79, n103);
  if (0 === c75)
    return false;
  const a85 = t88.renderCoordsHelper, m55 = a85.getAltitude(r79.eye) + c75, u58 = s50(r79, n103.interactionDirection, j13(t88, r79, Math.sign(c75), C13), g19), f59 = r7(M11, r79.viewForward), d63 = a85.intersectInfiniteManifold(p10(r79.eye, u58), m55, h27);
  return r79.eye = null != d63 ? d63 : a85.setAltitude(h27, m55, r79.eye), r79.center = j8(h27, r79.eye, f59, r79.center), true;
}
function l35(e78, r79, n103 = c41) {
  if (!d39(e78, n103) || !e78.state.constraints.altitude)
    return 0;
  const o77 = T14(e78.state.constraints.altitude, x18);
  y20(e78, n103, o77);
  const i78 = e78.renderCoordsHelper.getAltitude(r79.eye), c75 = i3(i78, o77.min, o77.max) - i78;
  return Math.abs(c75) <= 1e-6 ? 0 : c75;
}
function d39(t88, e78) {
  const r79 = t88.state.constraints.altitude;
  return !(!t88.state.isGlobal || !r79) && (e78.interactionType !== O14.TUMBLE || !r45(e78.selection, L13.TILT));
}
function y20(t88, e78, r79) {
  const n103 = e78.interactionType;
  if (n103 === O14.NONE)
    return;
  const { min: o77, max: i78 } = r79, { interactionStartCamera: s84, interactionFactor: c75 } = e78;
  if (!s84)
    return;
  const m55 = n103 === O14.TUMBLE || n103 === O14.ZOOM, p70 = l35(t88, s84), f59 = 0 === p70 ? 0 : t88.renderCoordsHelper.getAltitude(s84.eye);
  r79.min = o77, r79.max = i78;
  e37(p70, f59, m55, c75, 0.05 * f59, r79);
}
function j13(t88, e78, n103, o77) {
  return t88.renderCoordsHelper.worldUpAtPosition(e78.eye, o77), g3(o77, o77, n103), o77;
}
function T14(t88, e78) {
  return e78.min = t88.min, e78.max = t88.max, e78;
}
var x18 = { min: 0, max: 0 };
var g19 = n7();
var C13 = n7();
var M11 = n7();
var h27 = n7();

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/distance.js
function d40(n103, e78, r79 = c41) {
  if (!n103.state.isLocal)
    return 0;
  const t88 = n103.state.constraints.distance;
  if (!n103.pointsOfInterest.surfaceOrigin.renderLocation || t88 === 1 / 0)
    return 0;
  j14.min = 0, j14.max = t88, O16(n103, r79, j14);
  const o77 = l36(n103, e78), i78 = j14.max - o77;
  return i78 >= -1e-6 ? 0 : i78;
}
function y21(t88, o77, i78 = c41) {
  const u58 = d40(t88, o77, i78);
  if (0 === u58)
    return false;
  const p70 = t88.pointsOfInterest.surfaceOrigin;
  if (!p70.renderLocation)
    return false;
  const y41 = l36(t88, o77) + u58, O29 = r7(x19, o77.eye), j29 = s50(o77, i78.interactionDirection, L14(o77, p70.renderLocation, h28), I15);
  if (!Z(w7(p70.renderLocation, y41), p10(o77.eye, j29), k11))
    return false;
  o77.eye = k11;
  const C30 = e8(g20, o77.eye, O29);
  o77.center = u2(k11, o77.center, C30);
  const N21 = t88.renderCoordsHelper.getAltitude(o77.center), v44 = t88.renderCoordsHelper.intersectInfiniteManifold(o77.ray, N21, k11);
  return null != v44 && (o77.center = v44), true;
}
function O16(n103, e78, r79) {
  const t88 = e78.interactionType;
  if (t88 === O14.NONE)
    return;
  const { min: o77, max: i78 } = r79, { interactionStartCamera: c75, interactionFactor: s84 } = e78;
  if (!c75)
    return;
  const a85 = t88 === O14.ZOOM || t88 === O14.PAN, f59 = d40(n103, c75), m55 = 0 === f59 ? 0 : l36(n103, c75);
  r79.min = o77, r79.max = i78;
  e37(f59, m55, a85, s84, 0.05 * m55, r79);
}
function l36(n103, e78) {
  const r79 = n103.pointsOfInterest.surfaceOrigin;
  return r79.renderLocation ? x4(e78.eye, r79.renderLocation) : 0;
}
function L14(n103, e78, r79) {
  return H2(r79, n103.eye, e78);
}
var j14 = { min: 0, max: 0 };
var x19 = n7();
var g20 = n7();
var I15 = n7();
var h28 = n7();
var k11 = n7();

// node_modules/@arcgis/core/views/3d/camera/intersectionUtils.js
function u30(e78, r79, n103, t88) {
  return null != e78.renderCoordsHelper.fromRenderCoords(r79.eye, M12, t88) && p4(n103, M12);
}
function g21(e78, r79) {
  return e78.elevationProvider ? e78.elevationProvider.getElevation(r79[0], r79[1], r79[2], e78.renderCoordsHelper.spatialReference, "ground") ?? 0 : 0;
}
function f32(o77, s84, a85, c75) {
  const l75 = o77.state.camera.clone();
  s84 && a85 && c75 && (l75.eye = s84, l75.center = a85, l75.up = c75), m24(o77, l75.ray, b9) || r7(b9, l75.center);
  const d63 = o77.state.constraints, u58 = d63.minimumPoiDistance;
  if (p3(l75.eye, b9) < u58) {
    const r79 = d63.collision.enabled;
    r7(w20, l75.viewForward), g3(w20, w20, u58), r79 ? l75.eye = e8(M12, b9, w20) : u2(b9, l75.eye, w20);
    const s85 = o77.renderCoordsHelper, a86 = s85.getAltitude(l75.eye), c76 = d63.collision.elevationMargin;
    r79 && a86 < c76 && (e8(w20, b9, l75.eye), l75.eye = s85.setAltitude(M12, c76, l75.eye), u2(b9, l75.eye, w20));
  }
  return l75.center = b9, l75;
}
function p38(e78, n103, t88) {
  if (!e78.state.isGlobal || !e78.stateManager.constraintsManager)
    return false;
  const i78 = g21(e78, n103), o77 = e78.stateManager.constraintsManager.nearFarHeuristic, { far: s84 } = o77.compute(n103, t88, e78.renderDataExtent, i78, H11), a85 = s84 * s84;
  return p3(n103, t88) > a85;
}
function m24(e78, r79, n103) {
  let t88 = v20[e78.viewingMode];
  t88 || (t88 = A15(e78.state.viewingMode), t88.options.backfacesTerrain = !e78.state.isGlobal, t88.options.invisibleTerrain = true, v20[e78.viewingMode] = t88);
  const { isGlobal: i78 } = e78.state;
  return !(!e78.sceneIntersectionHelper.intersectRay(r79, t88, n103) || p38(e78, r79.origin, n103)) || (!(!e78.renderCoordsHelper.intersectManifold(r79, 0, n103) || p38(e78, r79.origin, n103)) || !!i78 && y22(r79, n103, A2(e78.spatialReference).radius));
}
function y22(e78, r79, t88) {
  const a85 = P3(e78.origin, e78.origin) - t88 * t88, c75 = a85 > 0 ? Math.sqrt(a85) / 3 : 1;
  return g3(r79, e78.direction, c75 / s10(e78.direction)), u2(r79, r79, e78.origin), true;
}
var v20 = {};
var M12 = n7();
var b9 = n7();
var w20 = n7();
var H11 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/surfaceCollision.js
function o47(r79, o77, l75 = i51.EYE) {
  const a85 = r79.state.constraints;
  if (!a85.collision.enabled)
    return false;
  const N21 = g21(r79, o77.eye), A39 = r79.renderCoordsHelper.getAltitude(o77.eye), C30 = N21 + a85.collision.elevationMargin;
  if (A39 >= C30)
    return false;
  const f59 = s10(o77.eye);
  if (e8(c42, o77.center, o77.eye), o77.eye = r79.renderCoordsHelper.setAltitude(_17, C30, o77.eye), l75 === i51.EYE_AND_CENTER)
    o77.center = u2(c42, o77.eye, c42);
  else if (l75 === i51.EYE_AND_CENTER_SCALE) {
    const e78 = (f59 - A39 + C30) / f59;
    o77.center = g3(c42, o77.center, e78);
  }
  return true;
}
var i51;
!function(e78) {
  e78[e78.EYE = 0] = "EYE", e78[e78.EYE_AND_CENTER = 1] = "EYE_AND_CENTER", e78[e78.EYE_AND_CENTER_SCALE = 2] = "EYE_AND_CENTER_SCALE";
}(i51 || (i51 = {}));
var c42 = n7();
var _17 = n7();

// node_modules/@arcgis/core/views/3d/state/utils/viewUtils.js
function n60(c75, n103, e78) {
  c75.worldUpAtPosition(n103, i52), e8(m25, e78, n103);
  const a85 = s10(m25);
  return 0 === a85 ? 0 : l5(P3(m25, i52) / a85);
}
var i52 = n7();
var m25 = n7();

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/tilt.js
function x20(t88, n103, r79 = c41, i78 = true) {
  V10.eyeCenterDistance = 0, V10.requiresTwoSteps = false;
  const a85 = U10(t88, n103, r79, void 0, V10);
  if (0 === a85)
    return false;
  switch (g4(_18, -a85, n103.viewRight), r79.tiltMode) {
    case O15.LOOK_AROUND:
      O(K6, n103.viewForward, _18), g3(K6, K6, V10.eyeCenterDistance), n103.center = u2(z13, n103.eye, K6);
      break;
    case O15.TUMBLE:
      e8(K6, n103.center, n103.eye), O(K6, K6, _18), n103.eye = e8(z13, n103.center, K6);
      break;
    default:
      n18(r79.tiltMode);
  }
  return n103.up = O(z13, n103.up, _18), !V10.requiresTwoSteps || !i78 || x20(t88, n103, r79, false);
}
function U10(e78, t88, n103 = c41, r79 = c41, i78) {
  if (!e78.state.constraints.tilt)
    return 0;
  const s84 = t88.distance, a85 = e78.state.constraints.tilt(s84, J7);
  return N9(e78, n103, a85), r79.interactionType === O14.TUMBLE && r45(r79.selection, L13.ALTITUDE) && B9(e78, r79.interactionStartCamera, a85), n103.tiltMode === O15.LOOK_AROUND || r79.tiltMode === O15.LOOK_AROUND ? L15(e78, t88, a85, i78) : P13(e78, t88, a85);
}
function P13(e78, n103, r79) {
  const i78 = n60(e78.renderCoordsHelper, n103.center, n103.eye), s84 = i78 - i3(i78, r79.min, r79.max);
  return k12(s84) ? s84 : 0;
}
function L15(e78, t88, n103, r79) {
  switch (r79 && (r79.requiresTwoSteps = false), e78.viewingMode) {
    case "global":
      return v21(e78, t88, n103, r79);
    case "local":
      return q10(e78, t88, n103, r79);
  }
}
function q10(e78, n103, r79, i78) {
  const s84 = n60(e78.renderCoordsHelper, n103.center, n103.eye), a85 = i3(s84, r79.min, r79.max), o77 = s84 - a85;
  if (!k12(o77))
    return 0;
  if (i78) {
    const t88 = e78.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, r80 = e78.renderCoordsHelper.getAltitude(n103.eye) - t88, s85 = Math.cos(a85);
    Math.abs(s85) > 1e-4 ? i78.eyeCenterDistance = r80 / s85 : i78.eyeCenterDistance = n103.distance;
  }
  return o77;
}
function v21(e78, n103, r79, i78) {
  const s84 = b10(e78, n103, Q6), a85 = i3(s84.tiltAtCenter, r79.min, r79.max);
  if (!k12(s84.tiltAtCenter - a85))
    return 0;
  let o77, c75;
  return s84.centerIsOnSurface ? (o77 = H12(s84), c75 = E19(s84, o77)) : (o77 = s84.constraints.clampTilt(s84.eyeCenterDistance, s84.tiltAtCenter), i78 && o77 < Math.PI / 2 && (i78.requiresTwoSteps = true, o77 = Math.PI / 2 - 1e-5), c75 = F16(s84, o77)), i78 && (i78.eyeCenterDistance = g22(s84, o77)), c75;
}
function b10(e78, t88, r79) {
  const i78 = e78.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, s84 = i78 + A2(e78.spatialReference).radius, a85 = e78.renderCoordsHelper.intersectManifold(t88.ray, i78, z13);
  return r79.eyeCenterDistance = t88.distance, r79.centerIsOnSurface = false, null != a85 ? (r79.eyeCenterDistance = x4(t88.eye, a85), r79.tiltAtCenter = n60(e78.renderCoordsHelper, a85, t88.eye), r79.centerIsOnSurface = true) : e78.state.isLocal ? r79.tiltAtCenter = n60(e78.renderCoordsHelper, t88.center, t88.eye) : (Y4(T5(tt, s84), t88.ray, z13), r79.eyeCenterDistance = x4(t88.eye, z13), r79.tiltAtCenter = l5(-P3(t88.viewForward, z2(z13, z13)))), r79.radius = s84, r79.eyeRadius = s10(t88.eye), r79.constraints = e78.state.constraints, r79;
}
function k12(e78) {
  return Math.abs(e78) > 1e-9;
}
function H12(e78) {
  const { constraints: t88, eyeCenterDistance: n103, tiltAtCenter: r79 } = e78;
  let i78 = r79, s84 = t88.clampTilt(n103, r79);
  const a85 = g22(e78, s84);
  if (t88.clampTilt(a85, r79) === s84)
    return s84;
  let o77 = 0;
  for (; o77 < 10 && k12(s84 - i78); ) {
    const n104 = (i78 + s84) / 2, r80 = g22(e78, n104);
    k12(t88.clampTilt(r80, n104) - n104) ? i78 = n104 : s84 = n104, o77++;
  }
  return s84;
}
function g22(e78, n103) {
  if (!e78.centerIsOnSurface)
    return e78.eyeCenterDistance;
  const i78 = Math.PI - i3(n103, 0, Math.PI), s84 = F3(e78.radius / e78.eyeRadius * Math.sin(i78)), a85 = Math.PI - i78 - s84, o77 = Math.sin(a85) / Math.sin(i78);
  if (e78.eyeRadius < e78.radius && o77 > 1) {
    const t88 = Math.PI - s84, n104 = Math.PI - i78 - t88;
    return Math.sin(n104) / Math.sin(i78) * e78.eyeRadius;
  }
  return o77 * e78.eyeRadius;
}
function E19(e78, t88) {
  const n103 = F3(e78.radius / e78.eyeRadius * Math.sin(e78.tiltAtCenter)), i78 = F3(e78.radius / e78.eyeRadius * Math.sin(t88));
  return e78.eyeRadius > e78.radius ? n103 - i78 : i78 - n103;
}
function F16(e78, t88) {
  return e78.tiltAtCenter - Math.PI / 2 - (t88 - Math.PI / 2);
}
function N9(e78, t88, n103) {
  if (t88.interactionType === O14.NONE)
    return;
  const { interactionStartCamera: r79, interactionFactor: i78 } = t88;
  if (!r79)
    return;
  const { min: s84, max: a85 } = n103, o77 = U10(e78, r79, c41, t88), c75 = 0 === o77 ? 0 : n60(e78.renderCoordsHelper, r79.center, r79.eye);
  n103.min = s84, n103.max = a85, t88.interactionType === O14.TUMBLE ? (r45(t88.selection, L13.ALTITUDE) && B9(e78, r79, n103), e37(o77, c75, true, i78, G12, n103)) : e37(o77, c75, false, i78, G12, n103);
}
function B9(e78, t88, r79) {
  const i78 = e78.state.constraints;
  if (e78.state.isLocal || !i78.altitude || !t88)
    return;
  const s84 = v3(t88.center), a85 = Math.sqrt(s84), o77 = t88.distance, c75 = A2(e78.spatialReference).radius, u58 = i78.altitude.min + c75, l75 = i78.altitude.max + c75, m55 = (u58 * u58 - o77 * o77 - s84) / (-2 * a85 * o77), d63 = (l75 * l75 - o77 * o77 - s84) / (-2 * a85 * o77);
  r79.min = Math.max(r79.min, Math.min(Math.PI - l5(d63), r79.max)), r79.max = Math.min(r79.max, Math.PI - l5(m55));
}
var K6 = n7();
var _18 = e17();
var z13 = n7();
var G12 = M2(5);
var J7 = { min: 0, max: 0 };
var Q6 = { constraints: null, radius: 0, eyeRadius: 0, centerIsOnSurface: true, eyeCenterDistance: 0, tiltAtCenter: 0 };
var V10 = { eyeCenterDistance: 0, requiresTwoSteps: false };

// node_modules/@arcgis/core/views/animation/easing.js
function t51(t88) {
  return t88;
}
var u31 = (t88) => t88 * t88;
var o48 = (t88) => 1 - u31(1 - t88);
var i53 = (t88) => t88 < 0.5 ? u31(2 * t88) / 2 : (o48(2 * (t88 - 0.5)) + 1) / 2;
var n61 = (t88) => t88 * t88 * t88;
var c43 = (t88) => 1 - n61(1 - t88);
var a48 = (t88) => t88 < 0.5 ? n61(2 * t88) / 2 : (c43(2 * (t88 - 0.5)) + 1) / 2;
var s51 = (t88) => t88 * t88 * t88 * t88;
var q11 = (t88) => 1 - s51(1 - t88);
var r46 = (t88) => t88 < 0.5 ? s51(2 * t88) / 2 : (q11(2 * (t88 - 0.5)) + 1) / 2;
var e38 = (t88) => t88 * t88 * t88 * t88 * t88;
var b11 = (t88) => 1 - e38(1 - t88);
var d41 = (t88) => t88 < 0.5 ? e38(2 * t88) / 2 : (b11(2 * (t88 - 0.5)) + 1) / 2;
var h29 = (t88) => 1 - Math.cos(t88 * Math.PI / 2);
var p39 = (t88) => 1 - h29(1 - t88);
var x21 = (t88) => t88 < 0.5 ? h29(2 * t88) / 2 : (p39(2 * (t88 - 0.5)) + 1) / 2;
var M13 = (t88) => 2 ** (10 * (t88 - 1));
var f33 = (t88) => 1 - M13(1 - t88);
var l37 = (t88) => t88 < 0.5 ? M13(2 * t88) / 2 : (f33(2 * (t88 - 0.5)) + 1) / 2;
var I16 = (t88) => -(Math.sqrt(1 - t88 * t88) - 1);
var P14 = (t88) => 1 - I16(1 - t88);
var g23 = (t88) => t88 < 0.5 ? I16(2 * t88) / 2 : (P14(2 * (t88 - 0.5)) + 1) / 2;
function j15(t88) {
  const u58 = 2 * (t88 - Math.sqrt((t88 - 1) * t88)), o77 = u58 / 2 / t88;
  return (i78) => i78 < o77 ? t88 * i78 * i78 : u58 * i78 - u58 + 1;
}
function k13(t88, u58) {
  return (o77, i78) => o77 < u58 ? u58 * t88(o77 / u58, i78) : 1 - t88((1 - o77) / (1 - u58), i78) * (1 - u58);
}
var m26 = k13(j15(1), 1);
var v22 = k13(j15(1), 0);
var w21 = k13(j15(1), 0.5);
var y23 = k13(j15(2), 1);
var z14 = k13(j15(2), 0);
var A23 = k13(j15(2), 0.5);
var B10 = k13(j15(3), 1);
var C14 = k13(j15(3), 0);
var D11 = k13(j15(3), 0.5);
var E20 = k13(j15(4), 1);
var F17 = k13(j15(4), 0);
var G13 = k13(j15(4), 0.5);
var H13 = { linear: t51, "in-quad": u31, "out-quad": o48, "in-out-quad": i53, "in-coast-quad": m26, "out-coast-quad": v22, "in-out-coast-quad": w21, "in-cubic": n61, "out-cubic": c43, "in-out-cubic": a48, "in-coast-cubic": y23, "out-coast-cubic": z14, "in-out-coast-cubic": A23, "in-quart": s51, "out-quart": q11, "in-out-quart": r46, "in-coast-quart": B10, "out-coast-quart": C14, "in-out-coast-quart": D11, "in-quint": e38, "out-quint": b11, "in-out-quint": d41, "in-coast-quint": E20, "out-coast-quint": F17, "in-out-coast-quint": G13, "in-sine": h29, "out-sine": p39, "in-out-sine": x21, "in-expo": M13, "out-expo": f33, "in-out-expo": l37, "in-circ": I16, "out-circ": P14, "in-out-circ": g23 };

// node_modules/@arcgis/core/views/3d/camera/constraintUtils.js
function E21(t88, o77, n103 = U11, e78 = o77) {
  e78 !== o77 && e78.copyFrom(o77), e78.computeUp(t88.state.viewingMode);
  let s84 = false;
  for (let i78 = 0; i78 < C15; i78++) {
    let o78 = 0;
    for (const i79 of N10)
      if (r45(n103.selection, i79.type)) {
        const r79 = Math.abs(i79.error(t88, e78, n103));
        i79.apply(t88, e78, n103) && (s84 = true, o78 += r79);
      }
    if (0 === o78)
      break;
  }
  const c75 = r45(n103.selection, L13.COLLISION), l75 = u32(n103.interactionType, t88);
  return c75 && o47(t88, e78, l75) && (s84 = true), s84 && e78.computeUp(t88.state.viewingMode), s84;
}
function u32(t88, o77) {
  switch (t88) {
    case O14.PAN:
      return i51.EYE_AND_CENTER;
    case O14.ASCEND:
      return o77.state.isGlobal ? i51.EYE_AND_CENTER_SCALE : i51.EYE_AND_CENTER;
    default:
      return i51.EYE;
  }
}
function T15(t88) {
  const o77 = Math.min(1, t88 / 150);
  return a48(o77);
}
function y24(t88, o77, r79) {
  return U10(t88, o77, r79) * o77.distance;
}
var N10 = [{ type: L13.TILT, error: y24, apply: x20 }, { type: L13.ALTITUDE, error: l35, apply: f31 }, { type: L13.DISTANCE, error: d40, apply: y21 }];
var U11 = { selection: L13.ALL, interactionType: O14.NONE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O15.TUMBLE };
var C15 = 5;

// node_modules/@arcgis/core/views/3d/animation/pointToPoint/Camera.js
var P15 = n7();
var g24 = n7();
var _19 = n7();
var k14 = n7();
var v23 = n7();
var x22 = n7();
var z15 = { upward: r5(0, 0, 1), forward: r5(0, 1, 0), sideway: r5(1, 0, 0) };
var b12 = e16();
var T16 = class {
  constructor(t88 = l14.Global) {
    this.viewingMode = t88, this.center = n7(), this.pitch = 0, this.yaw = 0, this.distance = 0, this.lookAtDirection = t8(z15.forward);
  }
  pixelsPerPanAtZoom(t88) {
    return this.size / 2 / (this._zoomToPanScale * t88);
  }
  zoomAtPixelsPerPan(t88) {
    return this.size / 2 / (this._zoomToPanScale * t88);
  }
  pixelsPerRotateAtZoom() {
    const t88 = Math.max(Math.cos(Math.abs(this.pitch)), 0.5);
    return this.size / 2 / t88;
  }
  compareTo(t88, e78) {
    if (e78 || (e78 = { pan: 0, rotate: 0, sourceZoom: 0, targetZoom: 0 }), this.viewingMode === l14.Global) {
      const i79 = (s10(this.center) + s10(t88.center)) / 2;
      e78.pan = x10(this.center, t88.center) * i79;
    } else
      e78.pan = x4(this.center, t88.center);
    let i78 = Math.abs(t88.yaw - this.yaw);
    i78 >= Math.PI && (i78 = 2 * Math.PI - i78);
    const o77 = Math.abs(t88.pitch - this.pitch);
    return e78.rotate = Math.max(i78, o77), e78.sourceZoom = this.distance, e78.targetZoom = t88.distance, e78;
  }
  interpolate(e78, i78, s84) {
    this.viewingMode === l14.Global ? k6(e78.center, i78.center, s84.pan, this.center) : A3(this.center, e78.center, i78.center, s84.pan), this.distance = isFinite(i78.distance) ? s12(e78.distance, i78.distance, s84.zoom) : e78.distance, this.pitch = s12(e78.pitch, i78.pitch, s84.rotate);
    let a85 = e78.yaw;
    const h58 = i78.yaw;
    Math.abs(h58 - a85) >= Math.PI && (a85 += 2 * (a85 < h58 ? 1 : -1) * Math.PI), this.yaw = s12(a85, h58, s84.rotate);
  }
  copyFrom(t88) {
    r7(this.center, t88.center), this.pitch = t88.pitch, this.yaw = t88.yaw, this.distance = t88.distance, r7(this.lookAtDirection, t88.lookAtDirection), this.size = t88.size, this.copyFromCommon(t88), this.viewingMode = t88.viewingMode;
  }
  copyFromRenderCamera(t88) {
    const e78 = this._lookAtOrientation(t88.center, b12);
    r7(this.center, t88.center), e8(k14, t88.center, t88.eye), S4(k14, k14, e78), S4(v23, t88.up, e78), this.distance = s10(k14), 0 !== this.distance && (k14[0] /= this.distance, k14[1] /= this.distance, k14[2] /= this.distance), this.pitch = this._eyeUpToPitch(k14), this.yaw = this._eyeUpToYaw(k14, v23), this.size = Math.sqrt(t88.width * t88.width + t88.height * t88.height), this.copyFromCommon(t88);
  }
  copyFromCommon(t88) {
    this.fov = t88.fov, this._zoomToPanScale = Math.atan(0.5 * this.fov);
  }
  copyToRenderCamera(t88) {
    const i78 = this._lookAtOrientation(this.center, b12);
    o13(i78, i78), this._axisAngleVec3(z15.sideway, this.pitch - Math.PI / 2, z15.forward, k14), this._axisAngleVec3(z15.upward, this.yaw, k14), this._axisAngleVec3(z15.sideway, this.pitch - Math.PI / 2, z15.upward, v23), this._axisAngleVec3(z15.upward, this.yaw, v23), g3(k14, k14, this.distance), S4(k14, k14, i78), S4(v23, v23, i78), t88.center = this.center, t88.eye = e8(k14, this.center, k14), t88.up = v23;
  }
  _axisAngleVec3(t88, e78, i78, s84 = i78) {
    const a85 = Math.cos(e78), o77 = Math.sin(e78);
    return g3(P15, i78, a85), _(g24, t88, i78), g3(g24, g24, o77), g3(_19, t88, (1 - a85) * P3(t88, i78)), u2(s84, u2(s84, P15, g24), _19);
  }
  _lookAtOrientation(t88, e78 = e16()) {
    return this._upAtLookAt(t88, _19), _(P15, this.lookAtDirection, _19), z2(P15, P15), 0 === P15[0] && 0 === P15[1] && 0 === P15[2] && r7(P15, z15.sideway), _(g24, _19, P15), z2(g24, g24), e78[0] = P15[0], e78[1] = g24[0], e78[2] = _19[0], e78[3] = P15[1], e78[4] = g24[1], e78[5] = _19[1], e78[6] = P15[2], e78[7] = g24[2], e78[8] = _19[2], e78;
  }
  _upAtLookAt(t88, e78) {
    return this.viewingMode === l14.Local ? r7(e78, z15.upward) : z2(e78, t88);
  }
  _eyeUpToPitch(t88) {
    return Math.PI - x10(z15.upward, t88);
  }
  _eyeUpToYaw(t88, e78) {
    const i78 = x22;
    return Math.abs(e78[2]) < 0.5 ? (r7(i78, e78), t88[2] > 0 && g3(i78, i78, -1)) : r7(i78, t88), _(g24, i78, z15.upward), z2(g24, g24), x10(z15.sideway, g24, z15.upward);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Settings.js
var o49 = { desiredScreenFlow: 2, minDuration: n5(500), maxDuration: n5(8e3) };

// node_modules/@arcgis/core/views/animation/pointToPoint/Definition.js
var t52 = class _t3 {
  constructor(t88) {
    this._createCamera = t88, this.compared = { sourceZoom: 0, targetZoom: 0, pan: 0, rotate: 0 }, this.settings = { desiredScreenFlow: o49.desiredScreenFlow }, this.source = t88(), this.target = t88();
  }
  clone() {
    const e78 = new _t3(this._createCamera);
    return e78.copyFrom(this), e78;
  }
  copyFrom(e78) {
    this.update(e78.source, e78.target, e78.settings);
  }
  update(t88, r79, s84) {
    this.source !== t88 && this.source.copyFrom(t88), this.target !== r79 && this.target.copyFrom(r79), this.compared = this.source.compareTo(this.target, this.compared), this.settings.desiredScreenFlow = null != s84.desiredScreenFlow ? s84.desiredScreenFlow : o49.desiredScreenFlow, this.desiredPixelFlow = this.settings.desiredScreenFlow * this.target.size, this.halfWindowSize = this.target.size / 2;
  }
  halfWindowPanAtZoom(e78) {
    const t88 = this.target.pixelsPerPanAtZoom(e78);
    return this.halfWindowSize / t88;
  }
  get hasZoom() {
    return Math.abs(this.compared.sourceZoom - this.compared.targetZoom) > 1e-5;
  }
  get hasPan() {
    return this.compared.pan > 1e-9;
  }
  get hasRotate() {
    return this.compared.rotate > 1e-9;
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Path.js
var e39 = class {
  constructor() {
    this.segments = [];
  }
  get time() {
    return this.segments.reduce((e78, o77) => t6(e78 + o77.time), t6(0));
  }
  interpolateComponentsAt(t88, e78) {
    t88 = Math.min(Math.max(t88, 0), 1), t88 *= this.time;
    let o77 = 0, s84 = 0;
    const n103 = this.definition;
    for (let a85 = 0; a85 < this.segments.length; a85++) {
      const m55 = this.segments[a85], i78 = m55.definition;
      if (t88 <= m55.time || a85 === this.segments.length - 1) {
        if (e78 = this.segmentInterpolateComponentsAt(m55, 0 === m55.time ? 0 : t88 / m55.time, e78), n103.hasPan && !isNaN(e78.pan) && isFinite(n103.compared.pan) ? e78.pan = (o77 + i78.compared.pan * e78.pan) / n103.compared.pan : e78.pan = 1, n103.hasRotate && !isNaN(e78.rotate) && isFinite(n103.compared.rotate) ? e78.rotate = (s84 + i78.compared.rotate * e78.rotate) / n103.compared.rotate : e78.rotate = 1, n103.hasZoom && !isNaN(e78.zoom) && isFinite(i78.compared.targetZoom)) {
          const t89 = e78.zoom * (i78.compared.targetZoom - i78.compared.sourceZoom) + i78.compared.sourceZoom, o78 = this.segments[0].definition.compared.sourceZoom, s85 = this.segments[this.segments.length - 1].definition.compared.targetZoom;
          e78.zoom = (t89 - o78) / (s85 - o78);
        } else
          e78.zoom = 1;
        return e78;
      }
      t88 -= m55.time, o77 += i78.compared.pan, s84 += i78.compared.rotate;
    }
  }
  segmentInterpolateComponentsAt(t88, e78, o77) {
    return t88.interpolateComponentsAt(e78, o77);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Segment.js
var i54 = class {
  get time() {
    return this._time;
  }
  constructor(t88) {
    t88 && this.update(t88);
  }
  update(t88) {
    t88 && (this.definition ? this.definition.copyFrom(t88) : this.definition = t88.clone()), this._updatePrecomputedVariables(), this._updatePixelFlow();
  }
  _updatePrecomputedVariables() {
    const t88 = this.definition, i78 = t88.compared, o77 = i78.sourceZoom, e78 = i78.targetZoom;
    this._zoomSign = o77 > e78 ? 1 : -1, this._panPixelsAtSource = i78.pan * t88.source.pixelsPerPanAtZoom(o77);
    const n103 = (t88.source.pixelsPerRotateAtZoom(o77) + t88.target.pixelsPerRotateAtZoom(e78)) / 2;
    this._rotatePixels = i78.rotate * n103;
  }
  _updatePixelFlow() {
    const i78 = this.definition.compared.sourceZoom, o77 = this.definition.compared.targetZoom, { hasZoom: e78, hasPan: n103, hasRotate: s84 } = this.definition;
    let a85 = 0, h58 = 0;
    e78 && (n103 && (a85 = (o77 / i78 - 1) / (-1 / (this._zoomSign * this.definition.halfWindowSize) * Math.LN2 * this._panPixelsAtSource)), s84 && (h58 = this._zoomSign * (Math.log(i78 / o77) / Math.LN2) * this.definition.halfWindowSize / this._rotatePixels)), this._zoomPixelFlow = 0, this._panPixelFlow = 0, this._rotatePixelFlow = 0;
    const l75 = this.definition.desiredPixelFlow;
    if (e78 && n103 && s84) {
      const t88 = a85 + h58 + a85 * h58;
      this._zoomPixelFlow = a85 * h58 / t88 * l75, this._panPixelFlow = h58 / t88 * l75, this._rotatePixelFlow = a85 / t88 * l75;
    } else if (e78 && n103) {
      const t88 = 1 + a85;
      this._zoomPixelFlow = a85 / t88 * l75, this._panPixelFlow = 1 / t88 * l75;
    } else if (e78 && s84) {
      const t88 = 1 + h58;
      this._zoomPixelFlow = h58 / t88 * l75, this._rotatePixelFlow = 1 / t88 * l75;
    } else if (n103 && s84) {
      const t88 = this._panPixelsAtSource / this._rotatePixels, i79 = 1 + t88;
      this._panPixelFlow = t88 / i79 * l75, this._rotatePixelFlow = 1 / i79 * l75;
    } else
      n103 ? this._panPixelFlow = l75 : e78 ? this._zoomPixelFlow = l75 : s84 && (this._rotatePixelFlow = l75);
    this._time = s84 ? this.rotateTime : e78 ? this.zoomTime : n103 ? this.panTime : t6(0);
  }
  get rotateTime() {
    return this.definition.hasRotate ? t6(this._rotatePixels / this._rotatePixelFlow) : t6(0);
  }
  get zoomTime() {
    return this.definition.hasZoom ? t6(this._zoomSign * (Math.log(this.definition.compared.sourceZoom / this.definition.compared.targetZoom) / Math.LN2) * this.definition.halfWindowSize / this._zoomPixelFlow) : t6(0);
  }
  get panTime() {
    if (this.definition.hasPan) {
      if (this.definition.hasZoom) {
        const i78 = -1 / (this._zoomSign * this.definition.halfWindowSize) * Math.LN2, o77 = i78 * this._panPixelsAtSource;
        return t6(Math.log(o77 * (this._zoomPixelFlow / this._panPixelFlow) + 1) / (i78 * this._zoomPixelFlow));
      }
      return t6(this._panPixelsAtSource / this._panPixelFlow);
    }
    return t6(0);
  }
  _interpolateComponentsZoom(t88) {
    if (0 === t88 || 1 === t88)
      return t88;
    if (this.definition.hasZoom) {
      const i78 = this.definition.compared.sourceZoom, o77 = this.definition.compared.targetZoom;
      return (i78 * (i78 / o77) ** -t88 - i78) / (o77 - i78);
    }
    return t88;
  }
  _interpolateComponentsPan(t88) {
    if (0 === t88 || 1 === t88)
      return t88;
    if (this.definition.hasPan && this.definition.hasZoom) {
      const i78 = -1 / (this._zoomSign * this.definition.halfWindowSize) * this._zoomPixelFlow;
      return 1 / this._panPixelsAtSource * (this._panPixelFlow * (2 ** (i78 * t88 * this._time) - 1)) / (i78 * Math.LN2);
    }
    return t88;
  }
  _interpolateComponentsRotate(t88) {
    return t88;
  }
  interpolateComponentsAt(t88, i78) {
    t88 = Math.min(Math.max(t88, 0), 1);
    const o77 = this._interpolateComponentsZoom(t88), e78 = this._interpolateComponentsPan(t88), n103 = this._interpolateComponentsRotate(t88);
    return i78 ? (i78.zoom = o77, i78.pan = e78, i78.rotate = n103) : i78 = { zoom: o77, pan: e78, rotate: n103 }, i78;
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/functions.js
function o50(o77, a85, e78) {
  const n103 = a85 - o77.compared.sourceZoom, t88 = o77.halfWindowPanAtZoom(n103);
  return -o77.halfWindowSize * (e78.ascensionFactor * Math.LN2 * o77.compared.pan + t88) * Math.log(o77.compared.sourceZoom / a85) / (o77.desiredPixelFlow * Math.LN2 * t88);
}
function a49(o77, a85, e78) {
  const n103 = 1 / a85, t88 = Math.log(o77.compared.sourceZoom * n103), i78 = 1 / o77.desiredPixelFlow, r79 = 1 / Math.LN2, d63 = a85 - o77.compared.sourceZoom, c75 = 1 / d63, l75 = (e78.ascensionFactor * Math.LN2 * o77.compared.pan + o77.halfWindowPanAtZoom(d63)) / o77.halfWindowPanAtZoom(1);
  return o77.halfWindowSize * n103 * i78 * r79 * c75 * l75 - o77.halfWindowSize * t88 * i78 * r79 * c75 + o77.halfWindowSize * t88 * i78 * r79 * l75 / (d63 * d63);
}
function e40(o77, a85, e78) {
  const n103 = a85 - o77.compared.sourceZoom, t88 = 1 / n103, i78 = 1 / a85, r79 = Math.log(o77.compared.sourceZoom * i78), d63 = (e78.ascensionFactor * Math.LN2 * o77.compared.pan + o77.halfWindowPanAtZoom(n103)) / o77.halfWindowPanAtZoom(1);
  return o77.halfWindowSize * t88 * (-2 * t88 * i78 * d63 + 2 * t88 * r79 + 2 * i78 - 2 * r79 * d63 / (n103 * n103) - d63 / (a85 * a85)) / (o77.desiredPixelFlow * Math.LN2);
}
function n62(o77, a85) {
  return -o77.halfWindowSize * Math.log(o77.compared.sourceZoom / a85) / (o77.desiredPixelFlow * Math.LN2);
}
function t53(o77, a85) {
  return o77.halfWindowSize / (a85 * o77.desiredPixelFlow * Math.LN2);
}
function i55(o77, a85) {
  return -o77.halfWindowSize / (a85 * a85 * o77.desiredPixelFlow * Math.LN2);
}
function r47(o77, a85, e78) {
  return -o77.compared.pan * o77.halfWindowSize * (e78.ascensionFactor + e78.descensionFactor - 1) / (o77.desiredPixelFlow * o77.halfWindowPanAtZoom(a85));
}
function d42(o77, a85, e78) {
  return o77.compared.pan * o77.halfWindowSize * (e78.ascensionFactor + e78.descensionFactor - 1) / (o77.desiredPixelFlow * o77.halfWindowPanAtZoom(a85 * a85));
}
function c44(o77, a85, e78) {
  return -2 * o77.compared.pan * o77.halfWindowSize * (e78.ascensionFactor + e78.descensionFactor - 1) / (o77.desiredPixelFlow * o77.halfWindowPanAtZoom(a85 * a85 * a85));
}
function l38(o77, a85, e78) {
  return o77.halfWindowSize * (-o77.halfWindowPanAtZoom(a85) - e78.descensionFactor * Math.LN2 * o77.compared.pan + o77.halfWindowPanAtZoom(o77.compared.targetZoom)) * Math.log(a85 / o77.compared.targetZoom) / (o77.desiredPixelFlow * Math.LN2 * o77.halfWindowPanAtZoom(-a85 + o77.compared.targetZoom));
}
function m27(o77, a85, e78) {
  const n103 = Math.log(a85 / o77.compared.targetZoom), t88 = 1 / o77.desiredPixelFlow, i78 = 1 / Math.LN2, r79 = -a85 + o77.compared.targetZoom, d63 = 1 / r79, c75 = (-o77.halfWindowPanAtZoom(a85) - e78.descensionFactor * Math.LN2 * o77.compared.pan + o77.halfWindowPanAtZoom(o77.compared.targetZoom)) / o77.halfWindowPanAtZoom(1);
  return -o77.halfWindowSize * n103 * t88 * i78 * d63 + o77.halfWindowSize * n103 * t88 * i78 * c75 / (r79 * r79) + o77.halfWindowSize * t88 * i78 * d63 * c75 / a85;
}
function h30(o77, a85, e78) {
  const n103 = a85 - o77.compared.targetZoom, t88 = 1 / n103, i78 = 1 / a85, r79 = Math.log(a85 / o77.compared.targetZoom), d63 = (o77.halfWindowPanAtZoom(a85) + e78.descensionFactor * Math.LN2 * o77.compared.pan - o77.halfWindowPanAtZoom(o77.compared.targetZoom)) / o77.halfWindowPanAtZoom(1);
  return o77.halfWindowSize * t88 * (-2 * t88 * i78 * d63 - 2 * t88 * r79 + 2 * i78 + 2 * r79 * d63 / (n103 * n103) - d63 / (a85 * a85)) / (o77.desiredPixelFlow * Math.LN2);
}
function s52(o77, a85) {
  return o77.halfWindowSize * Math.log(a85 / o77.compared.targetZoom) / (o77.desiredPixelFlow * Math.LN2);
}
function f34(o77, a85) {
  return o77.halfWindowSize / (a85 * o77.desiredPixelFlow * Math.LN2);
}
function w22(o77, a85) {
  return -o77.halfWindowSize / (a85 * a85 * o77.desiredPixelFlow * Math.LN2);
}
function p40(o77) {
  const a85 = Math.LN2 * o77.compared.pan, e78 = o77.compared.sourceZoom - o77.compared.targetZoom, n103 = o77.halfWindowPanAtZoom(e78), t88 = o77.halfWindowSize * Math.log(o77.compared.sourceZoom / o77.compared.targetZoom) / (o77.desiredPixelFlow * Math.LN2 * n103);
  return o77.compared.sourceZoom <= o77.compared.targetZoom ? t88 * (a85 - n103) : t88 * (a85 + n103);
}

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/planning.js
function f35(f59, Z11) {
  let P29 = D12(f59, Z11);
  const b31 = { ascensionFactor: null != Z11.ascensionFactor ? Z11.ascensionFactor : 0.5, descensionFactor: null != Z11.descensionFactor ? Z11.descensionFactor : 0.5 }, g49 = 0 === b31.ascensionFactor, h58 = 0 === b31.descensionFactor, M26 = g49 ? n62 : o50, k27 = g49 ? t53 : a49, N21 = g49 ? i55 : e40, j29 = h58 ? s52 : l38, w33 = h58 ? f34 : m27, z21 = h58 ? w22 : h30, A39 = (o77) => M26(f59, o77, b31) + r47(f59, o77, b31) + j29(f59, o77, b31), I29 = (o77) => k27(f59, o77, b31) + d42(f59, o77, b31) + w33(f59, o77, b31), q21 = (o77) => N21(f59, o77, b31) + c44(f59, o77, b31) + z21(f59, o77, b31);
  let v44 = A39(P29);
  const y41 = p40(f59);
  let B21;
  const C30 = Z11.maximumIterations || 20, E43 = null != Z11.maximumDistance ? Z11.maximumDistance : 1 / 0;
  for (B21 = 0; B21 < C30; B21++) {
    const o77 = 1e-6, e78 = (I29(P29) + o77) / q21(P29);
    if (isNaN(e78) || P29 >= E43 && e78 < 0) {
      if (!isFinite(E43))
        return null;
      P29 = E43, v44 = A39(P29);
      break;
    }
    if (P29 -= e78, P29 < f59.compared.sourceZoom || P29 < f59.compared.targetZoom)
      return null;
    const n103 = A39(P29);
    if (Math.abs(n103 - v44) / v44 <= 5e-3)
      break;
    v44 = n103;
  }
  return v44 > y41 * (1 - 0.3) || P29 < f59.compared.sourceZoom || P29 < f59.compared.targetZoom ? null : P29;
}
function D12(o77, e78) {
  const n103 = Math.max(o77.compared.sourceZoom, o77.compared.targetZoom), a85 = o77.source.zoomAtPixelsPerPan(o77.desiredPixelFlow / o77.compared.pan) / 2;
  return a85 < n103 ? null != e78.maximumDistance ? n103 + (e78.maximumDistance - n103) / 2 : 1.5 * n103 : e78.maximumDistance ? Math.min(e78.maximumDistance, a85) : a85;
}

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/Path.js
var s53 = class extends e39 {
  constructor(i78, e78) {
    super(), this._preallocSegments = [new i54(), new i54(), new i54()], this._ascensionSegment = null, this._descensionSegment = null, this.update(i78, e78);
  }
  update(i78, e78) {
    if (!i78)
      return;
    this.definition ? this.definition.copyFrom(i78) : this.definition = i78.clone();
    let n103 = null;
    e78 && e78.apex && (n103 = f35(i78, e78.apex)), this.segments.length = 0, this._ascensionSegment = null, this._descensionSegment = null, null == n103 ? this._updateWithoutApex() : this._updateWithApex(n103, e78 == null ? void 0 : e78.apex);
  }
  segmentInterpolateComponentsAt(n103, t88, o77) {
    return o77 = n103.interpolateComponentsAt(t88, o77), n103 === this._ascensionSegment ? o77.zoom = o48(o77.zoom) : n103 === this._descensionSegment && (o77.zoom = u31(o77.zoom)), o77;
  }
  _updateWithApex(i78, e78) {
    const [n103, t88, o77] = this._preallocSegments, s84 = (e78 == null ? void 0 : e78.ascensionFactor) ?? 0.5, d63 = Math.min(1 - s84, null != (e78 == null ? void 0 : e78.ascensionFactor) && null != e78.descensionFactor ? e78.descensionFactor : 0.5), a85 = 1 - s84 - d63;
    n103.definition ? n103.definition.copyFrom(this.definition) : n103.definition = this.definition.clone(), n103.definition.compared.targetZoom = i78, n103.definition.compared.pan = this.definition.compared.pan * s84, n103.definition.compared.rotate = this.definition.compared.rotate * s84, n103.update(), this._ascensionSegment = n103, this.segments.push(n103), a85 > 0 && (t88.definition ? t88.definition.copyFrom(this.definition) : t88.definition = this.definition.clone(), t88.definition.copyFrom(this.definition), t88.definition.compared.sourceZoom = i78, t88.definition.compared.targetZoom = i78, t88.definition.compared.pan = this.definition.compared.pan * a85, t88.definition.compared.rotate = this.definition.compared.rotate * a85, t88.update(), this.segments.push(t88)), o77.definition ? o77.definition.copyFrom(this.definition) : o77.definition = this.definition.clone(), o77.definition.compared.sourceZoom = i78, o77.definition.compared.pan = this.definition.compared.pan * d63, o77.definition.compared.rotate = this.definition.compared.rotate * d63, o77.update(), this._descensionSegment = o77, this.segments.push(o77);
  }
  _updateWithoutApex() {
    const [i78] = this._preallocSegments;
    i78.update(this.definition), this.segments.push(i78);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Animation.js
var m28 = { zoom: 0, pan: 0, rotate: 0 };
var h31 = class {
  get time() {
    return this._time;
  }
  constructor(i78) {
    this._createCamera = i78, this._time = n5(0), this.definition = new t52(i78), this.path = new s53();
  }
  update(t88, s84, o77) {
    this.definition.update(t88, s84, o77), this.path.update(this.definition, o77), this._time = this._applyTimeSettings(r4(isFinite(this.path.time) ? this.path.time : t6(0)), o77), this._easing = o77.easing ?? (this._time >= 1e3 ? w21 : f33);
  }
  cameraAt(t88, i78) {
    i78 = i78 || this._createCamera(), t88 = Math.min(Math.max(0, t88), 1), t88 = this._normalizedEasing(t88);
    const e78 = this.path.interpolateComponentsAt(t88, m28);
    return i78.interpolate(this.definition.source, this.definition.target, e78), i78;
  }
  _normalizedEasing(t88) {
    const i78 = this._easing(0, this._time), e78 = this._easing(1, this._time);
    return (this._easing(t88, this._time) - i78) / (e78 - i78);
  }
  _applyTimeSettings(i78, e78) {
    const n103 = null != e78.speedFactor ? e78.speedFactor : 1;
    null != e78.duration ? i78 = e78.duration : null != e78.speedFactor && (i78 = n5(i78 / n103));
    const a85 = null != e78.minDuration ? e78.minDuration : o49.minDuration / n103, s84 = null != e78.maxDuration ? e78.maxDuration : o49.maxDuration / n103;
    return n5(Math.min(Math.max(a85, i78), s84));
  }
};

// node_modules/@arcgis/core/views/3d/animation/pointToPoint/Animation.js
var c45 = n7();
var h32 = class {
  get finished() {
    return this.currentTime >= this._animation.time;
  }
  get time() {
    return this._animation.time;
  }
  constructor(i78) {
    this.currentTime = n5(0), this._animation = new h31(() => new T16(i78)), this._current = new T16(i78);
  }
  update(i78, m55, s84) {
    const a85 = this._animation.definition.source, o77 = this._animation.definition.target, h58 = e8(c45, m55.center, i78.center), u58 = s10(h58);
    u58 >= 1e-5 ? (h58[0] /= u58, h58[1] /= u58, h58[2] /= u58) : (h58[0] = 0, h58[1] = 1, h58[0] = 0), r7(a85.lookAtDirection, h58), r7(o77.lookAtDirection, h58), a85.copyFromRenderCamera(i78), o77.copyFromRenderCamera(m55), this._current.copyFrom(a85), this._animation.update(a85, o77, s84), this.currentTime = n5(0), i78.almostEquals(m55) && (this.currentTime = this._animation.time);
  }
  cameraAt(t88, i78) {
    return this._animation.cameraAt(t88, this._current), i78 = i78 || new $2(), this._current.copyToRenderCamera(i78), i78;
  }
  step(e78, r79) {
    return this.finished || (this.currentTime = n5(this.currentTime + r4(e78)), this.currentTime >= this.time && (this.currentTime = this.time)), this.cameraAt(this.currentTime / this.time, r79);
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/CameraController.js
var s54;
!function(t88) {
  t88.Ready = "ready", t88.Rejected = "rejected", t88.Running = "running", t88.Stopped = "stopped", t88.Finished = "finished";
}(s54 || (s54 = {}));
var i56 = class extends m {
  constructor(t88) {
    super(t88), this.state = s54.Ready;
  }
  get active() {
    return this.state === s54.Running;
  }
  get isInteractive() {
    return false;
  }
  get canStop() {
    return false;
  }
  stopController() {
    return !!this.canStop && (this.state = s54.Stopped, true);
  }
  finishController() {
    this.state = s54.Finished;
  }
  get steppingFinished() {
    return false;
  }
};
e([y({ constructOnly: true })], i56.prototype, "view", void 0), e([y({ readOnly: true })], i56.prototype, "active", null), e([y()], i56.prototype, "state", void 0), e([y({ readOnly: true })], i56.prototype, "isInteractive", null), i56 = e([a4("esri.views.3d.state.controllers.CameraController")], i56);

// node_modules/@arcgis/core/views/3d/state/controllers/AnimationController.js
var a50 = class extends i56 {
  constructor() {
    super(...arguments), this._asyncResult = null;
  }
  get canStop() {
    return true;
  }
  set asyncResult(t88) {
    this._asyncResult && (this._asyncResult.reject(c()), this._asyncResult = null), this.state === s54.Finished || this.state === s54.Stopped ? (r(t88), this.state === s54.Finished ? t88.resolve() : t88.reject(c())) : this._asyncResult = t88;
  }
  get asyncResult() {
    return this._asyncResult;
  }
  onControllerStart() {
    this.state = s54.Running, null != this.viewAnimation && this.viewAnimation.when(() => this.updateStateFromViewAnimation(), () => this.updateStateFromViewAnimation());
  }
  updateStateFromViewAnimation() {
    null == this.viewAnimation || this.state !== s54.Ready && this.state !== s54.Running || (this.viewAnimation.state === a41.State.FINISHED ? this.finish() : this.viewAnimation.state === a41.State.STOPPED && (this.state = s54.Stopped));
  }
  onControllerEnd() {
    null == this.viewAnimation || this.viewAnimation.done || (this.state === s54.Finished ? this.viewAnimation.finish() : this.state === s54.Stopped && this.viewAnimation.stop()), this._asyncResult && (this.state === s54.Finished ? this._asyncResult.resolve() : this._asyncResult.reject(c()));
  }
  finish() {
    this.finishController();
  }
};
a50 = e([a4("esri.views.3d.state.controllers.AnimationController")], a50);

// node_modules/@arcgis/core/views/3d/state/controllers/PointToPointAnimationController.js
var h33 = class extends a50 {
  get intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  constructor(i78) {
    super(i78), this.mode = "interaction", this._hasTarget = false;
  }
  initialize() {
    this.animation = new h32(this.view.state.viewingMode), this.viewAnimation = "interaction" === this.mode ? null : new a41();
  }
  get isInteractive() {
    return "interaction" === this.mode;
  }
  begin(i78, t88) {
    this._hasTarget = true;
    const e78 = this.animationSettings(t88);
    p41.copyFrom(this.view.state.camera);
    const n103 = A15(this.view.state.viewingMode);
    this.intersectionHelper.intersectRay(p41.ray, n103, l39) && (p41.center = l39), this.animation.update(p41, i78, e78), this.animation.finished && this.finish();
  }
  finish() {
    this.animation.currentTime = this.animation.time, super.finish();
  }
  get steppingFinished() {
    return this._hasTarget && this.animation.finished;
  }
  stepController(i78, t88) {
    this._hasTarget && this.animation.step(i78, t88);
  }
  onControllerEnd(i78) {
    this._hasTarget && (this.animation.cameraAt(this.animation.currentTime / this.animation.time, i78), this.animation.currentTime = this.animation.time), super.onControllerEnd(i78);
  }
  animationSettings(i78 = {}) {
    return { apex: { maximumDistance: this.view.state.constraints.clampAltitude(1 / 0) / 6, ascensionFactor: void 0, descensionFactor: void 0 }, ...i78, easing: "string" == typeof i78.easing ? H13[i78.easing] : i78.easing };
  }
};
e([y({ constructOnly: true })], h33.prototype, "mode", void 0), e([y({ readOnly: true })], h33.prototype, "isInteractive", null), h33 = e([a4("esri.views.3d.state.controllers.PointToPointAnimationController")], h33);
var p41 = new $2();
var l39 = n7();

// node_modules/@arcgis/core/geometry/support/axisAngle.js
function i57(n103 = x24) {
  return [n103[0], n103[1], n103[2], n103[3]];
}
function m29(n103, t88) {
  return j16(n103[0], n103[1], n103[2], t88, r22.get());
}
function j16(n103, t88, r79, u58, o77 = i57()) {
  return o77[0] = n103, o77[1] = t88, o77[2] = r79, o77[3] = u58, o77;
}
function k15(n103, t88, r79) {
  return _(v25(r79), n103, t88), z2(v25(r79), v25(r79)), r79[3] = a17(n103, t88), r79;
}
function v25(n103) {
  return n103;
}
var x24 = [0, 0, 1, 0];
var S14 = e18();
var b13 = e18();

// node_modules/@arcgis/core/views/3d/support/geometryUtils/sphere.js
function s55(r79, s84, p70, e78) {
  const n103 = u12(s84, p70, m30);
  return Z(r79, n103, e78);
}
var m30 = d10();

// node_modules/@arcgis/core/views/3d/state/utils/navigationUtils.js
var N11;
!function(t88) {
  t88[t88.Ellipsoid = 0] = "Ellipsoid", t88[t88.Silhouette = 1] = "Silhouette";
}(N11 || (N11 = {}));
var Q7 = 30;
var X7 = [1, 3e8];
var Y8 = 80;
var Z5 = 8;
var $4 = 200;
var _20 = 1508e5;
var tt3 = 5;
var et2 = 50;
var nt2 = 5;
var ot = 10;
var rt2 = 90;
var at2 = { exclude: /* @__PURE__ */ new Set([L4]) };
function it2(t88, e78, n103) {
  return n103[0] = e78[0] / (t88.fullWidth / t88.pixelRatio), n103[1] = e78[1] / (t88.fullHeight / t88.pixelRatio), n103;
}
function st3(t88) {
  for (; t88 > Math.PI; )
    t88 -= 2 * Math.PI;
  for (; t88 < -Math.PI; )
    t88 += 2 * Math.PI;
  return t88;
}
function ct2(t88, e78, n103) {
  const o77 = g4(f12.get(), n103[3], v25(n103));
  null == o77 || B(o77, o12) || (e8(oe, t88.eye, e78), O(oe, oe, o77), t88.eye = u2(oe, oe, e78), e8(oe, t88.center, e78), O(oe, oe, o77), t88.center = u2(oe, oe, e78), t88.up = O(oe, t88.up, o77));
}
function lt2(t88, e78, n103, o77) {
  return q3(t88, i29(e78, n103, ce2), o77);
}
function mt(t88, e78, n103, o77) {
  return q3(t88, u12(e78, n103, ce2), o77);
}
function ut2(t88, e78, n103, o77) {
  const r79 = c11.get();
  let a85 = 1 - n103;
  e8(r79, e78, t88.eye);
  const i78 = s10(r79);
  let s84 = i78 * (1 - a85);
  a85 >= 0 && s84 < o77 && (s84 = o77, a85 = -(s84 - i78) / i78), Math.abs(i78 - s84) < 1e-6 || (g3(r79, r79, a85), t88.eye = u2(oe, t88.eye, r79), t88.center = A3(oe, t88.center, e78, a85));
}
function pt(t88, e78, n103) {
  e78.getScreenCenter(ft), s55(t88, e78, ft, oe) && (e78.center = oe);
  const o77 = e78.distance, r79 = o77 * n103;
  if (Math.abs(o77 - r79) < 1e-6)
    return;
  const a85 = g3(c11.get(), e78.viewForward, r79);
  e78.eye = e8(oe, e78.center, a85);
}
var ft = i10();
function ht2(t88, e78) {
  o4(e78, 0, 0, 0);
  for (const n103 of t88)
    u2(e78, e78, n103);
  g3(e78, e78, 1 / t88.length);
}
function Mt(t88, e78, n103, o77) {
  return Math.sin(t88 / s10(e78)) * (n103 + o77.radius);
}
function yt(t88, e78, n103, o77) {
  return Mt(Math.PI / 2, e78, n103, o77) + (t88 - Math.PI / 2);
}
var gt;
!function(t88) {
  t88[t88.Vertical = 0] = "Vertical", t88[t88.Horizontal = 1] = "Horizontal";
}(gt || (gt = {}));
var dt = { Elevation: 3e4, Angle: M2(16) };
var bt = { Pole: 0.95, Angle: M2(18), Tilt: 45 };
var vt2 = M2(80);
function jt(t88, e78, n103, o77, r79, a85) {
  const i78 = n7(), s84 = _5();
  let c75 = true, l75 = true;
  return t88.intersectScreen(n103, i78, a85) ? s84[3] = s10(i78) : (l75 = false, e78.aboveGround && r79 !== N11.Ellipsoid ? s84[3] = Math.max(s10(e78.center), 0.9 * o77.radius) : s84[3] = s10(e78.eye) - e78.relativeElevation, r79 === N11.Silhouette ? It(s84, e78, n103, i78) : c75 = s55(s84, e78, n103, i78)), { sphere: s84, scenePickPoint: c75 ? i78 : null, hasGeometryIntersection: l75 };
}
function zt(t88, e78, n103) {
  if (s10(t88.eye) - n103.radius > dt.Elevation)
    return gt.Horizontal;
  u12(t88, e78, le);
  return -Math.sign(t88.relativeElevation) * (0.5 * Math.PI + a17(t88.eye, le.direction)) < dt.Angle ? gt.Vertical : gt.Horizontal;
}
function xt(t88, e78, n103) {
  e8(Pt, n103, e78), t88.eye = e8(oe, t88.eye, Pt), t88.center = e8(oe, t88.center, Pt);
}
var Pt = n7();
function It(t88, e78, n103, o77) {
  const r79 = u12(e78, n103, ce2);
  return null != r79 && (Y4(t88, r79, kt), Z(t88, r79, o77) ? !(p3(kt, r79.origin) < p3(o77, r79.origin)) || (r7(o77, kt), false) : (e8(wt, e78.eye, e78.center), z2(wt, wt), F8(wt, -P3(z2(wt, wt), kt), St), q3(St, r79, o77), false));
}
var kt = n7();
var wt = n7();
var St = h12();
function Et(a85, i78, s84, c75, l75, m55) {
  let u58 = 0;
  if (_(ie2, a85, i78), e8(re2, a85, i78), s10(a85) <= l75 || !c75.aboveGround) {
    _(s84, re2, c75.eye);
    const p70 = P3(a85, i78) / (s10(a85) * s10(i78));
    if (p70 < 0.9999)
      u58 = l5(p70);
    else {
      const t88 = s10(_(n7(), a85, i78)) / (s10(a85) * s10(i78));
      u58 = F3(t88);
    }
    const f59 = Math.cos(i3(r24.normalize(M2(m55)), 0, vt2));
    u58 = -u58 - Math.max(0, s10(i78) - l75) / (f59 * l75);
  } else
    e8(At, c75.eye, c75.center), _(s84, re2, At), u58 = -s10(re2) / l75;
  return z2(s84, s84), g3(s84, s84, s10(ie2)), u58;
}
var At = n7();
function Ht(r79, a85, i78, s84) {
  let c75, l75;
  const m55 = Math.cos(i3(r24.normalize(M2(s84)), 0, vt2));
  return c75 = a85 > i78 ? -(a85 - i78) / (m55 * i78) : a85 < -i78 ? Math.PI - (a85 + i78) / (m55 * i78) : l5(a85 / i78), l75 = r79 > i78 ? -(r79 - i78) / (m55 * i78) : r79 < -i78 ? Math.PI - (r79 + i78) / (m55 * i78) : l5(r79 / i78), (l75 - c75) * i78;
}
function Ut(t88, e78, n103, o77, r79, a85, i78, s84, c75, l75) {
  const m55 = Ht(t88[2], e78[2], a85[3], s84), u58 = c75 ? Ht(t88[0], e78[0], a85[3], 180) : e78[0] - t88[0], f59 = Math.sin(i78) * u58 - Math.cos(i78) * m55, h58 = Math.cos(i78) * u58 + Math.sin(i78) * m55;
  z2(oe, r79);
  const M26 = c75 ? f59 / Math.sqrt(Math.abs(a85[3] ** 2 - P3(n103, oe) ** 2)) : f59 / a85[3], y41 = h58 / Math.sqrt(Math.abs(a85[3] ** 2 - P3(n103, o77) ** 2));
  r14(l75, M26, y41);
}
function Gt(t88, e78, n103, o77, r79, a85, i78, s84, c75, l75) {
  _(ie2, t88, e78), D4(a85.up, a85.eye, Lt, Nt, Qt), D4([0, 0, 1], a85.eye, Dt, Jt, Kt), r7(n103, Jt), r7(o77, Dt), z2(n103, n103), g3(n103, n103, s10(ie2)), B3(t88, z2(Nt, Nt), z2(Qt, Qt), z2(Lt, Lt), Xt), B3(e78, Nt, Qt, Lt, Yt), Ut(Xt, Yt, t88, Dt, Jt, i78, s84, c75, l75, r79);
}
function qt(t88, e78, n103, o77, r79, a85, s84) {
  g4(_t, r79, o77), g4(te, s84, a85), c5(ee, _t, te), e8(e78, t88, n103), O(e78, e78, ee), u2(e78, e78, n103);
}
function Ct(t88, e78, n103, o77, r79, a85) {
  g4(_t, o77, n103), g4(te, a85, r79), c5(ee, _t, te), e8(oe, t88.eye, e78), O(oe, oe, ee), t88.eye = u2(oe, oe, e78), e8(oe, t88.center, e78), O(oe, oe, ee), t88.center = u2(oe, oe, e78), e8(oe, t88.up, e78), O(oe, oe, ee), t88.up = u2(oe, oe, e78);
}
function Ft(t88, e78, n103, o77, r79, a85) {
  return (Math.abs(o77) > Math.PI - bt.Angle || Math.abs(o77) < bt.Angle) && (Math.abs(t88[2]) < n103 * bt.Pole || Math.abs(e78) > n103) && a85.aboveGround && r79 < bt.Tilt;
}
function Rt(t88, e78, n103, o77, r79, a85) {
  if (a85)
    k15(n103, o77, $t), ct2(e78, t88, $t);
  else {
    const a86 = Et(n103, o77, se2, e78, t88[3], r79);
    ct2(e78, t88, m29(se2, a86));
  }
}
function Vt(t88, e78, n103, o77, r79, a85, i78) {
  const s84 = i78 ? 20 : 1, c75 = 1e-12;
  let l75, m55;
  r7(ne2, o77), ae.copyFrom(e78);
  for (let u58 = 0; u58 < s84 && p3(n103, ne2) > c75 && (l75 = p3(n103, ne2), Gt(n103, ne2, Jt, Dt, Zt, ae, t88, r79, a85, i78), Ct(ae, t88, Dt, Zt[1], Jt, Zt[0]), qt(ne2, ne2, t88, Dt, Zt[1], Jt, Zt[0]), m55 = p3(n103, ne2), m55 < l75 || 0 === u58); u58++)
    e78.copyFrom(ae);
}
function Tt(n103, o77, r79, a85, i78, s84, c75) {
  Ft(r79, P3(o77.up, r79), n103[3], -r24.normalize(M2(i78)), s84, o77) ? Vt(n103, o77, r79, a85, -r24.normalize(M2(i78)), s84, c75) : Rt(n103, o77, r79, a85, s84, c75);
}
function Ot(t88, e78, n103, o77, r79, a85) {
  const { eye: i78 } = t88;
  D4([0, 0, 1], i78, Dt, Jt, Kt);
  const s84 = e78.translation[0] * n103.pan, c75 = "zoom" === r79.mode ? 0 : e78.translation[1] * n103.pan, m55 = Math.max(Math.sqrt(Math.abs(1 - P3(t88.center, Dt) ** 2 / s10(t88.center) ** 2)), 0.5), u58 = (Math.sin(a85) * c75 + Math.cos(a85) * s84) / m55, p70 = -Math.cos(a85) * c75 + Math.sin(a85) * s84;
  switch (b2(o77.pan.matrix, o77.pan.matrix, u58, Dt), o77.pan.enabled = true, r79.mode) {
    case "pan":
      b2(o77.pan.matrix, o77.pan.matrix, p70, Jt), o77.pan.enabled = true;
      break;
    case "zoom":
      o77.zoom = -e78.translation[1] * n103.zoom;
  }
}
function Wt(t88, e78, n103, o77, r79) {
  const { eye: a85, viewRight: i78 } = t88, s84 = _(c11.get(), i78, a85), c75 = e78.translation[0] * n103.pan;
  switch (0 !== c75 && (b2(o77.pan.matrix, o77.pan.matrix, -c75, s84), o77.pan.enabled = true), r79.mode) {
    case "pan": {
      const t89 = e78.translation[1] * n103.pan;
      0 !== t89 && (b2(o77.pan.matrix, o77.pan.matrix, t89, i78), o77.pan.enabled = true);
      break;
    }
    case "zoom":
      o77.zoom = -e78.translation[1] * n103.zoom;
  }
}
function Bt(n103, o77, r79, a85, i78, s84, c75, l75, m55) {
  Ft(n103.center, P3(n103.up, n103.center), s10(n103.center), -r24.normalize(M2(s84)), c75, o77) ? Ot(o77, r79, a85, l75, m55, -r24.normalize(M2(i78))) : Wt(o77, r79, a85, l75, m55);
}
var Dt = n7();
var Jt = n7();
var Kt = n7();
var Lt = n7();
var Nt = n7();
var Qt = n7();
var Xt = n7();
var Yt = n7();
var Zt = n20();
var $t = i57();
var _t = e17();
var te = e17();
var ee = e17();
var ne2 = n7();
var oe = n7();
var re2 = n7();
var ae = new $2();
var ie2 = n7();
var se2 = n7();
var ce2 = { origin: n7(), direction: n7() };
var le = { origin: n7(), direction: n7() };

// node_modules/@arcgis/core/views/3d/state/controllers/global/ZoomStepController.js
var T17 = 0.6;
var F18 = 4;
var k16 = 60;
var A24 = class extends h33 {
  constructor() {
    super(...arguments), this._zoomLocation = n7(), this._tmpCamera = new $2(), this._tmpViewDir = n7(), this._tmpRayDir = { origin: n7(), direction: n7() }, this._targetOnSphere = n7(), this._tmpCenter = n7(), this._constraintOptions = { selection: L13.ALL_EXCEPT_COLLISION, interactionType: O14.ZOOM, interactionFactor: null, interactionStartCamera: new $2(), interactionDirection: null, tiltMode: O15.TUMBLE }, this._sphere = _5();
  }
  initialize() {
    this._intersector = A15(this.view.state.viewingMode);
  }
  zoomStep(t88, i78) {
    if (!this.active)
      return;
    const e78 = this.view.state, { interactionStartCamera: r79 } = this._constraintOptions;
    r79 && (this.animation.finished ? r79.copyFrom(e78.camera) : this.animation.cameraAt(1, r79));
    let o77 = false, a85 = false;
    this.intersectionHelper.intersectScreen(i78, this._zoomLocation, 0 === this.view.map.ground.opacity ? at2 : {}) && (o77 = t88 > 0, a85 = true), this._tmpCamera.copyFrom(e78.camera), o77 ? this.intersectionHelper.intersectRay(this._tmpCamera.ray, this._intersector, this._tmpCenter) && (this._tmpCamera.center = this._tmpCenter) : this.intersectionHelper.intersectRay(this._tmpCamera.ray, this._intersector, this._zoomLocation) ? this._tmpCamera.center = this._zoomLocation : r7(this._zoomLocation, this._tmpCamera.center), this._updateCamera(this._tmpCamera, t88, this._zoomLocation, i78, a85), this.begin(this._tmpCamera);
  }
  animationSettings() {
    return { duration: n5(600), easing: f33 };
  }
  _updateCamera(t88, e78, r79, s84, _42) {
    const y41 = A2(this.view.spatialReference), d63 = zt(t88, s84, y41), g49 = Math.abs(this.view.camera.position.z);
    z2(H14, t88.eye), g3(H14, H14, -1), u12(t88, s84, this._tmpRayDir), z2(this._tmpRayDir.direction, this._tmpRayDir.direction);
    const w33 = i3(Math.min(Z5, 1 / Math.abs(P3(H14, this._tmpRayDir.direction))) * g49, $4, _20);
    if (d63 === gt.Horizontal) {
      let i78 = T17 ** e78;
      this._sphere[3] = s10(r79), e8(this._tmpViewDir, t88.center, t88.eye);
      const o77 = Math.min(s10(this._tmpViewDir), w33);
      let n103 = o77 * i78;
      if (i78 <= 1 && n103 < F18 && (n103 = F18, i78 = n103 / o77), Math.abs(o77 - n103) < 1e-6)
        return;
      const _43 = s10(t88.center);
      if (this._sphere[3] !== _43) {
        const e79 = this._sphere[3] + i78 * (_43 - this._sphere[3]);
        t88.center = g3(E22, t88.center, e79 / _43);
      }
      g3(this._tmpViewDir, this._tmpViewDir, -i78), t88.eye = u2(E22, t88.center, this._tmpViewDir), E21(this.view, t88, this._constraintOptions), p3(r79, t88.center) > 1e-12 && s55(this._sphere, t88, s84, this._targetOnSphere) && Tt(this._sphere, t88, r79, this._targetOnSphere, this.view.camera.heading, this.view.camera.tilt, true);
    } else {
      let i78 = T17 ** Math.abs(e78);
      const o77 = e78 > 0 ? 1 : -1;
      e8(this._tmpViewDir, r79, t88.eye);
      const n103 = s10(this._tmpViewDir), p70 = this.view._stage.renderView.getMinimalDepthForArea(null, s84[0], s84[1], this.view.state.camera, k16);
      let l75 = null != p70 ? p70 : w33;
      l75 = _42 && e78 > 0 ? Math.min(l75, n103) : l75, g3(this._tmpRayDir.direction, this._tmpRayDir.direction, l75), u2(r79, this._tmpRayDir.origin, this._tmpRayDir.direction);
      let y42 = l75 * i78;
      const f59 = Math.max(F18, 1.01 * t88.nearFar[0]);
      if (e78 > 0 && y42 < f59 && (y42 = f59, i78 = y42 / l75), Math.abs(l75 - y42) < 1e-6)
        return;
      g3(this._tmpRayDir.direction, this._tmpRayDir.direction, o77 * (1 - i78)), t88.eye = u2(E22, t88.eye, this._tmpRayDir.direction), t88.center = u2(E22, t88.center, this._tmpRayDir.direction);
    }
    o47(this.view, t88);
  }
};
A24 = e([a4("esri.views.3d.state.controllers.global.ZoomStepController")], A24);
var E22 = n7();
var H14 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/local/ZoomStepController.js
var M14 = 0.6;
var D13 = 4;
var R12 = 60;
var S15 = class extends h33 {
  constructor() {
    super(...arguments), this._zoomLocation = n7(), this._tmpCamera = new $2(), this._tmpRayDir = n7(), this._tmpCenter = n7(), this._constraintOptions = { selection: L13.ALL, interactionType: O14.ZOOM, interactionFactor: null, interactionStartCamera: new $2(), interactionDirection: null, tiltMode: O15.TUMBLE };
  }
  zoomStep(t88, e78) {
    if (!this.active)
      return;
    const o77 = this.view.state, { interactionStartCamera: h58 } = this._constraintOptions;
    h58 && (this.animation.finished ? h58.copyFrom(o77.camera) : this.animation.cameraAt(1, h58)), this._tmpCamera.copyFrom(o77.camera);
    const _42 = A15(this.view.state.viewingMode);
    let y41 = false;
    t88 > 0 ? (y41 = this.intersectionHelper.intersectScreenFreePointFallback(e78, this._zoomLocation, 0 === this.view.map.ground.opacity ? at2 : {}), this.intersectionHelper.intersectRay(this._tmpCamera.ray, _42, this._tmpCenter) && (this._tmpCamera.center = this._tmpCenter)) : this.intersectionHelper.intersectRay(this._tmpCamera.ray, _42, this._zoomLocation) ? this._tmpCamera.center = this._zoomLocation : r7(this._zoomLocation, this._tmpCamera.center);
    const C30 = M14 ** t88;
    let f59 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, e78[0], e78[1], this.view.state.camera, R12);
    e8(T18, this._tmpCamera.eye, this._zoomLocation), z2(T18, T18);
    const j29 = i3(Math.min(Z5, 1 / Math.abs(P3(F19, T18))) * Math.abs(this.view.camera.position.z), $4, _20);
    if (f59 = null != f59 ? f59 : j29, f59) {
      const t89 = n7();
      e8(t89, this._zoomLocation, this._tmpCamera.eye), (f59 < s10(t89) || !y41) && (z2(t89, t89), u2(this._zoomLocation, this._tmpCamera.eye, g3(t89, t89, f59)));
    }
    this._updateCamera(this._tmpCamera, C30, this._zoomLocation), this.begin(this._tmpCamera);
  }
  animationSettings() {
    return { duration: n5(600), easing: f33 };
  }
  _updateCamera(t88, i78, e78) {
    e8(this._tmpRayDir, e78, t88.eye);
    const o77 = s10(this._tmpRayDir);
    let r79 = o77 * i78;
    const a85 = i78 <= 1, n103 = Math.max(D13, 1.01 * t88.nearFar[0]);
    0 !== r79 && (a85 && r79 < n103 && (r79 = n103, i78 = r79 / o77), Math.abs(o77 - r79) < 1e-6 || (g3(this._tmpRayDir, this._tmpRayDir, i78), t88.eye = e8(U12, e78, this._tmpRayDir), t88.center = A3(U12, t88.center, e78, 1 - i78), E21(this.view, t88, this._constraintOptions)));
  }
};
S15 = e([a4("esri.views.3d.state.controllers.local.ZoomStepController")], S15);
var U12 = n7();
var F19 = r5(0, 0, 1);
var T18 = n7();

// node_modules/@arcgis/core/views/input/handlers/support.js
function t54(t88, r79) {
  switch (r79) {
    case "primary":
      return "touch" === t88.pointerType || 0 === t88.button;
    case "secondary":
      return "touch" !== t88.pointerType && 2 === t88.button;
    case "tertiary":
      return "touch" !== t88.pointerType && 1 === t88.button;
  }
}
function r48(t88, r79) {
  if ("touch" === t88.pointerType)
    return false;
  switch (r79) {
    case "primary":
      return 0 === t88.button;
    case "secondary":
      return 2 === t88.button;
    case "tertiary":
      return 1 === t88.button;
  }
}

// node_modules/@arcgis/core/views/3d/input/handlers/DoubleClickZoom.js
var s56 = class extends i25 {
  constructor(o77, t88) {
    super(true), this._view = o77, this.registerIncoming("double-click", t88, (o78) => this._handleDoubleClick(o78));
  }
  _handleDoubleClick(r79) {
    const s84 = r79.data;
    if (t54(s84, "primary")) {
      const i78 = this._view.state.isGlobal ? new A24({ view: this._view, mode: "animation" }) : new S15({ view: this._view, mode: "animation" });
      this._view.state.switchCameraController(i78), i78.zoomStep(Math.log(0.5) / Math.log(0.6), i10(s84.x, s84.y)), r79.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/3d/state/NearFarHeuristic.js
function c46(e78, t88, i78) {
  return e78 === l14.Global ? new M15(i78) : new u33(t88, i78);
}
var u33 = class {
  constructor(e78, t88) {
    this._elevationProvider = e78, this._referenceEllipsoid = A2(t88), this._unitInMeters = H(t88, this._referenceEllipsoid.metersPerDegree);
  }
  compute(i78, a85, m55, o77, l75) {
    var _a;
    l75 || (l75 = { near: 0, far: 0 });
    let x36 = i78[2] * this._unitInMeters;
    const c75 = x36, u58 = x36 - o77, M26 = (_a = this._elevationProvider) == null ? void 0 : _a.visibleElevationBounds;
    M26 && (x36 = u58 >= 0 ? c75 - this._unitInMeters * M26.min : this._unitInMeters * M26.max - c75);
    const _42 = { x: (m55 = null != m55 ? m55 : new M({ xmin: 0, ymin: 0, zmin: 0, xmax: 0, ymax: 0, zmax: 0 })).xmax - m55.xmin, y: m55.ymax - m55.ymin, z: 4 * Math.max(m55.xmax - m55.xmin, m55.ymax - m55.ymin) }, I29 = Math.max(_42.x, _42.y, _42.z);
    e8(E23, a85, i78), v26[0] = E23[0] > 0 ? m55.xmax : m55.xmin, v26[1] = E23[1] > 0 ? m55.ymax : m55.ymin, v26[2] = E23[2] > 0 ? I29 / 2 : -I29 / 2, e8(v26, v26, i78), z2(E23, E23);
    const j29 = 1.1 * P3(v26, E23) * this._unitInMeters, b31 = Math.sqrt(x36 * (x36 + 2 * this._referenceEllipsoid.radius)), g49 = Math.max(m55.xmax - m55.xmin, m55.ymax - m55.ymin), w33 = g49 * d43 * this._unitInMeters, z21 = g49 * y26 * this._unitInMeters, U24 = i3((x36 - z21) / (w33 - z21), 0, 1) ** 3, P29 = Math.min(s12(b31, j29, U24), b31) * Math.max(Math.log(Math.abs(u58)), 1);
    return f36(Math.min(P29, Math.max(34064e4, I29)) / this._unitInMeters, p42, this._unitInMeters, l75);
  }
};
var M15 = class {
  constructor(e78) {
    this._referenceEllipsoid = A2(e78);
  }
  compute(i78, r79, s84, n103, m55) {
    m55 || (m55 = { near: 0, far: 0 });
    const o77 = s10(i78), h58 = o77 - this._referenceEllipsoid.radius, l75 = this._referenceEllipsoid.radius + Math.min(0, n103), c75 = Math.abs(h58 - n103), u58 = Math.max(c75, Math.abs(h58)), M26 = Math.sqrt(u58 * (u58 + 2 * l75)), p70 = o77 + this._referenceEllipsoid.radius;
    return f36(1.2 * s12(M26, p70, e31(u58)), i3(2e4 - (Math.log(u58) - 7.983) / 9.011 * 19e3, 1e3, 2e4), 1, m55);
  }
};
function f36(e78, t88, i78, r79) {
  const s84 = _21 / i78;
  return e78 / t88 > s84 ? (r79.far = e78, r79.near = r79.far / t88) : (r79.near = s84, r79.far = r79.near * t88), r79;
}
var p42 = 2e4;
var _21 = 2;
var d43 = 1e-3;
var y26 = 1e-4;
var v26 = n7();
var E23 = n7();

// node_modules/@arcgis/core/views/3d/state/SurfaceCollisionConstraint.js
var n63 = class extends m {
  constructor(e78) {
    super(e78);
  }
  initialize() {
    this.addHandles(this.view.basemapTerrain.on("elevation-change", (e78) => this._handleElevationChangeEvent(e78)));
  }
  _handleElevationChangeEvent(e78) {
    if (this.view.state.cameraController)
      return;
    const t88 = this.view.state.camera;
    null != e78.spatialReference && u30(this.view, t88, e78.extent, e78.spatialReference) && this._applyToCurrentCamera();
  }
  _applyToCurrentCamera() {
    this.view.state.updateCamera((e78) => o47(this.view, e78, i51.EYE_AND_CENTER));
  }
};
e([y({ constructOnly: true })], n63.prototype, "view", void 0), n63 = e([a4("esri.views.3d.state.ElevationCollisionConstraint")], n63);

// node_modules/@arcgis/core/views/3d/state/ConstraintsManager.js
var _22 = class extends m {
  constructor(t88) {
    super(t88), this.nearFarHeuristic = c46(t88.view.state.viewingMode, t88.view.basemapTerrain, t88.view.renderCoordsHelper.spatialReference);
  }
  initialize() {
    this.addHandles([l6(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance) == null ? void 0 : _b.near, (_d = (_c = this.view.constraints) == null ? void 0 : _c.clipDistance) == null ? void 0 : _d.far];
    }, () => this._clipDistanceNearFarChanged()), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance) == null ? void 0 : _b.mode;
    }, () => this._updateNearFar()), this.view.state.events.on("before-camera-change", (t88) => this._updateCameraNearFar(t88)), l6(() => this.view.renderDataExtent, () => this._updateNearFar(), U3), l6(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.view.constraints) == null ? void 0 : _a.altitude) == null ? void 0 : _b.min, (_d = (_c = this.view.constraints) == null ? void 0 : _c.altitude) == null ? void 0 : _d.max];
    }, () => this._updateAltitude(), U3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.tilt) == null ? void 0 : _b.max;
    }, () => this._updateTiltMax(), U3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.tilt) == null ? void 0 : _b.mode;
    }, () => this._updateTilt(), U3), l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, () => this._updateTiltAutoMax(), U3), l6(() => {
      var _a, _b, _c, _d, _e4, _f;
      return [(_c = (_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.navigationConstraint) == null ? void 0 : _c.type, (_f = (_e4 = (_d = this.view.state) == null ? void 0 : _d.constraints) == null ? void 0 : _e4.collision) == null ? void 0 : _f.enabled];
    }, () => this._updateCollision(), U3)]), this.view.state.isLocal && this.addHandles(l6(() => this.view.renderDataExtent, (t88) => this._updateLocalSurfaceDistance(t88), h3)), this._updateNearFar(), this.view.state.viewingMode !== l14.Local && this._updateAltitude(), this._updateTilt(), this._updateCollision(), this._set("surfaceCollisionConstraint", new n63({ view: this.view }));
  }
  destroy() {
    this.surfaceCollisionConstraint && (this.surfaceCollisionConstraint.destroy(), this._set("surfaceCollisionConstraint", null));
  }
  _clipDistanceNearFarChanged() {
    var _a;
    const t88 = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance;
    t88 && "auto" !== t88.mode && this.view.state.updateCamera((i78) => this._updateCameraNearFarManual(i78, t88));
  }
  _updateNearFar() {
    this.view.state.updateCamera((t88) => this._updateCameraNearFar(t88));
  }
  _updateCameraNearFar(t88) {
    const i78 = this.view.constraints && this.view.constraints.clipDistance;
    "manual" === (i78 ? i78.mode : "auto") ? this._updateCameraNearFarManual(t88, i78) : this._updateCameraNearFarAuto(t88, i78);
  }
  _updateCameraNearFarAuto(t88, i78) {
    this.nearFarHeuristic.compute(t88.eye, t88.center, this.view.renderDataExtent, g21(this.view, t88.eye), t88), i78 && i78.autoUpdate(t88.near, t88.far);
  }
  _updateCameraNearFarManual(t88, i78) {
    i78 && (t88.near = i78.near, t88.far = i78.far);
  }
  _updateCollision() {
    var _a, _b, _c;
    const t88 = (_c = (_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.navigationConstraint) == null ? void 0 : _c.type, i78 = !t88 || "stay-above" === t88, a85 = this.view.state.constraints.collision;
    if (i78 !== a85.enabled) {
      a85.enabled = i78, i78 && this._reapplyConstraints(L13.COLLISION);
      const t89 = this.view.constraints && this.view.constraints.tilt;
      t89 && "auto" !== t89.mode || this._updateTiltAuto();
    }
  }
  _updateAltitude() {
    const t88 = this.view.constraints && this.view.constraints.altitude;
    t88 && this.view.state.viewingMode !== l14.Local ? this.view.state.constraints.altitude = { min: t88.min, max: t88.max } : this.view.state.constraints.altitude = null, this._reapplyConstraints();
  }
  _updateTiltMax() {
    const t88 = this.view.constraints && this.view.constraints.tilt;
    t88 && "auto" !== t88.mode && (this._updateTiltManual(t88), this._reapplyConstraints());
  }
  _updateTilt() {
    const t88 = this.view.constraints && this.view.constraints.tilt;
    "manual" === (t88 ? t88.mode : "auto") ? this._updateTiltManual(t88) : this._updateTiltAuto(), this._reapplyConstraints();
  }
  _updateTiltManual(t88) {
    const i78 = this.view.state.constraints;
    i78.tilt = i78.createConstantMaxTilt(M2(t88.max));
  }
  _updateTiltAuto() {
    const t88 = this.view.state.constraints;
    t88.tilt = t88.createDefaultTilt(), this._updateTiltAutoMax();
  }
  _updateTiltAutoMax() {
    const t88 = this.view.constraints && this.view.constraints.tilt;
    if (!t88 || "auto" !== t88.mode)
      return;
    const i78 = this.view.state.constraints;
    if (i78.tilt) {
      const a85 = i78.tilt(this.view.state.camera.distance).max;
      t88.autoUpdate(m2(a85));
    }
  }
  _updateLocalSurfaceDistance(t88) {
    if (null == t88)
      return;
    let i78 = Math.max(t88.width, t88.height);
    if (i78 <= 0)
      return;
    null != t88.zmax && null != t88.zmin && (i78 = Math.max(i78, t88.zmax - t88.zmin));
    const a85 = this.view.state, e78 = 3 * i78 / Math.atan(a85.camera.fov / 2);
    e78 !== a85.constraints.distance && (a85.constraints.distance = e78);
  }
  _reapplyConstraints(t88 = L13.ALL) {
    this.view.state.updateCamera((i78) => E21(this.view, i78, { selection: t88, interactionType: O14.NONE, interactionFactor: null, interactionStartCamera: null, interactionDirection: null, tiltMode: O15.TUMBLE }));
  }
};
e([y({ constructOnly: true })], _22.prototype, "view", void 0), e([y({ readOnly: true })], _22.prototype, "surfaceCollisionConstraint", void 0), _22 = e([a4("esri.views.3d.state.ConstraintsManager")], _22);

// node_modules/@arcgis/core/views/3d/state/controllers/SurfaceCollisionCorrectionController.js
var l40 = class extends i56 {
  set desiredCamera(e78) {
    this._set("desiredCamera", e78.clone());
  }
  constructor(e78) {
    super(e78);
  }
  get canStop() {
    return true;
  }
  get constraintEnabled() {
    return this.view.state.constraints.collision.enabled;
  }
  onControllerStart() {
    this.state = s54.Running, this.addHandles(this.view.basemapTerrain.on("elevation-change", (e78) => this._handleElevationChangeEvent(e78))), this._applyCorrection();
  }
  onControllerEnd() {
    this.removeAllHandles();
  }
  stepController() {
  }
  _handleElevationChangeEvent(e78) {
    (null == e78.spatialReference || u30(this.view, this.desiredCamera, e78.extent, e78.spatialReference)) && this._applyCorrection();
  }
  _applyCorrection() {
    this.view.state.updateCamera((e78) => {
      e78.copyViewFrom(this.desiredCamera), o47(this.view, e78, i51.EYE_AND_CENTER) || this.constraintEnabled || (this.state = s54.Stopped);
    });
  }
};
e([y({ constructOnly: true })], l40.prototype, "desiredCamera", null), l40 = e([a4("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")], l40);

// node_modules/@arcgis/core/views/3d/support/cameraUtilsInternal.js
var l41 = n7();
var u34 = n7();
function h34() {
  return { direction: n7(), up: n7() };
}
function m31(f59, h58, m55, p70, b31) {
  let d63 = z2(l41, f59), g49 = P3(d63, p70);
  const j29 = g49 > 0;
  g49 = Math.abs(g49), g49 > 0.99 && (g49 = Math.abs(P3(h58, p70)), g49 < 0.99 ? (r7(d63, h58), j29 && g3(d63, d63, -1)) : d63 = null);
  let k27 = 0;
  if (d63) {
    g3(u34, p70, P3(p70, d63)), e8(d63, d63, u34);
    const n103 = P3(d63, b31) / (s10(d63) * s10(b31));
    _(u34, d63, b31);
    k27 = (P3(u34, p70) > 0 ? 1 : -1) * m2(l5(n103));
  }
  const v44 = m2(l5(-P3(p70, f59) / s10(f59)));
  return m55 ? (m55.heading = k27, m55.tilt = v44, m55) : { heading: k27, tilt: v44 };
}

// node_modules/@arcgis/core/chunks/cameraUtilsPlanar.js
var T19 = r5(0, 1, 0);
var j17 = r5(0, 0, 1);
var g25 = e17();
var y27 = n7();
var x25 = n7();
function h35(t88, i78, s84, c75 = h34()) {
  const { direction: m55, up: f59 } = c75;
  return R4(g25, -M2(i78)), l8(g25, g25, M2(s84)), O(m55, j17, g25), g3(m55, m55, -1), O(f59, T19, g25), c75;
}
function b14(t88, e78, o77, r79) {
  return m31(e78, o77, r79, j17, T19);
}
function v27(t88, e78, o77, r79) {
  const i78 = h35(t88, o77, r79), n103 = n7();
  return g3(n103, i78.direction, -e78), u2(n103, n103, t88), { up: i78.up, eye: n103, heading: o77, tilt: r79 };
}
function R13(e78) {
  return m2(e78);
}
function _23(t88) {
  return M2(t88);
}
function E24(t88, e78, o77, r79, i78) {
  const n103 = t88.renderSpatialReference, a85 = t88.map && t88.spatialReference || e78.spatialReference;
  return In(e78, y27, n103), In(e78, x25, n103), y27[0] -= o77 / 2, x25[0] += o77 / 2, y27[1] -= r79 / 2, x25[1] += r79 / 2, Hn(y27, n103, y27, a85), Hn(x25, n103, x25, a85), i78 ? (i78.xmin = y27[0], i78.ymin = y27[1], i78.xmax = x25[0], i78.ymax = x25[1], i78.spatialReference = a85) : i78 = new M(y27[0], y27[1], x25[0], x25[1], a85), i78;
}
var H15 = Object.freeze(Object.defineProperty({ __proto__: null, directionToHeadingTilt: b14, eyeForCenterWithHeadingTilt: v27, eyeTiltToLookAtTilt: _23, headingTiltToDirectionUp: h35, lookAtTiltToEyeTilt: R13, toExtent: E24 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/chunks/cameraUtilsSpherical.js
var I17 = r5(0, 0, 1);
var P16 = z2(n7(), r5(1, 1, 1));
var U13 = new i17(-180, 180);
var v28 = e17();
var w23 = n7();
var q12 = n7();
function S16(t88, e78, a85, n103 = h34()) {
  _(w23, t88, I17), 0 === P3(w23, w23) && _(w23, t88, P16), g4(v28, -M2(e78), t88), b2(v28, v28, -M2(a85), w23);
  const { up: r79, direction: h58 } = n103;
  return _(r79, w23, t88), z2(r79, r79), O(r79, r79, v28), z2(h58, t88), j2(h58, h58), O(h58, h58, v28), n103;
}
function _24(t88, e78, o77, a85) {
  const n103 = w23, i78 = q12;
  return z2(n103, t88), _(q12, n103, I17), 0 === P3(q12, q12) && _(q12, n103, P16), _(i78, q12, n103), m31(e78, o77, a85, n103, i78);
}
function E25(t88, e78, a85, i78) {
  const s84 = { eye: n7(), up: null, tilt: i78, heading: a85 }, r79 = w23;
  r79[0] = t88[0], r79[1] = t88[2], r79[2] = -t88[1];
  const c75 = e78, l75 = M2(a85), m55 = M2(i78), f59 = Math.sin(l75), p70 = Math.cos(l75), y41 = Math.sin(m55), d63 = Math.cos(m55), g49 = s10(r79);
  let j29;
  if (Math.abs(m55) < 1e-8)
    j29 = c75 + g49;
  else {
    const t89 = g49 / y41, e79 = F3(c75 / t89), o77 = Math.PI - m55 - e79;
    j29 = t89 * Math.sin(o77);
  }
  const T31 = d63 * c75, b31 = c75 * c75 * (y41 * y41), x36 = p70 * p70 * b31, R25 = j29 - T31, I29 = R25 * R25, P29 = x36 * (x36 + I29 - r79[1] * r79[1]);
  if (P29 < 0)
    return g3(s84.eye, r79, j29 / g49), s84.tilt = 0, W10(s84, t88);
  const U24 = Math.sqrt(P29), v44 = r79[1] * R25, q21 = x36 + I29;
  let S27;
  if (S27 = p70 > 0 ? -U24 + v44 : U24 + v44, Math.abs(q21) < 1e-8)
    return g49 < 1e-8 ? (s84.eye[0] = 0, s84.eye[1] = 0, s84.eye[2] = c75) : g3(s84.eye, r79, j29 / g49), s84.tilt = 0, H16(s84.eye), W10(s84, t88);
  s84.eye[1] = S27 / q21;
  const _42 = f59 * f59 * b31, E43 = y41 * c75, k27 = p70 * E43 * s84.eye[1], z21 = s84.eye[1] * s84.eye[1], A39 = 1 - z21, C30 = Math.sqrt(A39), G22 = x36 * z21 + _42 - 2 * k27 * C30 * R25 + A39 * I29;
  return Math.abs(G22) < 1e-8 ? (g3(s84.eye, r79, j29 / g49), s84.tilt = 0, H16(s84.eye), W10(s84, t88)) : (s84.eye[0] = (A39 * (j29 * r79[0] - T31 * r79[0]) - E43 * C30 * (r79[0] * s84.eye[1] * p70 + r79[2] * f59)) / G22, s84.eye[2] = (A39 * (j29 * r79[2] - T31 * r79[2]) - E43 * C30 * (r79[2] * s84.eye[1] * p70 - r79[0] * f59)) / G22, g3(s84.eye, s84.eye, j29), H16(s84.eye), W10(s84, t88));
}
function H16(t88) {
  const e78 = t88[1];
  t88[1] = -t88[2], t88[2] = e78;
}
function W10(t88, e78) {
  const o77 = S16(e78, t88.heading, t88.tilt);
  return t88.up = o77.up, t88;
}
function k17(t88, e78, o77) {
  const i78 = s10(e78), s84 = Math.sqrt(o77 * o77 + i78 * i78 - 2 * o77 * i78 * Math.cos(Math.PI - t88)), r79 = F3(o77 / (s84 / Math.sin(t88)));
  return m2(t88 - r79);
}
function z16(t88, e78, a85) {
  const i78 = M2(t88), s84 = s10(e78);
  return F3(a85 / (s84 / Math.sin(i78))) + i78;
}
function A25(t88, n103, i78, s84, r79) {
  let c75, l75, m55, f59;
  const p70 = n103.latitude, h58 = A2(t88.spatialReference).radius, u58 = n103.longitude, y41 = l34(p70, i78, h58) / 2;
  c75 = u58 - y41, l75 = u58 + y41;
  const M26 = M2(p70), b31 = (1 + Math.sin(M26)) / (1 - Math.sin(M26)), x36 = (b31 + 1) * Math.tan(s84 / h58 / 2), I29 = x36 * x36;
  function P29(t89) {
    const o77 = Math.PI / 2;
    return (t89 = o16.normalize(t89, -o77)) > o77 && (t89 = Math.PI - t89), t89;
  }
  if (m55 = 1.5 * Math.PI - 2 * Math.atan(0.5 * (x36 + Math.sqrt(4 * b31 + I29))), f59 = m55 + s84 / h58, m55 = P29(m55), f59 = P29(f59), f59 < m55) {
    const t89 = f59;
    f59 = m55, m55 = t89;
  }
  if (m55 = Math.max(m2(m55), -90), f59 = Math.min(m2(f59), 90), l75 = U13.monotonic(c75, l75), l75 - c75 > 180) {
    const t89 = (l75 - c75 - 180) / 2;
    c75 += t89, l75 -= t89;
  }
  const v44 = t88.spatialReference && t88.spatialReference.isGeographic ? t88.spatialReference : f2.WGS84;
  return r79 ? (r79.xmin = c75, r79.ymin = m55, r79.xmax = l75, r79.ymax = f59, r79.spatialReference = v44) : r79 = new M(c75, m55, l75, f59, v44), t88.spatialReference && t88.spatialReference.isWebMercator && d4(r79, false, r79), r79;
}
var C16 = Object.freeze(Object.defineProperty({ __proto__: null, directionToHeadingTilt: _24, eyeForCenterWithHeadingTilt: E25, eyeTiltToLookAtTilt: z16, headingTiltToDirectionUp: S16, lookAtTiltToEyeTilt: k17, toExtent: A25 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/views/support/spatialReferenceSupport.js
function r49(r79, S27) {
  return null != r79 && (null == S27 || (S27 === l14.Local ? !r79.isGeographic || (r79.isWGS84 || r79.wkid === S2.CGCS2000) : r79.isWebMercator || r79.isWGS84 || r79.wkid === S2.CGCS2000 || r79.wkid === S2.GCSMARS2000 || r79.wkid === S2.GCSMARS2000_SPHERE || r79.wkid === S2.GCSMOON2000));
}

// node_modules/@arcgis/core/views/3d/support/cameraUtils.js
var U14 = s3.getLogger("esri.views.3d.support.cameraUtils");
var P17 = 39.37;
var b15 = 96;
var A26 = 1;
var D14 = 8;
var H17 = 5;
var L16 = 1;
var G14 = n7();
var E26 = { heading: 0, tilt: 0 };
var O17 = new x3();
var k18 = new i17(-20037508342788905e-9, 20037508342788905e-9);
var I18 = new i17(-180, 180);
var q13;
function J8(e78) {
  return e78.spatialReference || f2.WGS84;
}
function F20(e78) {
  return "global" === e78.viewingMode ? C16 : H15;
}
function W11(e78, n103, t88, r79, i78) {
  return F20(e78).headingTiltToDirectionUp(n103, t88, r79, i78);
}
function X8(e78, n103) {
  if (null == n103)
    return null;
  const t88 = e78.renderSpatialReference, i78 = F20(e78).headingTiltToDirectionUp, o77 = n7();
  if (!In(n103.position, o77, t88))
    return null;
  const s84 = i78(o77, n103.heading, n103.tilt);
  g3(s84.direction, s84.direction, e78.state.camera.distance), u2(s84.direction, s84.direction, o77);
  const c75 = f32(e78, o77, s84.direction, s84.up);
  return c75.fov = M2(n103.fov), c75;
}
!function(e78) {
  e78[e78.LOCKED = 0] = "LOCKED", e78[e78.ADJUST = 1] = "ADJUST";
}(q13 || (q13 = {}));
var K7 = n7();
function Y9(n103, t88, r79) {
  const o77 = n103.renderSpatialReference, a85 = Q8(n103, t88.eye, t88.viewForward, t88.up, E26);
  let l75 = J8(n103);
  return Hn(t88.eye, o77, K7, l75) || (l75 = f2.WGS84, Hn(t88.eye, o77, K7, l75)), null == r79 ? new d26(new x3(K7, l75), a85.heading, a85.tilt, m2(t88.fov)) : (r79.position.x = K7[0], r79.position.y = K7[1], r79.position.z = K7[2], r79.position.spatialReference = l75, r79.heading = a85.heading, r79.tilt = a85.tilt, r79.fov = m2(t88.fov), r79);
}
function N12(e78, n103, t88) {
  const i78 = e78.state.camera, o77 = i78.width / 2 / i78.pixelRatio;
  e78.renderCoordsHelper.viewingMode === l14.Global && null != t88 && (n103 *= Math.cos(M2(t88))), n103 /= e78.renderCoordsHelper.unitInMeters;
  return o77 / (b15 * P17 / n103) / Math.tan(i78.fovX / 2);
}
function V11(e78, n103, t88) {
  const i78 = e78.state.camera, o77 = n103 * Math.tan(i78.fovX / 2), a85 = i78.width / 2 / i78.pixelRatio;
  let l75 = b15 * P17 / (a85 / o77);
  return e78.renderCoordsHelper.viewingMode === l14.Global && null != t88 && (l75 /= Math.cos(M2(t88))), l75 * e78.renderCoordsHelper.unitInMeters;
}
function Z6(e78, n103, t88, r79, i78, o77) {
  return B11(e78, n103, N12(e78, t88, n103.latitude), r79, i78, o77);
}
function B11(e78, n103, t88, r79, i78, o77) {
  if (ye(o77)) {
    const a86 = new ge(o77.signal);
    return te2(e78, r79.heading, r79.tilt, n103, t88, i78, a86), void a86.resolver.promise.then((n104) => {
      const t89 = pe(e78, n104, r79.fov);
      if (null != t89)
        return o77.resolver.resolve(t89);
      o77.resolver.reject();
    }, (e79) => o77.resolver.reject(e79));
  }
  const a85 = te2(e78, r79.heading, r79.tilt, n103, t88, i78);
  return pe(e78, a85, r79.fov, o77);
}
function Q8(e78, n103, t88, r79, i78) {
  return F20(e78).directionToHeadingTilt(n103, t88, r79, i78);
}
function $5(e78, n103) {
  return !!(e78.basemapTerrain && e78.renderCoordsHelper.fromRenderCoords(n103, O17, e78.spatialReference) && e78.elevationProvider && (a30(e78.elevationProvider, O17) ?? 0) > (O17.z ?? 0) - L16);
}
async function _25(e78, n103, t88) {
  if (!e78.renderCoordsHelper.fromRenderCoords(n103, O17, e78.spatialReference) || !e78.elevationProvider)
    return false;
  const r79 = O17.z ?? 0;
  return (await e78.elevationProvider.queryElevation(O17.x, O17.y, r79, O17.spatialReference, "ground", t88) ?? 0) > r79 - L16;
}
async function ee2(e78, n103, t88) {
  const r79 = n7();
  if (n103)
    if (n103 instanceof x3) {
      if (In(n103, r79, e78.renderSpatialReference), null == n103.z && null != e78.basemapTerrain && null != e78.elevationProvider) {
        const i78 = await e78.elevationProvider.queryElevation(n103.x, n103.y, n103.z ?? 0, n103.spatialReference, "ground", t88);
        return null != i78 && e78.renderCoordsHelper.setAltitude(r79, i78), r79;
      }
    } else
      r7(r79, n103);
  else
    r7(r79, e78.state.camera.center);
  return r79;
}
function ne3(e78, n103) {
  const t88 = n7();
  if (n103 && n103 instanceof x3) {
    if (In(n103, t88, e78.renderSpatialReference), null == n103.z && null != e78.basemapTerrain && null != e78.elevationProvider) {
      const r79 = a30(e78.elevationProvider, n103);
      null != r79 && e78.renderCoordsHelper.setAltitude(t88, r79);
    }
  } else
    r7(t88, n103 || e78.state.camera.center);
  return t88;
}
function te2(e78, n103, t88, r79, i78, o77, a85) {
  const l75 = r79 && r79 instanceof x3 ? r79 : null;
  if (ye(a85))
    return ee2(e78, r79, a85.signal).then((r80) => {
      re3(e78, n103, t88, l75, r80, i78, o77, a85);
    }, (e79) => a85.resolver.reject(e79)), null;
  const s84 = ne3(e78, r79);
  return re3(e78, n103, t88, l75, s84, i78, o77, a85);
}
function re3(e78, n103, t88, r79, i78, o77, a85, l75) {
  if (null == r79) {
    const n104 = e78.renderSpatialReference;
    if (null == (r79 = Tn(i78, n104, J8(e78))))
      return null;
  }
  o77 = Math.max(o77, e78.state.constraints.minimumPoiDistance);
  const s84 = le2(e78, n103, t88, i78, o77, a85), c75 = (0, F20(e78).eyeForCenterWithHeadingTilt)(i78, o77, s84.heading, s84.tilt);
  if (a85 === q13.ADJUST && "global" === e78.viewingMode && t88 > 0) {
    const s85 = () => {
      const s86 = fe(e78, i78, o77, ue(e78, o77, t88, i78));
      return a85 = t88 - s86 < 1 ? q13.LOCKED : q13.ADJUST, re3(e78, n103, s86, r79, i78, o77, a85, l75);
    }, f59 = e78.map.ground.navigationConstraint;
    if (!f59 || "stay-above" === f59.type) {
      if ($5(e78, c75.eye))
        return s85();
      if (ye(l75))
        return _25(e78, c75.eye, l75.signal).then((e79) => e79 ? s85() : (l75.resolver.resolve({ eye: c75.eye, up: c75.up, center: t8(i78), heading: c75.heading, tilt: c75.tilt }), null)), null;
    }
  }
  const m55 = !l75 || ye(l75) ? { center: n7(), eye: n7(), up: n7(), tilt: 0, heading: 0 } : l75;
  return m55.eye = c75.eye, m55.up = c75.up, m55.center = t8(i78), m55.heading = c75.heading, m55.tilt = c75.tilt, ye(l75) && l75.resolver.resolve(m55), m55;
}
function ie3(e78, n103, t88, r79, i78, o77 = null) {
  let a85, l75, s84;
  if (e78.state.isGlobal) {
    if (!r49(n103.spatialReference, l14.Global))
      return ye(o77) && o77.resolver.reject(), null;
    const e79 = new x3(n103.xmin, n103.ymin, n103.spatialReference), t89 = new x3(n103.xmax, n103.ymax, n103.spatialReference), r80 = n103.spatialReference.isGeographic ? I18 : k18;
    a85 = new x3({ x: r80.center(e79.x, t89.x), y: (t89.y + e79.y) / 2, z: null != n103.zmax && null != n103.zmin ? (n103.zmax + n103.zmin) / 2 : void 0, spatialReference: n103.spatialReference });
    const i79 = A2(n103.spatialReference), c76 = s49(a85, e79, t89);
    l75 = c76.lon, s84 = c76.lat, r80.diff(e79.x, t89.x) > r80.range / 2 && (l75 += i79.halfCircumference), l75 = Math.min(l75, i79.halfCircumference), s84 = Math.min(s84, i79.halfCircumference);
  } else {
    const t89 = e78.renderSpatialReference ?? n103.spatialReference;
    t89.equals(n103.spatialReference) || (n103 = nn(n103, t89)), l75 = n103.xmax - n103.xmin, s84 = n103.ymax - n103.ymin;
    const r80 = null != n103.zmax && null != n103.zmin ? (n103.zmax + n103.zmin) / 2 : void 0;
    a85 = new x3({ x: n103.xmin + 0.5 * l75, y: n103.ymin + 0.5 * s84, z: r80, spatialReference: t89 });
  }
  const c75 = null != n103.zmax && null != n103.zmin ? n103.zmax - n103.zmin : 0, u58 = e78.state.camera, f59 = 1 / Math.tan(u58.fovX / 2), d63 = 1 / Math.tan(u58.fovY / 2), v44 = 1 / Math.tan(u58.fov / 2), h58 = Math.max(0.5 * l75 * f59, 0.5 * s84 * d63, 0.5 * c75 * v44) / A26;
  if (ye(o77)) {
    const n104 = new ge(o77.signal);
    return te2(e78, t88, r79, a85, h58, i78, n104), void n104.resolver.promise.then((n105) => {
      const t89 = pe(e78, n105, e78.camera.fov);
      if (null != t89)
        return o77.resolver.resolve(t89);
      o77.resolver.reject();
    }, (e79) => o77.resolver.reject(e79));
  }
  const y41 = te2(e78, t88, r79, a85, h58, i78);
  return pe(e78, y41, e78.camera.fov, o77);
}
function oe2(e78, n103, t88) {
  const r79 = e78.renderSpatialReference, i78 = Tn(t88, r79, J8(e78));
  if (null == i78)
    return null;
  const o77 = Math.tan(n103.fovX / 2), a85 = Math.tan(n103.fovY / 2), l75 = U(n103.eye, t88), c75 = 2 * l75 * o77 * A26, u58 = 2 * l75 * a85 * A26;
  return "global" === e78.viewingMode ? A25(e78, i78, c75, u58) : E24(e78, i78, c75, u58);
}
function ae2(e78, n103, t88) {
  const r79 = e78.pointsOfInterest.centerOnSurfaceFrequent.distance;
  if (Math.log(t88 / r79) / Math.LN2 > D14)
    return true;
  const i78 = e78.renderSpatialReference, o77 = J8(e78), a85 = Tn(n103, i78, o77), l75 = Tn(e78.pointsOfInterest.centerOnSurfaceFrequent.renderLocation, i78, o77);
  if (null == a85 || null == l75)
    return false;
  const s84 = Math.tan(0.5 * e78.state.camera.fov) * r79;
  return l75.distance(a85) / s84 > H17;
}
function le2(e78, n103, t88, r79, i78, o77) {
  let a85 = 0;
  return o77 === q13.ADJUST && ae2(e78, r79, i78) ? (n103 = 0, a85 = ce3(e78, i78, t88, r79)) : a85 = me(e78, r79, i78, t88), a85 = e78.state.constraints.clampTilt(i78, a85), { heading: n103, tilt: t88 = fe(e78, r79, i78, a85) };
}
var se3 = 0.7;
function ce3(e78, n103, t88, r79) {
  const i78 = me(e78, r79, n103, t88);
  if (!e78.state.constraints.tilt)
    return i78;
  const o77 = e78.state.constraints.tilt(n103);
  o77.max = Math.min(o77.max, 0.5 * Math.PI);
  const a85 = o77.min * (1 - se3) + o77.max * se3;
  return Math.min(i78, a85);
}
function ue(e78, n103, t88, r79) {
  let i78 = me(e78, r79, n103, t88);
  if (!e78.state.constraints.tilt)
    return i78;
  const o77 = e78.state.constraints.tilt(n103);
  return i78 = Math.min(i78, 0.5 * Math.PI), o77.min * (1 - se3) + i78 * se3;
}
function fe(e78, n103, t88, r79) {
  return F20(e78).lookAtTiltToEyeTilt(r79, n103, t88);
}
function me(e78, n103, t88, r79) {
  return F20(e78).eyeTiltToLookAtTilt(r79, n103, t88);
}
function pe(n103, t88, r79, i78) {
  if (null == t88)
    return null;
  const o77 = n103.renderSpatialReference, a85 = Tn(t88.eye, o77, J8(n103));
  return null == a85 ? null : null != i78 ? (i78.position = a85, i78.heading = t88.heading, i78.tilt = t88.tilt, i78.fov = r79, i78) : new d26(a85, t88.heading, t88.tilt, r79);
}
function de(e78, n103) {
  var _a;
  const t88 = (_a = e78.basemapTerrain) == null ? void 0 : _a.tilingScheme;
  if (t88)
    return t88.levelAtScale(n103);
  U14.error("#scaleToZoom()", "Cannot compute zoom from scale without a tiling scheme");
}
function ve(e78, n103) {
  var _a;
  const t88 = (_a = e78.basemapTerrain) == null ? void 0 : _a.tilingScheme;
  if (t88)
    return t88.scaleAtLevel(n103);
  U14.error("#zoomToScale()", "Cannot compute scale from zoom without a tiling scheme");
}
function he2(e78, n103) {
  return Hn(n103.center, e78.renderSpatialReference, G14, f2.WGS84), V11(e78, n103.distance, G14[1]);
}
var ge = class {
  constructor(e78) {
    this.signal = e78, this.resolver = C();
  }
};
function ye(e78) {
  return e78 && "resolver" in e78;
}

// node_modules/@arcgis/core/views/3d/support/viewpointUtils.js
var ae3 = 0.66;
function oe3(e78) {
  return 360 - s24.normalize(e78);
}
function ie4(e78) {
  return s24.normalize(360 - e78);
}
function se4(e78) {
  return null != e78 && e78.resolver && e78.resolver.reject(), null;
}
function ce4(e78, t88) {
  return null != e78 && e78.resolver && e78.resolver.resolve(t88), t88;
}
function le3(e78, t88, n103, r79 = null) {
  if (!t88)
    return se4(r79);
  const a85 = e78.spatialReference || f2.WGS84;
  if (null != t88.camera) {
    const e79 = g2(t88.camera.position, a85);
    if (null == e79)
      return se4(r79);
    const n104 = t88.camera.clone();
    return n104.position = e79.clone(), ce4(r79, n104);
  }
  if (null == t88.targetGeometry)
    return se4(r79);
  const o77 = t88.get("targetGeometry.spatialReference");
  if (o77 && !x2(o77, a85))
    return se4(r79);
  const i78 = Y9(e78, e78.state.camera);
  let s84 = q13.ADJUST;
  if (null != t88.rotation && (i78.heading = oe3(t88.rotation), s84 = q13.LOCKED), null != n103 && (i78.tilt = n103), "point" === t88.targetGeometry.type) {
    const n104 = t88.targetGeometry;
    let a86;
    const o78 = t88.targetGeometry.clone();
    return a86 = null != t88.scale ? N12(e78, t88.scale, n104.latitude) : e78.state.camera.distance, B11(e78, o78, a86, i78, s84, r79);
  }
  const c75 = t88.targetGeometry.extent;
  return c75 ? ie3(e78, c75, i78.heading, i78.tilt, s84, r79) : se4(r79);
}
function me2(e78, t88, r79 = null) {
  return null == r79 && (r79 = new l27()), he3(e78, null, t88.clone(), r79);
}
async function ue2(t88, r79, a85) {
  const i78 = ke(t88, r79);
  if (!i78)
    throw new s4("viewpointutils-create:no-target", "Missing target for creating viewpoint");
  const s84 = new d26({ fov: t88.camera.fov }), c75 = new l27({ camera: s84 });
  if (i78.target instanceof l27) {
    return Me(await we(t88, i78.target, i78, a85, c75));
  }
  if (i78.target instanceof d26)
    return Me(ve2(t88, i78.target, c75));
  const l75 = null != i78.scale || null != i78.zoom;
  if (i78.target instanceof M) {
    const e78 = i78.target.xmin === i78.target.xmax || i78.target.ymin === i78.target.ymax;
    return Me(l75 || e78 ? await je(t88, i78, i78.target.center, s84, a85, c75) : await ze(t88, i78, i78.target, s84, a85, c75));
  }
  const m55 = { boundingBox: P4(), hasZ: false, screenSpaceObjects: [] }, u58 = l75 ? pe2(t88, i78) : void 0;
  if (await xe(t88, i78.target, u58, m55), isFinite(m55.boundingBox[0])) {
    let e78;
    if (E4(m55.boundingBox, Fe), Ie.x = Fe[0], Ie.y = Fe[1], Ie.z = Fe[2], Ie.spatialReference = t88.spatialReference, isFinite(Ie.z) && m55.hasZ ? e78 = w4(m55.boundingBox) : (Ie.z = void 0, e78 = G4(S5(m55.boundingBox, Ze))), l75 || e78)
      return Me(await je(t88, i78, Ie, s84, a85, c75));
    const n103 = Ae(t88, m55.screenSpaceObjects);
    return Me(await Be(t88, i78, Ie, m55.boundingBox, n103, s84, a85, c75));
  }
  return i78.position ? Me(Re(t88, i78, s84, c75)) : Me(await Ge(t88, i78, s84, a85, c75));
}
function fe2(e78, t88) {
  return null == t88.scale && null != t88.zoom ? ve(e78, t88.zoom) : t88.scale;
}
function pe2(e78, t88) {
  const n103 = fe2(e78, t88);
  return n103 ? o25(n103) : void 0;
}
function ge2(e78, t88) {
  let n103 = false;
  return null != t88.heading ? (e78.heading = t88.heading, n103 = true) : null != t88.rotation && (e78.heading = oe3(t88.rotation), n103 = true), null != t88.tilt && (e78.tilt = t88.tilt, n103 = true), null != t88.fov && (e78.fov = t88.fov), n103;
}
function he3(e78, t88, n103, r79) {
  const a85 = e78.spatialReference || f2.WGS84;
  return null == (t88 = null != t88 ? t88 : X8(e78, n103)) || (r79.targetGeometry = Tn(t88.center, e78.renderSpatialReference, a85), r79.scale = he2(e78, t88), r79.rotation = ie4(n103.heading), r79.camera = n103), r79;
}
function ye2(e78, t88, n103) {
  var _a, _b;
  const r79 = () => new s4("viewpointutils:invalid-geometry", "The target is missing a valid geometry");
  if (!t88)
    throw r79();
  if (!x2(t88.spatialReference, e78.spatialReference))
    throw new s4("viewpointutils:incompatible-spatialreference", `Spatial reference (${t88.spatialReference ? t88.spatialReference.wkid : "unknown"}) is incompatible with the view (${(_a = e78.spatialReference) == null ? void 0 : _a.wkid})`, { geometry: t88 });
  const a85 = [];
  if (!t88.hasZ && e78.basemapTerrain) {
    let n104;
    switch (t88.type) {
      case "point":
        n104 = t88;
        break;
      case "multipoint":
      case "polyline":
        n104 = (_b = t88.extent) == null ? void 0 : _b.center;
        break;
      case "mesh":
        n104 = t88.origin;
        break;
      case "extent":
        n104 = t88.center;
        break;
      case "polygon":
        n104 = t88.centroid;
    }
    n104 && null != e78.basemapTerrain.spatialReference && x2(n104, e78.basemapTerrain.spatialReference) && e78.elevationProvider ? Fe[2] = a30(e78.elevationProvider, n104) ?? 0 : Fe[2] = 0;
  }
  (0, Je[t88.type])(t88, (e79) => {
    a85.push(e79[0], e79[1], e79[2]);
  }, Fe);
  const i78 = a85.length / 3;
  if (0 === i78)
    throw r79();
  const s84 = new Array(a85.length);
  if (yn(a85, t88.spatialReference, 0, s84, e78.spatialReference, 0, i78)) {
    t88.hasZ && (n103.hasZ = true);
    for (let e79 = 0; e79 < s84.length; e79 += 3)
      t88.hasZ ? (Fe[0] = s84[e79], Fe[1] = s84[e79 + 1], Fe[2] = s84[e79 + 2]) : (Fe[0] = s84[e79], Fe[1] = s84[e79 + 1]), h5(n103.boundingBox, Fe);
  }
}
async function de2(e78, t88, n103, a85) {
  const o77 = await _3(e78.whenViewForGraphic(t88));
  if (false === o77.ok || null == o77.value || !("whenGraphicBounds" in o77.value))
    return void ye2(e78, t88.geometry, a85);
  const i78 = o77.value, s84 = await _3(i78.whenGraphicBounds(t88, { minDemResolution: n103 }));
  if (false === s84.ok)
    return void ye2(e78, t88.geometry, a85);
  const { screenSpaceObjects: c75, boundingBox: l75 } = s84.value;
  o9(a85.boundingBox, l75), c75 && c75.forEach((e79) => {
    a85.screenSpaceObjects.push(e79);
  }), isFinite(l75[2]) && (a85.hasZ = true);
}
async function xe(e78, n103, r79, a85) {
  var _a;
  if (Array.isArray(n103) && 2 === n103.length) {
    const t88 = n103[0], r80 = n103[1];
    if ("number" == typeof t88 && "number" == typeof r80)
      return Ie.x = t88, Ie.y = r80, Ie.z = void 0, Ie.spatialReference = ((_a = e78.spatialReference) == null ? void 0 : _a.isGeographic) ? e78.spatialReference : f2.WGS84, void ye2(e78, Ie, a85);
  }
  n103 && "map" in n103 && "function" == typeof n103.map ? await j(n103.map((t88) => xe(e78, t88, r79, a85))) : n103 instanceof p2 ? ye2(e78, n103, a85) : n103 instanceof h17 && await de2(e78, n103, r79, a85);
}
async function we(e78, t88, n103, r79, a85) {
  if (null != t88.camera)
    return ve2(e78, t88.camera, a85);
  a85.scale = t88.scale, a85.rotation = t88.rotation, a85.targetGeometry = null != t88.targetGeometry ? t88.targetGeometry.clone() : null, a85.camera = null, null != n103.heading ? a85.rotation = ie4(n103.heading) : null != n103.rotation && (a85.rotation = n103.rotation);
  const o77 = fe2(e78, n103);
  null != o77 && (a85.scale = o77);
  const i78 = new ge(r79);
  return le3(e78, a85, n103.tilt, i78), a85.camera = await i78.resolver.promise, a85;
}
function ve2(e78, t88, n103) {
  const r79 = e78.spatialReference, a85 = g2(t88.position, r79);
  return null == a85 ? null : ((t88 = t88.clone()).fov = e78.camera.fov, t88.position = a85, he3(e78, null, t88, n103));
}
function be(e78, t88, n103, r79, a85, o77) {
  const i78 = e78.renderSpatialReference;
  return In(n103, Oe, i78), In(t88, Ce, i78), o77.targetGeometry = new x3(t88), a85.position = new x3(n103), e8(De, Ce, Oe), Q8(e78, Oe, De, r79.up, a85), o77.scale = V11(e78, x4(Oe, Ce), o77.targetGeometry.latitude), o77.rotation = ie4(a85.heading), o77.camera = a85, o77;
}
async function je(e78, t88, n103, r79, a85, i78) {
  if (null == n103)
    throw new s4("createfromcenter", "invalid point");
  i78.targetGeometry = n103.clone();
  const s84 = f32(e78);
  if (t88.position)
    return be(e78, i78.targetGeometry, t88.position, s84, r79, i78);
  if (t88.zoomFactor) {
    const r80 = s84.distance / t88.zoomFactor, a86 = g3(Fe, s84.viewForward, -r80);
    s84.eye = u2(Fe, s84.center, a86), i78.scale = V11(e78, r80, n103.latitude);
  }
  Y9(e78, s84, r79);
  const c75 = ge2(r79, t88) ? q13.LOCKED : q13.ADJUST;
  if (!t88.zoomFactor) {
    const o77 = fe2(e78, t88);
    null == o77 ? (In(n103, Fe, e78.renderSpatialReference), p11(s84.frustum, Fe) ? i78.scale = V11(e78, x4(s84.eye, Fe), n103.latitude) : i78.scale = he2(e78, s84)) : i78.scale = o77;
    const l75 = new ge(a85);
    Z6(e78, i78.targetGeometry, i78.scale, r79, c75, l75), i78.camera = await l75.resolver.promise;
  }
  return i78;
}
function Re(e78, t88, n103, r79) {
  const a85 = f32(e78);
  return r7(De, a85.viewForward), Q8(e78, a85.eye, De, a85.up, Pe), n103.position = new x3(t88.position), n103.heading = null != t88.heading ? t88.heading : Pe.heading, n103.tilt = null != t88.tilt ? t88.tilt : Pe.tilt, he3(e78, null, n103, r79);
}
async function Ge(e78, t88, n103, r79, a85) {
  const o77 = f32(e78);
  return je(e78, t88, Tn(o77.center, e78.renderSpatialReference, e78.spatialReference), n103, r79, a85);
}
async function ze(e78, t88, n103, r79, a85, o77) {
  o77.targetGeometry = n103.clone();
  const i78 = f32(e78);
  Y9(e78, i78, r79);
  const s84 = ge2(r79, t88) ? q13.LOCKED : q13.ADJUST, c75 = new ge(a85);
  return ie3(e78, n103, r79.heading, r79.tilt, s84, c75), o77.camera = await c75.resolver.promise, o77;
}
function Se(e78, t88, n103, r79, a85) {
  let o77 = 0;
  null != n103.z ? o77 = n103.z : e78.basemapTerrain && e78.elevationProvider && (o77 = a30(e78.elevationProvider, n103)), o4(Fe, n103.x, n103.y, o77), zn(e78.spatialReference, Fe, Te, e78.renderSpatialReference), a15(Ee2, Te), o13(Ee2, Ee2), P4(Ue);
  const i78 = [[0, 1, 2], [3, 1, 2], [0, 4, 2], [3, 4, 2], [0, 1, 5], [3, 1, 5], [0, 4, 5], [3, 4, 5]];
  for (let s84 = 0; s84 < i78.length; s84++) {
    const t89 = i78[s84];
    let n104 = r79[t89[2]];
    isFinite(n104) || (n104 = o77), o4(Fe, r79[t89[0]], r79[t89[1]], n104), Hn(Fe, e78.spatialReference, Fe, e78.renderSpatialReference), h5(Ue, S4(Fe, Fe, Ee2));
  }
  const l75 = s15(Ue), m55 = N(Ue), u58 = I(Ue), f59 = 1 / Math.tan(t88.fovX / 2), p70 = 1 / Math.tan(t88.fovY / 2), g49 = 0.5 * Math.sqrt(l75 * l75 + u58 * u58) * Math.max(p70, f59) + 0.5 * m55, h58 = 0.5 * m55 * p70 + 0.5 * Math.max(l75, u58);
  return Math.max(g49, h58) / a85;
}
async function Be(e78, t88, n103, r79, a85, o77, i78, s84) {
  s84.targetGeometry = n103.clone();
  const c75 = f32(e78), l75 = Se(e78, c75, n103, r79, a85);
  Y9(e78, c75, o77);
  const m55 = ge2(o77, t88) ? q13.LOCKED : q13.ADJUST;
  s84.scale = V11(e78, l75, s84.targetGeometry.latitude);
  const u58 = new ge(i78);
  return Z6(e78, s84.targetGeometry, s84.scale, o77, m55, u58), s84.camera = await u58.resolver.promise, s84;
}
function ke(e78, t88) {
  if (!t88 || !e78.spatialReference)
    return null;
  const n103 = { target: void 0 };
  return "declaredClass" in t88 || Array.isArray(t88) ? n103.target = t88 : (Object.assign(n103, t88), t88.center && !n103.target && (n103.target = t88.center)), n103;
}
function Me(e78) {
  return e78 && null != e78.camera && (e78.rotation = ie4(e78.camera.heading)), e78;
}
function Ae(e78, t88) {
  const n103 = ae3;
  if (!t88.length)
    return n103;
  let r79 = Number.NEGATIVE_INFINITY;
  for (let a85 = 0; a85 < t88.length; a85++) {
    const e79 = t88[a85].screenSpaceBoundingRect;
    r79 = Math.max(r79, Math.abs(e79[0]), Math.abs(e79[1]), Math.abs(e79[2]), Math.abs(e79[3]));
  }
  return n103 - r79 / Math.min(e78.width, e78.height) * 2;
}
var Fe = n7();
var Te = e17();
var Ee2 = e16();
var Ue = i8();
var Ze = i4();
var De = n7();
var Oe = n7();
var Ce = n7();
var Pe = { heading: 0, tilt: 0 };
var Ie = new x3();
var Je = { point(e78, t88, n103) {
  n103[0] = e78.x, n103[1] = e78.y, null != e78.z && (n103[2] = e78.z), t88(n103);
}, polygon(e78, t88, n103) {
  const r79 = e78.hasZ;
  for (let a85 = 0; a85 < e78.rings.length; a85++) {
    const o77 = e78.rings[a85];
    for (let e79 = 0; e79 < o77.length; e79++)
      n103[0] = o77[e79][0], n103[1] = o77[e79][1], r79 && (n103[2] = o77[e79][2]), t88(n103);
  }
}, polyline(e78, t88, n103) {
  const r79 = e78.hasZ;
  for (let a85 = 0; a85 < e78.paths.length; a85++) {
    const o77 = e78.paths[a85];
    for (let e79 = 0; e79 < o77.length; e79++)
      n103[0] = o77[e79][0], n103[1] = o77[e79][1], r79 && (n103[2] = o77[e79][2]), t88(n103);
  }
}, multipoint(e78, t88, n103) {
  const r79 = e78.points, a85 = e78.hasZ;
  for (let o77 = 0; o77 < r79.length; o77++)
    n103[0] = r79[o77][0], n103[1] = r79[o77][1], a85 && (n103[2] = r79[o77][2]), t88(n103);
}, extent(e78, t88, n103) {
  null != e78.zmin && null != e78.zmax ? (t88(o4(n103, e78.xmin, e78.ymin, e78.zmin)), t88(o4(n103, e78.xmax, e78.ymin, e78.zmin)), t88(o4(n103, e78.xmin, e78.ymax, e78.zmin)), t88(o4(n103, e78.xmax, e78.ymax, e78.zmin)), t88(o4(n103, e78.xmin, e78.ymin, e78.zmax)), t88(o4(n103, e78.xmax, e78.ymin, e78.zmax)), t88(o4(n103, e78.xmin, e78.ymax, e78.zmax)), t88(o4(n103, e78.xmax, e78.ymax, e78.zmax))) : (t88(o4(n103, e78.xmin, e78.ymin, n103[2])), t88(o4(n103, e78.xmax, e78.ymin, n103[2])), t88(o4(n103, e78.xmin, e78.ymax, n103[2])), t88(o4(n103, e78.xmax, e78.ymax, n103[2])));
}, mesh(e78, t88, n103) {
  const r79 = e78.vertexAttributes && e78.vertexAttributes.position;
  if (r79)
    for (let a85 = 0; a85 < r79.length; a85 += 3)
      t88(o4(n103, r79[a85], r79[a85 + 1], r79[a85 + 2]));
} };

// node_modules/@arcgis/core/views/3d/state/GoToOperation.js
var f37 = class {
  constructor(t88, i78, e78) {
    this.target = t88, this.options = i78, this.view = e78, this.state = "pending", this._animationController = null, this._promise = new Promise((t89, i79) => {
      this._resolveCallback = t89, this._rejectCallback = i79;
      const e79 = new AbortController();
      null != this.options.signal && w(this.options.signal, () => {
        this.abort();
      }), this._abortController = e79, this.waitForReady();
    });
  }
  then(t88, i78) {
    return this._promise.then(t88, i78);
  }
  catch(t88) {
    return this._promise.catch(t88);
  }
  resolve(t88) {
    if ("finished" !== this.state)
      return this.state = "finished", this._resolveCallback(t88);
  }
  reject(t88) {
    if ("finished" !== this.state)
      return this.state = "finished", this._rejectCallback(t88);
  }
  abort(t88 = false) {
    if (this._abortController.abort(), "wait-for-animation-finish" === this.state)
      !t88 && null != this._animationController && this.view.state.cameraController === this._animationController && this._animationController.active && this._animationController.stopController();
    this.reject(c());
  }
  async waitForReady() {
    if (this.state = "wait-for-ready", !this.view.ready)
      try {
        await j4(() => this.view.ready, this._abortController.signal);
      } catch (t88) {
        return this.reject(t88);
      }
    this.createViewPoint();
  }
  createViewPoint() {
    "finished" !== this.state && (this.state = "wait-for-viewpoint", this._animationController = this.options.animate ? this._getAnimationController() : null, ue2(this.view, this.target, this._abortController.signal).then((t88) => {
      if ("finished" === this.state)
        return;
      const i78 = t88 ? this._getCameraFromViewpoint(t88) : null;
      if (null != i78)
        if (this.options.animate) {
          if (null == this._animationController)
            return;
          this.startAnimation(i78, this._animationController);
        } else
          this.view.stateManager.setStateCamera(i78.camera, { applyConstraints: !i78.isFullySpecified, positionAndOrientationOnly: true, doNotCancelGoToOperation: true }), this.resolve();
    }, (t88) => {
      this.reject(t88);
    }));
  }
  _getCameraFromViewpoint(a85) {
    var _a;
    const n103 = !!(this.target instanceof l27 && this.target.camera || this.target instanceof d26), o77 = a85.camera;
    if (null == o77)
      return null;
    if (!this.view.stateManager.isCompatible(o77)) {
      const t88 = o77.position, i78 = t88 && t88.spatialReference, a86 = i78 ? i78.wkid : "none", n104 = (_a = this.view.spatialReference) == null ? void 0 : _a.wkid;
      return this.reject(new s4("GotoAnimation:incompatible-spatialreference", `Resulting camera has an incompatible spatial reference (camera: ${a86}, view: ${n104})`, { camera: o77 })), null;
    }
    const r79 = X8(this.view, o77);
    return null == r79 ? (this.reject(new s4("GotoAnimation:invalid-camera", "Resulting camera is invalid")), null) : { viewpoint: a85, camera: r79, isFullySpecified: n103 };
  }
  startAnimation(t88, i78) {
    this.state = "wait-for-animation-finish";
    const a85 = i78.viewAnimation;
    if (null == a85)
      return void this.reject(new s4("GotoAnimation:missing-animation", "Unreachable code in view.stateManager"));
    if (a85.update(t88.viewpoint, "running"), !i78.active || null == i78.viewAnimation || i78.viewAnimation.target !== t88.viewpoint || this.view.state.cameraController !== i78)
      return this.abort();
    let n103;
    t88.isFullySpecified ? (n103 = new l40({ view: this.view, desiredCamera: t88.camera }), o47(this.view, t88.camera, i51.EYE_AND_CENTER)) : E21(this.view, t88.camera), i78.begin(t88.camera, this.options);
    const o77 = () => {
      const e78 = this.view.state.cameraController;
      n103 && (e78 && e78.active ? e78 instanceof h33 && null != e78.viewAnimation && e78.viewAnimation.target === t88.viewpoint && (this.view.state.cameraController = n103) : null != i78.viewAnimation && i78.viewAnimation.target === t88.viewpoint && "finished" === i78.state && (this.view.state.cameraController = n103));
    }, w33 = (t89) => {
      if (null != this.view.state)
        switch (i78.state) {
          case s54.Finished:
            switch (this.state) {
              case "pending":
              case "wait-for-ready":
              case "wait-for-viewpoint":
              case "wait-for-animation-finish":
                this.resolve();
            }
            break;
          case s54.Ready:
          case s54.Rejected:
          case s54.Running:
          case s54.Stopped:
            switch (this.state) {
              case "pending":
              case "wait-for-ready":
              case "wait-for-viewpoint":
              case "wait-for-animation-finish":
                this.reject(t89);
            }
        }
    };
    a85.when(o77, (t89) => w33(t89)), i78.asyncResult = { resolve: () => w33(), reject: (t89) => w33(t89) };
  }
  _getAnimationController() {
    let t88 = null, i78 = null;
    const a85 = this.view.state.cameraController;
    return a85 instanceof h33 && (a85.updateStateFromViewAnimation(), a85.active && (t88 = a85, i78 = t88.viewAnimation)), null != t88 || (t88 = new h33({ view: this.view, mode: "animation" }), i78 = t88.viewAnimation, this.view.state.switchCameraController(t88)) ? t88 : (null != i78 && i78.stop(), this.reject(new s4("GotoAnimation:goto-cannot-interrupt", "Cannot start an animation while interacting")), null);
  }
};

// node_modules/@arcgis/core/views/3d/state/ViewStateManager.js
var J9 = class extends m {
  get camera() {
    const e78 = this._get("camera");
    if (!this.ready)
      return e78;
    const t88 = Y9(this.view, this.view.state.camera, Z7);
    return t88 && e78 && t88.equals(e78) ? e78 : t88.clone();
  }
  set camera(e78) {
    var _a, _b;
    this._updatePropertyBeforeReady("camera", e78) || ((_a = this.view.elevationProvider) == null ? void 0 : _a.enableElevationCache(true), this.setStateCamera(X8(this.view, e78), { applyConstraints: false }) || s3.getLogger(this).error("#camera=", "Invalid camera", e78), (_b = this.view.elevationProvider) == null ? void 0 : _b.enableElevationCache(false));
  }
  get contentCamera() {
    const e78 = this._get("contentCamera");
    if (!this.ready)
      return e78;
    const t88 = Y9(this.view, this.view.state.contentCamera, Z7);
    return t88 && e78 && t88.equals(e78) ? e78 : t88.clone();
  }
  set contentCamera(e78) {
    if (this._updatePropertyBeforeReady("contentCamera", e78))
      return;
    const t88 = X8(this.view, e78);
    null != t88 ? (this._updateElevation(t88), this.view.state.contentCamera = t88) : this.view.state.contentCamera = null;
  }
  installContentCameraReset(e78) {
    if (this.removeHandles(ie5), this.test.contentCameraResetState.clear(), !this.view.state.fixedContentCamera)
      return false;
    const t88 = this.zoom, i78 = this.view.state.camera.distance ** 2, a85 = e7(this.view.state.camera.center), r79 = e78.sticky ? this.contentCamera.clone() : null;
    return this.addHandles([l6(() => this.contentCamera, () => {
      e78.sticky || (this.removeHandles(ie5), this.test.contentCameraResetState.clear());
    }), l6(() => this.zoom, (e79) => {
      void 0 !== e79 && void 0 !== t88 && (this.test.contentCameraResetState.set("view.zoom", Math.abs(e79 - t88) / 2), Math.abs(e79 - t88) > 2 ? this.contentCamera = null : this.view.state.fixedContentCamera || (this.contentCamera = r79));
    }), l6(() => this.view.state.camera, (e79) => {
      const t89 = p3(a85, e79.center);
      this.test.contentCameraResetState.set("camera.center", t89 / i78), t89 > i78 ? this.contentCamera = null : this.view.state.fixedContentCamera || (this.contentCamera = r79);
    })], ie5), true;
  }
  get center() {
    return this.ready ? this.view.pointsOfInterest.centerOnContent.location : this._get("center");
  }
  set center(e78) {
    var _a;
    this._updatePropertyBeforeReady("center", e78) || (e78 ? this.isCompatible(e78) ? this.setStateCamera(this._centerToCamera(e78), { applyConstraints: true }) ? this.view.pointsOfInterest.centerOnContent.runTask() : s3.getLogger(this).error("#center=", "Invalid center", e78) : s3.getLogger(this).error("#center=", "Center has an incompatible spatial reference (center: " + (e78.spatialReference ? e78.spatialReference.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e78) : s3.getLogger(this).error("#center=", "Center may not be null or undefined"));
  }
  get extent() {
    if (!this.ready)
      return this._get("extent");
    const e78 = this.view, t88 = oe2(e78, e78.state.camera, e78.pointsOfInterest.centerOnContent.renderLocation);
    return null != t88 ? t88 : this._get("extent");
  }
  set extent(e78) {
    var _a;
    this._updatePropertyBeforeReady("extent", e78) || (e78 ? this.isCompatible(e78) ? this.setStateCamera(this._extentToCamera(e78), { applyConstraints: true }) || s3.getLogger(this).error("#extent=", "Invalid extent", e78) : s3.getLogger(this).error("#extent=", "Extent has an incompatible spatial reference (extent: " + (e78.spatialReference ? e78.spatialReference.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e78) : s3.getLogger(this).error("#extent=", "Extent may not be null or undefined"));
  }
  get frustum() {
    const e78 = this._propertiesPool.get("frustum");
    return e78.renderCoordsHelper = this.view.renderCoordsHelper, e78.update(this.view.state.camera), e78;
  }
  get hasInitialView() {
    return !!this.view.get("map.initialViewProperties.viewpoint");
  }
  get scale() {
    if (this.ready) {
      const e78 = this.view.pointsOfInterest.centerOnContent;
      return V11(this.view, e78.distance, e78.location.latitude);
    }
    return this._get("scale");
  }
  set scale(e78) {
    this._updatePropertyBeforeReady("scale", e78) || this.setStateCamera(this._scaleToCamera(e78), { applyConstraints: true }) || s3.getLogger(this).error("#scale=", "Invalid scale", e78);
  }
  get padding() {
    if (!this.ready)
      return this._get("padding");
    const e78 = this.view.state.camera, t88 = e78.padding, i78 = e78.pixelRatio, a85 = this._get("padding"), r79 = Math.round(t88[ht.TOP] / i78), s84 = Math.round(t88[ht.RIGHT] / i78), n103 = Math.round(t88[ht.BOTTOM] / i78), o77 = Math.round(t88[ht.LEFT] / i78);
    return null != a85 && a85.top === r79 && a85.right === s84 && a85.bottom === n103 && a85.left === o77 ? a85 : { top: r79, right: s84, bottom: n103, left: o77 };
  }
  set padding(e78) {
    this._updatePropertyBeforeReady("padding", e78) || (this._paddingToArray(e78, this.view.state.camera.pixelRatio, ee3), this.view.state.updateCamera((e79) => e79.padding = ee3));
  }
  _paddingToArray(e78, t88, i78) {
    e78 ? r8(i78, e78.top || 0, e78.right || 0, e78.bottom || 0, e78.left || 0) : r8(i78, 0, 0, 0, 0);
    for (let a85 = 0; a85 < 4; a85++)
      i78[a85] = Math.round(i78[a85] * t88);
  }
  get screenCenter() {
    const e78 = this.padding;
    return c6((this.view.width - (e78.left + e78.right)) / 2 + e78.left, (this.view.height - (e78.top + e78.bottom)) / 2 + e78.top);
  }
  get viewpoint() {
    return this.ready ? me2(this.view, this.camera) : this._get("viewpoint");
  }
  set viewpoint(e78) {
    var _a;
    if (!this._updatePropertyBeforeReady("viewpoint", e78))
      if (e78)
        if (this.isCompatible(e78))
          this.setStateCamera(this._viewpointToCamera(e78), { applyConstraints: !e78.camera }) || s3.getLogger(this).error("#viewpoint=", "Invalid viewpoint", e78);
        else {
          const t88 = null != e78.camera ? e78.camera.position : e78.targetGeometry, i78 = null != t88 && t88.spatialReference;
          s3.getLogger(this).error("#viewpoint=", "Viewpoint has an incompatible spatial reference (viewpoint: " + (i78 ? i78.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e78);
        }
      else
        s3.getLogger(this).error("#viewpoint=", "Viewpoint may not be null or undefined");
  }
  get zoom() {
    return this.ready ? de(this.view, this.scale) : this._get("zoom");
  }
  set zoom(e78) {
    this._updatePropertyBeforeReady("zoom", e78) || void 0 === e78 || this.setStateCamera(this._zoomToCamera(e78), { applyConstraints: true }) || s3.getLogger(this).error("#zoom=", "Invalid zoom", e78);
  }
  _computeCanvasSize() {
    if (this._devicePixelRatioOverride)
      return this.view.state.contentPixelRatio = this._devicePixelRatioOverride, this._tmpCanvasSize.width = Math.round(this.view.surface.clientWidth * this._devicePixelRatioOverride), this._tmpCanvasSize.height = Math.round(this.view.surface.clientHeight * this._devicePixelRatioOverride), this._tmpCanvasSize.pixelRatio = this._devicePixelRatioOverride, this._tmpCanvasSize;
    const e78 = Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio), t88 = this._usePhysicalPixelRendering ? this._windowDevicePixelRatio : e78;
    this._tmpCanvasSize.width = Math.round(this.view.surface.clientWidth * t88), this._tmpCanvasSize.height = Math.round(this.view.surface.clientHeight * t88);
    const i78 = this.view._stage.renderView.renderingContext.parameters.maxTextureSize;
    return R8(this._tmpCanvasSize, i78) ? this._tmpCanvasSize.pixelRatio = t88 : this._tmpCanvasSize.pixelRatio = this._tmpCanvasSize.width > 0 ? this._tmpCanvasSize.width / this.view.surface.clientWidth : t88, this.view.state && (this.view.state.contentPixelRatio = Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio)), this._tmpCanvasSize;
  }
  get _rasterPixelRatio() {
    return null != this._devicePixelRatioOverride ? this._devicePixelRatioOverride : this._usePhysicalPixelRenderingAny ? this._windowDevicePixelRatio : Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio);
  }
  get _usePhysicalPixelRendering() {
    var _a, _b;
    return ((_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.isFeatureEnabled(o38.PhysicalPixelRendering)) ?? false;
  }
  get _usePhysicalPixelRenderingAny() {
    var _a, _b;
    const e78 = (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer;
    return e78 && (e78.isFeatureEnabled(o38.PhysicalPixelRendering, I2.IDLE) || e78.isFeatureEnabled(o38.PhysicalPixelRendering, I2.INTERACTING) || e78.isFeatureEnabled(o38.PhysicalPixelRendering, I2.ANIMATING));
  }
  constructor(e78) {
    super(e78), this.constraintsManager = null, this.ready = false, this._windowDevicePixelRatio = 1, this._devicePixelRatioOverride = null, this._updatingIgnoreRenderState = false, this.test = { viewStateManager: this, contentCameraResetState: /* @__PURE__ */ new Map(), setDevicePixelRatio: (e79) => this._devicePixelRatioOverride = e79, renderState: null, get maximumPixelRatio() {
      return this.viewStateManager.view.qualitySettings.maximumPixelRatio;
    }, set updatingIgnoreRenderState(e79) {
      this.viewStateManager._updatingIgnoreRenderState = e79;
    }, get updatingIgnoreRenderState() {
      return this.viewStateManager._updatingIgnoreRenderState || null != this.renderState;
    } }, this._propertiesPool = new o27({ frustum: d20 }, this), this._cameraSetByUser = false, this._gotoOperation = null, this._cameraChangeTime = 0, this._tmpCanvasSize = new K8();
  }
  initialize() {
    this._cameraChangeTime = performance.now(), this.addHandles([a9(() => this.view.state.events, "before-camera-change", (e78) => e78 && this._updateElevation(e78)), l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, (e78, t88) => this._cameraChangedHandler(e78, t88), U3)]), f6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, (e78) => this._updateElevation(e78), { once: true, sync: true }), this.addHandles([A({ prepare: () => this._prepareFrame() }), l6(() => this.view.state.cameraController, () => {
      this._cameraSetByUser = true, this.removeHandles(te3);
    }), a9(() => this.view.state.events, "camera-projection-changed", () => this.notifyChange("scale"))]);
  }
  destroy() {
    this.exit(), this._propertiesPool = l(this._propertiesPool);
  }
  init() {
    this.constraintsManager = new _22({ view: this.view }), this._prepareFrame();
    const e78 = this._getInitialProperties();
    this._cameraSetByUser = false, this._set("ready", true);
    for (const t88 of e78)
      this.set(t88.name, t88.value);
    if (!this._cameraSetByUser) {
      const e79 = this.view.get("map.initialViewProperties.viewpoint") || this.view.initialExtent;
      e79 && this.isCompatible(e79) ? this._setInitialView(e79) : this.view.state.viewingMode === l14.Local && this.addHandles(f6(() => this.view.basemapTerrain.ready, () => {
        this.removeHandles(te3), this._setInitialView(this.view.dataExtent);
      }, { once: true, initial: true }), te3);
    }
  }
  exit() {
    this._cancelGoToOperation(), this.ready && (this._override("padding", this.padding), this._set("ready", false), this._clearOverride("hasInitialView"), this._cameraSetByUser = false, this.removeHandles(te3), this.constraintsManager = l(this.constraintsManager));
  }
  async goTo(e78, t88) {
    const i78 = { animate: true, ...t88 };
    return null != this._gotoOperation && this._gotoOperation.abort(i78.animate), this._gotoOperation = new f37(e78, i78, this.view), this.view.resourceController.scheduler.stopFrame(), this._gotoOperation;
  }
  debugSetCameraOnContent() {
    this.setStateCamera(f32(this.view), { applyConstraints: false });
  }
  step(e78) {
    const t88 = this.view.state, i78 = t88 == null ? void 0 : t88.cameraController;
    i78 && (t88.updateCamera((t89) => i78.stepController(e78, t89)), i78.steppingFinished && i78.finishController());
  }
  _cancelGoToOperation() {
    null != this._gotoOperation && (this._gotoOperation.abort(), this._gotoOperation = null);
  }
  _getInitialProperties() {
    const e78 = /* @__PURE__ */ new Set(), t88 = [];
    for (const { propertyName: i78, overrides: a85 } of X9) {
      const r79 = e78.has(i78), s84 = this._isOverridden(i78);
      !r79 && s84 && t88.push({ name: i78, value: this._get(i78) }), this._clearOverride(i78), (r79 || s84) && a85.forEach((t89) => e78.add(t89));
    }
    return t88;
  }
  _setInitialView(e78) {
    if (null == e78 || this._cameraSetByUser)
      return;
    if (e78 instanceof d26)
      return void this.setStateCamera(X8(this.view, e78), { applyConstraints: false });
    if (e78 instanceof l27) {
      if (e78.targetGeometry instanceof M) {
        const t89 = ie3(this.view, e78.targetGeometry, 0, 0.5, q13.LOCKED);
        return void (null != t89 && this.setStateCamera(X8(this.view, t89), { applyConstraints: true }));
      }
      const t88 = { applyConstraints: !e78.camera }, i78 = this._viewpointToCamera(e78);
      return void this.setStateCamera(i78, t88);
    }
    const a85 = ie3(this.view, e78, 0, 0.5, q13.LOCKED);
    null != a85 && this.setStateCamera(X8(this.view, a85), { applyConstraints: true });
  }
  _updatePropertyBeforeReady(e78, t88) {
    return !this.ready && (this._override(e78, t88), t88 && Q9.includes(e78) && this._override("hasInitialView", true), true);
  }
  isCompatible(e78) {
    return null != e78 && (e78 instanceof l27 ? e78.camera ? this.isCompatible(e78.camera) : this.isCompatible(e78.targetGeometry) : e78 instanceof d26 ? this.isCompatible(e78.position) : e78.spatialReference && x2(e78.spatialReference, this.view.spatialReference));
  }
  _getPreservingHeadingTilt(e78 = Y10) {
    return this._cameraSetByUser ? (e78.heading = this.camera.heading, e78.tilt = this.camera.tilt) : (e78.heading = 0, e78.tilt = 0.5), e78;
  }
  _centerPointAtDistanceToCamera(e78, t88, i78 = $6) {
    const { heading: a85, tilt: r79 } = this._getPreservingHeadingTilt(), s84 = te2(this.view, a85, r79, e78, t88, q13.ADJUST);
    return null == s84 ? null : (i78.copyFrom(this.view.state.camera), i78.eye = s84.eye, i78.center = s84.center, i78.up = s84.up, i78);
  }
  _centerToCamera(e78) {
    const t88 = this.view.pointsOfInterest.centerOnContent;
    t88.runTask();
    const i78 = t88.distance;
    return this._centerPointAtDistanceToCamera(e78, i78);
  }
  _extentToCamera(e78) {
    const { heading: t88, tilt: i78 } = this._getPreservingHeadingTilt(), a85 = ie3(this.view, e78, t88, i78, q13.ADJUST, Z7);
    return a85 ? X8(this.view, a85) : null;
  }
  _scaleToCamera(e78) {
    if (null == e78)
      return null;
    const t88 = this.view.pointsOfInterest.centerOnContent;
    t88.runTask();
    const i78 = t88.renderLocation, a85 = t88.location.latitude;
    if (null == a85)
      return null;
    const r79 = N12(this.view, e78, a85);
    return this._centerPointAtDistanceToCamera(i78, r79);
  }
  _zoomToCamera(e78) {
    return this._scaleToCamera(ve(this.view, e78));
  }
  _viewpointToCamera(e78) {
    return X8(this.view, le3(this.view, e78));
  }
  setStateCamera(e78, t88) {
    return !(null == e78 || !this.view.state.stopActiveCameraController()) && (this._cameraSetByUser = true, t88.doNotCancelGoToOperation || this._cancelGoToOperation(), this.view.state.updateCamera((i78) => {
      t88.positionAndOrientationOnly ? (i78.eye = e78.eye, i78.center = e78.center, i78.up = e78.up) : i78.copyFrom(e78), t88.applyConstraints && E21(this.view, i78);
    }), t88.applyConstraints || (this.view.state.cameraController = new l40({ view: this.view, desiredCamera: e78 })), true);
  }
  _prepareFrame() {
    const { surface: e78, canvas: t88 } = this.view;
    if (!e78 || !t88)
      return;
    this._windowDevicePixelRatio = window.devicePixelRatio;
    const i78 = this._computeCanvasSize();
    if (0 !== i78.width && 0 !== i78.height && (t88.width === i78.width && t88.height === i78.height || (t88.width = i78.width, t88.height = i78.height), this.view.state)) {
      const e79 = this.view.state.camera;
      e79.fullWidth === i78.width && e79.fullHeight === i78.height && e79.pixelRatio === i78.pixelRatio || ($6.copyFrom(e79), $6.pixelRatio !== i78.pixelRatio && (this._paddingToArray(this.padding, i78.pixelRatio, ee3), $6.padding = ee3), $6.fullWidth = i78.width, $6.fullHeight = i78.height, $6.pixelRatio = i78.pixelRatio, this.view.state.camera = $6), this._updateViewState();
    }
  }
  _updateElevation(e78) {
    var _a;
    const t88 = this.view.basemapTerrain && this.view.basemapTerrain.spatialReference, i78 = ((_a = this.view.renderCoordsHelper) == null ? void 0 : _a.getAltitude(e78.eye)) ?? 0, a85 = t88 ? g21(this.view, e78.eye) : 0;
    e78.relativeElevation = i78 - a85;
  }
  _updateViewState() {
    null != this.test.renderState ? this.view.state.mode = this.test.renderState : this.view.animation ? this.view.state.mode = I2.ANIMATING : this.view.interacting ? this.view.state.mode = I2.INTERACTING : (this.view.state.mode === I2.ANIMATING && (this._cameraChangeTime = 0), performance.now() - this._cameraChangeTime <= ae4 ? this.view.state.mode = I2.INTERACTING : this.view.state.mode = I2.IDLE), this.view.state.rasterPixelRatio = this._rasterPixelRatio;
  }
  _cameraChangedHandler(e78, t88) {
    e78 && t88 && e78.almostEquals(t88) || (this._cameraChangeTime = performance.now(), this._updateViewState());
  }
};
e([y({ type: d26, dependsOn: ["view.state.camera", "ready"] })], J9.prototype, "camera", null), e([y({ type: d26, dependsOn: ["view.state.contentCamera", "ready"] })], J9.prototype, "contentCamera", null), e([y({ type: x3 })], J9.prototype, "center", null), e([y({ type: M })], J9.prototype, "extent", null), e([y({ readOnly: true })], J9.prototype, "frustum", null), e([y({ readOnly: true })], J9.prototype, "hasInitialView", null), e([y({ readOnly: true, type: Boolean })], J9.prototype, "ready", void 0), e([y({ type: Number })], J9.prototype, "scale", null), e([y()], J9.prototype, "padding", null), e([y({ readOnly: true })], J9.prototype, "screenCenter", null), e([y({ constructOnly: true })], J9.prototype, "view", void 0), e([y({ type: l27 })], J9.prototype, "viewpoint", null), e([y({ type: Number })], J9.prototype, "zoom", null), e([y({ readOnly: true })], J9.prototype, "_rasterPixelRatio", null), e([y({ readOnly: true })], J9.prototype, "_usePhysicalPixelRendering", null), e([y({ readOnly: true })], J9.prototype, "_usePhysicalPixelRenderingAny", null), e([y()], J9.prototype, "_windowDevicePixelRatio", void 0), e([y()], J9.prototype, "_devicePixelRatioOverride", void 0), J9 = e([a4("esri.views.3d.state.ViewStateManager")], J9);
var K8 = class {
  constructor() {
    this.width = 0, this.height = 0, this.pixelRatio = 1;
  }
};
var Q9 = ["camera", "viewpoint", "extent", "scale", "center", "zoom"];
var X9 = [{ propertyName: "camera", overrides: ["viewpoint"] }, { propertyName: "viewpoint", overrides: ["extent"] }, { propertyName: "extent", overrides: ["center", "scale"] }, { propertyName: "center", overrides: [] }, { propertyName: "scale", overrides: ["zoom"] }, { propertyName: "zoom", overrides: [] }, { propertyName: "padding", overrides: [] }];
var Y10 = { heading: 0, tilt: 0 };
var Z7 = new d26();
var $6 = new $2();
var ee3 = n19();
var te3 = "pending-initial-view";
var ie5 = "content-camera-reset";
var ae4 = 300;
var re4 = 100;

// node_modules/@arcgis/core/views/3d/state/controllers/InteractiveController.js
var n64 = class extends i56 {
  constructor() {
    super(...arguments), this.startCamera = new $2(), this.currentCamera = new $2(), this._lastInteraction = 0;
  }
  get isInteractive() {
    return performance.now() - this._lastInteraction < re4;
  }
  stepController(r79, t88) {
    t88.copyViewFrom(this.currentCamera), this.currentCamera.copyFrom(t88);
  }
  onControllerStart(r79) {
    this.state = s54.Running, this.startCamera.copyFrom(r79), this.currentCamera.copyFrom(r79);
  }
  onControllerEnd(r79) {
    r79.copyViewFrom(this.currentCamera);
  }
  commitCamera() {
    this._lastInteraction = performance.now(), setTimeout(() => this.notifyChange("isInteractive"), re4), this.view.state.updateCamera((r79) => this.stepController(0, r79)), this.steppingFinished && this.finishController();
  }
};
e([y({ readOnly: true })], n64.prototype, "isInteractive", null), e([y()], n64.prototype, "_lastInteraction", void 0), n64 = e([a4("esri.views.3d.state.controllers.InteractiveController")], n64);

// node_modules/@arcgis/core/views/3d/state/controllers/RotateController.js
var b16;
!function(t88) {
  t88[t88.CENTER = 0] = "CENTER", t88[t88.EYE = 1] = "EYE";
}(b16 || (b16 = {}));
var L17 = class extends n64 {
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  constructor(t88) {
    super(t88), this.pivot = b16.CENTER, this._rotScale = 0, this._lastPoint = n20(), this._tmpWorldUp = n7(), this._tmpViewDir = n7(), this._tmpRotCurPoint = n20(), this._tmpTransf = e17(), this._tmpAxis = n7(), this._tmpPivotPoint = n7(), this._pivotPos = n7(), this._constraintOptions = { selection: L13.ALL, interactionType: O14.TUMBLE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O15.TUMBLE };
  }
  initialize() {
    this._rotScale = this.pivot === b16.CENTER ? 3 : 1.5;
  }
  begin(t88) {
    if (this.active) {
      switch (this.pivot) {
        case b16.EYE:
          r7(this._pivotPos, this.startCamera.eye), this._constraintOptions.interactionType = O14.LOOK_AROUND, this._constraintOptions.tiltMode = O15.LOOK_AROUND, this._constraintOptions.selection = L13.NONE;
          break;
        case b16.CENTER: {
          const i78 = this._intersectionHelper.intersectRayFreePointFallback(this.startCamera.ray, this._pivotPos, 0 === this.view.map.ground.opacity ? at2 : {});
          i78 || r7(this._pivotPos, this.startCamera.center), this._constrainPivotPoint(t88, i78), this.startCamera.center = this._pivotPos, this._constraintOptions.interactionType = O14.TUMBLE, this._constraintOptions.tiltMode = O15.TUMBLE, this._constraintOptions.selection = L13.ALL & ~L13.DISTANCE;
          break;
        }
      }
      this._constraintOptions.interactionStartCamera = this.startCamera, it2(this.startCamera, t88, this._lastPoint);
    }
  }
  _constrainPivotPoint(t88, i78) {
    const s84 = this.startCamera, o77 = n7();
    e8(o77, this._pivotPos, s84.eye);
    const e78 = s10(o77), a85 = Math.abs(this.view.camera.position.z);
    this.view.renderCoordsHelper.worldUpAtPosition(s84.eye, V12);
    let n103 = Math.max(Math.min(nt2, 1 / Math.abs(P3(V12, s84.viewForward))) * a85, ot);
    i78 && (n103 = Math.min(e78, n103));
    const h58 = A2(this.view.spatialReference), p70 = i10(s84.width / s84.pixelRatio * 0.5, s84.height / s84.pixelRatio * 0.5), m55 = zt(this.startCamera, p70, h58);
    let P29 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, s84.fullWidth / s84.pixelRatio * 0.5, s84.fullHeight / s84.pixelRatio * 0.5, s84, 2.5 * rt2, rt2), E43 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, t88[0], t88[1], s84, rt2);
    null == P29 && null == E43 || (P29 = P29 ?? E43 ?? 0, E43 = null == E43 || m55 === gt.Horizontal ? P29 : E43, n103 = P29 > E43 ? E43 : P29, n103 = i78 ? Math.min(n103, e78) : n103), z2(o77, o77), r7(this._pivotPos, u2(this._tmpPivotPoint, s84.eye, g3(this._tmpPivotPoint, o77, n103)));
  }
  update(t88) {
    if (this.active) {
      switch (this.pivot) {
        case b16.EYE:
          this.currentCamera.center = this._applyRotation(this.currentCamera, t88, this.currentCamera.center, this._pivotPos);
          break;
        case b16.CENTER:
          this.currentCamera.center = this._pivotPos, this.currentCamera.eye = this._applyRotation(this.currentCamera, t88, this.currentCamera.eye, this._pivotPos);
      }
      E21(this.view, this.currentCamera, this._constraintOptions), this.commitCamera();
    }
  }
  end() {
    this.active && this.finishController();
  }
  _applyRotation(t88, r79, o77, e78) {
    this.view.renderCoordsHelper.worldUpAtPosition(e78, this._tmpWorldUp), it2(t88, r79, this._tmpRotCurPoint);
    let h58 = (this._lastPoint[1] - this._tmpRotCurPoint[1]) * this._rotScale, m55 = (this._tmpRotCurPoint[0] - this._lastPoint[0]) * this._rotScale;
    e8(this._tmpViewDir, o77, e78);
    const c75 = s10(this._tmpViewDir), u58 = l5(P3(this._tmpViewDir, this._tmpWorldUp) / c75);
    if (this.pivot === b16.EYE) {
      h58 *= -0.5;
      const t89 = 0.5 * Math.PI - u58, i78 = 0.5 * Math.PI * 0.99;
      h58 = t89 - Math.max(-i78, Math.min(i78, t89 + h58));
    }
    return h58 = i3(h58 + u58, d30.min, d30.max) - u58, _(this._tmpAxis, t88.up, this._tmpViewDir), this.pivot === b16.CENTER && (m55 = -m55), g4(this._tmpTransf, m55, this._tmpWorldUp), b2(this._tmpTransf, this._tmpTransf, h58, this._tmpAxis), O(this._tmpViewDir, this._tmpViewDir, this._tmpTransf), t88.up = O(S17, t88.up, this._tmpTransf), u2(S17, e78, this._tmpViewDir), a14(this._lastPoint, this._tmpRotCurPoint), S17;
  }
};
e([y()], L17.prototype, "pivot", void 0), L17 = e([a4("esri.views.3d.state.controllers.RotateController")], L17);
var S17 = n7();
var V12 = n7();

// node_modules/@arcgis/core/views/3d/input/handlers/DragRotate.js
var a51 = class extends i25 {
  constructor(t88, r79, e78, o77) {
    super(true), this._view = t88, this.pointerAction = r79, this._pivot = e78, this.registerIncoming("drag", o77, (t89) => this._handleDrag(t89));
  }
  _handleDrag(e78) {
    const a85 = e78.data;
    if (a85.pointers.size > 1)
      return;
    if (!r48(e78.data, this.pointerAction))
      return;
    const i78 = i10(a85.center.x, a85.center.y);
    switch (a85.action) {
      case "start":
        this._cameraController && (this._cameraController.end(), this._cameraController = null), this._cameraController = new L17({ view: this._view, pivot: this._pivot }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i78);
        break;
      case "update":
        this._cameraController && this._cameraController.update(i78);
        break;
      case "end":
        this._cameraController && (this._cameraController.end(), this._cameraController = null);
    }
    e78.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/global/ZoomController.js
var L18 = class extends n64 {
  constructor() {
    super(...arguments), this._pickPoint = n7(), this._tmpP0 = n20(), this._panAxisAngle = i57(), this._tmpRayDir = n7(), this._tmpRayDirPick = n7(), this._targetOnSphere = n7(), this._navMode = gt.Horizontal, this._tmpRay = { origin: n7(), direction: n7() }, this.dragBeginPoint = i10(), this._normalizedAnchorPoint = n20(), this._constraintOptions = { selection: L13.ALL_EXCEPT_COLLISION, interactionType: O14.ZOOM, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O15.TUMBLE }, this._sphere = _5(), this._hasPickPoint = false;
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t88) {
    if (!this.active)
      return;
    a14(this.dragBeginPoint, t88), it2(this.startCamera, t88, this._normalizedAnchorPoint);
    const r79 = A2(this.view.spatialReference), e78 = jt(this._intersectionHelper, this.startCamera, t88, r79, N11.Ellipsoid, 0 === this.view.map.ground.opacity ? at2 : {});
    if (this._navMode = zt(this.startCamera, t88, r79), this._navMode === gt.Horizontal)
      this._hasPickPoint = !!e78.scenePickPoint, this._pickPoint = e78.scenePickPoint ?? this._pickPoint, this._sphere = e78.sphere;
    else {
      let r80;
      u12(this.startCamera, t88, this._tmpRay), z2(this._tmpRay.direction, this._tmpRay.direction), null != e78.scenePickPoint && (e8(this._tmpRayDirPick, this.startCamera.eye, e78.scenePickPoint), r80 = s10(this._tmpRayDirPick));
      const s84 = Math.abs(this.view.camera.position.z);
      this.view.renderCoordsHelper.worldUpAtPosition(this.startCamera.eye, E27);
      let a85 = i3(Math.min(Q7, 1 / Math.abs(P3(E27, this._tmpRay.direction))) * s84, X7[0], X7[1]);
      const n103 = this.view._stage.renderView.getMinimalDepthForArea(null, t88[0], t88[1], this.view.state.camera, Y8);
      a85 = null != n103 ? n103 : a85, a85 = null != r80 ? Math.min(a85, r80) : a85, this._hasPickPoint = true, g3(this._tmpRay.direction, this._tmpRay.direction, a85), u2(this._pickPoint, this._tmpRay.origin, this._tmpRay.direction);
    }
    this._constraintOptions.interactionStartCamera = this.startCamera;
  }
  update(t88) {
    if (this.active) {
      if (this.currentCamera.eye = this.startCamera.eye, this.currentCamera.center = this.startCamera.center, this.currentCamera.up = this.startCamera.up, this._navMode === gt.Horizontal) {
        e8(this._tmpRayDir, this.currentCamera.center, this.currentCamera.eye);
        const i78 = s10(this._tmpRayDir);
        it2(this.currentCamera, t88, this._tmpP0);
        const r79 = 12 * (this._normalizedAnchorPoint[1] - this._tmpP0[1]);
        let e78 = i78 * 2 ** r79;
        const s84 = this.view.state.constraints.minimumPoiDistance;
        if (r79 < 0 && e78 < s84 && (e78 = s84), Math.abs(i78 - e78) < 1e-6)
          return;
        if (this._hasPickPoint && e78 < i78) {
          const t89 = 1 - (1 - e78 / i78) * (1 - this._sphere[3] / s10(this.currentCamera.center));
          this.currentCamera.center = g3(B12, this.currentCamera.center, t89);
        }
        g3(this._tmpRayDir, this._tmpRayDir, -e78 / i78), this.currentCamera.eye = u2(B12, this.currentCamera.center, this._tmpRayDir), this._constraintOptions.interactionFactor = T15(m6(this.dragBeginPoint, t88)), E21(this.view, this.currentCamera, this._constraintOptions), this._hasPickPoint && (It(this._sphere, this.currentCamera, this.dragBeginPoint, this._targetOnSphere), k15(this._pickPoint, this._targetOnSphere, this._panAxisAngle), ct2(this.currentCamera, this._sphere, this._panAxisAngle));
      } else {
        const i78 = s10(this._tmpRay.direction);
        it2(this.currentCamera, t88, this._tmpP0);
        const r79 = 12 * (this._normalizedAnchorPoint[1] - this._tmpP0[1]);
        let e78 = i78 * 2 ** r79;
        const s84 = this.view.state.constraints.minimumPoiDistance;
        if (r79 < 0 && e78 < s84 && (e78 = s84), Math.abs(i78 - e78) < 1e-6)
          return;
        g3(this._tmpRayDir, this._tmpRay.direction, 1 - e78 / i78), this.currentCamera.eye = u2(B12, this.currentCamera.eye, this._tmpRayDir), this.currentCamera.center = u2(B12, this.currentCamera.center, this._tmpRayDir);
      }
      o47(this.view, this.currentCamera), this.commitCamera();
    }
  }
  end() {
    this.active && this.finishController();
  }
};
L18 = e([a4("esri.views.3d.state.controllers.global.ZoomController")], L18);
var B12 = n7();
var E27 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/local/ZoomController.js
var A27 = class extends n64 {
  constructor() {
    super(...arguments), this._tmpP = n7(), this._tmpDir = n7(), this._tmpN = n7(), this._tmpP0 = n20(), this._tmpPoi = n7(), this._tmpRayDir = n7(), this.dragBeginPoint = i10(), this._normalizedAnchorPoint = n20(), this._constraintOptions = { selection: L13.ALL, interactionType: O14.ZOOM, interactionFactor: 0, interactionStartCamera: null, interactionDirection: n7(), tiltMode: O15.TUMBLE }, this._plane = h12();
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t88) {
    if (!this.active)
      return;
    a14(this.dragBeginPoint, t88), it2(this.startCamera, t88, this._normalizedAnchorPoint);
    const s84 = this._intersectionHelper.intersectScreenFreePointFallback(t88, this._tmpP, 0 === this.view.map.ground.opacity ? at2 : {});
    e8(this._tmpDir, this._tmpP, this.startCamera.eye);
    const r79 = s10(this._tmpDir);
    z2(this._tmpDir, this._tmpDir);
    const a85 = Math.abs(this.view.camera.position.z);
    let n103 = i3(Math.min(Q7, 1 / Math.abs(P3(z17, this._tmpDir))) * a85, X7[0], X7[1]);
    const u58 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, t88[0], t88[1], this.view.state.camera, Y8);
    n103 = null != u58 ? u58 : n103, n103 = s84 ? Math.min(n103, r79) : n103, g3(this._tmpDir, this._tmpDir, n103), u2(this._tmpP, this.startCamera.eye, this._tmpDir), e8(this._tmpN, this.startCamera.eye, this.startCamera.center), z2(this._tmpN, this._tmpN), this._tmpN[1] < 0 && j2(this._tmpN, this._tmpN), T6(this._tmpP, this._tmpN, this._plane), this._constraintOptions.interactionStartCamera = this.startCamera;
  }
  update(t88) {
    if (!this.active)
      return;
    lt2(this._plane, this.currentCamera, this.dragBeginPoint, this._tmpPoi) || r7(this._tmpPoi, this.currentCamera.center), it2(this.currentCamera, t88, this._tmpP0);
    let i78 = 4 * (this._tmpP0[1] - this._normalizedAnchorPoint[1]);
    a14(this._normalizedAnchorPoint, this._tmpP0), e8(this._tmpRayDir, this._tmpPoi, this.currentCamera.eye);
    const s84 = s10(this._tmpRayDir);
    let r79 = s84 * (1 - i78);
    this._constraintOptions.interactionDirection && (r7(this._constraintOptions.interactionDirection, this._tmpRayDir), g3(this._constraintOptions.interactionDirection, this._constraintOptions.interactionDirection, Math.sign(i78) / s84));
    const n103 = this.view.state.constraints.minimumPoiDistance;
    i78 >= 0 && r79 < n103 && (r79 = n103, i78 = -(r79 - s84) / s84), Math.abs(s84 - r79) < 1e-6 || (g3(this._tmpRayDir, this._tmpRayDir, i78), this.currentCamera.eye = u2(T20, this.currentCamera.eye, this._tmpRayDir), A3(T20, this.currentCamera.center, this._tmpPoi, i78), this._tmpPoi[2] > this.startCamera.center[2] ? T20[2] = Math.max(this.startCamera.center[2], T20[2]) : T20[2] = Math.min(this.startCamera.center[2], T20[2]), this.currentCamera.center = T20, this._constraintOptions.interactionFactor = T15(m6(this.dragBeginPoint, t88)), E21(this.view, this.currentCamera, this._constraintOptions), this.commitCamera());
  }
  end() {
    this.active && this.finishController();
  }
};
A27 = e([a4("esri.views.3d.state.controllers.local.ZoomController")], A27);
var T20 = n7();
var z17 = r5(0, 0, 1);

// node_modules/@arcgis/core/views/3d/input/handlers/DragZoom.js
var s57 = class extends i25 {
  constructor(r79, t88, e78) {
    super(true), this._view = r79, this.pointerAction = t88, this.registerIncoming("drag", e78, (r80) => this._handleDrag(r80));
  }
  _handleDrag(o77) {
    const s84 = o77.data;
    if (s84.pointers.size > 1)
      return;
    if (!r48(o77.data, this.pointerAction))
      return;
    const i78 = i10(s84.center.x, s84.center.y);
    switch (s84.action) {
      case "start":
        this._cameraController && (this._cameraController.end(), this._cameraController = null), this._view.state.isGlobal ? this._cameraController = new L18({ view: this._view }) : this._cameraController = new A27({ view: this._view }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i78);
        break;
      case "update":
        this._cameraController && this._cameraController.update(i78);
        break;
      case "end":
        this._cameraController && (this._cameraController.end(), this._cameraController = null);
    }
    o77.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n65(t88) {
  let n103 = t88 * t88;
  return t88 < 0 && (n103 *= -1), n103;
}
function i58(a85, i78, o77) {
  const s84 = o77, e78 = a85.state, r79 = a85.device, l75 = "forward-down" === i78.tiltDirection ? 1 : -1, c75 = 1;
  return "standard" === r79.deviceType ? (s84.translation[0] = n65(e78.axes[0]), s84.translation[1] = n65(e78.axes[1]), s84.translation[2] = n65(e78.buttons[7]) - n65(e78.buttons[6]), s84.heading = n65(e78.axes[2]), s84.tilt = n65(e78.axes[3])) : "spacemouse" === r79.deviceType && (s84.translation[0] = 1.2 * n65(e78.axes[0]), s84.translation[1] = 1.2 * n65(e78.axes[1]), s84.translation[2] = 2 * -n65(e78.axes[2]), s84.heading = 1.2 * n65(e78.axes[5]), s84.tilt = 1.2 * n65(e78.axes[3])), s84.tilt *= l75, g3(s84.translation, s84.translation, c75), s84;
}
function o51(t88, n103) {
  const a85 = n103;
  return a85.translation[0] = t88[1] - t88[0], a85.translation[1] = t88[3] - t88[2], a85.translation[2] = t88[4] - t88[5], a85.heading = t88[7] - t88[6], a85.tilt = t88[8] - t88[9], a85.zoom = t88[10] - t88[11], a85;
}
function s58(t88) {
  return 0 === t88.translation[0] && 0 === t88.translation[1] && 0 === t88.translation[2] && 0 === t88.heading && 0 === t88.tilt && 0 === t88.zoom;
}

// node_modules/@arcgis/core/views/3d/state/controllers/GamepadKeyboardController.js
var q14 = class extends n64 {
  constructor(t88) {
    super(t88), this._filteredSurfaceElevation = 0, this._transformation = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 }, this._keysButtonState = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this._tmpCamera = new $2(), this._headingStart = 0, this._constraintOptions = { selection: L13.ALL, interactionType: O14.NONE, interactionStartCamera: new $2(), interactionFactor: 0, interactionDirection: null, tiltMode: O15.LOOK_AROUND };
  }
  handleEventGamepad(t88) {
    const e78 = i58(t88, this.view.navigation.gamepad, this._transformation);
    ("end" === t88.action || s58(e78)) && this.finishController();
  }
  activateDirection(t88) {
    this._keysButtonState[t88] = 1, o51(this._keysButtonState, this._transformation);
  }
  deactivateDirection(t88) {
    this._keysButtonState[t88] = 0;
    const e78 = o51(this._keysButtonState, this._transformation);
    s58(e78) && this.finishController();
  }
  onControllerStart(t88) {
    this._filteredSurfaceElevation = this.view.pointsOfInterest.cameraOnSurface.location.z, this._headingStart = this.view.camera.heading, super.onControllerStart(t88);
  }
  _updateFilteredSurfaceElevation(t88) {
    const e78 = this.view.pointsOfInterest.cameraOnSurface.location.z, i78 = 1;
    this._filteredSurfaceElevation += i78 * (e78 - this._filteredSurfaceElevation) * t88;
  }
  stepController(t88, e78) {
    var _a;
    this._updateStartHeading(), this._updateFilteredSurfaceElevation(t88), this.currentCamera.copyViewFrom(e78), this._updateCameraCenter(), (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.currentCamera), this._calculateControlTransformation(t88, this.currentCamera, it3), this._applyDisabledMovementTypes(it3), this._applyPan(it3.pan), this._applyRotate(it3.rotate), this._applyZoom(it3.zoom), this._applyAscend(it3.ascend), this._constraintOptions.interactionType = O14.NONE, this._constraintOptions.selection = L13.COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), super.stepController(t88, e78);
  }
  _updateStartHeading() {
    0 !== this._transformation.heading && (this._headingStart = this.view.camera.heading);
  }
  _applyRotate(t88) {
    if (!t88.enabled)
      return;
    const e78 = this.currentCamera;
    e8(at3, e78.center, e78.eye), O(at3, at3, t88.matrix), e78.center = u2(at3, at3, e78.eye), e78.up = O(at3, e78.up, t88.matrix), this._constraintOptions.interactionType = O14.LOOK_AROUND, this._constraintOptions.selection = L13.ALL_EXCEPT_COLLISION, E21(this.view, e78, this._constraintOptions);
  }
  _applyPan(t88, e78 = this.currentCamera) {
    if (!t88.enabled)
      return;
    e78.eye = O(at3, e78.eye, t88.matrix), e78.center = O(at3, e78.center, t88.matrix);
    this.view.state.isGlobal && (e78.up = O(at3, e78.up, t88.matrix)), this._constraintOptions.interactionType = O14.PAN, this._constraintOptions.selection = L13.ALL, E21(this.view, e78, this._constraintOptions);
  }
  _applyZoom(t88) {
    if (!t88)
      return;
    const e78 = this.currentCamera.viewForward;
    this.currentCamera.eye = u2(at3, this.currentCamera.eye, g3(c11.get(), e78, t88)), r7(rt3, e78), j2(rt3, rt3), this._constraintOptions.interactionDirection = rt3, this._constraintOptions.interactionType = O14.ZOOM, this._constraintOptions.selection = L13.ALL_EXCEPT_COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null;
  }
  _applyAscend(t88) {
    if (!t88)
      return;
    const e78 = this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye, c11.get());
    this._constraintOptions.interactionDirection = r7(rt3, e78);
    if (this.view.state.isGlobal) {
      const e79 = s10(this.currentCamera.eye), i78 = (e79 + t88) / e79;
      this.currentCamera.eye = g3(at3, this.currentCamera.eye, i78), this.currentCamera.center = g3(at3, this.currentCamera.center, i78);
    } else {
      const i78 = g3(c11.get(), e78, t88);
      this.currentCamera.eye = u2(at3, this.currentCamera.eye, i78), this.currentCamera.center = u2(at3, this.currentCamera.center, i78);
    }
    this._updateCameraCenter(), this._constraintOptions.interactionType = O14.ASCEND, this._constraintOptions.selection = L13.COLLISION, E21(this.view, this.currentCamera, this._constraintOptions) && this._updateCameraCenter(), this._constraintOptions.selection = L13.ALL_EXCEPT_COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null;
  }
  _calculateControlTransformation(t88, e78, i78) {
    st4(i78);
    const a85 = this._computeVelocities(t88);
    this.view.state.isLocal ? this._calculateControlTransformationLocal(a85, e78, i78) : this._calculateControlTransformationGlobal(a85, e78, i78);
  }
  _updateCameraCenter() {
    const t88 = this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, e78 = this.view.renderCoordsHelper, i78 = this.currentCamera.ray;
    this.currentCamera.center = e78.intersectManifoldClosestSilhouette(i78, t88, at3);
  }
  _calculateControlTransformationLocal(t88, a85, r79) {
    const { viewRight: o77, viewForward: s84 } = a85, m55 = this._transformation, l75 = this.view.navigation.gamepad, p70 = o4(c11.get(), s84[0], s84[1], 0);
    z2(p70, p70);
    const h58 = m55.translation[0] * t88.pan;
    if (0 !== h58) {
      const t89 = g3(c11.get(), o77, h58);
      i9(r79.pan.matrix, r79.pan.matrix, t89), r79.pan.enabled = true;
    }
    switch (l75.mode) {
      case "pan": {
        const e78 = -m55.translation[1] * t88.pan;
        if (0 !== e78) {
          const t89 = g3(c11.get(), p70, e78);
          i9(r79.pan.matrix, r79.pan.matrix, t89), r79.pan.enabled = true;
        }
        r79.zoom = m55.zoom * t88.zoom;
        break;
      }
      case "zoom":
        r79.zoom = (-m55.translation[1] + m55.zoom) * t88.zoom;
        break;
      default:
        n18(l75.mode);
    }
    const d63 = m55.translation[2] * t88.ascend;
    r79.ascend = d63;
    const _42 = -m55.heading * t88.rotate;
    0 !== _42 && (b2(r79.rotate.matrix, r79.rotate.matrix, _42, this.view.renderCoordsHelper.worldUpAtPosition(a85.eye, c11.get())), r79.rotate.enabled = true);
    const f59 = m55.tilt * t88.rotate, v44 = n60(this.view.renderCoordsHelper, a85.center, a85.eye), y41 = i3(v44 + f59, d30.min, d30.max) - v44;
    y41 && (b2(r79.rotate.matrix, r79.rotate.matrix, y41, o77), r79.rotate.enabled = true);
  }
  _calculateControlTransformationGlobal(t88, e78, i78) {
    const { eye: a85, viewRight: r79 } = e78, o77 = this._transformation, s84 = this.view.navigation.gamepad, n103 = _(c11.get(), r79, a85);
    z2(n103, n103), j2(n103, n103), Bt(this.startCamera, e78, o77, t88, this.view.camera.heading, this._headingStart, this.view.camera.tilt, i78, s84), this._tmpCamera.copyFrom(this.currentCamera), this._applyPan(it3.pan, this._tmpCamera);
    const m55 = this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, l75 = o77.translation[2] * t88.ascend;
    i78.ascend = l75;
    const p70 = -o77.heading * t88.rotate;
    0 !== p70 && (b2(i78.rotate.matrix, i78.rotate.matrix, p70, this._tmpCamera.eye), i78.rotate.enabled = true);
    const h58 = o77.tilt * t88.rotate, d63 = this._clampTiltDeltaGlobalToValidRange(h58, e78.ray, m55);
    0 !== d63 && (b2(i78.rotate.matrix, i78.rotate.matrix, d63, this._tmpCamera.viewRight), i78.rotate.enabled = true), i78.zoom += o77.zoom * t88.zoom;
  }
  _clampTiltDeltaGlobalToValidRange(t88, e78, a85) {
    const r79 = A2(this.view.spatialReference), o77 = Mt(d30.min, e78.origin, a85, r79);
    let s84 = 0, n103 = 0;
    const c75 = c11.get();
    if (this.view.renderCoordsHelper.intersectManifold(e78, a85, c75)) {
      const t89 = n60(this.view.renderCoordsHelper, c75, e78.origin);
      s84 = Mt(t89, e78.origin, a85, r79), n103 = Mt(d30.max, e78.origin, a85, r79);
    } else {
      Y4(T5(tt, a85 + r79.radius), e78, c75);
      const t89 = Math.PI + a17(e78.direction, c75);
      s84 = yt(t89, e78.origin, a85, r79), n103 = yt(d30.max, e78.origin, a85, r79);
    }
    return i3(s84 + t88, o77, n103) - s84;
  }
  _getPointAbsoluteSurfaceElevation(t88, e78, i78) {
    const { renderCoordsHelper: a85 } = this.view, r79 = a85.getAltitude(t88), o77 = e78 + Math.abs(r79 - e78);
    return a85.setAltitude(i78, o77, t88), o77;
  }
  _clampedDistanceToSurface(t88, e78) {
    const { renderCoordsHelper: i78 } = this.view, { camera: a85 } = this.view.state, { direction: r79 } = W11(this.view, e78, 0, Q10, ot2), o77 = i78.intersectManifoldClosestSilhouette(p10(e78, r79), t88, c11.get()), s84 = x4(e78, o77), n103 = i78.intersectManifoldClosestSilhouette(p10(e78, H2(c11.get(), e78, a85.center)), t88, c11.get()), c75 = x4(e78, n103);
    return Math.min(s84, c75);
  }
  _computeHeadingRotateRadius(t88) {
    const { renderCoordsHelper: e78, state: i78 } = this.view, { camera: r79, isGlobal: o77 } = i78, s84 = e78.intersectManifoldClosestSilhouette(r79.ray, this._filteredSurfaceElevation, c11.get());
    if (o77) {
      const e79 = e8(c11.get(), t88, s84), i79 = s10(e79);
      g3(e79, e79, 1 / i79);
      const r80 = z2(c11.get(), t88), o78 = l5(P3(r80, e79));
      return i79 * Math.sin(Math.min(W12, o78));
    }
    {
      const i79 = r7(c11.get(), t88);
      return e78.setAltitude(i79, this._filteredSurfaceElevation), x4(s84, i79);
    }
  }
  _minimumAscendVelocity() {
    return this.view.state.constraints.collision.enabled ? 0 : $7;
  }
  _computeVelocities(t88) {
    const e78 = this._filteredSurfaceElevation, a85 = e78 + A2(this.view.spatialReference).radius, { camera: r79, isGlobal: o77 } = this.view.state, s84 = c11.get(), n103 = this._getPointAbsoluteSurfaceElevation(r79.eye, e78, s84), c75 = this._clampedDistanceToSurface(e78, s84), m55 = r79.width / 2, l75 = Y11 * r79.width, p70 = Y11 * r79.width, h58 = c75 * Math.tan(0.5 * r79.fovX) / m55, d63 = h58 / a85, u58 = h58 / this._computeHeadingRotateRadius(s84), _42 = n103 - e78;
    return { pan: (o77 ? d63 : h58) * l75 * t88, ascend: Math.max(this._minimumAscendVelocity() * t88, 2 ** (l75 * t88 / m55) * _42 - _42), zoom: 2 ** (l75 * t88 / m55) * c75 - c75, rotate: i3(u58 * p70, tt4, et3) * t88 };
  }
  _applyDisabledMovementTypes(t88) {
    null == this.disableMovements || void 0 !== this.disableMovements.mode && this.view.state.viewingMode !== this.disableMovements.mode || (t88.zoom = this.disableMovements.zoom ? 0 : t88.zoom, t88.ascend = this.disableMovements.ascend ? 0 : t88.ascend, t88.pan.enabled = !this.disableMovements.pan, this.disableMovements.pan && r10(t88.pan.matrix), t88.rotate.enabled = !this.disableMovements.rotate, this.disableMovements.rotate && r10(t88.rotate.matrix));
  }
  static activatesFor(t88, e78) {
    const i78 = i58(e78, t88.navigation.gamepad, J10);
    return !("end" === e78.action || s58(i78));
  }
};
e([y({ constructOnly: true })], q14.prototype, "gamepadDevice", void 0), e([y({ constructOnly: true })], q14.prototype, "disableMovements", void 0), q14 = e([a4("esri.views.3d.state.controllers.GamepadKeyboardController")], q14);
var J10 = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 };
var Q10 = 80;
var W12 = M2(Q10);
var Y11 = 0.75;
var $7 = 5;
var tt4 = M2(30);
var et3 = M2(80);
var it3 = { zoom: 0, ascend: 0, pan: { enabled: false, matrix: e17() }, rotate: { enabled: false, matrix: e17() } };
var at3 = n7();
var rt3 = n7();
var ot2 = h34();
function st4(t88) {
  t88.zoom = 0, t88.ascend = 0, t88.pan.enabled = false, r10(t88.pan.matrix), t88.rotate.enabled = false, r10(t88.rotate.matrix);
}

// node_modules/@arcgis/core/views/3d/input/handlers/GamepadNavigation.js
var l42 = class extends i25 {
  constructor(e78) {
    super(true), this._view = e78, this._watchHandles = new t3(), this._handle = this.registerIncoming("gamepad", (a85) => this._handleEventGamepad(a85)), this._handle.pause();
  }
  onInstall(a85) {
    super.onInstall(a85), this._watchHandles.add([l6(() => this._view.navigation.gamepad.enabled, (a86) => {
      a86 ? this._handle.resume() : (this._handle.pause(), this._cameraControllerGamepad && (this._cameraControllerGamepad.finishController(), this._cameraControllerGamepad = null));
    }, h3), l6(() => this._view.navigation.gamepad.device, (a86) => {
      this._cameraControllerGamepad && a86 && this._cameraControllerGamepad.gamepadDevice !== a86 && (this._cameraControllerGamepad.finishController(), this._cameraControllerGamepad = null);
    })]);
  }
  onUninstall() {
    this._watchHandles.removeAll(), super.onUninstall();
  }
  _handleEventGamepad(a85) {
    const e78 = this._view.navigation.gamepad.device;
    if (e78 && a85.data.device !== e78)
      return;
    const t88 = this._cameraControllerGamepad && this._cameraControllerGamepad.active;
    if (t88 || q14.activatesFor(this._view, a85.data)) {
      if (!t88) {
        const e79 = new q14({ view: this._view, gamepadDevice: a85.data.device });
        this._view.state.switchCameraController(e79) && (this._cameraControllerGamepad = e79);
      }
      this._cameraControllerGamepad && this._cameraControllerGamepad.active && this._cameraControllerGamepad.gamepadDevice === a85.data.device && this._cameraControllerGamepad.handleEventGamepad(a85.data);
    }
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/KeyboardNavigation.js
var a52;
!function(e78) {
  e78[e78.LEFT = 0] = "LEFT", e78[e78.RIGHT = 1] = "RIGHT", e78[e78.FORWARD = 2] = "FORWARD", e78[e78.BACKWARD = 3] = "BACKWARD", e78[e78.UP = 4] = "UP", e78[e78.DOWN = 5] = "DOWN", e78[e78.HEADINGLEFT = 6] = "HEADINGLEFT", e78[e78.HEADINGRIGHT = 7] = "HEADINGRIGHT", e78[e78.TILTUP = 8] = "TILTUP", e78[e78.TILTDOWN = 9] = "TILTDOWN", e78[e78.ZOOMIN = 10] = "ZOOMIN", e78[e78.ZOOMOUT = 11] = "ZOOMOUT";
}(a52 || (a52 = {}));
var o52 = class extends i25 {
  constructor(t88, r79) {
    super(true), this._view = t88, this._disableMovements = { pan: true, zoom: false, ascend: true, rotate: false, mode: l14.Local }, this._keyToNumber = { [r79.left]: a52.LEFT, [r79.right]: a52.RIGHT, [r79.forward]: a52.FORWARD, [r79.backward]: a52.BACKWARD, [r79.up]: a52.UP, [r79.down]: a52.DOWN, [r79.headingLeft]: a52.HEADINGLEFT, [r79.headingRight]: a52.HEADINGRIGHT, [r79.tiltUp]: a52.TILTUP, [r79.tiltDown]: a52.TILTDOWN, [r79.zoomIn]: a52.ZOOMIN, [r79.zoomOut]: a52.ZOOMOUT }, this.registerIncoming("key-down", null, (e78) => this._handleKeyDown(e78)), this.registerIncoming("key-up", null, (e78) => this._handleKeyUp(e78)), this.registerIncoming("blur", null, () => this._handleBlur());
  }
  _handleKeyDown(e78) {
    if (e78.data.native.ctrlKey || e78.data.native.metaKey)
      return;
    const r79 = this._keyToNumber[e78.data.key];
    null != r79 && (this._cameraControllerKeyboard && this._cameraControllerKeyboard.active || (this._cameraControllerKeyboard = new q14({ view: this._view, disableMovements: this._disableMovements }), this._view.state.switchCameraController(this._cameraControllerKeyboard)), this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.activateDirection(r79), e78.stopPropagation()));
  }
  _handleBlur() {
    this._cameraControllerKeyboard && this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.finishController(), this._cameraControllerKeyboard = null);
  }
  _handleKeyUp(e78) {
    if (e78.data.native.ctrlKey || e78.data.native.metaKey)
      return;
    const t88 = this._keyToNumber[e78.data.key];
    null != t88 && this._cameraControllerKeyboard && this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.deactivateDirection(t88), e78.stopPropagation());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/MouseWheelZoom.js
var i59 = class extends i25 {
  constructor(e78, t88) {
    super(true), this._view = e78, this.registerIncoming("mouse-wheel", t88, (e79) => this._handleMouseWheel(e79));
  }
  _handleMouseWheel(r79) {
    if (!this._view.navigation.mouseWheelZoomEnabled)
      return;
    const i78 = r79.data;
    this._cameraController && this._cameraController.active || (this._cameraController = this._view.state.isGlobal ? new A24({ view: this._view, mode: "interaction" }) : new S15({ view: this._view, mode: "interaction" }), this._view.state.switchCameraController(this._cameraController)), this._cameraController.zoomStep(-1 / 60 * i78.deltaY, i10(i78.x, i78.y)), r79.preventDefault(), r79.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/3d/input/util.js
var t55 = class {
  constructor(t88) {
    this._gain = t88;
  }
  reset(t88) {
    this._value = t88;
  }
  set gain(t88) {
    this._gain = t88;
  }
  get value() {
    return void 0 === this._value ? 0 : this._value;
  }
  update(t88) {
    void 0 === this._value ? this._value = t88 : this._value = this._gain * t88 + (1 - this._gain) * this._value;
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/MomentumController.js
var c47 = class extends a50 {
  constructor() {
    super(...arguments), this._beginCamera = new $2(), this._elapsedTimeSec = 0, this.constraintOptions = { selection: L13.ALL, interactionType: O14.PAN, interactionFactor: 0, interactionStartCamera: new $2(), interactionDirection: null, tiltMode: O15.TUMBLE };
  }
  initialize() {
    this.constraintOptions.interactionType = this.interactionType, this.viewAnimation = new a41();
  }
  get steppingFinished() {
    return this.momentum.isFinished(this._elapsedTimeSec);
  }
  onControllerStart(t88) {
    this._beginCamera.copyFrom(t88), this.constraintOptions.interactionStartCamera = this._beginCamera, super.onControllerStart(t88);
  }
  stepController(t88, i78) {
    i78.copyViewFrom(this._beginCamera), this._elapsedTimeSec += t88, this.momentumStep(this._elapsedTimeSec, i78), E21(this.view, i78, this.constraintOptions);
  }
};
c47 = e([a4("esri.views.3d.state.controllers.momentum.MomentumController")], c47);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/PanPlanarMomentumController.js
var i60 = class extends c47 {
  constructor(t88) {
    super(t88), this.interactionType = O14.PAN, this._tmpPan = n7();
  }
  momentumStep(t88, o77) {
    const r79 = this.momentum.value(t88);
    g3(this._tmpPan, this.momentum.direction, r79), o77.eye = e8(p43, o77.eye, this._tmpPan), o77.center = e8(p43, o77.center, this._tmpPan), this.constraintOptions.interactionDirection = this._tmpPan;
  }
};
e([y({ constructOnly: true })], i60.prototype, "momentum", void 0), i60 = e([a4("esri.views.3d.state.controllers.momentum.PanPlanarMomentumController")], i60);
var p43 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/PanSphericalMomentumController.js
var p44 = n7();
var u35 = n7();
var l43 = class extends c47 {
  constructor(o77) {
    super(o77), this.interactionType = O14.PAN;
  }
  momentumStep(o77, t88) {
    const s84 = this.momentum.value1(o77), i78 = this.momentum.value2(o77);
    r7(u35, t88.eye), z2(u35, u35), _(this.momentum.axis2, u35, this.momentum.axis1), Ct(t88, p44, this.momentum.axis1, s84, this.momentum.axis2, i78);
  }
};
e([y({ constructOnly: true })], l43.prototype, "momentum", void 0), l43 = e([a4("esri.views.3d.state.controllers.momentum.PanSphericalMomentumController")], l43);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/RotationMomentumController.js
var n66 = class extends c47 {
  set center(t88) {
    this._set("center", t8(t88));
  }
  set axis(t88) {
    this._set("axis", t8(t88));
  }
  constructor(t88) {
    super(t88), this.interactionType = O14.TUMBLE;
  }
  momentumStep(t88, o77) {
    const r79 = this.momentum.value(t88);
    ct2(o77, this.center, m29(this.axis, r79));
  }
};
e([y({ constructOnly: true })], n66.prototype, "momentum", void 0), e([y({ constructOnly: true })], n66.prototype, "center", null), e([y({ constructOnly: true })], n66.prototype, "axis", null), n66 = e([a4("esri.views.3d.state.controllers.momentum.MomentumController")], n66);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/ZoomPlanarMomentumController.js
var p45 = class extends c47 {
  set zoomCenter(t88) {
    this._set("zoomCenter", t8(t88));
  }
  constructor(t88) {
    super(t88), this.interactionType = O14.ZOOM, this.constraintOptions.interactionDirection = n7();
  }
  momentumStep(t88, o77) {
    const { interactionDirection: r79 } = this.constraintOptions;
    if (!r79)
      return;
    r7(r79, o77.eye);
    const n103 = this.momentum.valueDelta(0, t88);
    ut2(o77, this.zoomCenter, n103, this.view.state.constraints.minimumPoiDistance), H2(r79, o77.eye, r79);
  }
};
e([y({ constructOnly: true })], p45.prototype, "momentum", void 0), e([y({ constructOnly: true })], p45.prototype, "zoomCenter", null), p45 = e([a4("esri.views.3d.state.controllers.momentum.ZoomPlanarMomentumController")], p45);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/ZoomSphericalMomentumController.js
var j18 = class extends c47 {
  set screenCenter(t88) {
    this._set("screenCenter", i10(t88[0], t88[1]));
  }
  set sceneCenter(t88) {
    this._set("sceneCenter", t8(t88));
  }
  constructor(t88) {
    super(t88), this.interactionType = O14.ZOOM, this.radius = 0, this._tmpSceneCenter = n7(), this._tmpZoomAxisAngle = i57(), this._sphere = _5();
  }
  initialize() {
    this._sphere[3] = this.radius;
  }
  momentumStep(t88, e78) {
    const s84 = this.momentum.valueDelta(0, t88);
    pt(this._sphere, e78, s84), this.constraintOptions.interactionType = O14.ZOOM, E21(this.view, e78, this.constraintOptions), It(this._sphere, e78, this.screenCenter, this._tmpSceneCenter), k15(this.sceneCenter, this._tmpSceneCenter, this._tmpZoomAxisAngle), ct2(e78, this._sphere, this._tmpZoomAxisAngle), this.constraintOptions.interactionType = O14.PAN;
  }
};
e([y({ constructOnly: true })], j18.prototype, "momentum", void 0), e([y({ constructOnly: true })], j18.prototype, "screenCenter", null), e([y({ constructOnly: true })], j18.prototype, "sceneCenter", null), e([y({ constructOnly: true })], j18.prototype, "radius", void 0), j18 = e([a4("esri.views.3d.state.controllers.momentum.ZoomSphericalMomentumController")], j18);

// node_modules/@arcgis/core/views/navigation/FilteredFiniteDifference.js
var t56 = class {
  constructor(t88) {
    this._gain = t88, this.lastValue = void 0, this.filteredDelta = void 0;
  }
  update(t88) {
    if (this.hasLastValue()) {
      const e78 = this.computeDelta(t88);
      this._updateDelta(e78);
    }
    this.lastValue = t88;
  }
  reset() {
    this.lastValue = void 0, this.filteredDelta = void 0;
  }
  hasLastValue() {
    return void 0 !== this.lastValue;
  }
  hasFilteredDelta() {
    return void 0 !== this.filteredDelta;
  }
  computeDelta(t88) {
    return void 0 === this.lastValue ? NaN : t88 - this.lastValue;
  }
  _updateDelta(t88) {
    void 0 !== this.filteredDelta ? this.filteredDelta = (1 - this._gain) * this.filteredDelta + this._gain * t88 : this.filteredDelta = t88;
  }
};

// node_modules/@arcgis/core/views/navigation/Momentum.js
var t57 = class {
  constructor(t88, i78, o77) {
    this._initialVelocity = t88, this._stopVelocity = i78, this._friction = o77, this._duration = Math.abs(Math.log(Math.abs(this._initialVelocity) / this._stopVelocity) / Math.log(1 - this._friction));
  }
  get duration() {
    return this._duration;
  }
  isFinished(t88) {
    return t88 > this.duration;
  }
  get friction() {
    return this._friction;
  }
  value(t88) {
    return this.valueFromInitialVelocity(this._initialVelocity, t88);
  }
  valueDelta(t88, i78) {
    const o77 = this.value(t88);
    return this.value(t88 + i78) - o77;
  }
  valueFromInitialVelocity(t88, i78) {
    i78 = Math.min(i78, this.duration);
    const o77 = 1 - this.friction;
    return t88 * (o77 ** i78 - 1) / Math.log(o77);
  }
};

// node_modules/@arcgis/core/views/navigation/PanPlanarMomentumEstimator.js
var c48 = class extends t57 {
  constructor(e78, t88, i78, s84, n103) {
    super(e78, t88, i78), this._sceneVelocity = s84, this.direction = n103;
  }
  value(e78) {
    return super.valueFromInitialVelocity(this._sceneVelocity, e78);
  }
};
var l44 = class {
  constructor(e78 = 300, t88 = 12, i78 = 0.84) {
    this._minimumInitialVelocity = e78, this._stopVelocity = t88, this._friction = i78, this.enabled = true, this._time = new t56(0.6), this._screen = [new t56(0.4), new t56(0.4)], this._scene = [new t56(0.6), new t56(0.6), new t56(0.6)], this._tmpDirection = n7();
  }
  add(e78, t88, i78) {
    if (this.enabled) {
      if (this._time.hasLastValue()) {
        if (this._time.computeDelta(i78) < 0.015)
          return;
      }
      this._screen[0].update(e78[0]), this._screen[1].update(e78[1]), this._scene[0].update(t88[0]), this._scene[1].update(t88[1]), this._scene[2].update(t88[2]), this._time.update(i78);
    }
  }
  reset() {
    this._screen[0].reset(), this._screen[1].reset(), this._scene[0].reset(), this._scene[1].reset(), this._scene[2].reset(), this._time.reset();
  }
  evaluateMomentum() {
    if (!this.enabled || !this._screen[0].hasFilteredDelta() || !this._time.hasFilteredDelta())
      return null;
    const e78 = this._screen[0].filteredDelta, t88 = this._screen[1].filteredDelta, i78 = null == e78 || null == t88 ? 0 : Math.sqrt(e78 * e78 + t88 * t88), s84 = this._time.filteredDelta, n103 = null == s84 || null == i78 ? 0 : i78 / s84;
    return Math.abs(n103) < this._minimumInitialVelocity ? null : this.createMomentum(n103, this._stopVelocity, this._friction);
  }
  createMomentum(s84, n103, r79) {
    o4(this._tmpDirection, this._scene[0].filteredDelta ?? 0, this._scene[1].filteredDelta ?? 0, this._scene[2].filteredDelta ?? 0);
    const l75 = s10(this._tmpDirection);
    l75 > 0 && g3(this._tmpDirection, this._tmpDirection, 1 / l75);
    const h58 = this._time.filteredDelta;
    return new c48(s84, n103, r79, null == h58 ? 0 : l75 / h58, this._tmpDirection);
  }
};

// node_modules/@arcgis/core/views/navigation/FilteredValue.js
var e41 = class {
  constructor(e78) {
    this._gain = e78;
  }
  update(e78) {
    void 0 !== this.filteredValue ? this.filteredValue = (1 - this._gain) * this.filteredValue + this._gain * e78 : this.filteredValue = e78;
  }
  reset() {
    this.filteredValue = void 0;
  }
  get hasFilteredValue() {
    return void 0 !== this.filteredValue;
  }
};

// node_modules/@arcgis/core/views/navigation/PanSphericalMomentumEstimator.js
var u36 = 1e-5;
var m32 = class extends t57 {
  constructor(t88, e78, i78, s84, a85, l75 = 0, n103) {
    super(t88, e78, i78), this._angularVelocity1 = s84, this.axis1 = a85, this.angularVelocity2 = l75, this.axis2 = n103;
  }
  value1(t88) {
    return super.valueFromInitialVelocity(this._angularVelocity1, t88);
  }
  value2(t88) {
    return super.valueFromInitialVelocity(this.angularVelocity2, t88);
  }
};
var c49 = class {
  constructor(e78 = 300, i78 = 12, s84 = 0.84) {
    this._minimumInitialVelocity = e78, this._stopVelocity = i78, this._friction = s84, this.enabled = true, this._tmpAxis1 = n7(), this._tmpAxis2 = n7(), this._tmpAngles = n20(), this._time = new t56(0.3), this._screen = [new t56(0.4), new t56(0.4)], this._angle1 = new e41(0.6), this._angle2 = new e41(0.6), this._axis1 = n7(), this._axis2 = n7(), this._lastScene = n7();
  }
  addMomentumDirectRotation(t88, a85, n103, h58, r79, _42) {
    if (this.enabled) {
      if (this._time.hasLastValue()) {
        if (this._time.computeDelta(n103) < 0.01)
          return;
        let t89 = Et(this._lastScene, a85, this._tmpAxis2, h58, r79, _42);
        this._angle2.update(0), v3(this._tmpAxis2) < u36 ? t89 = 0 : z2(this._axis1, this._tmpAxis2), this._angle1.update(t89), r7(this._lastScene, a85);
      }
      this._screen[0].update(t88[0]), this._screen[1].update(t88[1]), this._time.update(n103);
    }
  }
  addMomentumPreserveHeading(t88, a85, l75, h58, r79, _42, m55) {
    if (this.enabled) {
      if (this._time.hasLastValue()) {
        if (this._time.computeDelta(l75) < 0.01)
          return;
        Gt(this._lastScene, a85, this._tmpAxis2, this._tmpAxis1, this._tmpAngles, h58, r79, _42, m55, false), v3(this._tmpAxis2) < u36 ? (this._angle1.update(0), this._angle2.update(0)) : (this._angle1.update(this._tmpAngles[1]), this._angle2.update(this._tmpAngles[0]), z2(this._axis1, this._tmpAxis1), z2(this._axis2, this._tmpAxis2)), r7(this._lastScene, a85);
      }
      this._screen[0].update(t88[0]), this._screen[1].update(t88[1]), this._time.update(l75);
    }
  }
  reset() {
    this._screen[0].reset(), this._screen[1].reset(), this._angle1.reset(), this._angle2.reset(), this._time.reset();
  }
  evaluateMomentum() {
    if (!this.enabled || !this._screen[0].hasFilteredDelta())
      return null;
    const t88 = this._screen[0].filteredDelta, e78 = this._screen[1].filteredDelta, i78 = null == t88 || null == e78 ? null : Math.sqrt(t88 * t88 + e78 * e78), s84 = this._time.filteredDelta, a85 = null == i78 || null == s84 ? 0 : i78 / s84;
    return Math.abs(a85) < this._minimumInitialVelocity ? null : this.createMomentum(a85, this._stopVelocity, this._friction);
  }
  createMomentum(t88, e78, i78) {
    const s84 = this._time.filteredDelta, a85 = this._angle1.filteredValue, l75 = this._angle2.filteredValue, n103 = null == s84 || null == l75 ? 0 : l75 / s84;
    return new m32(t88, e78, i78, null == s84 || null == a85 ? 0 : a85 / s84, this._axis1, n103, this._axis2);
  }
};

// node_modules/@arcgis/core/views/navigation/MomentumEstimator.js
var s59 = class {
  constructor(t88 = 2.5, i78 = 0.01, s84 = 0.95, l75 = 12) {
    this._minimumInitialVelocity = t88, this._stopVelocity = i78, this._friction = s84, this._maxVelocity = l75, this.enabled = true, this.value = new t56(0.8), this.time = new t56(0.3);
  }
  add(t88, e78) {
    if (this.enabled && null != e78) {
      if (this.time.hasLastValue()) {
        if (this.time.computeDelta(e78) < 0.01)
          return;
        if (this.value.hasFilteredDelta()) {
          const e79 = this.value.computeDelta(t88);
          this.value.filteredDelta * e79 < 0 && this.value.reset();
        }
      }
      this.time.update(e78), this.value.update(t88);
    }
  }
  reset() {
    this.value.reset(), this.time.reset();
  }
  evaluateMomentum() {
    if (!this.enabled || !this.value.hasFilteredDelta() || !this.time.hasFilteredDelta())
      return null;
    let e78 = this.value.filteredDelta / this.time.filteredDelta;
    return e78 = i3(e78, -this._maxVelocity, this._maxVelocity), Math.abs(e78) < this._minimumInitialVelocity ? null : this.createMomentum(e78, this._stopVelocity, this._friction);
  }
  createMomentum(t88, e78, s84) {
    return new t57(t88, e78, s84);
  }
};

// node_modules/@arcgis/core/views/navigation/RotationMomentumEstimator.js
var a53 = class extends s59 {
  constructor(t88 = 3, a85 = 0.01, s84 = 0.95, o77 = 12) {
    super(t88, a85, s84, o77);
  }
  add(t88, a85) {
    const s84 = this.value.lastValue;
    if (null != s84) {
      let a86 = t88 - s84;
      for (; a86 > Math.PI; )
        a86 -= 2 * Math.PI;
      for (; a86 < -Math.PI; )
        a86 += 2 * Math.PI;
      t88 = s84 + a86;
    }
    super.add(t88, a85);
  }
};

// node_modules/@arcgis/core/views/navigation/ZoomMomentumEstimator.js
var r50 = class extends t57 {
  constructor(e78, t88, r79) {
    super(e78, t88, r79);
  }
  value(e78) {
    const t88 = super.value(e78);
    return Math.exp(t88);
  }
  valueDelta(e78, t88) {
    const r79 = super.value(e78), s84 = super.value(e78 + t88) - r79;
    return Math.exp(s84);
  }
};
var s60 = class extends s59 {
  constructor(e78 = 2.5, t88 = 0.01, r79 = 0.95, s84 = 12) {
    super(e78, t88, r79, s84);
  }
  add(e78, t88) {
    super.add(Math.log(e78), t88);
  }
  createMomentum(e78, t88, s84) {
    return new r50(e78, t88, s84);
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/global/PinchAndPanController.js
var ot3 = class extends n64 {
  constructor() {
    super(...arguments), this._smoothRotation = new t55(0.05), this._rotationAxis = n7(), this._beginAngle = 0, this._beginHeading = 0, this._panningPlane = h12(), this._beginRadius = 0, this._smoothScaling = new t55(0.05), this._zoomCenterScreen = i10(), this._zoomMomentumEstimator = new s60(), this._rotationMomentumEstimator = new a53(), this._panSphericalMomentumEstimator = new c49(), this._panPlanarMomentumEstimator = new l44(), this._adjustedSphere = _5(), this._tmp3d = n7(), this._tmpScreenPointArray = i10(), this._beginScreenPoint = i10(), this._beginScenePoint = n7(), this._screenPickPoint = i10(), this._scenePickPoint = n7(), this._mode = gt.Horizontal, this._sphere = _5(), this._pointerCount = 0, this._tmpInteractionDirection = n7(), this._constraintOptions = { selection: L13.ALL, interactionType: O14.NONE, interactionFactor: 0, interactionStartCamera: new $2(), interactionDirection: null, tiltMode: O15.TUMBLE };
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t88) {
    var _a;
    if (!this.active)
      return;
    const n103 = this.view.navigation.momentumEnabled;
    this._zoomMomentumEstimator.enabled = n103, this._rotationMomentumEstimator.enabled = n103, this._panPlanarMomentumEstimator.enabled = n103, this._panSphericalMomentumEstimator.enabled = n103, this._beginHeading = -r24.normalize(M2(this.view.camera.heading)), this._beginRadius = t88.radius, this._pointerCount = t88.pointers.size, this._beginAngle = t88.angle, this._smoothRotation.reset(), d6(t88.center, this._screenPickPoint), a14(this._beginScreenPoint, this._screenPickPoint);
    const o77 = A2(this.view.spatialReference), r79 = jt(this._intersectionHelper, this.startCamera, this._screenPickPoint, o77, N11.Silhouette, 0 === this.view.map.ground.opacity ? at2 : {});
    null != r79.scenePickPoint && (this._scenePickPoint = r79.scenePickPoint, this._sphere = r79.sphere, r7(this._beginScenePoint, this._scenePickPoint), this._mode = zt(this.startCamera, this._screenPickPoint, o77), this._mode === gt.Vertical && this._preparePlanarPanMode(t88, r79.hasGeometryIntersection), (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.startCamera));
  }
  update(t88) {
    if (!this.active)
      return;
    this.currentCamera.copyFrom(this.startCamera);
    const i78 = t88.pointers.size > 1;
    this._mode === gt.Horizontal ? (i78 && this._zoomSpherical(t88), this._panningSpherical(t88), i78 && this._rotateSpherical(t88)) : (i78 && this._zoomPlanar(t88), this._panningPlanar(t88), i78 && this._rotatePlanar(t88)), this.commitCamera();
  }
  end(t88) {
    t88.pointers.size === this._pointerCount && this.update(t88), this.finishController();
    const i78 = this._zoomMomentumEstimator.evaluateMomentum();
    if (i78)
      return this._mode === gt.Horizontal ? new j18({ view: this.view, momentum: i78, screenCenter: this._zoomCenterScreen, sceneCenter: this._beginScenePoint, radius: this._sphere[3] }) : new p45({ view: this.view, momentum: i78, zoomCenter: this._beginScenePoint });
    const e78 = this._rotationMomentumEstimator.evaluateMomentum();
    if (e78)
      return new n66({ view: this.view, momentum: e78, center: this._sphere, axis: this._rotationAxis });
    if (this._mode === gt.Horizontal) {
      const t89 = this._panSphericalMomentumEstimator.evaluateMomentum();
      if (t89)
        return new l43({ view: this.view, momentum: t89 });
    } else {
      const t89 = this._panPlanarMomentumEstimator.evaluateMomentum();
      if (t89)
        return new i60({ view: this.view, momentum: t89 });
    }
    return null;
  }
  _preparePlanarPanMode(t88, i78) {
    const e78 = j2(this._tmp3d, this.startCamera.viewForward);
    T6(this._scenePickPoint, e78, this._panningPlane);
    const r79 = i10(this._screenPickPoint[0], 0), a85 = n7(), m55 = s10(this.startCamera.eye);
    this._adjustedSphere[3] = m55 < this._sphere[3] ? m55 - 100 : this._sphere[3], It(this._adjustedSphere, this.startCamera, r79, a85);
    const v44 = x7();
    this.startCamera.projectToRenderScreen(a85, v44);
    const C30 = n7(), M26 = n7(), b31 = n7();
    e8(C30, this._scenePickPoint, this.currentCamera.eye);
    const f59 = s10(C30);
    z2(C30, C30);
    const j29 = tt3 * Math.max(Math.abs(this.view.camera.position.z), et2), E43 = this.view._stage.renderView.getMinimalDepthForArea(null, this._screenPickPoint[0], this._screenPickPoint[1], this.view.state.camera, Y8);
    let y41 = null != E43 ? E43 : j29;
    y41 = i78 ? Math.min(y41, f59) : y41, r7(b31, u2(M26, this.currentCamera.eye, g3(M26, C30, y41))), this._panningPlane[3] = -P3(W2(this._panningPlane), b31), this.startCamera.center = u2(M26, this.startCamera.eye, g3(M26, this.startCamera.viewForward, y41));
    const O29 = d6(t88.center, this._tmpScreenPointArray);
    mt(this._panningPlane, this.startCamera, O29, this._beginScenePoint);
  }
  _zoomSpherical(t88) {
    const i78 = this._beginRadius / t88.radius, e78 = 1875e-6 * Math.min(Math.max(t88.radius, 40), 120);
    this._smoothScaling.gain = e78, this._smoothScaling.update(i78), pt(this._sphere, this.currentCamera, this._smoothScaling.value), d6(t88.center, this._zoomCenterScreen), this._zoomMomentumEstimator.add(this._smoothScaling.value, 1e-3 * t88.timestamp), this._constraintOptions.interactionType = O14.ZOOM, this._constraintOptions.interactionFactor = T15(t88.radius - this._beginRadius), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _panningSpherical(t88) {
    const i78 = d6(t88.center, this._tmpScreenPointArray);
    It(this._sphere, this.currentCamera, i78, this._tmp3d), Ft(this._beginScenePoint, P3(this.currentCamera.up, this._beginScenePoint), this._sphere[3], this._beginHeading, this.view.camera.tilt, this.startCamera) ? (Vt(this._sphere, this.currentCamera, this._beginScenePoint, this._tmp3d, this._beginHeading, this.view.camera.tilt, false), this._panSphericalMomentumEstimator.addMomentumPreserveHeading(i78, this._tmp3d, 1e-3 * t88.timestamp, this.startCamera, this._sphere, this._beginHeading, this.view.camera.tilt)) : (Rt(this._sphere, this.currentCamera, this._beginScenePoint, this._tmp3d, this.view.camera.tilt, false), this._panSphericalMomentumEstimator.addMomentumDirectRotation(i78, this._tmp3d, 1e-3 * t88.timestamp, this.startCamera, this._sphere[3], this.view.camera.tilt)), this._constraintOptions.interactionType = O14.PAN, this._constraintOptions.interactionFactor = T15(m6(this._screenPickPoint, i78)), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _rotateSpherical(t88) {
    z2(this._rotationAxis, this._scenePickPoint), this.currentCamera.aboveGround || j2(this._rotationAxis, this._rotationAxis);
    const i78 = this._smoothRotation.value, e78 = i78 + st3(t88.angle - i78), n103 = 125e-5 * Math.min(Math.max(t88.radius, 40), 120);
    this._smoothRotation.gain = n103, this._smoothRotation.update(e78);
    const s84 = this._smoothRotation.value - this._beginAngle;
    this._rotationMomentumEstimator.add(s84, 1e-3 * t88.timestamp), ct2(this.currentCamera, this._sphere, m29(this._rotationAxis, s84)), this._constraintOptions.interactionType = O14.TUMBLE, this._constraintOptions.interactionFactor = T15(t88.radius * e78), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _panningPlanar(t88) {
    const i78 = d6(t88.center, this._tmpScreenPointArray);
    mt(this._panningPlane, this.currentCamera, i78, this._tmp3d) && (xt(this.currentCamera, this._beginScenePoint, this._tmp3d), this._panPlanarMomentumEstimator.add(i78, this._tmp3d, 1e-3 * t88.timestamp), this._constraintOptions.interactionType = O14.PAN, this._constraintOptions.interactionFactor = T15(m6(this._beginScreenPoint, i78)), this._constraintOptions.interactionDirection = this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye, this._tmpInteractionDirection), E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null);
  }
  _zoomPlanar(t88) {
    const i78 = this._beginRadius / t88.radius, e78 = 1875e-6 * Math.min(Math.max(t88.radius, 40), 120);
    this._smoothScaling.gain = e78, this._smoothScaling.update(i78), this._zoomMomentumEstimator.add(this._smoothScaling.value, 1e-3 * t88.timestamp), ut2(this.currentCamera, this._beginScenePoint, this._smoothScaling.value, this.view.state.constraints.minimumPoiDistance), this._constraintOptions.interactionType = O14.ZOOM, this._constraintOptions.interactionFactor = T15(t88.radius - this._beginRadius), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _rotatePlanar(t88) {
    r7(this._rotationAxis, this._beginScenePoint), this.currentCamera.aboveGround || j2(this._rotationAxis, this._rotationAxis);
    const i78 = this._smoothRotation.value;
    let e78 = t88.angle - i78;
    e78 = st3(e78);
    const n103 = i78 + e78, s84 = 125e-5 * Math.min(Math.max(t88.radius, 40), 120);
    this._smoothRotation.gain = s84, this._smoothRotation.update(n103);
    const o77 = this._smoothRotation.value - this._beginAngle;
    this._rotationMomentumEstimator.add(o77, 1e-3 * t88.timestamp), ct2(this.currentCamera, this._sphere, m29(this._rotationAxis, o77)), this._constraintOptions.interactionType = O14.TUMBLE, this._constraintOptions.interactionFactor = T15(t88.radius * o77), E21(this.view, this.currentCamera, this._constraintOptions);
  }
};
ot3 = e([a4("esri.views.3d.state.controllers.global.PinchAndPanController")], ot3);

// node_modules/@arcgis/core/views/3d/state/controllers/local/PinchAndPanController.js
var q15 = r5(0, 0, 1);
var J11 = { ELEVATION_THRESHOLD: 3e4, ANGLE_THRESHOLD: 16 / 180 * Math.PI };
var K9 = class extends n64 {
  constructor() {
    super(...arguments), this._rotationValueSmooth = new t55(0.05), this._scalingValueSmooth = new t55(0.05), this._planeHorizontal = h12(), this._planeVertical = h12(), this._rotationMomentumEstimator = new a53(), this._panMomentumEstimator = new l44(300, 12, 0.9), this._zoomMomentumEstimator = new s60(), this._beginRadius = 0, this._beginCenter = n7(), this._beginAngle = 0, this._tmpPoints = [], this._panMode = gt.Horizontal, this._beginCenterScreen = i10(), this._tmpCentroid3d = n7(), this._tmpCentroid2d = i10(), this._tmp2d = i10(), this._pointerCount = 0, this._constraintOptions = { selection: L13.ALL, interactionType: O14.NONE, interactionFactor: 0, interactionStartCamera: new $2(), interactionDirection: null, tiltMode: O15.TUMBLE };
  }
  begin(t88) {
    var _a;
    if (!this.active)
      return;
    const e78 = this.view.navigation.momentumEnabled;
    this._zoomMomentumEstimator.enabled = e78, this._rotationMomentumEstimator.enabled = e78, this._panMomentumEstimator.enabled = e78, this._beginRadius = t88.radius, this._pointerCount = t88.pointers.size, this._beginAngle = t88.angle, this._rotationValueSmooth.reset(), this._scalingValueSmooth.reset(), d6(t88.center, this._beginCenterScreen), F8(q15, 0, this._planeHorizontal);
    const o77 = n7(), s84 = this._intersectionHelper.intersectScreenFreePointFallback(this._beginCenterScreen, o77, 0 === this.view.map.ground.opacity ? at2 : {}), d63 = n7();
    j2(d63, this.startCamera.viewForward);
    const C30 = n7();
    r7(C30, q15);
    const g49 = P3(d63, C30), w33 = F3(g49 < 0 ? -g49 : g49);
    this._panMode = w33 >= J11.ANGLE_THRESHOLD ? gt.Horizontal : gt.Vertical;
    const j29 = Math.min(tt3, 1 / Math.abs(P3(C30, this.startCamera.viewForward))) * Math.max(Math.abs(this.view.camera.position.z), et2);
    C7(this._planeHorizontal, this._planeHorizontal, o77), this.startCamera.aboveGround || L2(this._planeHorizontal, this._planeHorizontal);
    const E43 = n7(), P29 = n7(), S27 = n7();
    e8(E43, o77, this.currentCamera.eye);
    const V17 = s10(E43);
    if (z2(E43, E43), this._panMode === gt.Vertical) {
      g3(C30, C30, g49), e8(this._planeVertical, d63, C30), z2(this._planeVertical, this._planeVertical), C7(this._planeVertical, this._planeVertical, o77);
      const i78 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, this._beginCenterScreen[0], this._beginCenterScreen[1], this.view.state.camera, Y8);
      let e79 = null != i78 ? i78 : j29;
      e79 = s84 ? Math.min(e79, V17) : e79, r7(S27, u2(P29, this.currentCamera.eye, g3(P29, E43, e79))), this._planeVertical[3] = -P3(this._planeVertical, S27), this._computePlanePoints(t88.pointers, this._planeVertical, this.startCamera, this._tmpPoints), ht2(this._tmpPoints, this._beginCenter);
    } else {
      const i78 = s84 ? V17 : j29;
      r7(S27, u2(P29, this.currentCamera.eye, g3(P29, E43, i78))), this._planeHorizontal[3] = -P3(W2(this._planeHorizontal), S27), this._computePlanePoints(t88.pointers, this._planeHorizontal, this.startCamera, this._tmpPoints), ht2(this._tmpPoints, this._beginCenter);
    }
    (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.startCamera);
  }
  update(t88) {
    if (!this.active)
      return;
    this.currentCamera.copyFrom(this.startCamera);
    const i78 = t88.pointers.size > 1, e78 = this._panMode === gt.Horizontal ? this._planeHorizontal : this._planeVertical, o77 = this._beginCenter;
    if (i78) {
      const i79 = this._beginRadius / t88.radius, e79 = 1875e-6 * Math.min(Math.max(t88.radius, 40), 120);
      this._scalingValueSmooth.gain = e79, this._scalingValueSmooth.update(i79), ut2(this.currentCamera, o77, this._scalingValueSmooth.value, this.view.state.constraints.minimumPoiDistance), this._zoomMomentumEstimator.add(this._scalingValueSmooth.value, 1e-3 * t88.timestamp), this._constraintOptions.interactionType = O14.ZOOM, this._constraintOptions.interactionFactor = T15(Math.abs(t88.radius - this._beginRadius)), E21(this.view, this.currentCamera, this._constraintOptions);
    }
    if (this._computePlanePoints(t88.pointers, e78, this.currentCamera, this._tmpPoints), ht2(this._tmpPoints, this._tmpCentroid3d), d6(t88.center, this._tmpCentroid2d), xt(this.currentCamera, o77, this._tmpCentroid3d), this._panMomentumEstimator.add(this._tmpCentroid2d, this._tmpCentroid3d, 1e-3 * t88.timestamp), this._constraintOptions.interactionType = O14.PAN, this._constraintOptions.interactionFactor = T15(m6(this._beginCenterScreen, this._tmpCentroid2d)), E21(this.view, this.currentCamera, this._constraintOptions), i78) {
      const i79 = this._planeHorizontal, e79 = o77, n103 = this._rotationValueSmooth.value, s84 = n103 + st3(t88.angle - n103), r79 = 125e-5 * Math.min(Math.max(t88.radius, 40), 120);
      this._rotationValueSmooth.gain = r79, this._rotationValueSmooth.update(s84);
      const a85 = this._rotationValueSmooth.value - this._beginAngle;
      this._rotationMomentumEstimator.add(a85, 1e-3 * t88.timestamp), ct2(this.currentCamera, e79, m29(i79, a85)), this._constraintOptions.interactionType = O14.TUMBLE, this._constraintOptions.interactionFactor = T15(Math.abs(t88.radius * a85)), E21(this.view, this.currentCamera, this._constraintOptions);
    }
    this.commitCamera();
  }
  end(t88) {
    t88.pointers.size === this._pointerCount && this.update(t88), this.finishController();
    const i78 = this._zoomMomentumEstimator.evaluateMomentum();
    if (i78)
      return new p45({ view: this.view, momentum: i78, zoomCenter: this._beginCenter });
    const e78 = this._rotationMomentumEstimator.evaluateMomentum();
    if (e78)
      return new n66({ view: this.view, momentum: e78, center: this._beginCenter, axis: W2(this._planeHorizontal) });
    const n103 = this._panMomentumEstimator.evaluateMomentum();
    return n103 ? new i60({ view: this.view, momentum: n103 }) : null;
  }
  _computePlanePoints(t88, i78, e78, n103) {
    n103.length = t88.size;
    const o77 = this._tmp2d;
    let s84 = 0;
    return t88.forEach((t89) => {
      o77[0] = t89.x, o77[1] = t89.y, void 0 === n103[s84] && (n103[s84] = n7()), mt(i78, e78, o77, n103[s84]), s84 += 1;
    }), n103;
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
};
K9 = e([a4("esri.views.3d.state.controllers.local.PinchAndPanController")], K9);

// node_modules/@arcgis/core/views/3d/input/handlers/PinchAndPanNavigation.js
var i61 = class extends i25 {
  constructor(t88, e78, s84) {
    super(true), this._view = t88, this.pointerAction = e78, this._lastEndTimestamp = 0, this._lastTimestamp = 0, this.registerIncoming("drag", s84, (t89) => this._handleDrag(t89));
  }
  _handleDrag(t88) {
    if ("mouse" === t88.data.pointerType && !r48(t88.data, this.pointerAction))
      return;
    const e78 = t88.timestamp - this._lastEndTimestamp, s84 = 40, i78 = this._momentum && this._momentum.active && e78 < s84;
    switch (t88.data.action) {
      case "start":
      case "update":
        if (i78)
          break;
        this._controller && this._controller.active ? t88.data.timestamp - this._lastTimestamp > 2 && (this._controller.update(t88.data), this._lastTimestamp = t88.timestamp) : this._startController(t88);
        break;
      case "end":
      case "removed":
        this._endController(t88, true);
        break;
      case "added":
        this._endController(t88, false), this._startController(t88);
    }
    t88.stopPropagation();
  }
  _endController(t88, e78) {
    if (this._controller && this._controller.active) {
      this._lastEndTimestamp = t88.timestamp;
      const s84 = this._controller.end(t88.data);
      e78 && s84 && (this._momentum = s84, this._view.state.switchCameraController(this._momentum));
    }
    this._controller = null;
  }
  _startController(t88) {
    this._controller = this._createController(), this._view.state.switchCameraController(this._controller), this._controller.begin(t88.data), this._lastTimestamp = t88.timestamp;
  }
  _createController() {
    return this._view.state.isGlobal ? new ot3({ view: this._view }) : new K9({ view: this._view });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/PointerDownCancelAnimation.js
var e42 = class extends i25 {
  constructor(t88, e78) {
    super(true), this.view = t88, this.registerIncoming("pointer-down", e78, () => this.view.state.stopActiveCameraController());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKey.js
var e43 = class extends i25 {
  constructor(t88, e78) {
    super(true), this.key = t88, this.registerIncoming("key-down", e78, (t89) => this._handleKeyDown(t89));
  }
  _handleKeyDown(t88) {
    t88.data.key === this.key && (this.activate(), t88.stopPropagation());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKeyResetHeading.js
var t58 = class extends e43 {
  constructor(e78, t88, i78) {
    super(t88, i78), this.view = e78;
  }
  activate() {
    this.view.goTo({ heading: 0 }).catch(() => {
    });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKeyResetTilt.js
var e44 = class extends e43 {
  constructor(t88, e78, i78) {
    super(e78, i78), this.view = t88;
  }
  activate() {
    this.view.goTo({ tilt: 0 }).catch(() => {
    });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/TwoFingerTilt.js
var o53 = class extends i25 {
  constructor(e78, t88 = false) {
    super(true), this._view = e78, this._invert = t88, this.registerIncoming("vertical-two-finger-drag", (e79) => this._handleTwoFinger(e79));
  }
  _handleTwoFinger(a85) {
    var _a, _b, _c;
    const o77 = this._invert ? -1 : 1, i78 = i10(0, a85.data.delta * o77);
    switch (a85.data.action) {
      case "begin":
        (_a = this._cameraController) == null ? void 0 : _a.end(), this._cameraController = new L17({ view: this._view, pivot: b16.CENTER }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i78);
        break;
      case "update":
        (_b = this._cameraController) == null ? void 0 : _b.update(i78);
        break;
      case "end":
        (_c = this._cameraController) == null ? void 0 : _c.end(), this._cameraController = null;
    }
  }
};

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t59(t88) {
  const n103 = t88.native;
  return n103 ? { buttons: n103.buttons.map((t89) => t89.pressed ? t89.value || 1 : 0), axes: n103.axes.map((n104) => s61(n104, t88.axisThreshold)) } : { buttons: [], axes: [] };
}
function n67(t88, n103) {
  if (t88.axes.length !== n103.axes.length)
    return false;
  if (t88.buttons.length !== n103.buttons.length)
    return false;
  for (let e78 = 0; e78 < t88.axes.length; e78++)
    if (t88.axes[e78] !== n103.axes[e78])
      return false;
  for (let e78 = 0; e78 < t88.buttons.length; e78++)
    if (t88.buttons[e78] !== n103.buttons[e78])
      return false;
  return true;
}
function e45(t88) {
  for (let n103 = 0; n103 < t88.axes.length; n103++)
    if (0 !== t88.axes[n103])
      return false;
  for (let n103 = 0; n103 < t88.buttons.length; n103++)
    if (0 !== t88.buttons[n103])
      return false;
  return true;
}
function s61(t88, n103) {
  const e78 = Math.abs(t88);
  return e78 < n103 ? 0 : Math.sign(t88) * (e78 - n103) / (1 - n103);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a54 = class {
  constructor(e78, t88) {
    this._element = e78, this._input = t88, this._hasEventListeners = false, this._onConnectGamepad = (e79) => {
      this._connectGamepad(e79.gamepad);
    }, this._onDisconnectGamepad = (e79) => {
      const t89 = e79.gamepad, i79 = t89.index, n104 = this._inputDevices[i79];
      n104 && (this._emitGamepadEvent(t89, t59(n104), false), this._inputDevices.splice(i79, 1), this._latestUpdate.splice(i79, 1), this._input.gamepad.devices.remove(n104), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const i78 = "getGamepads" in window.navigator, n103 = window.isSecureContext;
    this.supported = i78 && n103, this.supported && (this._forEachGamepad((e79) => this._connectGamepad(e79)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e78) {
    this._hasEventListeners !== e78 && (this._hasEventListeners = e78, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e78) {
    this._callback = e78;
  }
  _connectGamepad(e78) {
    const s84 = new a37(e78);
    "unknown" !== s84.deviceType && (this._inputDevices[e78.index] = s84, this._input.gamepad.devices.add(s84)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e78 = document.hasFocus(), t88 = this._element.contains(document.activeElement), a85 = "document" === this._input.gamepad.enabledFocusMode && !e78 || "view" === this._input.gamepad.enabledFocusMode && !t88;
    this._forEachGamepad((e79) => {
      const t89 = this._inputDevices[e79.index];
      if (!t89)
        return;
      const d63 = this._latestUpdate[e79.index], o77 = t59(t89), r79 = a85 || e45(o77);
      if (d63) {
        if (d63.timestamp === e79.timestamp)
          return;
        if (!d63.active && r79)
          return;
        if (n67(d63.state, o77))
          return;
      }
      this._emitGamepadEvent(e79, o77, !r79);
    });
  }
  _forEachGamepad(e78) {
    const t88 = window.navigator.getGamepads();
    for (let s84 = 0; s84 < t88.length; s84++) {
      const i78 = t88[s84];
      this._validate(i78) && e78(i78);
    }
  }
  _emitGamepadEvent(e78, t88, s84) {
    const i78 = this._latestUpdate[e78.index], n103 = i78 && i78.active;
    if (!n103 && !s84)
      return;
    const a85 = !n103 && s84 ? "start" : n103 && s84 ? "update" : "end";
    this._latestUpdate[e78.index] = { timestamp: e78.timestamp, state: t88, active: s84 }, this._callback && this._callback({ device: this._inputDevices[e78.index], state: t88, action: a85 });
  }
  _validate(e78) {
    if (!e78)
      return false;
    if (!e78.connected)
      return false;
    for (let t88 = 0; t88 < e78.axes.length; t88++)
      if (isNaN(e78.axes[t88]))
        return false;
    return true;
  }
};

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var o54 = has("edge");
var a55 = has("chrome");
var s62 = has("ff");
var r51 = has("safari");
var h36 = "esri-view-surface";
var l45 = { touchNone: `${h36}--touch-none`, touchPan: `${h36}--touch-pan` };
var c50 = class _c {
  constructor(e78, t88) {
    this._input = t88, this._active = {}, this._callback = () => {
    }, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e78, e78.getAttribute("tabindex") || e78.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a54(e78, this._input), this._gamepadSource.onEvent = (e79) => this._callback("gamepad", e79);
  }
  destroy() {
    this._callback = () => {
    }, this.activeEvents = null, this._activePointerCaptures.forEach((e78) => {
      this._releasePointerCaptureSafe(e78);
    }), this._gamepadSource = l(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e78) {
    this._browserTouchPanningEnabled = e78, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e78) {
    this._callback = e78;
  }
  set activeEvents(e78) {
    for (const t88 in this._active)
      if (!e78 || !e78.has(t88)) {
        const e79 = this._active[t88];
        this._element.removeEventListener(u37[t88], e79), delete this._active[t88];
      }
    e78 && e78.forEach((e79) => {
      if (!this._active[e79] && u37[e79]) {
        const t88 = (this._eventHandlers[e79] || this._handleDefault).bind(this, e79);
        this._element.addEventListener(u37[e79], t88), this._active[e79] = t88;
      }
    }), this._gamepadSource.hasEventListeners = (e78 == null ? void 0 : e78.has("gamepad")) ?? false;
  }
  setPointerCapture(e78, t88) {
    t88 ? this._setPointerCatpureSafe(e78.pointerId) : (this._releasePointerCaptureSafe(e78.pointerId), this._activePointerCaptures.delete(e78.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? l45.touchNone : l45.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? l45.touchPan : l45.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(l45.touchNone), this._element.classList.remove(l45.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _setPointerCatpureSafe(e78) {
    try {
      this._element.setPointerCapture(e78), this._activePointerCaptures.add(e78);
    } catch {
    }
  }
  _releasePointerCaptureSafe(e78) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e78))
        return;
      this._element.releasePointerCapture(e78);
    } catch (t88) {
    }
  }
  _updateNormalizedPointerLikeEvent(e78, t88) {
    const n103 = i26(this._element, e78);
    return _c.test.disableSubpixelCoordinates && (n103.x = Math.round(n103.x), n103.y = Math.round(n103.y)), t88.x = n103.x, t88.y = n103.y, t88;
  }
  _handleKey(e78, n103) {
    const i78 = o28(n103);
    i78 && "key-up" === e78 && this._keyDownState.delete(i78);
    const o77 = { native: n103, key: i78, repeat: !!i78 && this._keyDownState.has(i78) };
    i78 && "key-down" === e78 && this._keyDownState.add(o77.key), this._callback(e78, o77);
  }
  _handlePointer(e78, t88) {
    const n103 = this._updateNormalizedPointerLikeEvent(t88, { native: t88, x: 0, y: 0, pointerType: t88.pointerType, button: t88.button, buttons: t88.buttons, eventId: this._eventId++ });
    this._callback(e78, n103);
  }
  _handlePointerPreventDefault(e78, t88) {
    const n103 = this._updateNormalizedPointerLikeEvent(t88, { native: t88, x: 0, y: 0, pointerType: t88.pointerType, button: t88.button, buttons: t88.buttons, eventId: this._eventId++ });
    t88.preventDefault(), this._callback(e78, n103);
  }
  _handleMouseWheel(e78, t88) {
    let n103 = t88.deltaY;
    switch (t88.deltaMode) {
      case 0:
        o54 && (n103 = n103 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n103 *= 30;
        break;
      case 2:
        n103 *= 900;
    }
    o54 ? n103 *= 0.7 : a55 || r51 ? n103 *= 0.6 : s62 && (n103 *= 1.375);
    const i78 = 100, h58 = Math.abs(n103);
    if (h58 > i78) {
      const e79 = 0.02;
      n103 = n103 / h58 * 200 / (1 + Math.exp(-e79 * (h58 - i78)));
    }
    const l75 = this._updateNormalizedPointerLikeEvent(t88, { native: t88, x: 0, y: 0, deltaY: n103 });
    this._callback(e78, l75);
  }
  _handlePointerCaptureLost(e78, t88) {
    this._activePointerCaptures.delete(t88.pointerId), this._handleDefault(e78, t88);
  }
  _handleDefault(e78, t88) {
    const n103 = { native: t88 };
    t88.preventDefault(), this._callback(e78, n103);
  }
  _preventAltKeyDefault(e78) {
    "Alt" === e78.key && e78.preventDefault();
  }
  _preventMultiTouchPanning(e78) {
    e78.touches.length > 1 && e78.preventDefault();
  }
};
c50.test = { disableSubpixelCoordinates: false };
var u37 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e46 = class extends i25 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t88) => {
      t88.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
function e47(t88, e78) {
  return Math.abs(e78.x - t88.x) + Math.abs(e78.y - t88.y);
}
function n68(t88, e78) {
  const n103 = e78.x - t88.x, r79 = e78.y - t88.y;
  return Math.sqrt(n103 * n103 + r79 * r79);
}
function r52(e78, n103) {
  if (n103 ? (n103.radius = 0, n103.center.x = 0, n103.center.y = 0) : n103 = { radius: 0, center: c6() }, 0 === e78.length)
    return n103;
  if (1 === e78.length)
    return n103.center.x = e78[0].x, n103.center.y = e78[0].y, n103;
  if (2 === e78.length) {
    const [t88, r80] = e78, [c76, o78] = [r80.x - t88.x, r80.y - t88.y];
    return n103.radius = Math.sqrt(c76 * c76 + o78 * o78) / 2, n103.center.x = (t88.x + r80.x) / 2, n103.center.y = (t88.y + r80.y) / 2, n103;
  }
  let r79 = 0, c75 = 0;
  for (let t88 = 0; t88 < e78.length; t88++)
    r79 += e78[t88].x, c75 += e78[t88].y;
  r79 /= e78.length, c75 /= e78.length;
  const o77 = e78.map((t88) => t88.x - r79), s84 = e78.map((t88) => t88.y - c75);
  let u58 = 0, i78 = 0, x36 = 0, y41 = 0, a85 = 0, h58 = 0, l75 = 0;
  for (let t88 = 0; t88 < o77.length; t88++) {
    const e79 = o77[t88], n104 = s84[t88], r80 = e79 * e79, c76 = n104 * n104;
    u58 += r80, i78 += c76, x36 += e79 * n104, y41 += r80 * e79, a85 += c76 * n104, h58 += e79 * c76, l75 += n104 * r80;
  }
  const f59 = 0.5 * (y41 + h58), g49 = 0.5 * (a85 + l75), p70 = u58 * i78 - x36 * x36, d63 = (f59 * i78 - g49 * x36) / p70, m55 = (u58 * g49 - x36 * f59) / p70, M26 = c6(d63 + r79, m55 + c75);
  return { radius: Math.sqrt(d63 * d63 + m55 * m55 + (u58 + i78) / e78.length), center: M26 };
}
function c51(t88) {
  const { native: e78 } = t88, { pointerId: n103, button: r79, pointerType: c75 } = e78;
  return "mouse" === c75 ? `${n103}:${r79}` : `${c75}`;
}

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s63 = class extends i25 {
  constructor(t88) {
    super(false), this._navigationTouch = t88, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t88, e78, i78, n103) {
    return { action: t88, pointerType: this._pointerType, button: this._mouseButton, buttons: e78.buttons, timestamp: n103, pointers: o55(this._activePointerMap), pointer: e78, angle: i78.angle, radius: i78.radius, center: i78.center };
  }
  _addPointer(t88) {
    const e78 = t88.native.pointerId, i78 = a56(this._activePointerMap).angle, n103 = { event: t88, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e78, n103);
    const s84 = h37(n103, r53(this._activePointerMap));
    n103.initialAngle = s84, n103.lastAngle = s84, this._updatePointerAngles(i78);
  }
  _updatePointer(t88) {
    if (t88 && null == t88.x && null == t88.y)
      return;
    const e78 = t88.native.pointerId, i78 = this._activePointerMap.get(e78);
    i78 ? i78.event = t88 : this._addPointer(t88);
  }
  _removePointer(t88) {
    const e78 = a56(this._activePointerMap).angle;
    this._activePointerMap.delete(t88), this._updatePointerAngles(e78);
  }
  _updatePointerAngles(t88) {
    const e78 = a56(this._activePointerMap);
    this._activePointerMap.forEach((i78) => {
      i78.initialAngle = h37(i78, e78) - t88, i78.lastAngle = h37(i78, e78) - t88;
    });
  }
  _emitEvent(t88, e78, i78) {
    const n103 = a56(this._activePointerMap);
    this._drag.emit(this._createPayload(t88, e78, n103, i78), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t88) {
    const i78 = t88.data.native.pointerId, n103 = n5(t88.timestamp);
    this._activePointerMap.get(i78) && (1 === this._activePointerMap.size ? (this._updatePointer(t88.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t88.data, n103), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i78)) : (this._removePointer(i78), this._emitEvent("removed", t88.data, n5(t88.timestamp))));
  }
  _handlePointerDrag(t88) {
    const i78 = t88.data, n103 = i78.currentEvent, s84 = n5(t88.timestamp);
    switch (i78.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n103.native.pointerId) ? (this._updatePointer(n103), !this._isCurrentDragSuppressed && this._emitEvent("update", n103, s84)) : (this._addPointer(n103), this._emitEvent("added", n103, s84), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n103), this._pointerType = t88.data.startEvent.pointerType, this._mouseButton = t88.data.startEvent.button, this._startStateModifiers = t88.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n103, s84));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r53(e78) {
  const i78 = [];
  return e78.forEach((e79) => {
    i78.push(c6(e79.event.x, e79.event.y));
  }), r52(i78);
}
function a56(t88) {
  const e78 = r53(t88);
  let i78 = 0;
  return t88.forEach((t89) => {
    let n103 = h37(t89, e78), s84 = n103 - t89.lastAngle;
    for (; s84 > Math.PI; )
      s84 -= 2 * Math.PI;
    for (; s84 < -Math.PI; )
      s84 += 2 * Math.PI;
    n103 = t89.lastAngle + s84, t89.lastAngle = n103;
    const r79 = n103 - t89.initialAngle;
    i78 += r79;
  }), i78 /= t88.size || 1, { angle: i78, radius: e78.radius, center: e78.center };
}
function o55(t88) {
  const e78 = /* @__PURE__ */ new Map();
  return t88.forEach((t89, i78) => e78.set(i78, t89.event)), e78;
}
function h37(t88, e78) {
  const i78 = t88.event, n103 = i78.x - e78.center.x, s84 = i78.y - e78.center.y;
  return Math.atan2(s84, n103);
}
var p46;
!function(t88) {
  t88[t88.Left = 0] = "Left", t88[t88.Middle = 1] = "Middle", t88[t88.Right = 2] = "Right", t88[t88.Back = 3] = "Back", t88[t88.Forward = 4] = "Forward", t88[t88.Undefined = -1] = "Undefined";
}(p46 || (p46 = {}));

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var l46 = { maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
var m33 = class extends i25 {
  constructor(t88 = l46.maximumDoubleClickDelay, i78 = l46.maximumDoubleClickDistance, o77 = l46.maximumDoubleTouchDelay, n103 = l46.maximumDoubleTouchDistance, s84 = t5) {
    super(false), this._maximumDoubleClickDelay = t88, this._maximumDoubleClickDistance = i78, this._maximumDoubleTouchDelay = o77, this._maximumDoubleTouchDistance = n103, this._clock = s84, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e78) => e78.doubleClickTimer = o(e78.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n2(this._pointerState, (e78) => null != e78.doubleClickTimer);
  }
  _clearDoubleClickTimer(e78, t88) {
    const o77 = this._pointerState.get(e78);
    o77 && (o77.doubleClickTimer = o(o77.doubleClickTimer), t88 && this._click.emit(o77.event.data, void 0, o77.event.modifiers), this._pointerState.delete(e78), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e78) {
    const t88 = this._pointerState.get(e78);
    1 === t88.pointerDownCount && this._click.emit(t88.event.data, void 0, t88.event.modifiers), t88.doubleClickTimer = null, this._pointerState.delete(e78), this.refreshHasPendingInputs();
  }
  _getPointerId(e78) {
    const { pointerId: t88, pointerType: i78, button: o77 } = e78.native;
    return "mouse" === i78 ? `${t88}:${o77}` : `${i78}`;
  }
  _handleImmediateClick(e78) {
    const t88 = e78.data, { pointerType: i78 } = t88.native, o77 = this._getPointerId(t88);
    if (!this._pointerState.has(o77))
      return void this._startClick(e78);
    const s84 = this._pointerState.get(o77), { data: l75, modifiers: m55 } = s84.event, c75 = "touch" === i78 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    e47(l75, t88) > c75 ? (this._clearDoubleClickTimer(o77, true), this._startClick(e78)) : (this._clearDoubleClickTimer(o77, false), 2 === s84.pointerDownCount && this._doubleClick.emit(l75, void 0, m55));
  }
  _handlePointerDown(e78) {
    const t88 = c51(e78.data), i78 = this._pointerState.get(t88);
    i78 && (i78.pointerDownCount += 1);
  }
  _startClick(e78) {
    const { data: t88 } = e78, { native: { pointerType: i78 } } = t88, o77 = c51(t88), n103 = "touch" === i78 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, l75 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o77), n103), m55 = 1;
    this._pointerState.set(o77, { event: e78, doubleClickTimer: l75, pointerDownCount: m55 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m34 = class extends i25 {
  constructor(e78 = l46.maximumDoubleClickDelay, o77 = l46.maximumDoubleClickDistance, a85 = l46.maximumDoubleTouchDelay, m55 = l46.maximumDoubleTouchDistance, n103 = t5) {
    super(false), this._maximumDoubleClickDelay = e78, this._maximumDoubleClickDistance = o77, this._maximumDoubleTouchDelay = a85, this._maximumDoubleTouchDistance = m55, this._clock = n103, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t88) => {
      t88.immediateDoubleClick && t88.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t88) {
    const e78 = t88.data, i78 = c51(e78);
    if (!this._pointerState.has(i78)) {
      const t89 = { downButton: e78.native.button, immediateDoubleClick: null };
      this._pointerState.set(i78, t89), this.startCapturingPointer(e78.native);
    }
  }
  _handlePointerUp(t88) {
    const e78 = t88.data, i78 = c51(e78), m55 = this._pointerState.get(i78);
    if (m55 && m55.downButton === e78.native.button) {
      const i79 = m55.immediateDoubleClick;
      if (i79) {
        i79.timeoutHandle.remove();
        const o77 = "touch" === t88.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
        e47(i79, t88.data) > o77 ? this._startImmediateDoubleClick(t88, m55) : (this._immediateDoubleClick.emit(t88.data, void 0, i79.modifiers), this._removeState(e78));
      } else
        this._startImmediateDoubleClick(t88, m55);
    }
  }
  _startImmediateDoubleClick(t88, e78) {
    const i78 = "touch" === t88.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e78.immediateDoubleClick = { x: t88.data.x, y: t88.data.y, modifiers: t88.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t88.data), i78) };
  }
  _removeState(t88) {
    const e78 = c51(t88);
    this._pointerState.delete(e78), this.stopCapturingPointer(t88.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var o56 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500 };
var r54 = class extends i25 {
  constructor(e78 = o56.maximumClickDelay, i78 = o56.movementUntilMouseDrag, n103 = o56.movementUntilPenDrag, r79 = o56.movementUntilTouchDrag, s84 = o56.holdDelay, a85 = t5) {
    super(false), this._maximumClickDelay = e78, this._movementUntilMouseDrag = i78, this._movementUntilPenDrag = n103, this._movementUntilTouchDrag = r79, this._holdDelay = s84, this._clock = a85, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t88) => {
      this._handlePointerLoss(t88, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t88) => {
      this._handlePointerLoss(t88, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t88) => {
      this._handlePointerLoss(t88, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t88) => {
      t88.holdTimeout = o(t88.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t88) {
    const e78 = t88.data, i78 = e78.native.pointerId;
    let n103 = null;
    0 === this._pointerState.size && (n103 = this._clock.setTimeout(() => {
      const e79 = this._pointerState.get(i78);
      if (e79) {
        if (!e79.isDragging) {
          const i79 = e79.previousEvent;
          this._pointerHold.emit(i79, void 0, t88.modifiers), e79.holdEmitted = true;
        }
        e79.holdTimeout = null;
      }
    }, this._holdDelay));
    const o77 = { startEvent: e78, previousEvent: e78, startTimestamp: t88.timestamp, isDragging: false, downButton: e78.native.button, holdTimeout: n103, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i78, o77), this.startCapturingPointer(e78.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t88);
  }
  _createPointerDragData(t88, e78, i78) {
    return { action: t88, startEvent: e78.startEvent, previousEvent: e78.previousEvent, currentEvent: i78 };
  }
  _handlePointerMove(t88) {
    const e78 = t88.data, i78 = e78.native.pointerId, o77 = this._pointerState.get(i78);
    if (o77) {
      if (o77.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("update", o77, e78), void 0, o77.modifiers);
      else {
        n68(e78, o77.startEvent) > this._getDragThreshold(e78.native.pointerType) && this._startDragging(t88);
      }
      o77.previousEvent = e78;
    }
  }
  _getDragThreshold(t88) {
    switch (t88) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t88) {
    const e78 = t88.data, i78 = e78.native.pointerId;
    this._pointerState.forEach((n103) => {
      null != n103.holdTimeout && (n103.holdTimeout.remove(), n103.holdTimeout = null), n103.isDragging || (n103.modifiers = t88.modifiers, n103.isDragging = true, i78 === n103.startEvent.native.pointerId ? this._pointerDrag.emit(this._createPointerDragData("start", n103, e78)) : this._pointerDrag.emit(this._createPointerDragData("start", n103, n103.previousEvent), t88.timestamp));
    });
  }
  _handlePointerLoss(t88, e78) {
    const i78 = t88.data, n103 = i78.native.pointerId, o77 = this._pointerState.get(n103);
    if (o77) {
      if (null != o77.holdTimeout && (o77.holdTimeout.remove(), o77.holdTimeout = null), o77.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("end", o77, "pointer-up" === e78 ? i78 : o77.previousEvent), void 0, o77.modifiers);
      else if ("pointer-up" === e78 && o77.downButton === i78.native.button) {
        t88.timestamp - o77.startTimestamp <= this._maximumClickDelay && !o77.holdEmitted && this._immediateClick.emit(i78);
      }
      this._pointerState.delete(n103), this.stopCapturingPointer(i78.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t60 = class {
  constructor(t88) {
    this._callbacks = t88, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t88) {
    const s84 = t88.data, i78 = s84.pointers.size;
    switch (s84.action) {
      case "start":
        this._currentCount = i78, this._emitStart(t88);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i78, this._emitStart(t88);
        break;
      case "update":
        this._emitUpdate(t88);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i78, this._emitStart(t88);
        break;
      case "end":
        this._emitEnd(t88), this._currentCount = 0;
    }
    this._previousEvent = t88;
  }
  _emitStart(t88) {
    var _a, _b;
    this._startEvent = t88, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t88)) && this._callbacks.start(this._currentCount, t88, this._startEvent);
  }
  _emitUpdate(t88) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t88)) && this._callbacks.update(this._currentCount, t88, this._startEvent);
  }
  _emitEnd(t88) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t88)) && this._callbacks.end(this._currentCount, t88, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/views/input/recognizers/VerticalTwoFingerDrag.js
var a57 = class extends i25 {
  constructor(e78 = 20, a85 = 40) {
    super(false), this._threshold = e78, this._maxDelta = a85, this._state = "ready", this._emittedArtificalEnd2 = false, this._vertical = this.registerOutgoing("vertical-two-finger-drag"), this._artificalDrag = this.registerOutgoing("drag"), this._dragEventSeparator = new t60({ start: (t88, e79) => this._observeStart(t88, e79), update: (t88, e79, a86) => this._observeUpdate(t88, e79, a86), end: (t88, e79) => this._observeEnd(e79) }), this.registerIncoming("drag", (t88) => this._dragEventSeparator.handle(t88));
  }
  get failed() {
    return "failed" === this._state;
  }
  _observeStart(t88, e78) {
    1 === t88 && this._emittedArtificalEnd2 && (this._emittedArtificalEnd2 = false, this._artificalDrag.emit({ action: "start", button: e78.data.button, buttons: e78.data.buttons, pointerType: e78.data.pointerType, timestamp: e78.data.timestamp, pointers: e78.data.pointers, pointer: e78.data.pointer, angle: e78.data.angle, radius: e78.data.radius, center: e78.data.center }), e78.stopPropagation()), this._state = 2 === t88 ? "ready" : "failed";
  }
  _observeUpdate(t88, e78, a85) {
    if ("failed" !== this._state && 2 === t88)
      return "active" === this._state ? (this._vertical.emit({ delta: e78.data.center.y - this._thresholdReachedCenter.y, action: "update" }), void e78.stopPropagation()) : void (this._checkMovementWithinLimits(e78.data, a85.data) ? this._checkVerticalThresholdReached(e78.data, a85.data) && (this._state = "active", this._emittedArtificalEnd2 = true, this._thresholdReachedCenter = e78.data.center, this._artificalDrag.emit({ action: "end", button: e78.data.button, buttons: e78.data.buttons, pointerType: e78.data.pointerType, timestamp: e78.data.timestamp, pointers: e78.data.pointers, pointer: e78.data.pointer, angle: e78.data.angle, radius: e78.data.radius, center: e78.data.center }), this._vertical.emit({ delta: e78.data.center.y - this._thresholdReachedCenter.y, action: "begin" }), e78.stopPropagation()) : this._state = "failed");
  }
  _observeEnd(t88) {
    "active" === this._state && (this._vertical.emit({ delta: t88.data.center.y - this._thresholdReachedCenter.y, action: "end" }), this._state = "ready", t88.stopPropagation());
  }
  _checkMovementWithinLimits(t88, e78) {
    let a85 = -1 / 0, i78 = 1 / 0, r79 = -1 / 0, s84 = 1 / 0;
    for (const { x: m55, y: g49 } of e78.pointers.values())
      a85 = Math.max(a85, m55), i78 = Math.min(i78, m55), r79 = Math.max(r79, g49), s84 = Math.min(s84, g49);
    let n103 = -1 / 0, h58 = 1 / 0, d63 = -1 / 0, o77 = 1 / 0;
    for (const { x: m55, y: g49 } of t88.pointers.values())
      n103 = Math.max(n103, m55), h58 = Math.min(h58, m55), d63 = Math.max(d63, g49), o77 = Math.min(o77, g49);
    const c75 = a85 - i78, l75 = r79 - s84, p70 = n103 - h58, _42 = d63 - o77;
    return Math.abs(t88.center.x - e78.center.x) < this._threshold && Math.abs(p70 - c75) <= this._maxDelta && Math.abs(_42 - l75) <= this._maxDelta;
  }
  _checkVerticalThresholdReached(t88, e78) {
    let a85 = Math.abs(t88.center.y - e78.center.y);
    return t88.pointers.forEach((t89, i78) => {
      const r79 = e78.pointers.get(i78);
      a85 = Math.min(a85, Math.abs(t89.y - r79.y));
    }), a85 >= this._threshold;
  }
};

// node_modules/@arcgis/core/views/3d/input/SceneInputManager.js
var z18 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t3();
  }
  destroy() {
    this._handles = l(this._handles), this.disconnect();
  }
  get primaryDragAction() {
    return this._get("primaryDragAction");
  }
  set primaryDragAction(t88) {
    "pan" !== t88 && "rotate" !== t88 || t88 === this._get("primaryDragAction") || (this._set("primaryDragAction", t88), this._updateMode());
  }
  get mode() {
    return this._get("mode");
  }
  set mode(t88) {
    "default" !== t88 && "pro" !== t88 || t88 === this._get("mode") || (this._set("mode", t88), this._updateMode());
  }
  get updating() {
    var _a;
    return !!((_a = this._inputManager) == null ? void 0 : _a.updating);
  }
  get latestPointerType() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerType;
  }
  get latestPointerLocation() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerLocation;
  }
  get multiTouchActive() {
    var _a;
    return ((_a = this._inputManager) == null ? void 0 : _a.multiTouchActive) ?? false;
  }
  disconnect() {
    this.view.viewEvents.disconnect(), this._inputManager = l(this._inputManager);
  }
  connect() {
    const t88 = this.view;
    this._source = new c50(this.view.surface, t88.input);
    const e78 = [new m34(), new r54(), new m33(), new s63(this.view.navigation), new a57()], r79 = new d14({ eventSource: this._source, recognizers: e78 });
    this._inputManager = r79, r79.installHandlers("prevent-context-menu", [new e46()], _9.INTERNAL), this._modeDragPan = new i61(t88, "primary"), this._modeDragRotate = new a51(t88, "secondary", b16.CENTER), this._modeDragZoom = new s57(t88, "tertiary");
    const o77 = { lookAround: "b", pan: { left: "ArrowLeft", right: "ArrowRight", forward: "ArrowUp", backward: "ArrowDown", up: "u", down: "j", headingLeft: "a", headingRight: "d", tiltUp: "w", tiltDown: "s", zoomIn: "+", zoomOut: "-" }, resetHeading: "n", resetTilt: "p" };
    r79.installHandlers("navigation", [new e42(t88), new s56(t88), new l42(t88), new o52(t88, o77.pan), new i59(t88), new e44(t88, o77.resetTilt), new t58(t88, o77.resetHeading), new a51(t88, "primary", b16.EYE, [o77.lookAround]), new a51(t88, "secondary", b16.CENTER, [o77.lookAround]), new i61(t88, "tertiary", [o77.lookAround]), this._modeDragRotate, this._modeDragZoom, this._modeDragPan, new o53(t88)], _9.INTERNAL), this.view.viewEvents.connect(r79), this._updateMode(), this._handles.add(l6(() => {
      var _a;
      return (_a = this.view.navigation) == null ? void 0 : _a.browserTouchPanEnabled;
    }, (t89) => {
      this._source.browserTouchPanningEnabled = !t89;
    }, h3));
  }
  _updateMode() {
    var _a;
    const t88 = this.mode, e78 = this.primaryDragAction, r79 = (_a = E28.get(t88)) == null ? void 0 : _a.get(e78);
    r79 && (this._modeDragPan && (this._modeDragPan.pointerAction = r79.pan), this._modeDragRotate && (this._modeDragRotate.pointerAction = r79.rotate), this._modeDragZoom && (this._modeDragZoom.pointerAction = r79.zoom));
  }
  get test() {
    return { inputManager: this._inputManager, modeDragPan: this._modeDragPan, modeDragRotate: this._modeDragRotate, modeDragZoom: this._modeDragZoom };
  }
};
e([y()], z18.prototype, "view", void 0), e([y({ value: "pan" })], z18.prototype, "primaryDragAction", null), e([y({ value: "default" })], z18.prototype, "mode", null), e([y({ readOnly: true })], z18.prototype, "updating", null), e([y()], z18.prototype, "latestPointerType", null), e([y()], z18.prototype, "latestPointerLocation", null), e([y()], z18.prototype, "multiTouchActive", null), e([y()], z18.prototype, "_inputManager", void 0), z18 = e([a4("esri.views.3d.input.SceneInputManager")], z18);
var E28 = /* @__PURE__ */ new Map();
var k19 = /* @__PURE__ */ new Map();
var C17 = /* @__PURE__ */ new Map();
k19.set("pan", { pan: "primary", rotate: "secondary", zoom: "tertiary" }), k19.set("rotate", { pan: "secondary", rotate: "primary", zoom: "tertiary" }), C17.set("pan", { pan: "primary", rotate: "tertiary", zoom: "secondary" }), C17.set("rotate", { pan: "tertiary", rotate: "primary", zoom: "secondary" }), E28.set("default", k19), E28.set("pro", C17);
var N13 = z18;

// node_modules/@arcgis/core/views/3d/layers/graphics/deconflictorDebug.js
var e48;
var n69;
var i62 = false;
var l47 = false;
var o57 = false;
var s64 = false;
var a58 = null;
function c52(t88, e78) {
  if (!l47 || !n69)
    return;
  u38();
  const i78 = n69;
  let o77 = 0;
  for (let n103 = 0; n103 < t88.accBinsNumX; n103++)
    for (let e79 = 0; e79 < t88.accBinsNumY; e79++) {
      const l75 = t88.accBins[n103][t88.accBinsNumY - 1 - e79];
      o77 += l75.length;
      const s84 = n103 * t88.accBinsSizeX, a85 = (n103 + 1) * t88.accBinsSizeX, c75 = e79 * t88.accBinsSizeY, r79 = (e79 + 1) * t88.accBinsSizeY;
      i78.fillText(l75.length.toFixed(), s84 + 5, c75 + 15), h38(s84, a85, c75, r79, "blue");
    }
  i78.fillText("total totalShownLabels: " + o77, 70, 40), i78.fillText("total visible labels: " + e78.size, 70, 50), i78.fillText("total numTests: " + t88.accNumTests, 70, 30);
}
function r55(n103) {
  o57 = t27.DECONFLICTOR_SHOW_VISIBLE, s64 = t27.DECONFLICTOR_SHOW_INVISIBLE, i62 = o57 || s64, l47 = t27.DECONFLICTOR_SHOW_GRID, a58 = null, i62 || l47 ? a58 = () => p47(n103) : e48 && (e48.parentElement.removeChild(e48), e48 = null);
}
function u38() {
  a58 && (a58(), a58 = null);
}
function p47(t88) {
  null == e48 && (e48 = document.createElement("canvas"), e48.setAttribute("id", "debugCanvas2d"), t88.surface.parentElement.style.position = "relative", t88.surface.parentElement.appendChild(e48));
  const { state: i78 } = t88, { camera: l75, pixelRatio: o77 } = i78, { width: s84, height: a85 } = l75, c75 = s84 * o77, r79 = a85 * o77;
  e48.setAttribute("width", `${c75}px`), e48.setAttribute("height", `${r79}px`), e48.setAttribute("style", `position:absolute;left:0px;top:0px;display:block;pointer-events:none;width:${s84}px;height:${a85}px`), n69 = e48.getContext("2d"), n69.clearRect(0, 0, s84, a85), n69.font = "12px Arial";
}
function h38(t88, i78, l75, o77, s84) {
  u38();
  const a85 = e48.height, c75 = n69;
  c75.beginPath(), c75.lineWidth = 1, c75.strokeStyle = s84, c75.moveTo(t88, a85 - l75), c75.lineTo(i78, a85 - l75), c75.stroke(), c75.lineTo(i78, a85 - o77), c75.stroke(), c75.lineTo(i78, a85 - l75), c75.stroke(), c75.lineTo(t88, a85 - l75), c75.stroke(), c75.lineTo(t88, a85 - l75), c75.stroke(), c75.closePath();
}
function f38(t88, e78) {
  i62 && (e78 && o57 || !e78 && s64) && h38(t88.aabr[0], t88.aabr[2], t88.aabr[1], t88.aabr[3], e78 ? "green" : "red");
}

// node_modules/@arcgis/core/views/3d/layers/graphics/Deconflictor.js
var U15 = n7();
var W13 = n19();
var H18 = n19();
var Z8 = n7();
var q16 = e17();
var J12 = _5();
var K10 = d10();
var Q11 = n7();
var $8 = i4();
var ii = class {
  constructor() {
    this.aabr = i4(), this.distance = 0, this.culled = false, this.visible = false;
  }
};
var ti = class {
  constructor(i78, t88) {
    this.graphics3DGraphic = i78, this.slicePlaneEnabled = t88, this.info = {};
  }
};
var si;
!function(i78) {
  i78[i78.Idle = 0] = "Idle", i78[i78.Process = 1] = "Process", i78[i78.Sort = 2] = "Sort", i78[i78.Deconflict = 3] = "Deconflict", i78[i78.NumStates = 4] = "NumStates";
}(si || (si = {}));
var ei = class {
  constructor() {
    this.camera = new $2(), this.slicePlane = W6(), this.slicePlaneEnabled = false;
  }
  copyFrom(i78) {
    this.camera.copyFrom(i78.camera), Z2(i78.slicePlane, this.slicePlane), this.slicePlaneEnabled = i78.slicePlaneEnabled;
  }
};
var ri = class extends m {
  get dirty() {
    return this._dirty;
  }
  get state() {
    return this._state;
  }
  constructor(i78) {
    super(i78), this._dirty = false, this._runningViewState = new ei(), this._state = si.Idle, this._active = /* @__PURE__ */ new Map(), this._visible = /* @__PURE__ */ new Map(), this._iterators = new li(), this._accBinsNumX = 15, this._accBinsNumY = 20, this._accBinsSizeX = 0, this._accBinsSizeY = 0, this._accBins = null, this.accNumTests = 0;
  }
  destroy() {
    this._active.clear(), this._visible.clear(), this._iterators = null;
  }
  setDirty() {
    !this._dirty && this._active.size > 0 && (this._dirty = true, this.notifyChange("updating"));
  }
  get updating() {
    return this._state !== si.Idle || this._dirty;
  }
  get updatingProgress() {
    if (!this.updating)
      return 1;
    const i78 = this._state / si.NumStates;
    return this._dirty ? 0.5 * i78 : i78;
  }
  get running() {
    return this.view.ready && null != this.view.state && this.updating;
  }
  runTask(i78) {
    switch (this._state) {
      case si.Idle:
        this._startUpdate(), i78.madeProgress();
      case si.Process:
        if (this._state = si.Process, !this._processActiveGraphics(i78))
          return;
      case si.Sort:
        if (this._state = si.Sort, !this._sortVisibleGraphics(i78))
          return;
      case si.Deconflict:
        if (this._state = si.Deconflict, !this._deconflictVisibleGraphics(i78))
          return;
      default:
        c52(this, this._visible), this._state = si.Idle, this.notifyChange("updating");
    }
  }
  modifyGraphics(i78, t88) {
    t88 ? i78.forEach((i79) => this.addToActiveGraphics(i79)) : i78.forEach((i79) => this.removeFromActiveGraphics(i79)), this.setDirty();
  }
  layerSupportsDeconfliction(i78) {
    if (null == i78 || "object3d" !== i78.type)
      return false;
    const t88 = i78.stageObject;
    if (1 !== (t88 ? t88.geometries.length : 0))
      return false;
    const s84 = t88 == null ? void 0 : t88.geometries[0], e78 = s84 == null ? void 0 : s84.material;
    return e78 instanceof K3;
  }
  _startUpdate() {
    r55(this.view), this._dirty = false, this._runningViewState.copyFrom(this.viewState);
    const { fullWidth: i78, fullHeight: t88 } = this._runningViewState.camera;
    this._initBins(i78, t88), this._resetIterators();
  }
  addToActiveGraphics(i78) {
    i78.info[this.visibilityGroup] = new ii(), this._active.set(i78.graphics3DGraphic.graphic.uid, i78), this.setDirty();
  }
  removeFromActiveGraphics(i78) {
    this._visible.delete(i78.graphics3DGraphic.graphic.uid), oi(i78, this.visibilityGroup), delete i78.info[this.visibilityGroup], this._active.delete(i78.graphics3DGraphic.graphic.uid), this.setDirty();
  }
  _processActiveGraphics(i78) {
    const t88 = this._ensureActiveGraphicsIterator(), s84 = e12(q16, this._runningViewState.camera.projectionMatrix), e78 = "global" === this.view.viewingMode && 1 === this.view.map.ground.opacity && this._runningViewState.camera.relativeElevation > 0 ? J12 : null;
    let r79 = 0;
    for (null != e78 && (O(e78, f4, this._runningViewState.camera.viewMatrix), e78[3] = A2(this.view.spatialReference).radius, r79 = F7(e78, f4)); !i78.done; ) {
      i78.madeProgress();
      const o77 = t88.next();
      if (true === o77.done)
        return this._resetActiveGraphicsIterator(), true;
      const a85 = o77.value, c75 = a85 && a85.info[this.visibilityGroup];
      c75 && (this._collectGraphics3DGraphics(a85, s84, e78, r79), c75.culled ? this._visible.delete(a85.graphics3DGraphic.graphic.uid) : this._visible.set(a85.graphics3DGraphic.graphic.uid, a85));
    }
    return false;
  }
  _sortVisibleGraphics(i78) {
    const t88 = this._ensureSortGraphicsIterator();
    for (; !i78.done; ) {
      const s84 = t88.next();
      if (i78.madeProgress(), true === s84.done)
        return this._resetSortGraphicsIterator(), true;
    }
    return false;
  }
  _deconflictVisibleGraphics(i78) {
    const t88 = this._ensureVisibleGraphicsIterator(), s84 = this.visibilityGroup === A14.LABEL;
    for (; !i78.done; ) {
      i78.madeProgress();
      const e78 = t88.next();
      if (true === e78.done)
        return this._resetVisibleGraphicsIterator(), true;
      const r79 = e78.value, o77 = r79.info[this.visibilityGroup];
      if (!o77 || o77.culled)
        continue;
      const a85 = r79.graphics3DGraphic, c75 = !s84 || a85.isVisible();
      o77.visible = c75 && !this._isConflicted(r79), o77.visible && this._addToBins(r79), this._setGraphicVisibility(r79, o77.visible), f38(o77, o77.visible);
    }
    return false;
  }
  _resetIterators() {
    this._iterators.active = null, this._iterators.visible = null, this._iterators.sort = null;
  }
  _ensureActiveGraphicsIterator() {
    return this._iterators.active || (this._iterators.active = ai(this._active)), this._iterators.active;
  }
  _resetActiveGraphicsIterator() {
    this._iterators.active = null;
  }
  _ensureVisibleGraphicsIterator() {
    return this._iterators.visible || (this._iterators.visible = ai(this._visible)), this._iterators.visible;
  }
  _resetVisibleGraphicsIterator() {
    this._iterators.visible = null;
  }
  _ensureSortGraphicsIterator() {
    return this._iterators.sort || (this._iterators.sort = ci(this._visible, this._iterators.sortArray, this.visibilityGroup)), this._iterators.sort;
  }
  _resetSortGraphicsIterator() {
    this._iterators.sort = null;
  }
  _collectGraphics3DGraphics(i78, t88, s84, e78) {
    const r79 = i78.graphics3DGraphic;
    if (r79.destroyed)
      return;
    const o77 = i78.info[this.visibilityGroup];
    if (!r79.isVisible(A14.GRAPHIC, L6.DECONFLICTION))
      return void (o77.culled = true);
    const a85 = this.getGraphicsLayers(r79);
    C2(o77.aabr);
    let c75 = null;
    for (const n103 of a85) {
      if (!this.layerSupportsDeconfliction(n103))
        continue;
      const r80 = n103.stageObject.geometries[0].material;
      if (null == c75 && (c75 = ui, this._getProjectionInfo(n103, t88, c75), c75.isOutsideScreen || this._isCulledBySlice(i78, U15) || null != s84 && this._isCulledByHorizon(c75, s84, e78)))
        return void (o77.culled = true);
      this._expandBoundingRect(o77, n103, r80, c75);
    }
    null == c75 ? o77.culled = true : (o77.distance = c75.distance, o77.culled = false);
  }
  _getProjectionInfo(i78, t88, s84) {
    const e78 = this._runningViewState.camera, r79 = i78.stageObject, o77 = r79.geometries[0], a85 = o77.material, c75 = z6(r79.boundingVolumeWorldSpace.bounds);
    O(U15, c75, e78.viewMatrix);
    const n103 = o77.vertexAttributes, u58 = n103.get(O4.NORMAL).data, d63 = n103.get(O4.AUXPOS1).data;
    a85.applyShaderOffsetsView(U15, u58, r79.transformation, d63, e78, s84.scaleInfo, U15), r8(W13, U15[0], U15[1], U15[2], 1), w2(H18, W13, e78.projectionMatrix), g3(s84.positionNDC, H18, 1 / H18[3]), a85.applyShaderOffsetsNDC(s84.positionNDC, d63, e78, s84.positionNDC, Z8), s84.distanceWithoutPolygonOffset = e78.depthNDCToWorld(Z8[2]), s84.distance = Z8[2] === s84.positionNDC[2] ? s84.distanceWithoutPolygonOffset : e78.depthNDCToWorld(s84.positionNDC[2]), r8(H18, s84.positionNDC[0], s84.positionNDC[1], s84.positionNDC[2], 1), w2(W13, H18, t88), l4(W13, W13, 1 / W13[3]), o4(s84.positionView, U15[0], U15[1], U15[2]);
  }
  _isCulledByHorizon(i78, t88, s84) {
    return r7(K10.direction, i78.positionView), o4(K10.origin, 0, 0, 0), !!Z(t88, K10, Q11) && i78.distanceWithoutPolygonOffset > s84;
  }
  _isCulledBySlice(i78, t88) {
    return i78.slicePlaneEnabled && this._runningViewState.slicePlaneEnabled && us(this._runningViewState.slicePlane, t88);
  }
  _expandBoundingRect(i78, t88, e78, { positionNDC: r79, scaleInfo: o77 }) {
    const a85 = this._runningViewState.camera, c75 = t88.getScreenSize(hi);
    f13(c75, o77.factor, c75), c75[0] *= a85.pixelRatio, c75[1] *= a85.pixelRatio;
    const n103 = v4(e78.calculateRelativeScreenBounds(c75, o77.factorAlignment.scale, $8), s12(0, a85.fullWidth, 0.5 + 0.5 * r79[0]), s12(0, a85.fullHeight, 0.5 + 0.5 * r79[1])), l75 = this.iconMarginFactor;
    if (0 !== l75) {
      const i79 = l75 * Math.min(M3(n103), s13(n103));
      n103[0] -= i79, n103[1] -= i79, n103[2] += i79, n103[3] += i79;
    }
    m3(i78.aabr, n103, i78.aabr);
  }
  _isConflicted(i78) {
    const t88 = i78.graphics3DGraphic.graphic.uid, s84 = i78.info[this.visibilityGroup];
    for (let e78 = Math.floor(s84.aabr[0] / this._accBinsSizeX); e78 <= Math.floor(s84.aabr[2] / this._accBinsSizeX); e78++)
      if (!(e78 < 0 || e78 >= this._accBinsNumX))
        for (let i79 = Math.floor(s84.aabr[1] / this._accBinsSizeY); i79 <= Math.floor(s84.aabr[3] / this._accBinsSizeY); i79++) {
          if (i79 < 0 || i79 >= this._accBinsNumY)
            continue;
          const r79 = this._accBins[e78][i79];
          for (let i80 = 0; i80 < r79.length; i80++) {
            const e79 = r79.data[i80], o77 = e79.info[this.visibilityGroup];
            if (o77 && o77.visible && e79.graphics3DGraphic.graphic.uid !== t88 && (this.accNumTests++, q(o77.aabr, s84.aabr)))
              return true;
          }
        }
    return false;
  }
  _initBins(i78, t88) {
    if (null == this._accBins) {
      this._accBins = [];
      for (let i79 = 0; i79 < this._accBinsNumX; i79++) {
        this._accBins.push([]);
        const i80 = this._accBins[this._accBins.length - 1];
        for (let t89 = 0; t89 < this._accBinsNumY; t89++)
          i80.push(new l2());
      }
    } else
      for (let s84 = 0; s84 < this._accBinsNumX; s84++)
        for (let i79 = 0; i79 < this._accBinsNumY; i79++)
          this._accBins[s84][i79].clear();
    this._accBinsSizeX = i78 / this._accBinsNumX, this._accBinsSizeY = t88 / this._accBinsNumY, this.accNumTests = 0;
  }
  _addToBins(i78) {
    const t88 = i78.info[this.visibilityGroup], s84 = Math.floor(t88.aabr[0] / this._accBinsSizeX), e78 = Math.floor(t88.aabr[2] / this._accBinsSizeX), r79 = Math.floor(t88.aabr[1] / this._accBinsSizeY), o77 = Math.floor(t88.aabr[3] / this._accBinsSizeY);
    for (let a85 = s84; a85 <= e78; a85++)
      if (!(a85 < 0 || a85 >= this._accBinsNumX))
        for (let t89 = r79; t89 <= o77; t89++)
          t89 < 0 || t89 >= this._accBinsNumY || this._accBins[a85][t89].push(i78);
  }
  _setGraphicVisibility(i78, t88) {
    const s84 = i78.graphics3DGraphic;
    s84.destroyed || (s84.setVisibilityFlag(this.visibilityGroup, L6.DECONFLICTION, t88), this.visibilityGroup === A14.LABEL && this.view.labeler.setLabelGraphicVisibility(s84, t88));
  }
};
function oi(i78, t88) {
  const s84 = i78.graphics3DGraphic;
  s84.destroyed || s84.setVisibilityFlag(t88, L6.DECONFLICTION, true);
}
function* ai(i78) {
  if (Map.prototype.entries) {
    const t88 = i78.entries();
    for (let i79 = t88.next(); !i79.done; i79 = t88.next())
      yield i79.value[1];
  } else
    yield* i78.values();
}
function* ci(i78, t88, s84) {
  t88.clear(), i78.forEach((i79, e79) => {
    const r79 = t88.pushNew();
    r79.id = e79, r79.visible = i79.graphics3DGraphic.getVisibilityFlag(s84, L6.DECONFLICTION);
    const o77 = i79.info && i79.info[s84];
    r79.prio = i79.graphics3DGraphic.deconflictionPriority, r79.distance = o77 ? o77.distance : Number.MAX_VALUE;
  }), yield;
  const e78 = t88.iterableSort((i79, t89) => i79.prio !== t89.prio ? t89.prio - i79.prio : i79.distance !== t89.distance ? i79.distance - t89.distance : i79.visible !== t89.visible ? i79.visible ? -1 : 1 : i79.id - t89.id);
  for (let r79 = e78.next(); !r79.done; r79 = e78.next())
    yield;
  t88.forAll((t89) => {
    const s85 = i78.get(t89.id);
    s85 && (i78.delete(t89.id), i78.set(t89.id, s85));
  }), t88.clear();
}
e([y({ constructOnly: true })], ri.prototype, "view", void 0), e([y({ type: Boolean, readOnly: true })], ri.prototype, "updating", null), ri = e([a4("esri.views.3d.layers.graphics.Deconflictor")], ri);
var ni = class {
  constructor() {
    this.id = 0, this.visible = false, this.prio = 0, this.distance = 0;
  }
};
var li = class {
  constructor(i78 = null, t88 = null, s84 = null) {
    this.active = i78, this.visible = t88, this.sort = s84, this.sortArray = new l2({ allocator: (i79) => i79 || new ni() });
  }
};
var hi = n20();
var pi = class {
  constructor() {
    this.positionView = n7(), this.positionNDC = n7(), this.distance = 0, this.distanceWithoutPolygonOffset = 0, this.scaleInfo = new t34();
  }
  get isOutsideScreen() {
    const i78 = this.positionNDC;
    return i78[0] < -1 || i78[1] < -1 || i78[2] < -1 || i78[0] >= 1 || i78[1] >= 1;
  }
};
var ui = new pi();

// node_modules/@arcgis/core/views/3d/layers/graphics/LabelDeconflictor.js
var n70 = 2e3;
var p48 = class extends ri {
  constructor(r79) {
    super(r79), this.visibilityGroup = A14.LABEL, this.iconMarginFactor = 0, this._lastDeconfliction = 0;
  }
  get viewState() {
    return this.parent.viewState;
  }
  runTask(r79) {
    if (this.parent.running)
      return g5.YIELD;
    const t88 = performance.now();
    if (r79.state !== I2.IDLE && t88 - this._lastDeconfliction < n70)
      return g5.YIELD;
    super.runTask(r79), this.state === si.Idle && (this._lastDeconfliction = t88);
  }
  enabledChanged(r79, t88) {
    this.modifyGraphics(t88, r79.labelsEnabled);
  }
  getGraphicsLayers(r79) {
    return r79.labelLayers;
  }
};
e([y({ constructOnly: true })], p48.prototype, "parent", void 0), p48 = e([a4("esri.views.3d.layers.graphics.LabelDeconflictor")], p48);

// node_modules/@arcgis/core/views/3d/layers/graphics/GraphicsDeconflictor.js
var _26 = class extends ri {
  constructor() {
    super(...arguments), this._handles = new t3(), this._contexts = /* @__PURE__ */ new Map(), this._viewState = new ei(), this.visibilityGroup = A14.GRAPHIC, this._iconMarginFactor = -0.1;
  }
  get labels() {
    return this._labels;
  }
  get viewState() {
    return this._viewState;
  }
  initialize() {
    this._handles.add([l6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.state) == null ? void 0 : _b.camera;
    }, () => {
      this._updateViewState(), this.setDirty();
    }), l6(() => {
      var _a, _b, _c;
      return (_c = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground) == null ? void 0 : _c.opacity;
    }, (e78, t88) => {
      1 !== e78 && 1 !== t88 || this.setDirty();
    }), l6(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.slicePlane;
    }, () => {
      this._updateSlicePlane(), this._slicePlaneChanged();
    }, h3)]), this._frameTask = this.view.resourceController.scheduler.registerTask(I3.GRAPHICS_DECONFLICTOR, this), this._labels = new p48({ view: this.view, parent: this });
  }
  destroy() {
    this._labels.destroy(), this._labels = null, this._handles.destroy(), this._handles = null, this._frameTask && (this._frameTask.remove(), this._frameTask = null);
  }
  get iconMarginFactor() {
    return this._iconMarginFactor;
  }
  set iconMarginFactor(e78) {
    this._iconMarginFactor = e78, this.setDirty();
  }
  setDirty() {
    this._contexts.size > 0 && (super.setDirty(), this._labels.setDirty());
  }
  runTask(e78) {
    super.runTask(e78), this.running || this._labels.setDirty();
  }
  setInitialIconVisibilityFlag(e78, t88) {
    const i78 = !(this._graphicSupportsDeconfliction(t88) && m35(e78));
    t88.setVisibilityFlag(A14.GRAPHIC, L6.DECONFLICTION, i78);
  }
  _updateViewState() {
    this.view && this.view.state && (this._viewState.camera.copyFrom(this.view.state.camera), this._updateSlicePlane());
  }
  _updateSlicePlane() {
    const e78 = this.view ? this.view.slicePlane : null;
    null != e78 && ls(e78, this._viewState.camera.viewMatrix, this._viewState.slicePlane), this._viewState.slicePlaneEnabled = null != e78;
  }
  _slicePlaneChanged() {
    n2(this._contexts, (e78, t88) => t88.symbolCreationContext.slicePlaneEnabled) && this.setDirty();
  }
  addGraphicsOwner(e78) {
    const t88 = this._getGraphicsContext(e78);
    return { addGraphic: (i78) => this._addGraphic(e78, t88, i78), removeGraphic: (e79) => this._removeGraphic(t88, e79), labelingInfoChange: () => this._labels.enabledChanged(e78, t88), featureReductionChange: () => this.enabledChanged(e78, t88), slicePlaneEnabledChange: () => this._slicePlaneEnabledChanged(e78, t88), clear: () => t88.forEach((e79) => this._removeGraphic(t88, e79.graphics3DGraphic)) };
  }
  removeGraphicsOwner(e78) {
    const t88 = this._contexts.get(e78);
    t88 && (t88.forEach((e79) => this._removeGraphic(t88, e79.graphics3DGraphic)), this._contexts.delete(e78), this.setDirty());
  }
  _addGraphic(e78, t88, i78) {
    const s84 = i78.graphic.uid, r79 = new ti(i78, e78.symbolCreationContext.slicePlaneEnabled);
    t88.set(s84, r79), m35(e78) && this.addToActiveGraphics(r79), e78.labelsEnabled && this._labels.addToActiveGraphics(r79);
  }
  _removeGraphic(e78, t88) {
    const i78 = t88.graphic.uid, s84 = e78.get(i78);
    s84 && (this.removeFromActiveGraphics(s84), this._labels.removeFromActiveGraphics(s84), e78.delete(i78), this.setDirty());
  }
  enabledChanged(e78, t88) {
    const i78 = m35(e78);
    i78 || g26(e78), this.modifyGraphics(t88, i78);
  }
  _slicePlaneEnabledChanged(e78, t88) {
    const i78 = e78.symbolCreationContext.slicePlaneEnabled;
    t88.forEach((e79) => e79.slicePlaneEnabled = i78), this.setDirty();
  }
  getGraphicsLayers(e78) {
    return e78.layers;
  }
  _graphicSupportsDeconfliction(e78) {
    if (e78.isDraped)
      return false;
    const t88 = e78.layers;
    if (!t88 || !t88.length)
      return false;
    for (const i78 of t88)
      if (this.layerSupportsDeconfliction(i78))
        return true;
    return false;
  }
  _getGraphicsContext(e78) {
    const t88 = this._contexts.get(e78);
    if (t88)
      return t88;
    const i78 = /* @__PURE__ */ new Map();
    return this._contexts.set(e78, i78), this.setDirty(), i78;
  }
};
function m35(e78) {
  const t88 = e78.layer;
  return !(!t88 || !t88.featureReduction || "selection" !== t88.featureReduction.type);
}
function g26(e78) {
  const t88 = e78.graphics3DGraphics;
  t88 && t88.forEach((e79) => e79.setVisibilityFlag(A14.GRAPHIC, L6.DECONFLICTION, true));
}
_26 = e([a4("esri.views.3d.layers.graphics.GraphicsDeconflictor")], _26);

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileVisibility3D.js
var A28 = class {
  constructor(e78) {
    this._renderCoordsHelper = e78, this._surfaceElevation = 0, this._cache = /* @__PURE__ */ new Map(), this._frustum = new d20(e78), this._extendedFrustum = new d20(e78), this._intersector = new N6({ renderCoordsHelper: e78 }), this._renderCoordsHelper = e78;
  }
  begin(e78, t88) {
    this._surfaceElevation = t88, this._aboveGround = this._renderCoordsHelper.getAltitude(e78.eye) > t88, this._frustum.update(e78), this._shortenFrustumFarPlane(this._frustum), this._updateExtendedFrustum(e78);
  }
  end() {
    this._cache.clear();
  }
  calculate(e78) {
    if (this._allTilesInvisible)
      return s35.INVISIBLE;
    const t88 = this._renderCoordsHelper.viewingMode === l14.Global && e78.lij[0] >= R14 && e78.lij[0] < O18, i78 = this._getOrCalculateSingleTileVisibility(e78, !t88);
    return i78 !== s35.INVISIBLE && t88 ? this._calculateAggregatedChildrenVisibility(e78) : i78;
  }
  _shortenFrustumFarPlane(e78) {
    const t88 = d20.nearFarLineIndices, n103 = e78.mutablePoints;
    for (const o77 of t88) {
      const [e79, t89] = o77, a85 = n103[e79], u58 = n103[t89];
      e8(S18, u58, a85), g3(S18, S18, b17), u2(n103[t89], a85, S18);
    }
    e78.updatePoints(n103);
  }
  _calculateAggregatedChildrenVisibility(e78) {
    let t88 = s35.INVISIBLE;
    const i78 = this._cache.get(e78.id);
    if (null != i78)
      return i78;
    const s84 = H19.acquire();
    e78.getChildren(s84);
    for (const r79 of s84) {
      const e79 = this.calculate(r79);
      if (e79 !== s35.INVISIBLE && (t88 = e79, e79 === s35.VISIBLE_ON_SURFACE))
        break;
    }
    return H19.release(s84), this._cache.set(e78.id, t88), t88;
  }
  _getOrCalculateSingleTileVisibility(e78, t88) {
    const i78 = this._cache.get(e78.id);
    if (null != i78)
      return i78;
    const s84 = this._calculateSingleTileVisibility(e78);
    return t88 && this._cache.set(e78.id, s84), s84;
  }
  _calculateSingleTileVisibility(e78) {
    if (!this._aboveGround && this._renderCoordsHelper.viewingMode === l14.Global && e78.lij[0] < g27) {
      return this._calculateSingleTileVisibilitySided(e78, false) === s35.INVISIBLE ? this._calculateSingleTileVisibilitySided(e78, true) : void 0;
    }
    return this._calculateSingleTileVisibilitySided(e78, this._aboveGround);
  }
  _calculateSingleTileVisibilitySided(e78, t88) {
    this._intersector.update(e78.extent, e78.tilingScheme.spatialReference, this._surfaceElevation, t88);
    const i78 = A2(e78.tilingScheme.spatialReference).radius;
    return this._intersector.isVisibleInFrustum(this._extendedFrustum, i78) ? this._intersector.isVisibleInFrustum(this._frustum, i78, true) ? s35.VISIBLE_ON_SURFACE : s35.VISIBLE_WHEN_EXTENDED : s35.INVISIBLE;
  }
  _updateExtendedFrustum(t88) {
    this._extendedFrustum.update(t88), this._shortenFrustumFarPlane(this._extendedFrustum);
    const i78 = this._renderCoordsHelper.worldUpAtPosition(t88.eye, S18);
    this._aboveGround || j2(i78, i78);
    const r79 = l5(-P3(i78, t88.viewForward));
    if (this._allTilesInvisible = r79 > (Math.PI + t88.fovY) / 2, this._allTilesInvisible)
      return;
    if (this._hasExtendedFrustum = r79 > t88.fovY / 2, !this._hasExtendedFrustum)
      return;
    const a85 = this._extendedFrustumParameters(), u58 = this._extendedFrustum.mutablePoints;
    for (let e78 = 0; e78 < 4; e78++) {
      const t89 = a85.pointIndices[e78], i79 = u58[t89], r80 = this._renderCoordsHelper.getAltitude(i79);
      if (a85.needsAltitudeAdjustment(r80)) {
        switch (this._renderCoordsHelper.worldUpAtPosition(i79, S18), t89) {
          case k7.FAR_BOTTOM_LEFT:
          case k7.FAR_TOP_LEFT:
          case k7.NEAR_BOTTOM_LEFT:
          case k7.NEAR_TOP_LEFT:
            K(this._extendedFrustum.planes[l12.LEFT], S18, S18);
            break;
          case k7.FAR_BOTTOM_RIGHT:
          case k7.FAR_TOP_RIGHT:
          case k7.NEAR_BOTTOM_RIGHT:
          case k7.NEAR_TOP_RIGHT:
            K(this._extendedFrustum.planes[l12.RIGHT], S18, S18);
        }
        g3(S18, S18, a85.direction), this._renderCoordsHelper.intersectInfiniteManifold(p10(i79, S18), a85.zWithMargin, i79);
      }
    }
    if (this._extendedFrustum.updatePoints(u58), _6(u58[k7.NEAR_BOTTOM_LEFT], u58[k7.NEAR_BOTTOM_RIGHT], u58[k7.NEAR_TOP_RIGHT], N14), _6(u58[k7.NEAR_BOTTOM_RIGHT], u58[k7.NEAR_TOP_RIGHT], u58[k7.NEAR_TOP_LEFT], v29), P3(W2(N14), W2(v29)) < 0) {
      const e78 = this._extendedFrustum.mutablePoints;
      this._aboveGround ? [e78[k7.NEAR_BOTTOM_LEFT], e78[k7.NEAR_BOTTOM_RIGHT]] = [e78[k7.NEAR_BOTTOM_RIGHT], e78[k7.NEAR_BOTTOM_LEFT]] : [e78[k7.NEAR_TOP_LEFT], e78[k7.NEAR_TOP_RIGHT]] = [e78[k7.NEAR_TOP_RIGHT], e78[k7.NEAR_TOP_LEFT]], this._extendedFrustum.updatePoints(e78);
    }
  }
  _extendedFrustumParameters() {
    return this._aboveGround ? this._extendedFrustumParametersAboveSurface() : this._extendedFrustumParametersBelowSurface();
  }
  _extendedFrustumParametersAboveSurface() {
    const e78 = this._surfaceElevation - P18;
    return { zWithMargin: e78, pointIndices: d20.planePointIndices.bottom, direction: -1, needsAltitudeAdjustment: (t88) => t88 > e78 };
  }
  _extendedFrustumParametersBelowSurface() {
    const e78 = this._surfaceElevation + P18;
    return { zWithMargin: e78, pointIndices: d20.planePointIndices.top, direction: 1, needsAltitudeAdjustment: (t88) => t88 < e78 };
  }
};
var R14 = 2;
var O18 = 6;
var g27 = 12;
var b17 = 0.95;
var P18 = 1;
var S18 = n7();
var N14 = h12();
var v29 = h12();
var H19 = new e4(Array, (e78) => {
  4 !== e78.length && (e78[0] = new t36(), e78[1] = new t36(), e78[2] = new t36(), e78[3] = new t36());
}, (e78) => {
  e78[0].release(), e78[1].release(), e78[2].release(), e78[3].release();
});

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileMeasurements3D.js
var j19 = class {
  constructor(e78) {
    this._camera = new $2(), this._focusOnMap = [0, 0], this._screenRect = i4(), this._tileSize = e78.tileSize, this._renderCoordsHelper = e78.renderCoordsHelper, this._tilingScheme = e78.tilingScheme, this._visibility = new A28(e78.renderCoordsHelper);
  }
  begin(e78, t88, i78) {
    this._camera.copyFrom(e78), this._surfaceElevation = i78, this._focusOnMap[0] = t88.x, this._focusOnMap[1] = t88.y, a8(0, 0, e78.fullWidth, e78.fullHeight, this._screenRect), this._visibility.begin(this._camera, i78);
  }
  end() {
    this._visibility.end();
  }
  updateTile(e78) {
    e78.measures.visibility = this._visibility.calculate(e78), e78.measures.distance = U2(e78.extent, this._focusOnMap), e78.measures.visibility !== s35.INVISIBLE && this._updateScreenMeasure(e78);
  }
  _updateScreenMeasure(e78) {
    const t88 = T21, i78 = 1 << t88, r79 = e78.measures.screenRect;
    C2(r79);
    let s84 = 0;
    const o77 = e78.lij[0] + t88, n103 = e78.lij[1] << t88, a85 = e78.lij[2] << t88, l75 = this._tileSizeWithBias(e78), h58 = l75 * l75;
    for (let c75 = 0; c75 < i78; c75++)
      for (let t89 = 0; t89 < i78; t89++)
        if (s84 += this._computeScreenArea(e78, o77, n103 + c75, a85 + t89, r79), s84 > h58)
          return void (e78.measures.shouldSplit = true);
    e78.measures.shouldSplit = false;
  }
  _tileSizeWithBias(e78) {
    return e78.measures.visibility === s35.VISIBLE_WHEN_EXTENDED ? this._tileSize * y28 : this._tileSize;
  }
  _computeScreenArea(e78, t88, i78, r79, s84) {
    const o77 = e78.measures.visibility === s35.VISIBLE_WHEN_EXTENDED;
    this._projectToScreen(t88, i78, r79, o77, E29), C2(g28);
    for (let n103 = 0; n103 < 4; n103++)
      f5(g28, E29[n103]);
    return m3(s84, g28, s84), S8(E29[0], E29[1], E29[2]) + S8(E29[0], E29[2], E29[3]);
  }
  _projectToScreen(e78, t88, i78, r79, s84) {
    this._tilingScheme.ensureMaxLod(e78), this._tilingScheme.getExtent(e78, t88, i78, b18), this._toRenderCoords(b18, 0, 3, R15[0]), this._toRenderCoords(b18, 2, 3, R15[1]), this._toRenderCoords(b18, 2, 1, R15[2]), this._toRenderCoords(b18, 0, 1, R15[3]), r79 && (this._projectToPlane(R15, this._camera.frustum[l12.NEAR]), this._projectToPlane(R15, this._camera.frustum[l12.TOP]), this._projectToPlane(R15, this._camera.frustum[l12.BOTTOM]));
    for (let o77 = 0; o77 < 4; o77++)
      this._camera.projectToRenderScreen(R15[o77], M16), this._camera.renderToScreen(M16, s84[o77]);
  }
  _projectToPlane(e78, t88) {
    for (let i78 = 0; i78 < 4; i78++)
      C18[i78] = R6(t88, e78[i78]);
    const s84 = Math.max(C18[0], C18[1], C18[2], C18[3]);
    if (s84 > 0) {
      const o77 = g3(v30, W2(t88), -s84);
      for (let t89 = 0; t89 < 4; t89++)
        u2(e78[t89], e78[t89], o77);
    }
  }
  _toRenderCoords(e78, t88, i78, r79) {
    return v30[0] = e78[t88], v30[1] = e78[i78], v30[2] = this._surfaceElevation, this._renderCoordsHelper.toRenderCoords(v30, this._tilingScheme.spatialReference, r79), r79;
  }
};
var g28 = i4();
var T21 = 2;
var y28 = 5;
var E29 = [i10(), i10(), i10(), i10()];
var b18 = i4();
var v30 = n7();
var R15 = [n7(), n7(), n7(), n7()];
var C18 = [0, 0, 0, 0];
var M16 = x7();

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileTree3D.js
var x26 = class extends m {
  get tilingScheme() {
    const e78 = this.tilingSchemeOwner.tilingScheme;
    if (!e78)
      return null;
    return e78.clone();
  }
  set filterExtent(e78) {
    if (null != e78 && !e78.spatialReference.equals(this.viewState.spatialReference))
      return void s3.getLogger(this).error("#extent", "extent spatial reference needs to be in the same spatial reference as the view");
    const t88 = this._get("filterExtent");
    if (t88 === e78 || null != t88 && e78 && t88.equals(e78))
      return;
    const i78 = null != e78 ? e78.clone() : null;
    this._set("filterExtent", i78), this._setDirty();
  }
  get _filterExtentRect() {
    if (null == this.filterExtent)
      return null;
    const e78 = i4();
    return u10(this.filterExtent, e78, this.tilingScheme.spatialReference), e78;
  }
  get _rootTileIds() {
    const { tilingScheme: e78 } = this;
    return this._filterExtentRect && e78 ? e78.rootTilesInExtent(this._filterExtentRect) : [[0, 0, 0]];
  }
  set suspended(e78) {
    e78 !== this._get("suspended") && (this._set("suspended", e78), this._setDirty());
  }
  get updating() {
    return this._dirty || !!this._pendingTiles;
  }
  constructor(e78) {
    super(e78), this.tiles = new V2(), this.tileSize = 512, this._idToTile = /* @__PURE__ */ new Map(), this._handles = new t3(), this._clients = /* @__PURE__ */ new Set(), this._dirty = false, this._pendingTiles = null, this._newTiles = new l2();
  }
  initialize() {
    this._handles.add([l6(() => [this.tilingScheme, this.tileSize], () => this._reset(), U3), l6(() => {
      var _a, _b, _c;
      return [this.tileSize, (_a = this.cameraOnSurface) == null ? void 0 : _a.location, this.tilingScheme, (_b = this.viewState) == null ? void 0 : _b.contentCamera, (_c = this.focus) == null ? void 0 : _c.location];
    }, () => this._setDirty(), w3)]), this.scheduler && (this._frameWorker = this.scheduler.registerTask(I3.FEATURE_TILE_TREE, this));
  }
  destroy() {
    this._frameWorker = o(this._frameWorker), this._handles = l(this._handles);
  }
  addClient() {
    const e78 = C19();
    return this._clients.add(e78), 1 === this._clients.size && this._setDirty(), e2(() => this._removeClient(e78));
  }
  _removeClient(e78) {
    this._clients.delete(e78), this._hasClients || this._clear();
  }
  get _hasClients() {
    return this._clients.size > 0;
  }
  _setDirty() {
    !this._hasClients || this.suspended || this._dirty || (this._frameWorker ? (this._dirty = true, this.notifyChange("updating")) : this.runTask(C4));
  }
  _clear() {
    this.tiles.removeAll(), this._idToTile.clear(), this._reset(), this._dirty = false, this.notifyChange("updating");
  }
  get running() {
    return this.updating;
  }
  runTask(e78) {
    this._dirty = false, this._pendingTiles || (this._startUpdate(), null != this._frameWorker && (this._frameWorker.priority = I3.FEATURE_TILE_TREE_ACTIVE)), this._subdivideTilesForView(e78), this._pendingTiles || null == this._frameWorker || (this._frameWorker.priority = I3.FEATURE_TILE_TREE), this.notifyChange("updating");
  }
  _startUpdate() {
    if (this.suspended)
      return;
    if (!this.tilingScheme)
      return void this._clear();
    this._tileMeasurements || (this._tileMeasurements = new j19({ renderCoordsHelper: this.renderCoordsHelper, tilingScheme: this.tilingScheme, tileSize: this.tileSize }));
    const e78 = this.viewState.contentCamera;
    this._tileMeasurements.begin(e78, this.focus.location, this.cameraOnSurface.location.z ?? 0), this._pendingTiles = this._getRootTiles();
  }
  _reset() {
    this._newTiles.clear(), this._tileMeasurements = null, this._pendingTiles = null, this._setDirty();
  }
  _getRootTiles() {
    const { tilingScheme: e78 } = this;
    return this._rootTileIds.map((t88) => new t36(t88[0], t88[1], t88[2], e78));
  }
  _purgeHorizonTiles(e78) {
    e78.sort((e79, t88) => {
      const i78 = e79.measures.screenRect, s84 = t88.measures.screenRect;
      return i78[1] + i78[3] - (s84[1] + s84[3]);
    }), C2(O19);
    for (let t88 = 0; t88 < e78.length; t88++)
      if (m3(O19, e78.data[t88].measures.screenRect, O19), s13(O19) > I19)
        return e78.data.slice(t88, e78.length);
    return [];
  }
  _subdivideTilesForView(e78) {
    if (!this._pendingTiles)
      return;
    const { tilingScheme: t88 } = this;
    for (; this._pendingTiles.length > 0 && !e78.done; ) {
      const i78 = this._pendingTiles.pop();
      e78.madeProgress(), this._filterExtentRect && !q(this._filterExtentRect, i78.extent) || (this._tileMeasurements.updateTile(i78), i78.measures.visibility !== s35.INVISIBLE && (i78.measures.shouldSplit ? (t88.ensureMaxLod(i78.lij[0] + 1), this._pendingTiles.push(...i78.getChildren())) : this._newTiles.push(i78)));
    }
    0 === this._pendingTiles.length && (this._updateTiles(this._purgeHorizonTiles(this._newTiles)), this._newTiles.clear(), this._tileMeasurements.end(), this._pendingTiles = null);
  }
  _updateTiles(e78) {
    for (const s84 of this.tiles.items)
      s84.used = false;
    const t88 = e78.filter((e79) => {
      const t89 = this._idToTile.get(e79.id);
      return t89 ? (t89.copyMeasurementsFrom(e79), t89.used = true) : this._idToTile.set(e79.id, e79), !t89;
    }), i78 = this.tiles.items.filter((e79) => !e79.used && (this._idToTile.delete(e79.id), true));
    this.tiles.removeMany(i78), this.tiles.addMany(t88), this._sortTiles();
  }
  _sortTiles() {
    this.viewState.fixedContentCamera || this.tiles.sort((e78, t88) => e78.measures.visibility !== t88.measures.visibility ? e78.measures.visibility === s35.VISIBLE_ON_SURFACE ? -1 : 1 : e78.measures.distance - t88.measures.distance), this.tiles.forEach((e78, t88) => e78.loadPriority = t88);
  }
};
e([y({ constructOnly: true })], x26.prototype, "scheduler", void 0), e([y({ constructOnly: true })], x26.prototype, "renderCoordsHelper", void 0), e([y({ constructOnly: true })], x26.prototype, "tilingSchemeOwner", void 0), e([y({ constructOnly: true })], x26.prototype, "cameraOnSurface", void 0), e([y({ constructOnly: true })], x26.prototype, "focus", void 0), e([y({ constructOnly: true })], x26.prototype, "viewState", void 0), e([y({ constructOnly: true })], x26.prototype, "terrain", void 0), e([y()], x26.prototype, "tiles", void 0), e([y()], x26.prototype, "tileSize", void 0), e([y({ readOnly: true })], x26.prototype, "tilingScheme", null), e([y()], x26.prototype, "filterExtent", null), e([y({ readOnly: true })], x26.prototype, "_filterExtentRect", null), e([y({ readOnly: true })], x26.prototype, "_rootTileIds", null), e([y({ value: false })], x26.prototype, "suspended", null), e([y({ readOnly: true })], x26.prototype, "updating", null), x26 = e([a4("esri.views.3d.layers.support.FeatureTileTree3D")], x26);
var j20 = 0;
function C19() {
  return j20++;
}
var O19 = i4();
var I19 = 10;

// node_modules/@arcgis/core/views/3d/state/ViewState.js
var _27 = class extends m {
  constructor() {
    super(...arguments), this._propertiesPool = new o27({ camera: $2 }, this), this._lastSeenCameraProjectionValues = new $2(), this.mode = I2.ANIMATING, this._cssCamera = new $2(), this._camera = new $2(), this.rasterPixelRatio = 1, this.contentPixelRatio = 1, this.events = new n9(), this.viewingMode = l14.Global, this._cameraChanged = false, this._updateQueue = new Array(), this._processingUpdates = false;
  }
  init(e78, t88) {
    this._set("viewingMode", e78), this._set("spatialReference", t88), this._set("constraints", new c29({ mode: this.viewingMode }));
  }
  exit() {
    var _a;
    (_a = this.cameraController) == null ? void 0 : _a.destroy(), this.cameraController = null, this._propertiesPool.destroy(), this._propertiesPool = new o27({ camera: $2 }, this);
  }
  destroy() {
    var _a, _b;
    (_a = this.cameraController) == null ? void 0 : _a.destroy(), this.cameraController = null, (_b = this._propertiesPool) == null ? void 0 : _b.destroy(), this._propertiesPool = null;
  }
  createInitialCamera() {
    if (this.viewingMode === l14.Global) {
      const e78 = A2(this.spatialReference).radius;
      this.camera = new $2({ eye: r5(4 * e78, 0, 0), center: r5(e78, 0, 0), up: r5(0, 0, 1) });
    } else
      this.camera = new $2({ eye: r5(0, 0, 100), center: r5(0, 0, 0), up: r5(0, 1, 0) });
  }
  get animation() {
    return this.cameraController instanceof a50 && null != this.cameraController.viewAnimation ? this.cameraController.viewAnimation : null;
  }
  get camera() {
    return this._camera;
  }
  get cssCamera() {
    const e78 = this._cssCamera.copyFrom(this.camera), { height: t88, width: r79, pixelRatio: o77 } = this.camera;
    return e78.pixelRatio = 1, e78.height = Math.round(t88 / o77), e78.width = Math.round(r79 / o77), e78;
  }
  set camera(e78) {
    e78 !== v31 && v31.copyFrom(e78), v31.computeUp(this.viewingMode), this.events.emit("before-camera-change", v31);
    const t88 = this._camera;
    if (this._cameraProjectionChanged(this._lastSeenCameraProjectionValues, v31) && (this._lastSeenCameraProjectionValues.copyFrom(v31), this.events.emit("camera-projection-changed", this._lastSeenCameraProjectionValues)), !t88.equals(v31) && (this._camera = this._propertiesPool.get("camera").copyFrom(v31), this._cameraChanged = !t88.almostEquals(v31), this._cameraChanged)) {
      const e79 = y3(() => {
        this._cameraChanged = false, e79.remove();
      });
    }
  }
  get pixelRatio() {
    return this.camera.pixelRatio;
  }
  get alignPixelEnabled() {
    return this.pixelRatio === this.rasterPixelRatio && this.mode === I2.IDLE;
  }
  get updating() {
    return !this.alignPixelEnabled;
  }
  get contentCamera() {
    return this._contentCamera ?? this.camera;
  }
  set contentCamera(e78) {
    this._contentCamera = null != e78 ? e78.clone() : null;
  }
  get fixedContentCamera() {
    return null != this._contentCamera;
  }
  get isGlobal() {
    return this.viewingMode === l14.Global;
  }
  get isLocal() {
    return this.viewingMode === l14.Local;
  }
  get navigating() {
    return !(!this.cameraController || !this.cameraController.isInteractive);
  }
  get stationary() {
    return !this._cameraChanged && !this.navigating;
  }
  get cameraController() {
    return this._get("cameraController");
  }
  set cameraController(e78) {
    var _a;
    this.stopActiveCameraController() ? ((_a = this.cameraController) == null ? void 0 : _a.destroy(), e78 && (this.removeHandles(w24), this.addHandles(f6(() => e78.state === s54.Finished || e78.state === s54.Stopped, () => {
      this._set("cameraController", null), this.updateCamera((t88) => e78.onControllerEnd(t88));
    }, { sync: true, once: true }), w24), e78.onControllerStart(this.camera)), this._set("cameraController", e78)) : e78 && (e78.state = s54.Rejected);
  }
  switchCameraController(e78) {
    return this.cameraController = e78, e78.state !== s54.Rejected;
  }
  stopActiveCameraController() {
    return !(this.cameraController && !this.cameraController.stopController());
  }
  updateCamera(e78) {
    this._updateQueue.push(e78), this._processUpdateQueue();
  }
  _processUpdateQueue() {
    if (0 === this._updateQueue.length || this._processingUpdates)
      return;
    this._processingUpdates = true;
    const e78 = this._updateQueue.shift();
    v31.copyFrom(this._get("camera")), e78(v31), this.camera = v31, this._processingUpdates = false, this._processUpdateQueue();
  }
  _cameraProjectionChanged(e78, t88) {
    return e78.fov !== t88.fov || (e78.fullViewport[0] !== t88.fullViewport[0] || e78.fullViewport[1] !== t88.fullViewport[1] || e78.fullViewport[2] !== t88.fullViewport[2] || e78.fullViewport[3] !== t88.fullViewport[3] || (e78.padding[ht.TOP] !== t88.padding[ht.TOP] || e78.padding[ht.RIGHT] !== t88.padding[ht.RIGHT] || e78.padding[ht.BOTTOM] !== t88.padding[ht.BOTTOM] || e78.padding[ht.LEFT] !== t88.padding[ht.LEFT]));
  }
};
e([y()], _27.prototype, "mode", void 0), e([y({ readOnly: true, type: a41 })], _27.prototype, "animation", null), e([y({ type: $2 })], _27.prototype, "camera", null), e([y({ type: $2 })], _27.prototype, "cssCamera", null), e([y()], _27.prototype, "_cssCamera", void 0), e([y()], _27.prototype, "_camera", void 0), e([y({ readOnly: true })], _27.prototype, "pixelRatio", null), e([y()], _27.prototype, "rasterPixelRatio", void 0), e([y()], _27.prototype, "contentPixelRatio", void 0), e([y({ readOnly: true })], _27.prototype, "alignPixelEnabled", null), e([y({ readOnly: true })], _27.prototype, "updating", null), e([y({})], _27.prototype, "_contentCamera", void 0), e([y({ type: $2 })], _27.prototype, "contentCamera", null), e([y({ readOnly: true })], _27.prototype, "fixedContentCamera", null), e([y({ readOnly: true })], _27.prototype, "constraints", void 0), e([y({ readOnly: true })], _27.prototype, "events", void 0), e([y({ readOnly: true })], _27.prototype, "isGlobal", null), e([y({ readOnly: true })], _27.prototype, "isLocal", null), e([y({ readOnly: true })], _27.prototype, "viewingMode", void 0), e([y({ readOnly: true })], _27.prototype, "spatialReference", void 0), e([y()], _27.prototype, "navigating", null), e([y()], _27.prototype, "stationary", null), e([y()], _27.prototype, "_cameraChanged", void 0), e([y()], _27.prototype, "cameraController", null), _27 = e([a4("esri.views.3d.state.ViewState")], _27);
var f39 = _27;
var v31 = new $2();
var w24 = "ViewStateHandles";

// node_modules/@arcgis/core/views/3d/state/helpers/SceneIntersectionHelper.js
var b19 = class {
  constructor(t88, r79, n103) {
    this.viewingMode = t88, this._forEachLayer = r79, this._view = n103, this._externalIntersectionHandlers = new l2(), this._tolerance = w12, this._tmpRay = d10(), this._tmpRegion = i4(), this._validateHUDIntersector = A15(this.viewingMode), this._validateHUDIntersector.options.hud = false;
  }
  intersectScreen(e78, t88, r79) {
    return this.intersectRay(this._getPickRay(e78, this._tmpRay), U16(this.viewingMode), t88, r79);
  }
  intersectScreenFreePointFallback(e78, t88, r79) {
    return this.intersectRayFreePointFallback(this._getPickRay(e78, this._tmpRay), t88, r79);
  }
  intersectRayFreePointFallback(e78, t88, r79) {
    return this.intersectRay(e78, U16(this.viewingMode), t88, r79) || this._intersectRayFreePointLocal(e78, t88);
  }
  intersectRay(e78, t88, r79, n103) {
    return t88.options.selectionMode = false, t88.options.store = t33.MIN, this.computeIntersection(e78, t88, n103), !!t88.results.min && t88.results.min.getIntersectionPoint(r79);
  }
  getCenterRayWithSubpixelOffset(e78, t88, r79 = 0.5, n103 = 0.5) {
    return e78.getRenderCenter(T22, r79, n103), T22[0] += 0.0466, T22[1] -= 0.0123, g12(e78, T22, t88);
  }
  intersectIntersectorScreen(e78, t88, r79) {
    this.computeIntersection(this._getPickRay(e78, this._tmpRay), t88, r79);
  }
  intersectToolIntersectorScreen(e78, t88, r79) {
    const n103 = this._getPickRay(e78, this._tmpRay);
    this.intersectToolIntersectorRay(n103, t88, r79);
  }
  intersectToolIntersectorRay(e78, t88, r79) {
    t88.options.selectionMode = true, this.computeIntersection(e78, t88, r79);
    const n103 = t88.results.min;
    !!this._view.basemapTerrain && this._view.basemapTerrain.opaque || o32(n103) && n103.intersector !== i27.TERRAIN || (t88.options.selectionMode = false, this.computeIntersection(e78, t88, r79));
  }
  setTolerance(e78 = w12) {
    this._tolerance = e78;
  }
  addIntersectionHandler(e78) {
    this._externalIntersectionHandlers.push(e78), this._externalIntersectionHandlers.sort((e79, t88) => e79.type === i27.TERRAIN ? 1 : t88.type === i27.TERRAIN ? -1 : 0);
  }
  removeIntersectionHandler(e78) {
    null != this._externalIntersectionHandlers.removeUnordered(e78) && this._externalIntersectionHandlers.sort((e79, t88) => e79.type === i27.TERRAIN ? 1 : t88.type === i27.TERRAIN ? -1 : 0);
  }
  _getPickRay(e78, t88) {
    const r79 = this._view.state.camera;
    return i29(r79, e78, t88);
  }
  _intersectRayFreePointLocal(e78, t88) {
    return this.viewingMode !== l14.Local || null == e78 || u2(t88, e78.origin, z2(c11.get(), e78.direction)), false;
  }
  intersectElevationFromScreen(e78, t88, r79 = 0, n103 = null) {
    return this._intersectElevation(this._getPickRay(e78, this._tmpRay), t88, r79, n103);
  }
  _intersectElevation(e78, r79, i78 = 0, s84 = null) {
    if (null == e78)
      return null;
    const o77 = null != r79 ? r79.mode : "absolute-height", l75 = (r79 == null ? void 0 : r79.offset) ?? 0, c75 = "on-the-ground" !== o77 ? l75 + i78 : 0, a85 = c75 / this._view.renderCoordsHelper.unitInMeters;
    if ("absolute-height" === o77) {
      if (this._view.renderCoordsHelper.intersectInfiniteManifold(e78, c75, L19)) {
        const e79 = this._view.computeMapPointFromVec3d(L19);
        return e79.z ?? (e79.z = 0), e79.z -= l75, e79;
      }
      return null;
    }
    const u58 = this._view.state.camera, h58 = p7(c11.get());
    u58.projectToRenderScreen(e78.origin, h58);
    const d63 = new H20(null, this._forEachLayer), m55 = this._view.slicePlane, y41 = null != m55 ? c23(m55) : null, g49 = A15(this.viewingMode);
    g49.options.store = t33.MIN, g49.options.verticalOffset = a85;
    const f59 = e78.origin, I29 = u2(c11.get(), f59, e78.direction);
    g49.reset(f59, I29, u58), g49.point = h58;
    const b31 = s84 ? "type" in s84 && "graphics" === s84.type ? (e79) => e79.layerUid !== s84.uid : (e79) => e79.graphicUid !== s84.uid : null;
    switch (o77) {
      case "relative-to-scene": {
        const e79 = (e80) => (!b31 || b31(e80)) && !!e80.lastValidElevationBB;
        g49.intersect(d63.layers, h58, this._tolerance, null, e79), this._externalIntersectionHandlers.forAll((e80) => {
          if (e80.type === i27.I3S || e80.type === i27.TERRAIN) {
            const t88 = e80.slicePlaneEnabled ? y41 : null;
            e80.intersect(g49, t88, g49.rayBegin, g49.rayEnd, h58);
          }
        });
        break;
      }
      case "on-the-ground":
      case "relative-to-ground":
        this._externalIntersectionHandlers.forAll((e79) => {
          if (e79.isGround) {
            const t88 = e79.slicePlaneEnabled ? y41 : null;
            e79.intersect(g49, t88, g49.rayBegin, g49.rayEnd, h58);
          }
        });
    }
    if (g49.results.min.getIntersectionPoint(L19)) {
      const e79 = this._view.computeMapPointFromVec3d(L19);
      return e79.z = i78, e79;
    }
    return null;
  }
  computeIntersection(e78, r79, i78) {
    var _a;
    if (null == e78)
      return;
    const s84 = this._view.state.camera, o77 = p7(c11.get());
    s84.projectToRenderScreen(e78.origin, o77);
    const l75 = new H20(i78, this._forEachLayer);
    r79.options.selectOpaqueTerrainOnly = !i78 || !("include" in i78 || "exclude" in i78);
    const c75 = e78.origin, a85 = u2(c11.get(), e78.origin, e78.direction);
    r79.reset(c75, a85, s84), r79.intersect(l75.layers, o77, this._tolerance);
    const u58 = this._view.slicePlane, h58 = null != u58 ? c23(u58) : null;
    r79.intersect(l75.sliceableLayers, o77, this._tolerance, h58);
    const d63 = i78 && (i78.requiresGroundFeedback || i78.enableDraped);
    this._externalIntersectionHandlers.forAll((e79) => {
      const t88 = e79.layerUid, n103 = Array.isArray(t88), i79 = n103 ? t88 : [t88];
      n103 && (r79.options.filteredLayerUids = []);
      let s85 = false;
      for (const o78 of i79) {
        !l75.filterLayerUid(o78) ? n103 && r79.options.filteredLayerUids.push(o78) : s85 = true;
      }
      if (r79.options.isFiltered = !s85, e79.isGround && d63 || !r79.options.isFiltered) {
        const t89 = e79.slicePlaneEnabled ? h58 : null;
        e79.intersect(r79, t89, c75, a85, o77);
      }
    });
    const m55 = c11.get(), y41 = this._view.basemapTerrain;
    if (i78 && i78.enableDraped && null != y41.spatialReference && r79.results.ground.getIntersectionPoint(m55)) {
      const e79 = y41.overlayManager.renderer, t88 = this._view.renderCoordsHelper.spatialReference, n103 = c11.get();
      this._view.renderCoordsHelper.fromRenderCoords(m55, n103, y41.spatialReference), n103[2] = ((_a = this._view.elevationProvider) == null ? void 0 : _a.getElevation(m55[0], m55[1], m55[2], t88, "ground")) ?? 0, e79.intersect(r79, n103, r79.results.ground, (e80) => l75.filterRenderGeometry(e80));
    }
    r79.sortResults(), this._processHUDResults(r79);
  }
  _processHUDResults(e78) {
    const t88 = e78.results.hud;
    e9(this._tmpRegion, J2);
    const r79 = this._view.state.camera, n103 = [], i78 = this._tmpRegion, s84 = (e79) => {
      const t89 = new j21(e79);
      r79.projectToRenderScreen(e79.target.center, t89.screenPoint), t89.screenPoint[0] = Math.floor(t89.screenPoint[0]), t89.screenPoint[1] = Math.floor(t89.screenPoint[1]), n103.push(t89), f5(i78, t89.screenPoint);
    };
    e78.sortResults(t88.all), null != t88.min.dist && s84(t88.min);
    for (const l75 of t88.all)
      t88.min.target.object !== l75.target.object && t88.max.target.object !== l75.target.object && s84(l75);
    if (null != t88.max.dist && t88.max.target.object !== t88.min.target.object && s84(t88.max), !n103.length)
      return;
    i78[0] === i78[2] && (i78[2] += 1), i78[1] === i78[3] && (i78[3] += 1);
    const o77 = r79.fullWidth, d63 = r79.fullHeight, p70 = Math.max(0, i78[0] - P19), m55 = Math.max(0, i78[1] - P19), y41 = Math.min(M3(i78) + 2 * P19, o77 - p70), g49 = Math.min(s13(i78) + 2 * P19, d63 - m55), f59 = new Uint8Array(y41 * g49 * 4);
    this._view._stage.renderer.readHUDVisibility(p70, m55, y41, g49, f59);
    let _42 = true;
    const v44 = null == e78.results.max.dist;
    let I29 = 0;
    for (const l75 of n103)
      for (const t89 of M17) {
        if (f59[4 * (Math.min(l75.screenPoint[0] + t89[0], o77) - i78[0] + (Math.min(l75.screenPoint[1] + t89[1], d63) - i78[1]) * y41)]) {
          _42 && (e78.results.min.copy(l75.result), _42 = false), v44 && e78.results.max.copy(l75.result), e78.options.store === t33.ALL && e78.results.all.splice(I29++, 0, l75.result);
          break;
        }
      }
  }
};
var P19 = 1;
var M17 = (() => {
  const e78 = [], t88 = P19;
  for (let r79 = -t88; r79 <= t88; r79++)
    for (let n103 = -t88; n103 <= t88; n103++)
      e78.push([n103 + t88, r79 + t88]);
  return e78;
})();
var j21 = class {
  constructor(e78) {
    this.result = e78, this.screenPoint = x7();
  }
};
var x27;
function U16(e78) {
  return x27 && x27.viewingMode === e78 || (x27 = A15(e78)), x27;
}
var H20 = class {
  constructor(e78, t88) {
    this.layers = new Array(), this.sliceableLayers = new Array(), this.include = e78 == null ? void 0 : e78.include, this.exclude = e78 == null ? void 0 : e78.exclude, t88((e79) => {
      e79.pickable && this.filterLayerUid(e79.apiLayerUid) && (e79.sliceable ? this.sliceableLayers : this.layers).push(e79);
    });
  }
  filterLayerUid(e78) {
    const { include: t88, exclude: r79 } = this;
    return null == e78 ? null == t88 && null == r79 : (null == t88 || t88.has(e78)) && (null == r79 || !r79.has(e78));
  }
  filterRenderGeometry(e78) {
    return this.filterLayerUid(e78.layerUid);
  }
};
function E30(e78) {
  return "object" == typeof e78 && "intersect" in e78;
}
var L19 = n7();
var T22 = x7();

// node_modules/@arcgis/core/views/3d/support/CombinedElevationProvider.js
var c53 = class extends n9.EventedMixin(m) {
  get spatialReference() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.spatialReference;
  }
  constructor(e78) {
    super(e78), this._im = new Array(), this._ground = new Array(), this._scene = new Array(), this._handles = /* @__PURE__ */ new Map(), this.lastElevationQuery = null, this.elevationCacheEnabled = false;
  }
  destroy() {
    this._elevationQueryCached = l(this._elevationQueryCached);
  }
  get _elevationQuery() {
    return null == this._elevationQueryCached && (this._elevationQueryCached = new l21(this.view.resourceController.scheduler, this.view.spatialReference, () => this.view.map && this.view.map.ground, { maximumAutoTileRequests: 4 })), this._elevationQueryCached;
  }
  enableElevationCache(e78) {
    e78 || (this.lastElevationQuery = null), this.elevationCacheEnabled = e78;
  }
  getElevation(e78, t88, r79, s84, i78) {
    if (this.elevationCacheEnabled && null != this.lastElevationQuery) {
      const o78 = this.lastElevationQuery;
      if (e78 === o78.x && t88 === o78.y && r79 === o78.z && S3(s84, o78.spatialReference) && i78 === o78.queryContext)
        return o78.result;
    }
    let o77 = null;
    return o77 = u39(o77, this._im, e78, t88, r79, s84, i78), null == o77 && (o77 = u39(o77, this._ground, e78, t88, r79, s84, i78)), "scene" === i78 && (o77 = u39(o77, this._scene, e78, t88, r79, s84, i78)), this.elevationCacheEnabled && (this.lastElevationQuery = { x: e78, y: t88, z: r79, spatialReference: s84, queryContext: i78, result: o77 }), o77;
  }
  getSphereElevationBounds(e78, t88) {
    let r79 = 1 / 0, s84 = -1 / 0;
    for (const i78 of [this._im, this._ground, this._scene])
      i78.forEach((i79) => {
        if (i79.getSphereElevationBounds) {
          const o77 = i79.getSphereElevationBounds(e78, t88);
          null != o77 && (r79 = Math.min(r79, o77.min), s84 = Math.max(s84, o77.max));
        }
      });
    return { min: r79, max: s84 };
  }
  queryElevation(e78, t88, r79, s84, n103, a85 = null, l75 = 0) {
    const h58 = C();
    return this._elevationQuery.queryElevation(e78, t88, a85, l75).then((i78) => {
      "scene" === n103 && (i78 = u39(i78, this._scene, e78, t88, r79, s84, n103)), h58.resolve(i78);
    }).catch((i78) => {
      d2(i78) ? h58.reject(i78) : h58.resolve(this.getElevation(e78, t88, r79, s84, n103));
    }), h58.promise;
  }
  register(e78, t88) {
    this._handles.set(t88, t88.on("elevation-change", (e79) => this.emit("elevation-change", e79))), this._providersFromContext(e78).push(t88);
  }
  unregister(e78) {
    var _a;
    this._handles.has(e78) && ((_a = this._handles.get(e78)) == null ? void 0 : _a.remove(), this._handles.delete(e78));
    for (const t88 of [this._im, this._ground, this._scene]) {
      const r79 = t88.indexOf(e78);
      r79 > -1 && t88.splice(r79, 1);
    }
  }
  _providersFromContext(e78) {
    switch (e78) {
      case "ground":
        return this._ground;
      case "im":
        return this._im;
      case "scene":
        return this._scene;
    }
  }
};
function u39(e78, t88, r79, s84, i78, o77, n103) {
  for (const a85 of t88) {
    const t89 = a85.getElevation(r79, s84, i78, o77, n103);
    null != t89 && (e78 = null != e78 ? Math.max(t89, e78) : t89);
  }
  return e78;
}
e([y({ constructOnly: true })], c53.prototype, "view", void 0), e([y()], c53.prototype, "spatialReference", null), c53 = e([a4("esri.views.3d.support.CombinedElevationProvider")], c53);

// node_modules/@arcgis/core/views/3d/support/DisplayQualityProfile.js
var a59 = class _a {
  static isValidProfile(e78) {
    return e78 in _a.profiles;
  }
  static getDefaultProfile() {
    return has("esri-iPhone") ? "low" : "medium";
  }
  static apply(e78, i78) {
    const o77 = _a.profiles[e78];
    i78.graphics3D.maxTotalNumberOfFeatures = o77.graphics3D.maxTotalNumberOfFeatures, i78.graphics3D.maxTotalNumberOfPrimitives = o77.graphics3D.maxTotalNumberOfPrimitives, i78.graphics3D.polygonLodFactor = o77.graphics3D.polygonLodFactor, i78.graphics3D.polylineLodFactor = o77.graphics3D.polylineLodFactor, i78.graphics3D.snapshotAvailable = o77.graphics3D.snapshotAvailable, i78.graphics3D.skipHighSymbolLods = o77.graphics3D.skipHighSymbolLods;
    const t88 = i78.sceneService.object, r79 = o77.sceneService.object;
    t88.lodFactor = r79.lodFactor, t88.lodCrossfadeinDuration = r79.lodCrossfadeinDuration, t88.lodCrossfadeoutDuration = r79.lodCrossfadeoutDuration, t88.lodCrossfadeUncoveredDuration = r79.lodCrossfadeUncoveredDuration, i78.sceneService.point.lodFactor = o77.sceneService.point.lodFactor, i78.sceneService.integratedMesh.lodFactor = o77.sceneService.integratedMesh.lodFactor, i78.sceneService.pointCloud.lodFactor = o77.sceneService.pointCloud.lodFactor, i78.sceneService.uncompressedTextureDownsamplingEnabled = o77.sceneService.uncompressedTextureDownsamplingEnabled, i78.tiledSurface.lodBias = o77.tiledSurface.lodBias, i78.tiledSurface.angledSplitBias = o77.tiledSurface.angledSplitBias, i78.tiledSurface.reduceTileLevelDifferences = o77.tiledSurface.reduceTileLevelDifferences, i78.tiledSurface.textureFadeDuration = o77.tiledSurface.textureFadeDuration, i78.heatmap.pixelRatio = o77.heatmap.pixelRatio, i78.heatmap.maxTotalNumberOfFeatures = o77.heatmap.maxTotalNumberOfFeatures, i78.fadeDuration = o77.fadeDuration, i78.antialiasingEnabled = o77.antialiasingEnabled, i78.physicallyBasedRenderingEnabled = o77.physicalBasedRenderingEnabled, i78.highQualityTransparency = o77.highQualityTransparency, i78.highResolutionAtmosphere = o77.highResolutionAtmosphere, i78.reflections = o77.reflections, i78.ambientOcclusion = o77.ambientOcclusion, i78.memoryLimit = o77.memoryLimit, i78.additionalCacheMemory = o77.additionalCacheMemory, i78.frameRate = o77.frameRate, i78.maximumPixelRatio = o77.maximumPixelRatio;
  }
};
function i63() {
  const a85 = !!has("esri-mobile"), i78 = !!has("ios"), o77 = n5(400);
  return { low: { graphics3D: { maxTotalNumberOfFeatures: 25e3, maxTotalNumberOfPrimitives: 85e4, polygonLodFactor: 0.5, polylineLodFactor: 1, snapshotAvailable: false, skipHighSymbolLods: true }, heatmap: { pixelRatio: 0.125, maxTotalNumberOfFeatures: 25e3 }, sceneService: { object: { lodFactor: 0.2, lodCrossfadeinDuration: n5(0), lodCrossfadeoutDuration: n5(0), lodCrossfadeUncoveredDuration: n5(0) }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 0.6 }, pointCloud: { lodFactor: 0.5 }, uncompressedTextureDownsamplingEnabled: true }, tiledSurface: { lodBias: -1, angledSplitBias: 0.5, reduceTileLevelDifferences: false, textureFadeDuration: n5(0) }, fadeDuration: n5(0), antialiasingEnabled: false, physicalBasedRenderingEnabled: false, highQualityTransparency: false, highResolutionAtmosphere: false, reflections: false, ambientOcclusion: false, memoryLimit: 200, additionalCacheMemory: 0, frameRate: 0, maximumPixelRatio: 1 }, medium: { graphics3D: { maxTotalNumberOfFeatures: 5e4, maxTotalNumberOfPrimitives: 17e5, polygonLodFactor: a85 ? 0.8 : 1, polylineLodFactor: a85 ? 1.2 : 1.5, snapshotAvailable: !i78, skipHighSymbolLods: false }, heatmap: { pixelRatio: 0.25, maxTotalNumberOfFeatures: 5e4 }, sceneService: { object: { lodFactor: 1, lodCrossfadeinDuration: n5(0), lodCrossfadeoutDuration: n5(0), lodCrossfadeUncoveredDuration: o77 }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 1 }, pointCloud: { lodFactor: 1 }, uncompressedTextureDownsamplingEnabled: a85 }, tiledSurface: { lodBias: 0, angledSplitBias: 1, reduceTileLevelDifferences: !has("disable-feature:reduce-map-tile-levels"), textureFadeDuration: o77 }, fadeDuration: o77, antialiasingEnabled: true, physicalBasedRenderingEnabled: true, highQualityTransparency: true, highResolutionAtmosphere: false, reflections: false, ambientOcclusion: false, memoryLimit: a85 ? 600 : 750, additionalCacheMemory: a85 ? -100 : 150, frameRate: 0, maximumPixelRatio: 1 }, high: { graphics3D: { maxTotalNumberOfFeatures: 5e4, maxTotalNumberOfPrimitives: 17e5, polygonLodFactor: a85 ? 1.2 : 2, polylineLodFactor: a85 ? 1.2 : 2, snapshotAvailable: !i78, skipHighSymbolLods: false }, heatmap: { pixelRatio: 0.5, maxTotalNumberOfFeatures: 5e4 }, sceneService: { object: { lodFactor: 1, lodCrossfadeinDuration: n5(0), lodCrossfadeoutDuration: n5(0), lodCrossfadeUncoveredDuration: o77 }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 1 }, pointCloud: { lodFactor: 1 }, uncompressedTextureDownsamplingEnabled: false }, tiledSurface: { lodBias: 0, angledSplitBias: 1, reduceTileLevelDifferences: !has("disable-feature:reduce-map-tile-levels"), textureFadeDuration: o77 }, fadeDuration: o77, antialiasingEnabled: true, physicalBasedRenderingEnabled: true, highQualityTransparency: true, highResolutionAtmosphere: true, reflections: true, ambientOcclusion: true, memoryLimit: a85 ? 900 : 1500, additionalCacheMemory: a85 ? -150 : 0, frameRate: 0, maximumPixelRatio: a85 ? 1 : 1 / 0 } };
}
a59.test = { reset() {
  const e78 = i63();
  for (const i78 of Object.keys(e78))
    a59.profiles[i78] = e78[i78];
} }, function(e78) {
  e78.profiles = i63();
}(a59 || (a59 = {}));
var o58 = a59;

// node_modules/@arcgis/core/views/3d/support/HighlightOptions.js
var e49 = new h7([0, 255, 255]);
var a60 = new h7([0, 0, 0]);
var l48 = 1;
var h39 = 0.25;
var d44 = 0.4;
var y29 = 0.2;
var n71 = class extends m {
  constructor() {
    super(...arguments), this.color = e49.clone(), this.haloColor = null, this.haloOpacity = l48, this.fillOpacity = h39, this.shadowOpacity = d44, this.shadowColor = a60.clone(), this.shadowDifference = y29;
  }
  static toEngineOptions(o77) {
    const r79 = h7.toUnitRGBA(o77.color ?? e49), s84 = null != o77.haloColor ? h7.toUnitRGBA(o77.haloColor) : r79, i78 = h7.toUnitRGBA(o77.shadowColor ?? a60), n103 = o77.haloOpacity ?? l48, f59 = o77.fillOpacity ?? h39, O29 = o77.shadowOpacity ?? d44, u58 = o77.shadowDifference ?? y29;
    return { color: r39(r79[0], r79[1], r79[2], r79[3]), haloColor: r39(s84[0], s84[1], s84[2], s84[3]), haloOpacity: n103, haloOpacityOccluded: 0.25 * n103, fillOpacity: f59, fillOpacityOccluded: 0.25 * f59, shadowOpacity: O29, shadowColor: r12(i78[0], i78[1], i78[2], i78[3]), occludedShadowOpacity: O29 * (1 - u58) };
  }
};
e([y({ type: h7 })], n71.prototype, "color", void 0), e([y({ type: h7 })], n71.prototype, "haloColor", void 0), e([y()], n71.prototype, "haloOpacity", void 0), e([y()], n71.prototype, "fillOpacity", void 0), e([y()], n71.prototype, "shadowOpacity", void 0), e([y({ type: h7 })], n71.prototype, "shadowColor", void 0), e([y()], n71.prototype, "shadowDifference", void 0), n71 = e([a4("esri.views.3d.support.HighlightOptions")], n71);
var f40 = n71;

// node_modules/@arcgis/core/views/3d/support/MapCoordsHelper.js
var a61 = class {
  constructor(i78, s84) {
    this.spatialReference = s84, this.unitInMeters = H(this.spatialReference, A2(this.spatialReference).metersPerDegree), this._geometryServiceURLPromise = n37(i78 && i78.get("portalItem")).catch(() => {
      throw new s4("mapcoordshelper:missing-geometry-service", "Must specify geometryService in esri/config");
    });
  }
  async toGeographic(e78) {
    const r79 = await this._geometryServiceURLPromise;
    let t88, o77 = true;
    Array.isArray(e78[0]) && "number" != typeof e78[0] ? t88 = e78 : (t88 = [e78], o77 = false);
    const a85 = t88.map((e79) => e79 instanceof x3 ? e79 : new x3(e79, this.spatialReference)), c75 = new a26({ geometries: a85, outSpatialReference: f2.WGS84 }), n103 = (await n35(r79, c75)).map((e79) => "point" === e79.type ? [e79.x, e79.y] : void 0).filter((e79) => !!e79);
    return o77 ? n103 : n103[0];
  }
};

// node_modules/@arcgis/core/views/3d/support/QualitySettings.js
var r56 = class extends m {
  constructor() {
    super(...arguments), this.minTotalNumberOfFeatures = 2e3, this.maxTotalNumberOfFeatures = 5e4, this.maxTotalNumberOfPrimitives = 17e5, this.snapshotAvailable = true, this.polygonLodFactor = 1, this.polylineLodFactor = 1, this.skipHighSymbolLods = false;
  }
};
e([y()], r56.prototype, "minTotalNumberOfFeatures", void 0), e([y()], r56.prototype, "maxTotalNumberOfFeatures", void 0), e([y()], r56.prototype, "maxTotalNumberOfPrimitives", void 0), e([y()], r56.prototype, "snapshotAvailable", void 0), e([y()], r56.prototype, "polygonLodFactor", void 0), e([y()], r56.prototype, "polylineLodFactor", void 0), e([y()], r56.prototype, "skipHighSymbolLods", void 0), r56 = e([a4("esri.views.3d.support.QualitySettings.Graphics3DSettings")], r56);
var p49 = class extends m {
  constructor() {
    super(...arguments), this.lodFactor = 1;
  }
};
e([y()], p49.prototype, "lodFactor", void 0), p49 = e([a4("esri.views.3d.support.QualitySettings.LoDFactorSettings")], p49);
var a62 = class extends p49 {
  constructor() {
    super(...arguments), this.lodCrossfadeinDuration = n5(0), this.lodCrossfadeoutDuration = n5(0), this.lodCrossfadeUncoveredDuration = n5(0);
  }
};
a62 = e([a4("esri.views.3d.support.QualitySettings.LoDFactor3DObjectSettings")], a62);
var n72 = class extends m {
  constructor() {
    super(...arguments), this.object = new a62(), this.point = new p49(), this.integratedMesh = new p49(), this.pointCloud = new p49(), this.uncompressedTextureDownsamplingEnabled = false;
  }
};
e([y({ type: a62 })], n72.prototype, "object", void 0), e([y({ type: p49 })], n72.prototype, "point", void 0), e([y({ type: p49 })], n72.prototype, "integratedMesh", void 0), e([y({ type: p49 })], n72.prototype, "pointCloud", void 0), e([y()], n72.prototype, "uncompressedTextureDownsamplingEnabled", void 0), n72 = e([a4("esri.views.3d.support.QualitySettings.SceneServiceSettings")], n72);
var d45 = class extends m {
  constructor() {
    super(...arguments), this.lodBias = 0, this.angledSplitBias = 1, this.reduceTileLevelDifferences = true, this.textureFadeDuration = n5(400);
  }
};
e([y()], d45.prototype, "lodBias", void 0), e([y()], d45.prototype, "angledSplitBias", void 0), e([y()], d45.prototype, "reduceTileLevelDifferences", void 0), e([y()], d45.prototype, "textureFadeDuration", void 0), d45 = e([a4("esri.views.3d.support.QualitySettings.TiledSurfaceSettings")], d45);
var l49 = class extends m {
  constructor() {
    super(...arguments), this.pixelRatio = 1, this.maxTotalNumberOfFeatures = 5e4;
  }
};
e([y()], l49.prototype, "pixelRatio", void 0), e([y()], l49.prototype, "maxTotalNumberOfFeatures", void 0), l49 = e([a4("esri.views.3d.support.QualitySettings.HeatmapSettings")], l49);
var c54 = class extends m {
  constructor() {
    super(...arguments), this.graphics3D = new r56(), this.sceneService = new n72(), this.tiledSurface = new d45(), this.heatmap = new l49(), this.fadeDuration = n5(400), this.antialiasingEnabled = true, this.physicallyBasedRenderingEnabled = false, this.highQualityTransparency = true, this.highResolutionAtmosphere = false, this.reflections = false, this.ambientOcclusion = false, this.memoryLimit = 750, this.additionalCacheMemory = 0, this.frameRate = void 0, this.maximumPixelRatio = 1 / 0;
  }
};
e([y({ type: r56 })], c54.prototype, "graphics3D", void 0), e([y({ type: n72 })], c54.prototype, "sceneService", void 0), e([y({ type: d45 })], c54.prototype, "tiledSurface", void 0), e([y({ type: l49 })], c54.prototype, "heatmap", void 0), e([y()], c54.prototype, "fadeDuration", void 0), e([y()], c54.prototype, "antialiasingEnabled", void 0), e([y()], c54.prototype, "physicallyBasedRenderingEnabled", void 0), e([y()], c54.prototype, "highQualityTransparency", void 0), e([y()], c54.prototype, "highResolutionAtmosphere", void 0), e([y()], c54.prototype, "reflections", void 0), e([y()], c54.prototype, "ambientOcclusion", void 0), e([y()], c54.prototype, "memoryLimit", void 0), e([y()], c54.prototype, "additionalCacheMemory", void 0), e([y()], c54.prototype, "frameRate", void 0), e([y()], c54.prototype, "maximumPixelRatio", void 0), c54 = e([a4("esri.views.3d.support.QualitySettings.QualitySettings")], c54);
var u40 = c54;

// node_modules/@arcgis/core/views/3d/support/MemoryManagedView.js
function e50(e78) {
  return "usedMemory" in e78 && "unloadedMemory" in e78 && "ignoresMemoryFactor" in e78;
}

// node_modules/@arcgis/core/views/3d/support/MemoryController.js
function y30(t88) {
  return new _28({ view: t88 });
}
var u41 = 1;
var l50 = 1;
var m36 = 0.75;
var n73 = 0.6;
var d46 = 1.3;
var _28 = class extends m {
  constructor(t88) {
    super(t88), this._quality = 1, this._usedMemory = 0, this._updating = false, this.minQuality = 0.1, this._stableQuality = 0, this._downscaleMemoryUsed = 0, this._canFastRecover = false, this._memoryPredicted = 0, this._cacheStorage = new r11(), this._warnMemoryUsage = null, this._numQualityChanges = 0, this._maxMemory = 750, this._additionalCacheMemory = 0;
  }
  destroy() {
    this._cacheStorage.destroy();
  }
  set maxMemory(t88) {
    null == t88 || t88 <= 0 || (this._stableQuality = 0, this._canFastRecover = false, this._maxMemory < t88 && this._updateQuality(u41), this._maxMemory = t88);
  }
  get maxMemory() {
    return this._maxMemory;
  }
  set additionalCacheMemory(t88) {
    null != t88 && (this._additionalCacheMemory = t88);
  }
  get additionalCacheMemory() {
    return this._additionalCacheMemory;
  }
  get memoryFactor() {
    return this._quality;
  }
  get updating() {
    return this._updating;
  }
  get usedMemory() {
    return this._usedMemory;
  }
  newCache(t88, e78) {
    return new s18(t88, this._cacheStorage, e78);
  }
  resetStableQuality() {
    this._stableQuality = 0;
  }
  disableMemCache() {
    this.additionalCacheMemory = -4096;
  }
  update() {
    if (this._updateMemory(), this._memoryPredicted <= 0 && !this._updating)
      return;
    let t88 = this._layersUpdating();
    if (this._memoryPredicted < n73 && this._canFastRecover)
      this._downscaleMemoryUsed = 0, this._stableQuality = 0, this._canFastRecover = false, this._updateQuality(u41);
    else if (t88)
      (this._memoryPredicted > 1.1 * l50 || this._usedMemory > l50) && (this._stableQuality > 0 ? (this._downscaleMemoryUsed = 0, this._updateQuality(this._stableQuality)) : this._quality > this.minQuality && this._downscaleMemoryUsed < this._usedMemory && (this._updateQuality(this._quality / d46), this._downscaleMemoryUsed = this._usedMemory, this._canFastRecover = false));
    else if (this._downscaleMemoryUsed = 0, this._usedMemory > l50)
      this._stableQuality = 0, this._canFastRecover = false, t88 = this._updateQuality(this._quality / d46), this._downscaleMemoryUsed = this._memoryPredicted;
    else if (this._stableQuality !== this._quality)
      if (this._usedMemory < m36 && this._quality < u41) {
        this._stableQuality = this._quality;
        const e78 = 0.05;
        t88 = this._updateQuality(this._quality + e78);
      } else
        this._quality < 1 && (this._canFastRecover = true);
    this._updating = t88;
  }
  _updateQuality(t88) {
    return (t88 = Math.min(Math.max(t88, this.minQuality), u41)) !== this._quality && (this._quality = t88, ++this._numQualityChanges, true);
  }
  _layersUpdating() {
    return this.view.allLayerViews.some((t88) => !!t88.updating);
  }
  _updateMemory() {
    var _a, _b;
    if (!this.view)
      return;
    let t88 = 0;
    this.view.basemapTerrain && (t88 += this.view.basemapTerrain.usedMemory);
    const e78 = ((_a = this.view) == null ? void 0 : _a._stage) && this.view._stage.renderView && ((_b = this.view._stage.renderer) == null ? void 0 : _b.edgeView);
    null != e78 && (t88 += e78.usedMemory);
    let s84 = 0;
    this.view.allLayerViews && this.view.allLayerViews.forEach((e79) => {
      if (e50(e79)) {
        const i78 = e79.ignoresMemoryFactor ? this._quality : 1;
        t88 += e79.usedMemory * i78, s84 += e79.unloadedMemory * i78;
      }
    });
    const a85 = null == this._warnMemoryUsage || Math.round(10 * t88) !== Math.round(10 * this._warnMemoryUsage), r79 = 1048576 * this.maxMemory;
    if (t88 > r79 && a85) {
      this._warnMemoryUsage = t88;
      const e79 = (t89) => (t89 / 1048576).toLocaleString(void 0, { maximumFractionDigits: 1 }) + " MB", a86 = Math.round(100 * this._quality);
      s3.getLogger(this).warn(`Memory Limit exceeded! Limit: ${e79(r79)} Current: ${e79(t88)} Projected: ${e79(t88 + s84)} Quality: ${a86}%`);
    }
    this._usedMemory = t88 / r79, this._memoryPredicted = (t88 + s84) / r79;
    const o77 = r79 - t88;
    this._cacheStorage.maxSize = Math.max(0, o77 + 1048576 * this.additionalCacheMemory);
  }
  get test() {
    const t88 = this;
    return { cacheStorage: this._cacheStorage, resetQualityChanges: () => {
      const e78 = t88._numQualityChanges;
      return t88._numQualityChanges = 0, e78;
    } };
  }
};
e([y({ constructOnly: true })], _28.prototype, "view", void 0), e([y()], _28.prototype, "maxMemory", null), e([y()], _28.prototype, "additionalCacheMemory", null), e([y()], _28.prototype, "memoryFactor", null), e([y()], _28.prototype, "updating", null), e([y()], _28.prototype, "usedMemory", null), e([y()], _28.prototype, "_quality", void 0), e([y()], _28.prototype, "_usedMemory", void 0), e([y()], _28.prototype, "_updating", void 0), e([y()], _28.prototype, "_stableQuality", void 0), e([y()], _28.prototype, "_maxMemory", void 0), e([y()], _28.prototype, "_additionalCacheMemory", void 0), _28 = e([a4("esri.views.3d.support.MemoryController")], _28);

// node_modules/@arcgis/core/views/3d/support/ResourceController.js
var f41 = class extends m {
  constructor() {
    super(...arguments), this.updating = false;
  }
};
function T23(e78) {
  return new j22({ view: e78 });
}
e([y({ readOnly: true })], f41.prototype, "updating", void 0), f41 = e([a4("esri.views.3d.support.ResourceControllerMain")], f41);
var j22 = class extends f41 {
  constructor() {
    super(...arguments), this._immediateTask = F5, this._normalTask = F5, this._updatingObjects = r13([]), this._frameTask = null;
  }
  get immediate() {
    return this._immediateTask;
  }
  get normal() {
    return this._normalTask;
  }
  initialize() {
    this._scheduler = c9(), this._memoryController = y30(this.view), this._streamDataLoader = new D5(), this._streamDataLoader.setup(I8, E12, this._scheduler), this.addHandles([l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.mode;
    }, (e78) => {
      null != e78 && (this._scheduler.state = e78);
    }, U3), l6(() => this.view.stationary, () => this._stationaryChangedHandler())]), this._frameTask = A({ update: (e78) => this._frame(e78) }), this._immediateTask = this._scheduler.registerTask(I3.RESOURCE_CONTROLLER_IMMEDIATE), this._normalTask = this._scheduler.registerTask(I3.RESOURCE_CONTROLLER);
  }
  destroy() {
    this._immediateTask.remove(), this._normalTask.remove(), this._frameTask = o(this._frameTask), this._streamDataLoader = l(this._streamDataLoader), this._memoryController = l(this._memoryController), this._scheduler = l(this._scheduler), this.view = null;
  }
  get updating() {
    var _a, _b, _c, _d;
    return !!(((_a = this._memoryController) == null ? void 0 : _a.updating) || ((_b = this._streamDataLoader) == null ? void 0 : _b.updating) || ((_c = this._immediateTask) == null ? void 0 : _c.updating)) || ((_d = this._updatingObjects) == null ? void 0 : _d.value.some((e78) => e78.updating));
  }
  get scheduler() {
    return this._scheduler;
  }
  get memoryController() {
    return this._memoryController;
  }
  createStreamDataRequester(e78) {
    const t88 = this._streamDataLoader;
    return { request: (r79, s84, o77) => t88.request(r79, s84, e78, o77), get busy() {
      return !t88.hasDownloadSlots(e78);
    } };
  }
  addUpdatingObject(e78) {
    const t88 = this._updatingObjects;
    return t88.value = [...t88.value, e78], e2(() => {
      t88.value = t88.value.filter((t89) => t89 !== e78);
    });
  }
  _frame(e78) {
    this.view.suspended || this.view.stateManager && (this.view.stateManager.step(u(e78.deltaTime)), !this._scheduler) || (this._scheduler.updateBudget(e78) ? (this._memoryController.update(), this._scheduler.frame()) : this._memoryController.updating && this._memoryController.update());
  }
  _stationaryChangedHandler() {
    this.memoryController.resetStableQuality();
  }
  get test() {
    return { getQueueStats: (e78) => this._streamDataLoader.test.loadQueue.getStatsForType(e78) };
  }
};
e([y()], j22.prototype, "view", void 0), e([y()], j22.prototype, "_scheduler", void 0), e([y()], j22.prototype, "_memoryController", void 0), e([y()], j22.prototype, "_streamDataLoader", void 0), e([y()], j22.prototype, "_immediateTask", void 0), e([y()], j22.prototype, "_normalTask", void 0), e([y()], j22.prototype, "_updatingObjects", void 0), e([y({ readOnly: true })], j22.prototype, "updating", null), j22 = e([a4("esri.views.3d.support.ResourceControllerImpl")], j22);

// node_modules/@arcgis/core/views/3d/layers/support/MemoryManagedLayerView.js
function o59(o77) {
  return e50(o77);
}

// node_modules/@arcgis/core/views/3d/layers/support/PerformanceInfoLayerView.js
function n74(n103) {
  return "performanceInfo" in n103;
}

// node_modules/@arcgis/core/views/3d/support/LayerPerformanceInfo.js
var t61 = class {
  constructor(t88, s84) {
    if (this.layer = null, this.memory = 0, this.displayedNumberOfFeatures = 0, this.maximumNumberOfFeatures = null, this.totalNumberOfFeatures = null, this.layer = t88.layer, this.memory = N4(t88) ? s84.basemapTerrain.getUsedMemoryForLayerView(t88) : t88.usedMemory, n74(t88)) {
      const e78 = t88.performanceInfo;
      this.displayedNumberOfFeatures = e78.displayedNumberOfFeatures, this.maximumNumberOfFeatures = e78.maximumNumberOfFeatures, this.totalNumberOfFeatures = e78.totalNumberOfFeatures;
    }
  }
};

// node_modules/@arcgis/core/views/3d/support/SceneViewPerformanceInfo.js
var s65 = class {
  constructor(s84) {
    var _a;
    if (this.totalMemory = 0, this.usedMemory = 0, this.quality = 1, this.load = 0, this.terrainMemory = 0, this.edgesMemory = 0, this.layerPerformanceInfos = new Array(), null != s84.resourceController) {
      const r79 = s84.resourceController.memoryController;
      this.totalMemory = (r79.maxMemory ?? 0) * E6.MEGABYTES, this.usedMemory = Math.round(r79.usedMemory * this.totalMemory), this.quality = r79.memoryFactor, this.load = s84.resourceController.scheduler.load;
    }
    this.terrainMemory = ((_a = s84.basemapTerrain) == null ? void 0 : _a.usedMemory) ?? 0;
    const a85 = s84._stage && s84._stage.renderView && s84._stage.renderer.edgeView;
    this.edgesMemory = null != a85 ? a85.usedMemory : 0, s84.allLayerViews.items.forEach((e78) => {
      (o59(e78) || N4(e78)) && this.layerPerformanceInfos.push(new t61(e78, s84));
    }), this.layerPerformanceInfos.sort((e78, r79) => r79.memory - e78.memory);
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/ObjectResourceCache.js
var l51 = class {
  constructor(o77) {
    this._gltfLoading = /* @__PURE__ */ new Map(), this._wosrLoading = /* @__PURE__ */ new Map(), this._gltfMemCache = o77("gltf-resources", () => {
    }), this._wosrMemCache = o77("wosr-resources", () => {
    });
  }
  destroy() {
    this._gltfLoading.forEach((o77) => o77.abortController.abort()), this._wosrLoading.forEach((o77) => o77.abortController.abort()), this._gltfMemCache.destroy(), this._wosrMemCache.destroy();
  }
  loadGLTF(o77, t88, e78) {
    const a85 = e78 ? `gltfPBR:${o77}` : `gltf:${o77}`, l75 = this._gltfMemCache.get(a85);
    return null != l75 ? Promise.resolve(l75) : this._loadOnce(this._gltfLoading, this._gltfMemCache, a85, (t89) => l13(new n24(t89.streamDataRequester), o77, t89, e78), t88);
  }
  loadWOSR(o77, t88) {
    const e78 = `wosr:${o77}:${t88.disableTextures}`, r79 = this._wosrMemCache.get(e78);
    return null != r79 ? Promise.resolve(r79) : this._loadOnce(this._wosrLoading, this._wosrMemCache, e78, (t89) => v10(o77, t89), t88);
  }
  async _loadOnce(r79, s84, a85, l75, i78) {
    s6(i78);
    const n103 = w(i78, () => this._abortLoad(r79, a85));
    let c75 = r79.get(a85);
    if (c75)
      c75.refCount++;
    else {
      const o77 = new AbortController();
      c75 = { refCount: 1, abortController: o77, promise: l75({ ...i78, signal: o77.signal }) }, r79.set(a85, c75);
    }
    try {
      const o77 = await c75.promise;
      return s84.put(a85, o77, o77.size), r79.delete(a85), s6(i78), o77;
    } finally {
      o(n103);
    }
  }
  _abortLoad(o77, t88) {
    const e78 = o77.get(t88);
    if (null != e78) {
      if (--e78.refCount > 0)
        return;
    }
    o77.delete(t88), null != e78 && e78.abortController.abort();
  }
};

// node_modules/@arcgis/core/views/3d/support/StreamTextureCollection.js
var n75 = class extends a36 {
  constructor(t88, e78, r79) {
    super(e78, r79), this._streamDataRequester = t88;
  }
  async fromUrl(r79, s84, l75) {
    s6(l75);
    const o77 = null != l75 ? l75.signal : null, n103 = this.makeUid(r79, s84);
    let h58 = this._textureRequests.get(n103);
    if (!h58) {
      const t88 = new AbortController(), e78 = this._streamDataRequester.request(r79, "image", { uid: n103, signal: t88.signal });
      h58 = new i37(), h58.abortController = t88;
      const l76 = h58;
      this._textureRequests.set(n103, h58), h58.textureAsync = e78.then(async (t89) => {
        const e79 = this._createTexture(r79, t89, s84);
        return l76.texture = e79, l76.abortController = null, this._stage.add(e79), await this._stage.load(e79), { uid: n103, texture: e79, release: () => this._release(n103) };
      }, (t89) => {
        throw l76.abortController = null, t89;
      });
    }
    h58.referenceCount++;
    try {
      return await p(h58.textureAsync, o77);
    } catch (a85) {
      throw this._release(n103), a85;
    }
  }
  _createTexture(t88, e78, s84) {
    var _a;
    const i78 = { width: e78.width, height: e78.height, wrap: { s: D2.CLAMP_TO_EDGE, t: D2.CLAMP_TO_EDGE }, preMultiplyAlpha: true };
    if (vt(t88)) {
      if (s84 || 0 === e78.width && 0 === e78.height) {
        const t89 = e78.width ? e78.height / e78.width : 1;
        s84 = s84 || 64, t89 > 1 ? (e78.width = Math.round(s84 / t89), e78.height = s84) : (e78.width = s84, e78.height = Math.round(s84 * t89));
      }
      ((_a = this._stage.renderView) == null ? void 0 : _a.renderingContext.driverTest.svgPremultipliesAlpha.result) && (i78.preMultiplyAlpha = false);
    }
    return new w8(e78, i78);
  }
};

// node_modules/@arcgis/core/views/3d/support/SharedSymbolResources.js
var S19 = class {
  constructor(e78) {
    this.streamDataRequester = null, this._graphicsOwners = [], this._screenSizePerspectiveHandles = null, this.cimSymbolRasterizer = null, this._viewState = e78.viewState, this._view = e78.view, this._pointsOfInterest = e78.pointsOfInterest, this.streamDataRequester = e78.resourceController.createStreamDataRequester(A13.SYMBOLOGY), this.objectResourceCache = new l51((t89, s84) => e78.resourceController.memoryController.newCache(t89, s84)), this.textures = new n75(this.streamDataRequester, e78.view._stage, e78.resourceController.scheduler);
    const t88 = A2(this._view.spatialReference).radius;
    this.screenSizePerspectiveSettings = r26(e78.viewingMode, t88), this.screenSizePerspectiveSettingsLabels = n30(e78.viewingMode, t88);
  }
  destroy() {
    this.textures.destroy(), this.streamDataRequester = null;
  }
  addGraphicsOwner(t88) {
    if (!t88)
      return e2();
    this._graphicsOwners.push(t88);
    const r79 = l6(() => {
      var _a;
      return (_a = t88.layer) == null ? void 0 : _a.screenSizePerspectiveEnabled;
    }, () => this._updateScreenSizePerspectiveEnabled());
    return this._updateScreenSizePerspectiveEnabled(), e2(() => {
      r79.remove(), z(this._graphicsOwners, t88), this._updateScreenSizePerspectiveEnabled();
    });
  }
  _updateScreenSizePerspectiveEnabled() {
    const e78 = this._graphicsOwners.some((e79) => {
      var _a;
      return true === ((_a = e79.layer) == null ? void 0 : _a.screenSizePerspectiveEnabled);
    });
    if (e78 && !this._screenSizePerspectiveHandles) {
      this._screenSizePerspectiveHandles = new t3();
      const e79 = () => this._updateScreenSizePerspectiveSettings();
      this._screenSizePerspectiveHandles.add([l6(() => this._pointsOfInterest.centerOnSurfaceInfrequent.distance, e79, U3), this._viewState.events.on("camera-projection-changed", e79)]), this._updateScreenSizePerspectiveSettings();
    } else
      e78 || (this._screenSizePerspectiveHandles = l(this._screenSizePerspectiveHandles));
  }
  _updateScreenSizePerspectiveSettings() {
    const e78 = this._pointsOfInterest;
    d47.distance = e78.centerOnSurfaceInfrequent.distance, d47.fovY = this._viewState.camera.fovY, this.screenSizePerspectiveSettings.update(d47), this.screenSizePerspectiveSettingsLabels.update(d47), this._view._stage.renderView.requestRender();
  }
  get test() {
    return { screenSizePerspectiveHandles: this._screenSizePerspectiveHandles };
  }
};
var d47 = { distance: 0, fovY: 0 };

// node_modules/@arcgis/core/views/3d/support/debugUtils.js
var t62 = class {
  constructor(o77, e78, t88 = "") {
    this.graphics = o77, this._symbol = new h8({ symbolLayers: [new w5({ material: { color: e78 }, outline: { color: [255, 255, 255], size: 1 }, resource: { primitive: "circle" } }), new z4({ text: t88, halo: { color: "white", size: 1 / 0.75 }, material: { color: e78 }, size: 12 })] });
  }
  show(i78, r79) {
    if (null == r79)
      return;
    this.hide();
    const s84 = new x3({ x: i78[0], y: i78[1], z: i78[2], spatialReference: r79 });
    this._graphic = new h17({ geometry: s84, symbol: this._symbol }), this.graphics.add(this._graphic);
  }
  hide() {
    null != this._graphic && (this.graphics.remove(this._graphic), this._graphic = null);
  }
};

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/PointOfInterest.js
var c55 = class extends m {
  constructor(r79) {
    super(r79), this.handles = new t3();
  }
  destroy() {
    this.handles.destroy();
  }
};
e([y({ constructOnly: true })], c55.prototype, "renderCoordsHelper", void 0), e([y({ constructOnly: true })], c55.prototype, "surface", void 0), e([y({ constructOnly: true })], c55.prototype, "state", void 0), c55 = e([a4("esri.views.3d.support.PointOfInterest")], c55);

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/CameraOnSurface.js
var _29 = Array;
var g29 = class extends c55 {
  constructor(t88) {
    super(t88), this._dirty = false, this._propertiesPool = new o27({ location: x3, renderLocation: _29 }, this), this._estimatedSurfaceAltitude = 0, this._pendingElevationQueryController = null, this.renderLocation = n7(), this._tmpPoint = new x3();
  }
  initialize() {
    if (this.scheduler && this.handles.add(this.scheduler.registerTask(this.task, this)), this.runTask(), this.map) {
      const t88 = () => this._setDirty();
      this.handles.add(a9(() => {
        var _a, _b;
        return (_b = (_a = this.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.layers;
      }, "change", t88, { onListenerAdd: t88, onListenerRemove: t88 }));
    }
    this._updateRenderLocation();
  }
  destroy() {
    this._cancelPendingRequest(), this._propertiesPool = l(this._propertiesPool);
  }
  get _camera() {
    return this.state.contentCamera;
  }
  get location() {
    const t88 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, t88, this.state.spatialReference), t88;
  }
  get scale() {
    const t88 = this._camera, e78 = x4(t88.eye, this.renderLocation), r79 = { renderCoordsHelper: this.renderCoordsHelper, state: { camera: t88 } };
    return V11(r79, e78, 0);
  }
  get updating() {
    return this._dirty || null != this._pendingElevationQueryController;
  }
  updateRenderLocation() {
    this._setDirty(), this._updateRenderLocation();
  }
  _setDirty() {
    this._dirty || (this._dirty = true, this.notifyChange("updating"));
  }
  _cancelPendingRequest() {
    const t88 = this._pendingElevationQueryController;
    t88 && (this._pendingElevationQueryController = null, t88.abort(), this.notifyChange("updating"));
  }
  get running() {
    return !this._pendingElevationQueryController && this._dirty;
  }
  runTask() {
    if (this._cancelPendingRequest(), this._dirty = false, this.notifyChange("updating"), !this.map || !this.map.ground)
      return this._updateSurfaceAltitude(0), g5.YIELD;
    const t88 = this.state.spatialReference;
    this.renderCoordsHelper.fromRenderCoords(this._camera.eye, this._tmpPoint, t88);
    const e78 = (this._tmpPoint.z ?? 0) > C20 && this.renderCoordsHelper.viewingMode === l14.Global && (t88.isWGS84 || t88.isWebMercator);
    let o77 = new AbortController();
    return this.map.ground.queryElevation(this._tmpPoint, { signal: o77.signal, cache: this.cache, minDemResolution: e78 ? v32 : 0 }).then((t89) => this._updateSurfaceAltitude(t89.geometry.z ?? 0)).catch((t89) => {
      d2(t89) || this._updateSurfaceAltitude(0);
    }).catch(() => {
    }).then(() => {
      this._pendingElevationQueryController === o77 && (this._pendingElevationQueryController = null, this.notifyChange("updating")), o77 = null;
    }), this._pendingElevationQueryController = o77, g5.YIELD;
  }
  _updateSurfaceAltitude(t88) {
    this._estimatedSurfaceAltitude !== t88 && (this._estimatedSurfaceAltitude = t88, this._updateRenderLocation());
  }
  _updateRenderLocation() {
    this.renderCoordsHelper.setAltitude(f42, this._estimatedSurfaceAltitude, this._camera.eye), F2(this._get("renderLocation"), f42) || (this._set("renderLocation", r7(this._propertiesPool.get("renderLocation"), f42)), this.notifyChange("renderLocation"));
  }
};
e([y({ constructOnly: true })], g29.prototype, "scheduler", void 0), e([y({ constructOnly: true })], g29.prototype, "cache", void 0), e([y({ constructOnly: true })], g29.prototype, "task", void 0), e([y({ readOnly: true })], g29.prototype, "location", null), e([y({ constructOnly: true })], g29.prototype, "map", void 0), e([y({ readOnly: true })], g29.prototype, "renderLocation", void 0), e([y({ readOnly: true })], g29.prototype, "scale", null), e([y({ readOnly: true })], g29.prototype, "updating", null), g29 = e([a4("esri.views.3d.support.CameraOnSurface")], g29);
var f42 = n7();
var C20 = 1e5;
var v32 = 1e6;

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/CenterOnSurface.js
var j23 = Array;
var L20 = class extends c55 {
  constructor(t88) {
    super(t88), this._propertiesPool = new o27({ location: x3, renderLocation: j23 }, this), this._currentSurfaceAltitude = 0, this._latestSurfaceAltitude = 0, this.distance = 0, this.renderLocation = n7(), this.updating = false;
  }
  initialize() {
    this._frameWorker = this.scheduler.registerTask(this.task, this), this.runTask();
  }
  destroy() {
    this._frameWorker = o(this._frameWorker), this._propertiesPool = l(this._propertiesPool);
  }
  get _camera() {
    return this.state.contentCamera;
  }
  get location() {
    const t88 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, t88, this.state.spatialReference), t88;
  }
  updateRenderLocation() {
    this.updating = true, this._updateRenderLocation();
  }
  get estimatedSurfaceAltitude() {
    return this._latestSurfaceAltitude;
  }
  get running() {
    return this.updating;
  }
  runTask() {
    return this._latestSurfaceAltitude = this.estimateSurfaceAltitudeAtCenter(), this._updateRenderLocation(), this.updating = false, g5.YIELD;
  }
  _updateRenderLocation() {
    const t88 = v33;
    let e78 = this._calculateSurfaceIntersection(this._currentSurfaceAltitude, t88);
    const r79 = this._currentSurfaceAltitude !== this._latestSurfaceAltitude;
    !e78 && r79 && (e78 = this._calculateSurfaceIntersection(this._latestSurfaceAltitude, t88), e78 && (this._currentSurfaceAltitude = this._latestSurfaceAltitude));
    const s84 = C21;
    e78 && this._latestSurfaceAltitudeChangesDistanceSignificantly(t88, s84) && (r7(t88, s84), this._currentSurfaceAltitude = this._latestSurfaceAltitude), e78 ? this.distance = x4(this._camera.eye, t88) : (g3(t88, this._camera.viewForward, this._get("distance")), u2(t88, t88, this._camera.eye)), F2(this._get("renderLocation"), t88) || this._set("renderLocation", r7(this._propertiesPool.get("renderLocation"), t88));
  }
  _calculateSurfaceIntersection(t88, r79) {
    var _a, _b;
    const s84 = this._camera;
    if (!this.renderCoordsHelper.intersectManifold(s84.ray, t88, r79))
      return false;
    if (this.state.isGlobal) {
      const e78 = A2(this.renderCoordsHelper.spatialReference).radius, i78 = e78 + t88, o77 = v3(s84.eye), a85 = o77 < i78 * i78, l75 = x4(s84.eye, r79);
      if (a85 && l75 > e78 / 4) {
        const t89 = i78 - Math.sqrt(o77);
        return g3(r79, s84.viewForward, t89), u2(r79, r79, s84.eye), true;
      }
    } else {
      const t89 = ((_a = this.surface) == null ? void 0 : _a.ready) ? this.surface.extent : null;
      null != t89 && kn(t89, (_b = this.surface) == null ? void 0 : _b.spatialReference, I20, this.renderCoordsHelper.spatialReference) && (r79[0] = i3(r79[0], I20[0], I20[2]), r79[1] = i3(r79[1], I20[1], I20[3]));
    }
    return true;
  }
  _latestSurfaceAltitudeChangesDistanceSignificantly(t88, e78) {
    if (this._latestSurfaceAltitude === this._currentSurfaceAltitude || null == t88)
      return false;
    if (this._calculateSurfaceIntersection(this._latestSurfaceAltitude, e78)) {
      if (t27.TESTS_DISABLE_OPTIMIZATIONS)
        return true;
      const r79 = this._camera.eye, s84 = x4(r79, t88), i78 = x4(r79, e78);
      if (Math.abs(i78 - s84) / s84 > k20)
        return true;
    }
    return false;
  }
};
e([y({ constructOnly: true })], L20.prototype, "scheduler", void 0), e([y({ constructOnly: true })], L20.prototype, "task", void 0), e([y()], L20.prototype, "distance", void 0), e([y({ constructOnly: true })], L20.prototype, "estimateSurfaceAltitudeAtCenter", void 0), e([y({ readOnly: true })], L20.prototype, "location", null), e([y({ readOnly: true })], L20.prototype, "renderLocation", void 0), e([y()], L20.prototype, "updating", void 0), L20 = e([a4("esri.views.3d.support.CenterOnSurface")], L20);
var k20 = 0.05;
var v33 = n7();
var C21 = n7();
var I20 = i4();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/ContentGeometryUpdates.js
var n76 = class {
  constructor(s84) {
    this._handles = new t3(), this.events = new n9(), this._contentLayerViews = s84.contentLayerViews, this._handles.add(this._contentLayerViews.on("change", (e78) => this._layerViewsChanged(e78))), this._layerViewsChanged({ added: this._contentLayerViews.toArray(), removed: [], moved: [], target: this._contentLayerViews });
  }
  destroy() {
    this._handles = l(this._handles), this._contentLayerViews.destroy();
  }
  _layerViewsChanged(e78) {
    e78.added.forEach((e79) => {
      "esri.views.3d.layers.SceneLayerView3D" === e79.declaredClass && this._handles.add(e79.on("visible-geometry-changed", () => this._contentChanged()), e79.uid);
    }), e78.removed.forEach((e79) => this._handles.remove(e79.uid));
  }
  _contentChanged() {
    this.events.emit("request-update", a63);
  }
};
var a63 = {};

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/Focus.js
var L21 = Array;
var P20 = class extends c55 {
  constructor(e78) {
    super(e78), this._propertiesPool = new o27({ location: x3, renderLocation: L21 }, this), this._dirty = true, this.renderLocation = this._propertiesPool.get("renderLocation");
  }
  initialize() {
    this.handles.add([l6(() => this.centerOnSurface.renderLocation, () => this.updateRenderLocation()), l6(() => this.state.contentCamera, () => this.updateRenderLocation())]), this.scheduler && this.handles.add(this.scheduler.registerTask(I3.POINT_OF_INTEREST_FREQUENT, this));
  }
  destroy() {
    this._propertiesPool = l(this._propertiesPool);
  }
  get updating() {
    return this._dirty || this.centerOnSurface.updating;
  }
  get location() {
    const e78 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, e78, this.state.spatialReference), e78;
  }
  get running() {
    return this._dirty;
  }
  runTask() {
    const e78 = this._get("renderLocation"), r79 = this.centerOnSurface.renderLocation, o77 = this.renderCoordsHelper, s84 = this.state.contentCamera;
    this._dirty = false, o77.worldUpAtPosition(r79, S20);
    const i78 = Math.max(0, (Math.acos(P3(S20, s84.viewForward)) - 0.5 * Math.PI) * (s84.aboveGround ? 1 : -1));
    if (Number.isNaN(i78)) {
      if (!e78 || !G2(e78, r79)) {
        const e79 = this._propertiesPool.get("renderLocation");
        r7(e79, r79), this._set("renderLocation", e79);
      }
      return g5.YIELD;
    }
    const n103 = 1 - i3(i78 / (0.5 * Math.PI), 0, 1), h58 = n103 * n103 * n103;
    this._calculateScreenHorizontalEdgeOnSurface(C22);
    const l75 = this._propertiesPool.get("renderLocation");
    return A3(l75, r79, C22, h58), e78 && G2(e78, l75) || this._set("renderLocation", l75), g5.YIELD;
  }
  _calculateScreenHorizontalEdgeOnSurface(e78) {
    const t88 = this.state.contentCamera, r79 = t88.getRenderCenter(x7());
    if (r79[1] = t88.aboveGround ? t88.padding[ht.BOTTOM] : t88.fullHeight - t88.padding[ht.TOP], this.estimateSurfaceIntersectionAtRenderPoint(r79, e78))
      return e78;
    const o77 = this.renderCoordsHelper.getAltitude(this.centerOnSurface.renderLocation);
    if (t88.unprojectFromRenderScreen(r79, v34)) {
      e8(v34, v34, t88.eye);
      const r80 = z2(v34, v34);
      if (this.renderCoordsHelper.intersectManifold(p10(t88.eye, r80), o77, e78))
        return e78;
    }
    return this.renderCoordsHelper.setAltitude(e78, o77, t88.eye);
  }
  updateRenderLocation() {
    this._dirty = true;
  }
};
e([y()], P20.prototype, "_dirty", void 0), e([y({ constructOnly: true })], P20.prototype, "scheduler", void 0), e([y({ constructOnly: true })], P20.prototype, "centerOnSurface", void 0), e([y({ constructOnly: true })], P20.prototype, "estimateSurfaceIntersectionAtRenderPoint", void 0), e([y({ readOnly: true })], P20.prototype, "updating", null), e([y({ readOnly: true })], P20.prototype, "location", null), e([y({ readOnly: true })], P20.prototype, "renderLocation", void 0), P20 = e([a4("esri.views.3d.support.pointsOfInterest.Focus")], P20);
var S20 = n7();
var v34 = n7();
var C22 = n7();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/StableSurfaceCenter.js
var p50 = class extends m {
  get surface() {
    var _a;
    return (_a = this.view.map) == null ? void 0 : _a.ground;
  }
  get surfaceView() {
    return this.view.basemapTerrain;
  }
  get renderLocation() {
    if (!this.location)
      return null;
    const e78 = n7();
    return this.view.renderCoordsHelper.toRenderCoords(this.location, e78), e78;
  }
  constructor(e78) {
    super(e78), this.location = null, this._updateController = null, this._handles = new t3();
  }
  initialize() {
    this.view.state.isLocal && (this._handles.add([l6(() => {
      var _a, _b;
      return [(_a = this.surfaceView) == null ? void 0 : _a.spatialReference, (_b = this.surfaceView) == null ? void 0 : _b.extent];
    }, () => this._update()), a9(() => {
      var _a;
      return (_a = this.surface) == null ? void 0 : _a.layers;
    }, "change", () => this._update())]), this._update());
  }
  destroy() {
    this._handles.destroy();
  }
  _update() {
    if (this._updateController && (this._updateController.abort(), this._updateController = null), !this.surfaceView || null == this.surfaceView.extent || null == this.surfaceView.spatialReference)
      return void this._set("location", null);
    const e78 = y4(this.surfaceView.extent), t88 = new x3({ x: e78[0], y: e78[1], z: 0, spatialReference: this.surfaceView.spatialReference });
    this.surface && this.surface.layers.length > 0 ? (this._set("location", null), this._updateController = new AbortController(), this.surface.queryElevation(t88, { noDataValue: 0, signal: this._updateController.signal, cache: this.cache }).then((e79) => {
      this._updateController = null, this._set("location", e79.geometry);
    }).catch((e79) => {
      d2(e79) || e79 && "elevation-query:invalid-layer" === e79.name || console.error("StableSurfaceCenter failed to update: ", e79);
    })) : this._set("location", t88);
  }
};
e([y({ constructOnly: true })], p50.prototype, "view", void 0), e([y({ constructOnly: true })], p50.prototype, "cache", void 0), e([y()], p50.prototype, "surface", null), e([y()], p50.prototype, "surfaceView", null), e([y({ readOnly: true })], p50.prototype, "location", void 0), e([y({ readOnly: true })], p50.prototype, "renderLocation", null), p50 = e([a4("esri.views.3d.terrain.StableSurfaceCenter")], p50);

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/SurfaceGeometryUpdates.js
var u42 = class extends m {
  constructor(e78) {
    super(e78), this._tileGeometryUpdateExtent = C2(), this._tileGeometryUpdateSpatialReference = null, this.events = new n9(), this.updating = false;
  }
  initialize() {
    this.addHandles([this.surface.on("elevation-change", (e78) => this._tileGeometryChanged(e78)), this.scheduler.registerTask(I3.SURFACE_GEOMETRY_UPDATES, this)]);
  }
  get running() {
    return this.updating;
  }
  runTask() {
    return this.updating ? (this._tileGeometryUpdateSpatialReference && this._centerIntersectsExtent(this._tileGeometryUpdateExtent, this._tileGeometryUpdateSpatialReference) && this.events.emit("request-update", h40), C2(this._tileGeometryUpdateExtent), this._set("updating", false), g5.YIELD) : g5.YIELD;
  }
  _tileGeometryChanged(e78) {
    this._tileGeometryUpdateSpatialReference = e78.spatialReference, m3(this._tileGeometryUpdateExtent, e78.extent, this._tileGeometryUpdateExtent), this._set("updating", true);
  }
  _furthestCenterOnSurface() {
    let e78 = this.centerOnSurfaces[0];
    for (let t88 = 1; t88 < this.centerOnSurfaces.length; t88++) {
      const r79 = this.centerOnSurfaces[t88];
      r79.distance > e78.distance && (e78 = r79);
    }
    return e78;
  }
  _centerIntersectsExtent(e78, t88) {
    const r79 = this.state.contentCamera.eye, s84 = y31, o77 = this._furthestCenterOnSurface();
    return this.renderCoordsHelper.fromRenderCoords(r79, l52, t88), this.renderCoordsHelper.fromRenderCoords(o77.renderLocation, m37, t88), l52[0] < m37[0] ? (s84[0] = l52[0], s84[2] = m37[0]) : (s84[0] = m37[0], s84[2] = l52[0]), l52[1] < m37[1] ? (s84[1] = l52[1], s84[3] = m37[1]) : (s84[1] = m37[1], s84[3] = l52[1]), q(s84, e78);
  }
};
e([y({ constructOnly: true })], u42.prototype, "state", void 0), e([y({ constructOnly: true })], u42.prototype, "centerOnSurfaces", void 0), e([y({ constructOnly: true })], u42.prototype, "renderCoordsHelper", void 0), e([y({ constructOnly: true })], u42.prototype, "scheduler", void 0), e([y({ constructOnly: true })], u42.prototype, "surface", void 0), e([y({ readOnly: true })], u42.prototype, "updating", void 0), u42 = e([a4("esri.views.3d.support.SurfaceGeometryUpdates")], u42);
var h40 = {};
var l52 = n7();
var m37 = n7();
var y31 = C2();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/PointsOfInterest.js
var P21 = class extends m {
  constructor(e78) {
    super(e78), this._handles = new t3(), this._tmpRay = d10(), this._centerRayDirty = true, this._surfaceAltitudeAtCenter = 0, this._surfaceAltitudeAtCenterDirty = true, this._contentAltitudeAtCenter = 0, this._contentAltitudeAtCenterDirty = true, this._propertiesPool = new o27({ renderPointOfView: j24 }, this), this.renderPointOfView = n7(), this._pois = new Array(), this._debugCenters = /* @__PURE__ */ new Map();
  }
  initialize() {
    var _a;
    const { state: e78, basemapTerrain: t88, renderCoordsHelper: r79, map: c75 } = this.view;
    this._surfaceIntersector = A15(e78.viewingMode), e78.isGlobal ? this._surfaceIntersector.options.backfacesTerrain = false : this._surfaceIntersector.options.backfacesTerrain = true, this._surfaceIntersector.options.invisibleTerrain = false, this._surfaceIntersector.options.store = t33.MIN, this._contentIntersector = A15(e78.viewingMode);
    const u58 = () => this._estimateSurfaceAltitudeAtCenter(), h58 = this.view.resourceController.scheduler, d63 = (_a = this.view.basemapTerrain) == null ? void 0 : _a.elevationQueryCache, p70 = { state: e78, scheduler: h58, surface: t88, renderCoordsHelper: r79 };
    this._set("centerOnSurfaceInfrequent", new L20({ ...p70, task: I3.POINT_OF_INTEREST_INFREQUENT, estimateSurfaceAltitudeAtCenter: u58 })), this._set("centerOnSurfaceFrequent", new L20({ ...p70, task: I3.POINT_OF_INTEREST_FREQUENT, estimateSurfaceAltitudeAtCenter: u58 })), this._set("centerOnContent", new L20({ ...p70, task: I3.POINT_OF_INTEREST_FREQUENT, estimateSurfaceAltitudeAtCenter: () => this._estimateContentAltitudeAtCenter() })), this._set("cameraOnSurface", new g29({ ...p70, cache: d63, task: I3.POINT_OF_INTEREST_INFREQUENT, map: c75 })), this._set("surfaceGeometryUpdates", new u42({ ...p70, centerOnSurfaces: [this.centerOnSurfaceFrequent, this.centerOnContent, this.centerOnSurfaceInfrequent] })), this._set("contentGeometryUpdates", new n76({ contentLayerViews: this.view.allLayerViews, renderCoordsHelper: r79 })), this._set("surfaceOrigin", new p50({ cache: d63, view: this.view })), this._set("focus", new P20({ state: e78, scheduler: h58, surface: t88, renderCoordsHelper: r79, centerOnSurface: this.centerOnSurfaceFrequent, estimateSurfaceIntersectionAtRenderPoint: (e79, t89) => this._estimateSurfaceIntersectionAtRenderPoint(e79, this.view.state.contentCamera, t89) })), this._pois.push(this.centerOnContent, this.centerOnSurfaceFrequent, this.centerOnSurfaceInfrequent, this.cameraOnSurface, this.focus);
    const f59 = this.view.graphics;
    this._debugCenters.set(this.centerOnContent, new t62(f59, "red", "CenterOnContent")), this._debugCenters.set(this.centerOnSurfaceFrequent, new t62(f59, "red", "CenterOnSurface")), this._debugCenters.set(this.centerOnSurfaceInfrequent, new t62(f59, "red", "CenterOnSurface")), this._debugCenters.set(this.cameraOnSurface, new t62(f59, "blue", "CameraOnSurface")), this._debugCenters.set(this.focus, new t62(f59, "green", "Focus")), this._handles.add([l6(() => e78.contentCamera, (e79) => this._cameraChanged(e79), U3), l6(() => t88.extent, () => this._updateCenterPointsOfInterest()), f6(() => !t88.updating, () => this._updateCenterPointsOfInterest(), U3), a9(() => this.surfaceGeometryUpdates.events, "request-update", () => this._updateCenterPointsOfInterest()), a9(() => this.contentGeometryUpdates.events, "request-update", () => this._updateCenterOnContent()), f6(() => t27.SHOW_POI, (e79) => this._setDebug(e79), h3)]), this._cameraChanged(this.view.state.contentCamera);
    for (const s84 of this._pois)
      s84.runTask();
  }
  destroy() {
    this._setDebug(false), this._handles.destroy(), this._propertiesPool.destroy();
    for (const e78 of this._pois)
      e78.destroy();
    this.surfaceOrigin.destroy();
  }
  get updating() {
    var _a;
    return !(!((_a = this.surfaceGeometryUpdates) == null ? void 0 : _a.updating) && !this._pois.some((e78) => e78.updating));
  }
  get _centerRay() {
    return this._centerRayDirty && (this._centerRayCached = this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(this.view.state.contentCamera, this._tmpRay), this._centerRayDirty = false), this._centerRayCached;
  }
  _estimateContentAltitudeAtCenter() {
    if (!this._contentAltitudeAtCenterDirty)
      return this._contentAltitudeAtCenter;
    this._contentAltitudeAtCenterDirty = false;
    const e78 = this._centerRay;
    return null == e78 || (this.view.sceneIntersectionHelper.intersectRay(e78, this._contentIntersector, U17, F21) ? this._contentAltitudeAtCenter = this.view.renderCoordsHelper.getAltitude(U17) : this._contentAltitudeAtCenter = this._estimateSurfaceAltitudeAtCenter()), this._contentAltitudeAtCenter;
  }
  _estimateSurfaceAltitudeAtCenter() {
    if (!this.view.basemapTerrain)
      return 0;
    if (!this._surfaceAltitudeAtCenterDirty)
      return this._surfaceAltitudeAtCenter;
    this._surfaceAltitudeAtCenterDirty = false;
    const e78 = this._centerRay;
    if (null == e78)
      return this._surfaceAltitudeAtCenter;
    const t88 = e78.origin, r79 = u2(U17, e78.origin, e78.direction);
    return this._surfaceIntersector.resetWithRay(e78, this.view.state.contentCamera), this.view.basemapTerrain.intersect(this._surfaceIntersector, null, t88, r79), this._surfaceIntersector.results.min.getIntersectionPoint(U17) && (this._surfaceAltitudeAtCenter = this.view.renderCoordsHelper.getAltitude(U17)), this._surfaceAltitudeAtCenter;
  }
  _estimateSurfaceIntersectionAtRenderPoint(e78, t88, r79) {
    const s84 = g12(t88, e78, E31);
    if (null == s84)
      return null;
    const n103 = s84.origin, i78 = u2(U17, s84.origin, s84.direction);
    return this._surfaceIntersector.resetWithRay(s84, t88), this.view.basemapTerrain.intersect(this._surfaceIntersector, null, n103, i78), this._surfaceIntersector.results.min.getIntersectionPoint(r79) ? r79 : null;
  }
  _cameraChanged(e78) {
    this._updateCenterPointsOfInterest();
    const t88 = e78.eye;
    F2(this.renderPointOfView, t88) || this._set("renderPointOfView", r7(this._propertiesPool.get("renderPointOfView"), t88));
  }
  _updateCenterPointsOfInterest() {
    this._centerRayDirty = true, this._surfaceAltitudeAtCenterDirty = true, this._contentAltitudeAtCenterDirty = true;
    for (const e78 of this._pois)
      e78.updateRenderLocation();
  }
  _updateCenterOnContent() {
    this._contentAltitudeAtCenterDirty = true, this.centerOnContent.updateRenderLocation();
  }
  _setDebug(e78) {
    if (!e78)
      return this._debugCenters.forEach((e79) => e79.hide()), void this._handles.remove("debug");
    for (const t88 of this._pois)
      this._handles.add(l6(() => t88.renderLocation, (e79) => {
        var _a;
        return (_a = this._debugCenters.get(t88)) == null ? void 0 : _a.show(e79, t88.renderCoordsHelper.spatialReference);
      }, h3), "debug");
  }
  get test() {
    return { update: () => {
      this.surfaceGeometryUpdates.runTask();
      for (const e78 of this._pois)
        e78.runTask();
    }, surfaceGeometryUpdates: this.surfaceGeometryUpdates };
  }
};
e([y({ readOnly: true })], P21.prototype, "centerOnContent", void 0), e([y({ readOnly: true })], P21.prototype, "centerOnSurfaceFrequent", void 0), e([y({ readOnly: true })], P21.prototype, "centerOnSurfaceInfrequent", void 0), e([y({ readOnly: true })], P21.prototype, "cameraOnSurface", void 0), e([y({ readOnly: true })], P21.prototype, "focus", void 0), e([y({ readOnly: true })], P21.prototype, "renderPointOfView", void 0), e([y({ readOnly: true })], P21.prototype, "surfaceOrigin", void 0), e([y({ readOnly: true })], P21.prototype, "contentGeometryUpdates", void 0), e([y({ readOnly: true })], P21.prototype, "surfaceGeometryUpdates", void 0), e([y({ constructOnly: true })], P21.prototype, "view", void 0), e([y({ readOnly: true })], P21.prototype, "updating", null), P21 = e([a4("esri.views.3d.support.PointsOfInterest")], P21);
var j24 = Array;
var U17 = n7();
var E31 = d10();
var F21 = { exclude: /* @__PURE__ */ new Set([L4]) };

// node_modules/@arcgis/core/layers/support/ElevationQueryTileCache.js
var t63 = class {
  constructor(t88) {
    this._store = t88;
  }
  destroy() {
    this._store.destroy();
  }
  get(t88) {
    return this._store.get(t88);
  }
  put(t88, s84) {
    this._store.put(t88, s84, s84.values.byteLength + 256);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/ElevationBounds.js
var s66 = class {
  constructor(s84 = 0, a85 = 0) {
    this.min = s84, this.max = a85, this.level = 0, this.hasNoDataValues = false;
  }
  copyFrom(s84) {
    this.min = s84.min, this.max = s84.max, this.level = s84.level, this.hasNoDataValues = s84.hasNoDataValues;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/ElevationData.js
var r57 = class {
  constructor(t88, o77, s84) {
    this.type = "elevation", this.level = t88[0], this.i = t88[1], this.j = t88[2], this.extent = o77, this.samplerData = new t19(s84, o77);
  }
  computeMinMaxValue(t88, a85, r79, i78) {
    i78.min = 1 / 0, i78.max = -1 / 0, i78.hasNoDataValues = false;
    const e78 = t88 - this.level;
    if (e78 <= 0)
      return i78;
    const l75 = 2 ** e78;
    if (!(Math.floor(a85 / l75) === this.i && Math.floor(r79 / l75) === this.j))
      return i78;
    let n103 = 1 / 0, h58 = -1 / 0;
    const f59 = this.samplerData.data.width, m55 = this.samplerData.data.values, u58 = 0.5 * l19;
    let c75 = (f59 - 1) / l75, p70 = (r79 - this.j * l75) * c75, M26 = (a85 - this.i * l75) * c75;
    if (c75 < 1) {
      const t89 = Math.floor(p70), a86 = Math.floor(M26), s84 = t89 + a86 * f59, r80 = m55[s84], e79 = m55[s84 + 1], l76 = m55[s84 + f59], n104 = m55[s84 + f59 + 1];
      if (r80 + e79 + l76 + n104 < u58) {
        const s85 = p70 - t89, h59 = M26 - a86, f60 = g7(r80, e79, l76, n104, s85, h59), m56 = g7(r80, e79, l76, n104, s85 + c75, h59), u59 = g7(r80, e79, l76, n104, s85, h59 + c75), x36 = g7(r80, e79, l76, n104, s85 + c75, h59 + c75);
        return i78.min = Math.min(f60, m56, u59, x36), i78.max = Math.max(f60, m56, u59, x36), i78;
      }
      p70 = t89, M26 = a86, c75 = 1;
    } else
      p70 = Math.floor(p70), M26 = Math.floor(M26), c75 = Math.ceil(c75);
    for (let o77 = p70; o77 <= p70 + c75; o77++)
      for (let t89 = M26; t89 <= M26 + c75; t89++) {
        const a86 = m55[o77 + t89 * f59];
        a86 < u58 ? (n103 = Math.min(n103, a86), h58 = Math.max(h58, a86)) : i78.hasNoDataValues = true;
      }
    return i78.min = n103, i78.max = h58, i78;
  }
};
var i64 = 0.5 * l19;
function e51(a85, o77, s84) {
  if (null == s84)
    return null;
  for (const r79 of s84) {
    if (!r79)
      continue;
    const s85 = r79.safeWidth;
    let e78 = i3(r79.dy * (r79.y1 - o77), 0, s85), l75 = i3(r79.dx * (a85 - r79.x0), 0, s85);
    const n103 = Math.floor(e78), h58 = Math.floor(l75), f59 = r79.data.width, m55 = n103 * f59 + h58, u58 = r79.data.values, c75 = u58[m55], p70 = u58[m55 + 1], M26 = m55 + f59, x36 = u58[M26], d63 = u58[M26 + 1];
    if (c75 + x36 + p70 + d63 < i64) {
      e78 -= n103, l75 -= h58;
      const t88 = c75 + (p70 - c75) * l75;
      return t88 + (x36 + (d63 - x36) * l75 - t88) * e78;
    }
  }
  return null;
}

// node_modules/@arcgis/core/views/3d/terrain/ExtentHelper.js
var m38 = class extends m {
  constructor(e78) {
    super(e78);
  }
  initialize() {
    this.addHandles([this.layerViews.on("change", () => this.notifyChange("stencilEnabledExtents"))]);
  }
  destroy() {
  }
  get layerViewsExtent() {
    return this._computeLayerViewsExtent();
  }
  get tiledLayersExtent() {
    return this._computeTiledLayersExtent();
  }
  get stencilEnabledExtents() {
    return this._computeStencilEnabledExtents();
  }
  _computeStencilEnabledExtents() {
    const e78 = [];
    return this.layerViews.forEach((t88) => {
      const r79 = t88.layer;
      if ("IntegratedMeshLayer" === r79.operationalLayerType && null != this.viewSpatialReference) {
        const t89 = g30(r79.fullExtent, this.viewSpatialReference);
        null != t89 && e78.push(o6(t89));
      }
    }), e78;
  }
};
function x28(e78, t88) {
  return e78 === l14.Global ? new h41(t88) : new w25(t88);
}
e([y({ readOnly: true })], m38.prototype, "layerViewsExtent", null), e([y({ readOnly: true })], m38.prototype, "tiledLayersExtent", null), e([y({ readOnly: true })], m38.prototype, "stencilEnabledExtents", null), e([y()], m38.prototype, "viewSpatialReference", void 0), e([y()], m38.prototype, "tilingScheme", void 0), e([y()], m38.prototype, "defaultTiledLayersExtent", void 0), e([y({ constructOnly: true })], m38.prototype, "layers", void 0), e([y({ constructOnly: true })], m38.prototype, "layerViews", void 0), m38 = e([a4("esri.views.3d.terrain.ExtentHelper")], m38);
var h41 = class extends m38 {
  _computeLayerViewsExtent() {
    return this._globalExtent;
  }
  _computeTiledLayersExtent() {
    return this._globalExtent;
  }
  get _globalExtent() {
    return this.viewSpatialReference.isWebMercator ? m8 : u9;
  }
};
h41 = e([a4("esri.views.3d.terrain.ExtentHelperGlobal")], h41);
var w25 = class extends m38 {
  _computeLayerViewsExtent() {
    const e78 = C2(), t88 = this.viewSpatialReference;
    this.layerViews.forEach((r80) => {
      const n104 = r80.layer;
      if (r80.isResolved() && ("graphics" !== n104.type || !n104.internal)) {
        const n105 = g30("fullExtentInLocalViewSpatialReference" in r80 && r80.fullExtentInLocalViewSpatialReference || r80.layer.fullExtent, t88);
        m3(e78, n105, e78);
      }
    });
    const r79 = x5(e78) ? e78 : null, n103 = this._get("layerViewsExtent");
    return H3(r79, n103) ? n103 : r79;
  }
  _computeTiledLayersExtent() {
    const e78 = this.tilingScheme;
    if (!e78)
      return null;
    const t88 = this.viewSpatialReference, r79 = C2();
    this.layers.forEach((n104) => {
      if (n104.loaded && s16(n104)) {
        const s85 = b3(n104, t88, l14.Local);
        if (null == s85)
          return;
        const { tileInfo: i78, fullExtent: l75 } = s85;
        null != i78 && null != l75 && (H6(n104) || e78.compatibleWith(i78) && l75.spatialReference.equals(e78.spatialReference)) && m3(r79, l75, r79);
      }
    }), m3(r79, this.defaultTiledLayersExtent, r79);
    const n103 = x5(r79) ? r79 : null, s84 = this._get("tiledLayersExtent");
    return H3(n103, s84) ? s84 : n103;
  }
};
function g30(e78, t88) {
  return null == e78 || e78.spatialReference.equals(t88) ? e78 : An(e78, e78.spatialReference, t88);
}
w25 = e([a4("esri.views.3d.terrain.ExtentHelperLocal")], w25);

// node_modules/@arcgis/core/views/3d/terrain/LayerClass.js
var A29;
!function(A39) {
  A39[A39.ELEVATION = 0] = "ELEVATION", A39[A39.MAP = 1] = "MAP";
}(A29 || (A29 = {}));
var E32 = [A29.ELEVATION, A29.MAP];

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/requireUtils.js
function e52() {
  var _a;
  const e78 = (_a = globalThis.require) == null ? void 0 : _a.modules;
  if (e78) {
    const o77 = Object.keys(e78);
    for (const s84 of o77)
      -1 !== s84.search(".glsl") && delete e78[s84];
  }
}

// node_modules/@arcgis/core/views/3d/terrain/OverlayManager.js
var ne4 = [[-0.1, -2, 3.9, 2], [-0.1, -3.9, 3.9, 0.1], [-2, -3.9, 2, 0.1], [-3.9, -3.9, 0.1, 0.1], [-3.9, -2, 0.1, 2], [-3.9, -0.1, 0.1, 3.9], [-2, -0.1, 2, 3.9], [-0.1, -0.1, 3.9, 3.9]];
var oe4;
var le4 = class extends m {
  get running() {
    return this._placementDirty && (this._drapeSources.size > 0 || this.view.graphics.length > 0 || t27.OVERLAY_DRAW_DEBUG_TEXTURE) && !!this._spatialReference && !this.suspended && this.surface.ready;
  }
  get _isSpherical() {
    return this.view.state.isGlobal;
  }
  get _worldToPCSRatio() {
    return null != this._spatialReference && this._spatialReference.isGeographic && !this.view.state.isLocal ? A2(this._spatialReference).metersPerDegree : 1;
  }
  get suspended() {
    return this.surface.suspended;
  }
  get updating() {
    return this.running || this.renderer.updating || this._contentUpdated;
  }
  get hasHighlights() {
    return this.renderer.hasHighlights;
  }
  get rendersOccluded() {
    return this.renderer.rendersOccluded;
  }
  constructor(e78) {
    super(e78), this._handles = new t3(), this._spatialReference = null, this._renderSR = null, this._overlaySREqualsRenderSR = true, this._drapeSources = /* @__PURE__ */ new Set(), this._drapeTargets = /* @__PURE__ */ new Set(), this._placementDirty = false, this._contentUpdated = false, this._drawTexturesDirty = false, this._drawTexturesAnimateDirty = false, this._hasUnusedRenderTargets = false, this._longitudeCyclical = null, this._latestOriginId = 0, this._maxResolution = has("esri-mobile") ? 2048 : 4096, this._animationTimeLast = 0, this._removeRenderOverlayCallback = () => {
    };
  }
  initialize() {
    var _a;
    const e78 = this.view;
    this.renderer = new ie({ view: e78, worldToPCSRatio: this._worldToPCSRatio, spatialReference: this._spatialReference });
    const t88 = () => this.setDrawTexturesDirty();
    this._groundIntersector = A15(this.view.state.viewingMode), this._groundIntersector.options.backfacesTerrain = true, this._groundIntersector.options.invisibleTerrain = true, this._groundIntersector.options.hud = false, this._handles.add([this.renderer.events.on("has-highlights", () => {
      t88(), this.notifyChange("hasHighlights");
    }), this.renderer.events.on("has-water", (t89) => {
      var _a2;
      return (_a2 = e78._stage) == null ? void 0 : _a2.renderer.setParameters({ hasOverlayWater: t89 });
    }), this.renderer.events.on("renders-occluded", () => {
      t88(), this.notifyChange("rendersOccluded");
    }), this.renderer.events.on("content-changed", t88), l6(() => e78.state.camera.pixelRatio, t88), l6(() => e78.state.alignPixelEnabled, t88), this.renderer.events.on("textures-disposed", () => this.updateOverlayResult()), l6(() => {
      var _a2, _b, _c;
      return [(_a2 = e78.pointsOfInterest) == null ? void 0 : _a2.renderPointOfView, (_c = (_b = e78.pointsOfInterest) == null ? void 0 : _b.centerOnSurfaceFrequent) == null ? void 0 : _c.location];
    }, () => this.setPlacementDirty()), l6(() => {
      var _a2, _b;
      return [(_a2 = e78.state) == null ? void 0 : _a2.pixelRatio, (_b = e78.state) == null ? void 0 : _b.contentPixelRatio];
    }, () => this.setPlacementDirty(), U3), this.surface.on("elevation-change", () => this.setPlacementDirty()), e78.on("resize", () => this.setPlacementDirty()), e78.resourceController.scheduler.registerTask(I3.OVERLAY, this), e78._stage.renderView.events.on("force-camera-for-screenshot", (e79) => {
      this._updateOverlays(C4, e79.camera, O5.BACKGROUND), this.renderer.hasOverlays && this._drawOverlayTextures(this.renderer.overlays, O5.BACKGROUND, e79);
    })]);
    let r79 = (e79) => this._renderOverlayCallback(e79);
    this._removeRenderOverlayCallback = () => {
      r79 = () => {
      };
    }, (_a = e78._stage) == null ? void 0 : _a.renderer.setParameters({ renderOverlay: (e79) => r79(e79) });
  }
  _renderOverlayCallback(e78) {
    this._contentUpdated = false;
    const t88 = this.renderer;
    t88.processSyncDrapeSources(), t88.hasOverlays && (this._dispatchAnimationUpdate(e78), this._drawOverlayTextures(t88.overlays, O5.UPDATE, this.view.state)), this._hasUnusedRenderTargets && this._collectUnusedRenderTargetMemory();
  }
  destroy() {
    var _a, _b;
    this._handles = l(this._handles), this._removeRenderOverlayCallback(), (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ renderOverlay: () => {
    } }), null != oe4 && (oe4.hide(), oe4 = null);
  }
  get hasOverlays() {
    return this.renderer.hasOverlays;
  }
  setSpatialReference(e78) {
    this._spatialReference = e78, this.renderer.spatialReference = e78, this._longitudeCyclical = null;
    const t88 = this.view.renderSpatialReference;
    null != e78 && null != t88 ? (this._renderSR = t88, this._overlaySREqualsRenderSR = e78.equals(this._renderSR), this._isSpherical && (this._longitudeCyclical = e78.isWebMercator ? new i17(-20037508342787e-6, 20037508342787e-6) : new i17(-180, 180), this.renderer.longitudeCyclical = this._longitudeCyclical), this.renderer && (this.renderer.worldToPCSRatio = this._worldToPCSRatio)) : this.renderer.disposeOverlays();
  }
  get gpuMemoryUsage() {
    return this.renderer.gpuMemoryUsage;
  }
  registerDrapeSource(e78, t88, r79) {
    this._drapeSources.add(e78), this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
    const s84 = this.renderer.createDrapeSourceRenderer(e78, t88, r79);
    return this._updateDrapeSourceExtent(e78), this._setContentDirty(), this.notifyChange("running"), s84;
  }
  registerGeometryDrapeSource(e78) {
    return this.registerDrapeSource(e78, _11);
  }
  _updateDrapeSourceExtent(e78) {
    2 === this.renderer.overlays.length && null != e78.setDrapingExtent && null != this._spatialReference && e78.setDrapingExtent(this.renderer.overlays, this._spatialReference);
  }
  unregisterDrapeSource(e78) {
    this._drapeSources.has(e78) && (this._drapeSources.delete(e78), this.renderer.removeDrapeSourceRenderer(e78), this.renderer.ensureDrapeSources(this._drapeSources), this._setContentDirty(), this.notifyChange("running"));
  }
  registerDrapeTarget(e78) {
    this._drapeTargets.add(e78), this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
  }
  updateOverlayResult() {
    var _a;
    (_a = this.view._stage) == null ? void 0 : _a.renderer.setParameters({ overlays: this.renderer.overlays });
  }
  unregisterDrapeTarget(e78) {
    this._drapeTargets.delete(e78), this.renderer.ensureDrapeTargets(this._drapeTargets);
  }
  _setContentDirty() {
    this.setPlacementDirty(), this.setDrawTexturesDirty();
  }
  setPlacementDirty() {
    this._placementDirty = true;
  }
  runTask(e78) {
    return this._updateOverlays(e78, this.view.state.contentCamera, O5.UPDATE);
  }
  _updateOverlays(e78, t88, r79) {
    if (!this._spatialReference)
      return g5.YIELD;
    const s84 = this._computeOverlayResolution(t88);
    this._computeOverlayExtents(t88, s84, ue3);
    const i78 = M3(ue3.inner) / M3(ue3.outer);
    this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
    const a85 = this._updateOverlay(O7.INNER, ue3.inner, s84, 1 * ue3.pixelRatioAdjustment, ue3.mapUnitsPerPixel), n103 = this._updateOverlay(O7.OUTER, ue3.outer, s84, i78 * ue3.pixelRatioAdjustment, ue3.mapUnitsPerPixel);
    a85 !== ye3.EXTENT && n103 !== ye3.EXTENT || (this._drapeSources.forEach((e79) => this._updateDrapeSourceExtent(e79)), this.surface.updateTileOverlayParams(r79)), a85 === ye3.NONE && n103 === ye3.NONE || this.setDrawTexturesDirty(), this._placementDirty = false, e78.madeProgress();
  }
  _computeOverlayResolution(e78) {
    const t88 = this.view.state.contentPixelRatio, r79 = e78.fullWidth / e78.pixelRatio * t88, s84 = e78.fullHeight / e78.pixelRatio * t88, i78 = Math.ceil(1.5 * Math.max(r79, s84));
    return Math.min(n42(i78), this._maxResolution);
  }
  _updateOverlay(e78, t88, r79, s84, i78) {
    if (0 === this.renderer.overlays.length)
      return ye3.NONE;
    const a85 = this.renderer.overlays[e78], n103 = a85.mapUnitsPerPixel;
    if (a85.mapUnitsPerPixel = i78, a85.pixelRatio = s84, he4(t88, a85.extent) && r79 === a85.resolution)
      return n103 === i78 ? ye3.NONE : ye3.RERENDER_ONLY;
    e9(a85.extent, t88), a85.resolution = r79;
    const o77 = y4(a85.extent);
    return a85.renderLocalOrigin = c16(o77[0], o77[1], 0, "OV_" + this._latestOriginId++), ye3.EXTENT;
  }
  setTileParameters(e78) {
    const t88 = e78.renderData.overlay;
    if (this.renderer.overlays.length > 0) {
      const r79 = this.renderer.overlays[O7.INNER], s84 = this.renderer.overlays[O7.OUTER], i78 = e78.extent;
      this._rectInsideRect(r79.extent, i78) || this._rectanglesOverlap(i78, r79.extent) || this._rectanglesOverlap(i78, s84.extent) ? (this._setTileOverlayData(i78, O7.INNER, t88), this._setTileOverlayData(i78, O7.OUTER, t88)) : (this._clearTileOverlayData(O7.INNER, t88), this._clearTileOverlayData(O7.OUTER, t88));
    } else
      this._clearTileOverlayData(O7.INNER, t88), this._clearTileOverlayData(O7.OUTER, t88);
  }
  overlayPixelSizeInMapUnits(e78) {
    if (0 === this.renderer.overlays.length)
      return 0;
    const t88 = this.renderer.overlays[O7.INNER], r79 = this.renderer.overlays[O7.OUTER], s84 = this._pointIsInExtent(e78, t88.extent) ? t88 : r79;
    return (s84.extent[2] - s84.extent[0]) / s84.resolution;
  }
  _setTileOverlayData(e78, t88, r79) {
    if (0 === this.renderer.overlays.length)
      return;
    const s84 = this.renderer.overlays[t88].extent, i78 = M3(s84), a85 = s13(s84);
    let n103 = e78[0];
    if (this._longitudeCyclical) {
      n103 = this._longitudeCyclical.minimalMonotonic(s84[0], n103);
      const t89 = this._longitudeCyclical.minimalMonotonic(s84[0], e78[2]);
      n103 > t89 && (n103 = t89 - (e78[2] - e78[0]));
    }
    r79.setScale(t88, M3(e78) / i78, s13(e78) / a85), r79.setOffset(t88, (n103 - s84[0]) / i78, (e78[1] - s84[1]) / a85);
  }
  _clearTileOverlayData(e78, t88) {
    t88.setScale(e78, -1, -1), t88.setOffset(e78, -1, -1);
  }
  async reloadShaders() {
    e52(), await this.renderer.reloadShaders(), this.setDrawTexturesDirty(), this.runTask(C4);
  }
  _dispatchAnimationUpdate(e78) {
    const t88 = n5(e78 - this._animationTimeLast);
    if (t88 >= this.surface.view._stage.renderer.animationTimestep || null != this.view.state.forcedAnimationTime || this._drawTexturesDirty || this._drawTexturesAnimateDirty) {
      const r79 = n5(t88 / this.surface.view._stage.renderer.animationTimeDilation), s84 = new h14(this.view.state.camera, r79, this.view.state.forcedAnimationTime);
      this.renderer.updateAnimation(s84) && (this._drawTexturesAnimateDirty = true), this._animationTimeLast = e78;
    }
  }
  setDrawTexturesDirty() {
    this.renderer.hasOverlays ? (this._contentUpdated = true, this._drawTexturesDirty = true, this.view._stage.renderView.requestRender()) : this.setPlacementDirty();
  }
  _intersectGroundFromView(e78, t88, r79, s84) {
    const i78 = this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e78, me3, t88, r79);
    if (null == i78)
      return false;
    const a85 = i78.origin, n103 = u2(de3, i78.origin, i78.direction);
    return this._groundIntersector.reset(a85, n103, e78), this._groundIntersector.intersect([]), this.view.basemapTerrain.intersect(this._groundIntersector, null, a85, n103), this._groundIntersector.results.min.getIntersectionPoint(s84);
  }
  _findHorizonBasedPointOfInterest(e78, t88) {
    let r79 = 0.5;
    const i78 = 0.55, n103 = this.view.renderCoordsHelper.getAltitude(e78.eye), o77 = this.view.pointsOfInterest.centerOnSurfaceFrequent, l75 = 1e-5, h58 = i3(o77.estimatedSurfaceAltitude, e78.aboveGround ? -1 / 0 : n103 + l75, e78.aboveGround ? n103 - l75 : 1 / 0), c75 = e78.aboveGround;
    if ("global" === this.view.viewingMode) {
      const t89 = de3;
      Y4(T5(tt, A2(this.view.spatialReference).radius + h58), p10(e78.eye, e78.viewForward), t89), e8(t89, t89, e78.eye);
      const a85 = r24.normalize(i15(e78.viewForward, t89, e78.viewRight)) / e78.fovY + 0.5, n104 = a85 <= 0 || a85 >= 1 ? 0.5 : i78;
      r79 = c75 ? n104 * a85 : a85 + n104 * (1 - a85);
    } else {
      const t89 = 0.5 * Math.PI - Math.acos(-e78.viewForward[2]), s84 = Math.tan(t89), n104 = r12(0, s84, 1, 0), o78 = w2(n104, n104, e78.projectionMatrix)[1], l76 = i3(0.5 + 0.5 * o78, 0, 1);
      r79 = 1 === l76 || 0 === l76 ? 0.5 : c75 ? l76 * i78 : 1 - (1 - l76) * i78;
    }
    return !!this._intersectGroundFromView(e78, 0.5, r79, t88) && X(t88, e78.eye) < o77.distance * o77.distance;
  }
  _computeOverlayExtents(e78, t88, r79) {
    const s84 = this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation, i78 = n7();
    this._findHorizonBasedPointOfInterest(e78, i78) || r7(i78, s84), t27.OVERLAY_SHOW_CENTER ? (null == oe4 && (oe4 = new t62(this.view.graphics, "red")), oe4.show(i78, this._renderSR)) : null != oe4 && oe4.hide();
    const a85 = Math.max(0.1, x4(e78.eye, i78)), o77 = n60(this.view.renderCoordsHelper, s84, e78.eye);
    this._overlaySREqualsRenderSR || Hn(i78, this._renderSR, i78, this._spatialReference);
    const l75 = this.surface.extent, h58 = !this._isSpherical && null != this._spatialReference && this._spatialReference.isGeographic, c75 = h58 && null != this._spatialReference ? 1 / A2(this._spatialReference).metersPerDegree : 1, d63 = this.view.state.contentPixelRatio, u58 = e78.perScreenPixelRatio / d63 * a85 * c75;
    r79.mapUnitsPerPixel = u58 / this._worldToPCSRatio;
    let _42 = t88 * u58 / 2 * h16, m55 = false, y41 = h58 ? 90 : 1 / 0;
    this._isSpherical && null != l75 && null != this._spatialReference && (this._spatialReference.isWebMercator ? (_42 /= Math.cos(f3(i78[1])), y41 = l75[3]) : (m55 = true, _42 /= A2(this._spatialReference).metersPerDegree, y41 = 90), _42 >= y41 && (_42 = y41, i78[1] = 0, this._spatialReference.isWebMercator && (i78[0] = 0)));
    let R25 = 1;
    m55 && (R25 = 1 / Math.max(0.2, Math.cos(Math.abs(M2(i78[1])))), _42 * R25 > 180 && (R25 = 180 / _42), r79.mapUnitsPerPixel *= R25);
    const w33 = Math.log(2) / 12;
    _42 = Math.exp(Math.round(Math.log(_42) / w33) * w33);
    const x36 = _42 * R25, E43 = 32, U24 = 0.5 * t88 / (E43 * x36), C30 = 0.5 * t88 / (E43 * _42);
    i78[0] = Math.round(i78[0] * U24) / U24, i78[1] = Math.round(i78[1] * C30) / C30;
    const j29 = r79.inner;
    j29[0] = i78[0] - x36, j29[1] = i78[1] - _42, j29[2] = i78[0] + x36, j29[3] = i78[1] + _42, this._isSpherical && this._shiftExtentToFitBounds(j29, 1 / 0, y41);
    const N21 = r79.outer;
    if (6 * x36 > M3(l75))
      e9(N21, l75);
    else {
      if (Math.PI / 2 - Math.abs(o77 - Math.PI / 2) <= 0.25 * Math.PI)
        N21[0] = j29[0] - x36, N21[1] = j29[1] - _42, N21[2] = j29[2] + x36, N21[3] = j29[3] + _42;
      else {
        Hn(e78.eye, this._renderSR, de3, this._spatialReference), o10(ce5, i78, de3);
        let t89 = -Math.atan2(ce5[1], ce5[0]) + 0.125 * Math.PI;
        t89 < 0 && (t89 += 2 * Math.PI);
        const r80 = Math.floor(t89 / (0.25 * Math.PI));
        l4(ce5, ne4[r80], 2 * _42), ce5[0] *= R25, ce5[2] *= R25, s11(N21, j29, ce5);
      }
    }
    if (this._isSpherical)
      N21[0] = this._longitudeCyclical.clamp(N21[0]), N21[2] = this._longitudeCyclical.clamp(N21[2]), N21[1] = Math.max(N21[1], -y41), N21[3] = Math.min(N21[3], y41);
    else {
      const e79 = R3(j29, l75, pe3), t89 = R3(N21, l75, _e);
      E2(e79, t89) && (N21[2] = N21[0], N21[3] = N21[1]);
    }
    const A39 = Math.abs(j29[2] - j29[0]) / t88;
    r79.mapUnitsPerPixel = Math.max(r79.mapUnitsPerPixel, A39), r79.pixelRatioAdjustment = r79.mapUnitsPerPixel / A39;
  }
  _drawOverlayTextures(e78, t88, r79) {
    if (0 === e78.length || !this._drawTexturesDirty && !this._drawTexturesAnimateDirty)
      return;
    const s84 = this._drawTexturesDirty;
    this._drawTexturesDirty = false, this._drawTexturesAnimateDirty = false;
    const i78 = this._drawOverlay(e78[O7.INNER], r79), a85 = this._drawOverlay(e78[O7.OUTER], r79);
    i78 !== D3.CHANGED && a85 !== D3.CHANGED || this.surface.updateTileOverlayParams(O5.UPDATE), this._collectUnusedRenderTargetMemory(), this.updateOverlayResult(), s84 ? (this.surface.requestRender(t88), t88 === O5.UPDATE && this.surface.requestUpdate()) : this.surface.requestRender(O5.BACKGROUND);
  }
  _drawOverlay(e78, t88) {
    return this._longitudeCyclical ? e78.setupGeometryViewsCyclical(this._longitudeCyclical) : e78.setupGeometryViewsDirect(), e78.draw(this.renderer, t88);
  }
  _collectUnusedRenderTargetMemory() {
    this._hasUnusedRenderTargets = false, this.renderer.hasOverlays && (this._hasUnusedRenderTargets = this.renderer.collectUnusedRenderTargetMemory());
  }
  _rectanglesOverlap(e78, t88) {
    return null != e78 && (this._longitudeCyclical ? (this._longitudeCyclical.contains(t88[0], t88[2], e78[0]) || this._longitudeCyclical.contains(t88[0], t88[2], e78[2]) || this._longitudeCyclical.contains(e78[0], e78[2], t88[0])) && !(e78[1] > t88[3] || e78[3] < t88[1]) : q(e78, t88));
  }
  _rectInsideRect(e78, t88) {
    return null != t88 && (this._longitudeCyclical ? this._longitudeCyclical.contains(e78[0], e78[2], t88[0]) && this._longitudeCyclical.contains(e78[0], e78[2], t88[2]) && t88[1] > e78[1] && t88[3] < e78[3] : E2(e78, t88));
  }
  _pointIsInExtent(e78, t88) {
    if (this._longitudeCyclical)
      return this._longitudeCyclical.contains(t88[0], t88[2], e78.x) && e78.y >= t88[1] && e78.y <= t88[3];
    const r79 = e78.x, s84 = e78.y;
    return r79 > t88[0] && r79 < t88[2] && s84 > t88[1] && s84 < t88[3];
  }
  _shiftExtentToFitBounds(e78, t88, r79) {
    let s84 = 0, i78 = 0;
    e78[0] < -t88 ? s84 = e78[0] + t88 : e78[2] > t88 && (s84 = t88 - e78[2]), e78[1] < -r79 ? i78 = e78[1] + r79 : e78[3] > r79 && (i78 = r79 - e78[3]), v4(e78, s84, i78);
  }
  get test() {
    return { renderer: this.renderer, update: () => this.runTask(C4) };
  }
};
function he4(e78, t88) {
  const r79 = 1e-5, s84 = t27.TESTS_DISABLE_OPTIMIZATIONS ? 0 : r79 * Math.max(e78[2] - e78[0], e78[3] - e78[1], t88[2] - t88[0], t88[3] - t88[1]);
  return Math.abs(t88[0] - e78[0]) <= s84 && Math.abs(t88[1] - e78[1]) <= s84 && Math.abs(t88[2] - e78[2]) <= s84 && Math.abs(t88[3] - e78[3]) <= s84;
}
e([y()], le4.prototype, "_spatialReference", void 0), e([y({ readOnly: true })], le4.prototype, "running", null), e([y()], le4.prototype, "_placementDirty", void 0), e([y()], le4.prototype, "_contentUpdated", void 0), e([y()], le4.prototype, "_isSpherical", null), e([y()], le4.prototype, "_worldToPCSRatio", null), e([y({ autoDestroy: true })], le4.prototype, "renderer", void 0), e([y({ constructOnly: true })], le4.prototype, "view", void 0), e([y({ constructOnly: true })], le4.prototype, "surface", void 0), e([y()], le4.prototype, "suspended", null), e([y()], le4.prototype, "updating", null), e([y({ type: Boolean })], le4.prototype, "hasHighlights", null), e([y({ type: Boolean })], le4.prototype, "rendersOccluded", null), le4 = e([a4("esri.views.3d.terrain.OverlayManager")], le4);
var ce5 = n19();
var de3 = n7();
var ue3 = { inner: i4(), outer: i4(), mapUnitsPerPixel: 0, pixelRatioAdjustment: 1 };
var pe3 = i4();
var _e = i4();
var me3 = d10();
var ye3;
!function(e78) {
  e78[e78.NONE = 0] = "NONE", e78[e78.EXTENT = 1] = "EXTENT", e78[e78.RERENDER_ONLY = 2] = "RERENDER_ONLY";
}(ye3 || (ye3 = {}));

// node_modules/@arcgis/core/geometry/support/buffer/BufferPool.js
var t64 = class _t3 {
  constructor(e78, t88) {
    this._factoryCallback = e78, this._lengthCallback = t88, this._pool = /* @__PURE__ */ new Map();
  }
  acquire(e78) {
    if (!_t3.test.disabled) {
      const t88 = this._pool.get(e78);
      if (t88 && 0 !== t88.length)
        return t88.pop();
    }
    try {
      return this._factoryCallback(e78);
    } catch (o77) {
      const t88 = window.performance && window.performance.memory;
      let i78 = "";
      throw t88 && (i78 = `
  totalJSHeapSize: ${t88.totalJSHeapSize}, usedJSHeapSize: ${t88.usedJSHeapSize}, jsHeapSizeLimit: ${t88.jsHeapSizeLimit}`), console.log("Array allocation of size " + e78 + " failed: " + o77 + i78), o77;
    }
  }
  release(o77) {
    if (_t3.test.disabled)
      return;
    const i78 = this._lengthCallback(o77);
    let s84 = this._pool.get(i78);
    s84 || (s84 = new l2({ shrink: true }), this._pool.set(i78, s84)), s84.push(o77);
  }
  clear() {
    this._pool.clear();
  }
  get test() {
    return { size: this._pool.size };
  }
};
t64.test = { disabled: false };

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometry.js
var l53 = class {
  constructor() {
    this.indices = null, this.vertexAttributes = null, this.boundingBox = P4(), this.indexCount = 0, this.numVerticesPerSide = 0, this.uvRange = [0, 0, 1, 1], this.outerEdges = [null, null, null, null], this.innerEdges = [null, null, null, null];
  }
};
var a64 = class {
  constructor(t88, e78, s84, i78, r79) {
    this.attributes = t88, this.localOrigin = e78, this.index0 = s84, this.stride = i78, this.count = r79;
  }
  getVertexIndex(t88) {
    return this.getAttributeIndex(t88);
  }
  getAttributeIndex(t88) {
    return p15(0 <= t88 && t88 < this.count), this.index0 + this.stride * t88;
  }
  _getVertexRaw(t88, e78) {
    this.attributes.position.getVec(t88, e78);
  }
  getVertexPos(e78, s84) {
    this._getVertexRaw(this.getAttributeIndex(s84), e78), u2(e78, e78, this.localOrigin);
  }
  getNormal(t88, e78) {
    const { typedBuffer: s84, typedBufferStride: i78 } = this.attributes.normalCompressed;
    o33(t88, s84, this.getAttributeIndex(e78), i78);
  }
  _setNormal(t88, e78, s84, i78) {
    const { typedBuffer: r79, typedBufferStride: n103 } = this.attributes.normalCompressed;
    n43(r79, t88, e78, s84, i78, n103);
  }
  _setUV(t88, e78, s84) {
    b20(this.attributes.uv0, t88, e78, s84);
  }
  setNormalFromValues(t88, e78, s84, i78) {
    this._setNormal(this.getAttributeIndex(t88), e78, s84, i78);
  }
  setVertexFromValuesRawPositionUV(t88, e78, s84, i78, r79, n103) {
    const o77 = this.getAttributeIndex(t88);
    this.attributes.position.setValues(o77, e78, s84, i78), this._setUV(o77, r79, n103);
  }
  setVertexFromValuesRawPositionUVNormal(t88, e78, s84, i78, r79, n103, o77, u58, l75) {
    const a85 = this.getAttributeIndex(t88);
    this.attributes.position.setValues(a85, e78, s84, i78), this._setUV(a85, r79, n103), this._setNormal(a85, o77, u58, l75);
  }
};
var h42 = H4().vec3f(O4.POSITION).vec2i16(O4.UV0).vec2i16(O4.NORMALCOMPRESSED, { glNormalized: true });
var c56 = new t64((t88) => h42.createBuffer(t88), (t88) => t88.count);
function m39() {
  c56.clear();
}
function d48(t88) {
  return c56.acquire(t88);
}
function f43(t88) {
  c56.release(t88.vertexAttributes), t88.vertexAttributes = null, t88.indices = null;
}
var g31 = 16384;
function b20(t88, e78, s84, i78) {
  t88.setValues(e78, s84 * g31, i78 * g31);
}
function x29(t88, e78, s84, i78) {
  t88 < i78[0] ? i78[0] = t88 : t88 > i78[3] && (i78[3] = t88), e78 < i78[1] ? i78[1] = e78 : e78 > i78[4] && (i78[4] = e78), s84 < i78[2] ? i78[2] = s84 : s84 > i78[5] && (i78[5] = s84);
}

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometryLUT.js
var t65 = class {
  constructor() {
    this.sinLonLUT = new Array(i24 + 1), this.cosLonLUT = new Array(i24 + 1), this.sinLatLUT = new Array(i24 + 1), this.cosLatLUT = new Array(i24 + 1);
  }
  update(s84, t88, n103) {
    const o77 = t88[0], i78 = t88[2];
    for (let r79 = 0; r79 <= s84; r79++) {
      const t89 = r79 / s84, L28 = o77 * (1 - t89) + i78 * t89;
      this.sinLonLUT[r79] = Math.sin(L28), this.cosLonLUT[r79] = Math.cos(L28);
      const a85 = n103(t89);
      this.sinLatLUT[r79] = Math.sin(a85), this.cosLatLUT[r79] = Math.cos(a85);
    }
  }
};

// node_modules/@arcgis/core/views/3d/terrain/GeometryState.js
var e53 = class {
  constructor() {
    this.cornerTiles = [null, null, null, null], this.cornerTileSamplerVersions = [-1, -1, -1, -1];
  }
};
var l54 = class {
  constructor() {
    this.cornerNeighborData = [new e53(), new e53(), new e53(), new e53()], this.edgeResolutions = [-1, -1, -1, -1], this.edgePeerNeighbors = [null, null, null, null], this.edgePeerNeighborSamplerVersions = [-1, -1, -1, -1], this.cornerPeerNeighbors = [null, null, null, null];
  }
};
var r58 = class {
  constructor() {
    this.numVerticesPerSide = 0, this.samplerData = null, this.clippingArea = null, this.wireframe = false, this.samplerDataVersion = 0, this.neighborData = new l54();
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TextureFader.js
var i65 = class _i {
  constructor(t88) {
    this._getFadeDuration = t88, this._fadeStart = 0, this._delayedTime = 0;
  }
  clear() {
    this._current = l(this._current), this._next = l(this._next), this._waiting = l(this._waiting), this._delayed = l(this._delayed);
  }
  get current() {
    if (null == this._current)
      return null;
    if (!this._isFadingEnabled) {
      const t88 = this._delayed || this._waiting || this._next || this._current;
      t88 !== this._current && (this._current = null, this.clear(), this._current = t88);
    }
    let r79 = _i.test.fadeMoment;
    if (null != this._delayed && (r79 = r79 || performance.now(), r79 >= this._delayedTime && (this._push(this._delayed, n77.Immediate), this._delayed = null)), null != this._next) {
      r79 = r79 || performance.now();
      const i78 = this._fadeDuration, n103 = null != this._current && this._next.texture === this._current.texture, s84 = this._next.type !== r28.FADING, a85 = r79 - this._fadeStart >= i78;
      (n103 || s84 || a85) && (l(this._current), this._current = this._next, this._next = this._waiting, this._waiting = null, this._fadeStart = this._alignFadeStart(r79));
    }
    return this._current;
  }
  get next() {
    return this._next;
  }
  get fadeFactor() {
    if (null == this._next)
      return 1;
    const t88 = _i.test.fadeMoment || performance.now(), e78 = Math.max(0, t88 - this._fadeStart), n103 = this._fadeDuration;
    return e78 > n103 ? 0 : 1 - e78 / n103;
  }
  get isFading() {
    return null != this._next || null != this._delayed;
  }
  push(e78, i78 = n77.Immediate) {
    this._delayed = l(this._delayed), this._push(e78, i78);
  }
  _push(e78, r79) {
    if (this._isFadingEnabled || this.clear(), null == this._current)
      return void (this._current = e78);
    const s84 = _i.test.fadeMoment || performance.now();
    return r79 !== n77.Immediate ? (this._delayed = e78, void (this._delayedTime = s84 + r79)) : null == this._next ? (this._next = e78, void (this._fadeStart = this._alignFadeStart(s84))) : void (null != e78 && (l(this._waiting), this._waiting = e78));
  }
  get _fadeDuration() {
    return null == this._waiting ? this._getFadeDuration() : 0.5 * this._getFadeDuration();
  }
  _alignFadeStart(t88) {
    const e78 = this._getFadeDuration();
    return t88 + e78 - t88 % e78;
  }
  get _isFadingEnabled() {
    return this._getFadeDuration() > 0;
  }
};
var n77;
i65.test = { fadeMoment: 0 }, function(t88) {
  t88[t88.Immediate = 0] = "Immediate", t88[t88.Delayed = 5e3] = "Delayed";
}(n77 || (n77 = {}));

// node_modules/@arcgis/core/views/3d/terrain/TileAgent.js
var l55 = class {
  get updating() {
    return !!this._tileRequested;
  }
  init(e78, t88, s84, i78) {
    this.tile = e78, this._layerIdx = t88, this._layerClass = s84, this._suspended = i78, this._tileLayerInfo = e78.getLayerInfo(t88, s84), this._tileRequested = null;
    const l75 = this._findAncestorWithData();
    this._setUpsampleTile(l75);
  }
  startLoading() {
    return this._requestNext();
  }
  dispose() {
    this._tileRequested && (this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null), this.tile = null, this._tileLayerInfo = null;
  }
  setSuspension(e78) {
    e78 !== this._suspended && (this._suspended = e78, e78 ? this._tileRequested && (this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null) : this._tileLayerInfo.data || this.update());
  }
  update() {
    const e78 = this._findAncestorWithData();
    return this._setUpsampleTile(e78), this._requestNext();
  }
  dataArrived(t88, s84) {
    this._setUpsampleTile(t88, s84), this._tileRequested = null, t88 === this.tile ? this.tile.updateRenderData(this._layerClass, r28.FADING, s84) : this._requestNext();
  }
  dataMissing() {
    this._tileRequested = null, this._tileLayerInfo.data = null, this._requestNext();
  }
  _agentDone() {
    this.tile.agentDone(this._layerIdx, this._layerClass), this.dispose();
  }
  _requestNext() {
    if (this._suspended)
      return true;
    const e78 = this._findNextDownload();
    if (this._tileRequested) {
      if (e78 === this._tileRequested)
        return true;
      this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null;
    }
    return null != e78 ? e78.requestLayerData(this._layerIdx, this._layerClass, this) && (this._tileRequested = e78) : this._agentDone(), !!this._tileRequested;
  }
  _findNextDownload() {
    const e78 = this._layerIdx, l75 = this._layerClass, a85 = this.tile.surface.layerViewByIndex(e78, l75), n103 = m9(a85), { minLevel: r79, maxLevel: h58 } = a85.dataLevelRange, d63 = this._desiredMinLevelDelta, o77 = this._progressiveLevelModulo + d63, u58 = this._scaleRangeEnabled ? o34 : () => true;
    let _42 = this.tile;
    const p70 = _42.level;
    let f59;
    const y41 = this._tileLayerInfo.upsampleInfo, v44 = null != y41 ? y41.tile.level : -1, I29 = null != y41 && v44 - p70 >= d63, c75 = n103 == null ? void 0 : n103.tilemapCache, q21 = "vector-tile-3d" === a85.type ? a85.schemaHelper : null;
    for (; _42 && u58(_42, n103, false) && _42.level >= r79; ) {
      const s84 = _42.level, i78 = p70 - s84, a86 = _42.layerInfo[l75][e78];
      if (a86.data && i78 >= d63) {
        (!I29 || s84 > v44) && this._setUpsampleTile(_42), a86.dataInvalidated && (f59 = _42);
        break;
      }
      const n104 = (q21 == null ? void 0 : q21.getLevelRowColumn(_42.lij)) ?? _42.lij;
      if ("unavailable" !== (c75 == null ? void 0 : c75.getAvailability(n104[0], n104[1], _42.lij[2])) && s84 <= h58 && !a86.data && !a86.dataMissing && ((!f59 || _42.level === r79 || s84 % c21 == 0 || p70 - f59.level < d63) && (f59 = _42), i78 >= o77))
        break;
      _42 = _42.parent;
    }
    if (null != f59 && p70 - f59.level < d63)
      if (y41)
        f59 = null;
      else {
        const t88 = this._findAncestorWithData();
        if (null != t88) {
          this._setUpsampleTile(t88);
          f59 = t88.layerInfo[l75][e78].dataInvalidated ? t88 : null;
        }
      }
    return f59;
  }
  _findAncestorWithData() {
    const e78 = this.tile.elevationLevel, t88 = this._desiredMinLevelDelta;
    let s84;
    for (let i78 = this.tile; i78; i78 = i78.parent)
      if (i78.hasLayerData(this._layerIdx, this._layerClass)) {
        if (e78 - i78.level >= t88)
          return i78;
        s84 = i78;
      }
    return s84;
  }
  _setUpsampleTile(t88, s84) {
    this._tileLayerInfo.setUpsampleInfo(this.tile, t88), this.tile.updateRenderData(this._layerClass, r28.FADING, s84);
  }
  get test() {
    return { findNextDownload: () => this._findNextDownload(), tileLayerInfo: this._tileLayerInfo };
  }
};
var a65 = class extends l55 {
  get _desiredMinLevelDelta() {
    throw n78;
  }
  get _progressiveLevelModulo() {
    throw n78;
  }
  dispose() {
  }
};
var n78 = new Error("Abstract method called on TileAgent");
var r59 = new a65();

// node_modules/@arcgis/core/views/3d/terrain/ElevationTileAgent.js
var l56 = class extends l55 {
  constructor() {
    super(...arguments), this._scaleRangeEnabled = false;
  }
  get _desiredMinLevelDelta() {
    return d13(this.tile.level) - (this.tile.elevationLevel - this.tile.level);
  }
  get _progressiveLevelModulo() {
    return 0;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/MapTileAgent.js
var t66 = class extends l55 {
  constructor() {
    super(), this._scaleRangeEnabled = true;
  }
  get _desiredMinLevelDelta() {
    return 0;
  }
  get _progressiveLevelModulo() {
    return c21;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TilePerLayerInfo.js
var l57 = class {
  constructor() {
    this.waitingAgents = new l2(), this._upsampleInfo = null, this.loadingAgent = null, this.requestPromise = null, this.requestAbort = null, this.pendingUpdates = 0;
  }
  static acquire(t88) {
    const s84 = o60.acquire();
    return s84._init(t88), s84;
  }
  release() {
    this.dispose(), p51.delete(this), o60.release(this);
  }
  dispose() {
    this.loadingAgent = t(this.loadingAgent), this.abortRequest(), this._unsetUpsampleInfo(), this.pendingUpdates = 0, this._data = w11(this._data);
  }
  static prune() {
    o60.prune(0);
  }
  _init(t88) {
    this.waitingAgents.clear(), this._data = w11(this._data), this.dataMissing = false, this.dataInvalidated = false, this._unsetUpsampleInfo(), this.abortRequest(), this.loadingAgent = null, this.pendingUpdates = 0, this._pool = t88, this.elevationBounds = null;
  }
  invalidateSourceData() {
    this.dataInvalidated = true, this.dataMissing = false, this._unsetUpsampleInfo();
  }
  abortRequest() {
    this.requestAbort = e3(this.requestAbort), this.requestPromise = null;
  }
  get upsampleInfo() {
    return this._upsampleInfo;
  }
  _unsetUpsampleInfo() {
    null != this._upsampleInfo && (this._upsampleInfo.tile.unrefMapData(), this._pool.release(this._upsampleInfo), this._upsampleInfo = null);
  }
  setUpsampleInfo(t88, s84) {
    if (t88 !== s84 && null != s84) {
      if (null == this._upsampleInfo)
        this._upsampleInfo = this._pool.acquire();
      else {
        if (this._upsampleInfo.tile === s84)
          return;
        this._upsampleInfo.tile.unrefMapData();
      }
      s84.refMapData(), m11(t88, s84, this._upsampleInfo);
    } else
      this._unsetUpsampleInfo();
  }
  get data() {
    return this._data;
  }
  set data(t88) {
    w11(this._data), this._data = t88;
  }
};
var o60 = new e4(l57, null, () => {
});
var p51 = /* @__PURE__ */ new Map();
function r60() {
  p51.size > 0 && (console.log(`${p51.size} live TilePerLayerInfo allocations:`), p51.forEach((t88) => console.log(t88, "\n")));
}

// node_modules/@arcgis/core/views/3d/terrain/TileTexture.js
var t67 = class {
  constructor(t88) {
    this._texture = t88, this.type = "tile-texture", this._refCount = 1;
  }
  retain() {
    ++this._refCount;
  }
  release() {
    --this._refCount, 0 === this._refCount && this._texture.dispose();
  }
  get texture() {
    return this._texture;
  }
  generateMipmap() {
    this._texture.generateMipmap();
  }
  get descriptor() {
    return this._texture.descriptor;
  }
  get gpuMemoryUsage() {
    return this._texture.gpuMemoryUsage;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileUpdate.js
var E33;
!function(E43) {
  E43[E43.NONE = 0] = "NONE", E43[E43.SPLIT = 1] = "SPLIT", E43[E43.ELEVATION = 2] = "ELEVATION", E43[E43.MERGE = 4] = "MERGE", E43[E43.RENDERDATA = 8] = "RENDERDATA", E43[E43.GEOMETRY = 16] = "GEOMETRY", E43[E43.TEXTURE_NOFADING = 32] = "TEXTURE_NOFADING", E43[E43.TEXTURE_FADING = 64] = "TEXTURE_FADING";
}(E33 || (E33 = {}));

// node_modules/@arcgis/core/views/3d/terrain/Tile.js
var ie6 = 0.1;
var se5 = class {
  constructor() {
    this.lij = [0, 0, 0], this._children = [null, null, null, null], this._pendingUpdates = 0, this.renderData = null, this._dirty = true, this._previouslyRendered = false, this.extent = i4(), this._elevationBounds = n20(), this.layerInfo = [[], []], this.extentInRadians = i4(), this.centerAtSeaLevel = n7(), this._center = [n7(), _5(), n7()], this.up = i2(), this._isWithinClippingArea = true, this._intersectsClippingArea = true, this._maxTesselation = 0, this._usedMemory = null, this._mapTileMemoryInternal = 0, this._mapDataRefCount = 0, this.screenDepth = 0, this.renderOrder = 0, this._edgeLen = 0, this._edgeLen2 = 0, this._curvatureHeight = 0, this.extentMidX = 0, this.extentMidY = 0, this.distanceToPOI = -1, this._lastPOI = n7();
  }
  static prune() {
    ae5.prune(0), oe5.prune(0), l57.prune();
  }
  get _isCached() {
    return !this.shouldLoad && this._mapDataRefCount <= 0;
  }
  get maxTesselation() {
    return this._maxTesselation;
  }
  get isWithinClippingArea() {
    return this._isWithinClippingArea;
  }
  get intersectsClippingArea() {
    return this._intersectsClippingArea;
  }
  get clippingArea() {
    return this._clippingArea;
  }
  get parent() {
    return this._parent;
  }
  get children() {
    return this._children;
  }
  get surface() {
    return this._surface;
  }
  get elevationBounds() {
    return this._elevationBounds;
  }
  get level() {
    return this.lij[0];
  }
  get key() {
    return `${this.lij[0]}/${this.lij[1]}/${this.lij[2]}`;
  }
  get edgeLen() {
    return this._edgeLen;
  }
  get radius() {
    return this._center[he5.MIDDLE][3];
  }
  get visible() {
    return this._dirty && this.computeVisibility(), this._visible;
  }
  get frustumVisibility() {
    return this._dirty && this.computeVisibility(), this._frustumVisibility;
  }
  computeVisibility() {
    this._dirty = false;
    const e78 = this.parent, t88 = (e78 == null ? void 0 : e78.frustumVisibility) ?? T10.INTERSECTS;
    this._frustumVisibility = t88 === T10.INSIDE ? T10.INSIDE : t88 === T10.OUTSIDE ? T10.OUTSIDE : this._calculateFrustumVisibilityStatus(this.surface.frustum);
    const i78 = this._frustumVisibility !== T10.OUTSIDE && this._intersectsClippingArea;
    i78 !== this._visible && (this._visible = i78, this._surface.emit("tiles-visibility-changed"), this._surface.renderer.setDirty(), this.updateAgentSuspension());
  }
  get loadable() {
    return this.visible || this._surface.view.state.fixedContentCamera;
  }
  get rendered() {
    const e78 = !!this.renderData;
    return e78 !== this._previouslyRendered && (this._surface.emit("tiles-visibility-changed"), this._previouslyRendered = e78, this._surface.renderer.setDirty()), e78;
  }
  get shouldLoad() {
    return this.isLeaf;
  }
  init(e78, t88, i78) {
    this.lij[0] = e78[0], this.lij[1] = e78[1], this.lij[2] = e78[2], this.ellipsoid = A2(i78.tilingScheme.spatialReference), i78.tilingScheme.getExtent(e78[0], e78[1], e78[2], this.extent), i78.tilingScheme.convertExtentToRadians(this.extent, this.extentInRadians), this.extentMidX = 0.5 * (this.extent[0] + this.extent[2]), this.extentMidY = 0.5 * (this.extent[1] + this.extent[3]), this._isWithinClippingArea = true, this._intersectsClippingArea = true, this._clippingArea = null, this._mapDataRefCount = 0, i78.upsampleMapCache.pop(this.key), this._edgeLen = 0, this._edgeLen2 = 0, this._center[he5.MIDDLE][3] = 0, this.elevationLevel = e78 ? e78[0] : 0, t88 && t88.elevationBounds ? a14(this._elevationBounds, t88.elevationBounds) : r14(this._elevationBounds, 0, 0), this._pendingUpdates = 0, this.renderData = null, this.screenDepth = 0, this._visible = false, this._previouslyRendered = false, this._parent = t88, this.unsetChildren(), this._surface = i78, this.updateVisibility();
    for (const s84 of E32) {
      const e79 = i78.numLayers(s84), t89 = this.layerInfo[s84];
      for (const i79 of t89)
        i79.release();
      t89.length = e79;
      for (let i79 = 0; i79 < e79; i79++)
        t89[i79] = l57.acquire(this._surface.upsampleInfoPool), s84 === A29.ELEVATION && this.findElevationBoundsForLayer(i79, -1);
    }
    this.computeElevationBounds(), this._maxTesselation = Math.min(i78.tilingScheme.pixelSize, i24);
  }
  release() {
    a28(!this.renderData, "tile.renderData was not unloaded"), this._surface.upsampleMapCache.pop(this.key);
    for (const e78 of E32) {
      for (const t88 of this.layerInfo[e78])
        t88.release();
      this.layerInfo[e78].length = 0;
    }
    this._parent = null;
    for (let e78 = 0; e78 < 4; ++e78)
      this._children[e78] = null;
    this._surface = null, this.setMemoryDirty();
  }
  refMapData() {
    ++this._mapDataRefCount, this._isCached || this._surface.upsampleMapCache.pop(this.key);
  }
  unrefMapData() {
    if (--this._mapDataRefCount, this._isCached) {
      this.setMemoryDirty();
      const e78 = this._cachedMemory;
      e78 > 0 && this._surface.upsampleMapCache.put(this.key, this, e78);
    }
  }
  setMemoryDirty() {
    this._usedMemory = null;
  }
  get usedMemory() {
    return this._ensureUsedMemory() + (this._isCached ? 0 : this._mapTileMemoryInternal);
  }
  get _cachedMemory() {
    return this._isCached ? this._mapTileMemory : 0;
  }
  get _mapTileMemory() {
    return this._ensureUsedMemory(), this.layerInfo[A29.MAP].reduce((e78, t88) => e78 + (t88 instanceof d19 ? t88.memoryUsed / t88.referenced : 0), this._mapTileMemoryInternal);
  }
  get _cpuImageMemorySize() {
    const e78 = 4, t88 = this._surface.tilingScheme.pixelSize;
    return t88 * t88 * e78;
  }
  _ensureUsedMemory() {
    var _a;
    if (null != this._usedMemory)
      return this._usedMemory;
    this._usedMemory = 0, this._mapTileMemoryInternal = 0;
    let e78 = 0;
    for (const { data: i78 } of this.layerInfo[A29.MAP])
      i78 instanceof d19 ? e78 += this._getTerrainDataMemory(i78) : this._mapTileMemoryInternal += this._getTerrainDataMemory(i78);
    const t88 = this._cpuImageMemorySize;
    for (const i78 of this.layerInfo[A29.ELEVATION])
      this._usedMemory += i78.data ? t88 : 0;
    return this.renderData && (this._usedMemory += this.renderData.estimatedGeometryMemoryUsage, this._mapTileMemoryInternal += ((_a = this.renderData.texture) == null ? void 0 : _a.gpuMemoryUsage) ?? 0), this._isCached && this._surface.upsampleMapCache.updateSize(this.key, this, this._mapTileMemoryInternal + e78), this._usedMemory;
  }
  getUsedMemoryForLayer(e78, t88) {
    const i78 = this.layerInfo[e78][t88];
    return (i78 == null ? void 0 : i78.data) ? e78 === A29.MAP ? this._isCached ? 0 : this._getTerrainDataMemory(i78.data) : e78 === A29.ELEVATION ? this._cpuImageMemorySize : 0 : 0;
  }
  _getTerrainDataMemory(e78) {
    return e78 instanceof t67 ? e78.texture.gpuMemoryUsage : e78 instanceof HTMLImageElement || e78 instanceof A11 ? this._cpuImageMemorySize : e78 instanceof m12 ? e78.memoryUsage : e78 instanceof d19 ? e78.memoryUsed / e78.referenced : 0;
  }
  updateScreenDepth(e78) {
    const t88 = this._center[he5.MIDDLE], i78 = e78, s84 = t88[0], n103 = t88[1], r79 = t88[2], a85 = i78[2] * s84 + i78[6] * n103 + i78[10] * r79 + i78[14];
    this.screenDepth = a85 < 0 ? 0 : a85 / (i78[3] * s84 + i78[7] * n103 + i78[11] * r79 + i78[15]);
  }
  shouldSplit(e78, t88, i78) {
    if (!this.visible)
      return E33.NONE;
    if (null != e78.frustum && (!this._intersectsClippingArea || this._calculateFrustumVisibilityStatus(e78.frustum) === T10.OUTSIDE))
      return E33.NONE;
    const s84 = this.level;
    e8(me4, this._center[he5.MIDDLE], t88);
    let n103 = v3(me4), r79 = me4, c75 = he5.MIDDLE;
    e8(_e2, this._center[he5.TOP], t88);
    const g49 = v3(_e2);
    g49 < n103 && (n103 = g49, r79 = _e2, c75 = he5.TOP), e8(ye4, this._center[he5.BOTTOM], t88);
    const p70 = v3(ye4);
    if (p70 < n103 && (n103 = p70, r79 = ye4, c75 = he5.BOTTOM), this._edgeLen2 > n103 && s84 < e78.maxLod)
      return E33.SPLIT;
    const f59 = null != i78 ? i78 - s84 : 1 / 0, m55 = Math.sqrt(n103), _42 = e78.fovX * m55 * 2, y41 = this._edgeLen / _42, A39 = () => {
      if (s84 < e78.maxLod)
        return this.elevationLevel = s84, E33.NONE;
      const t89 = s84 + Math.ceil(-Math.log2(e78.relativeWidthLimit / y41));
      return t89 !== this.elevationLevel ? (this.elevationLevel = t89, E33.ELEVATION) : E33.NONE;
    };
    if (f59 <= 0.5)
      return A39();
    const T31 = P3(this.up, me4), E43 = this._elevationBounds[1] - this._elevationBounds[0], v44 = E43 / this.edgeLen;
    if (e78.aboveGround && T31 > 0 && v44 < 1e-3) {
      if (T31 / m55 - Math.sin(this._curvatureHeight / (this.edgeLen * Math.SQRT1_2) * Math.PI) - v44 > 0)
        return E33.NONE;
    }
    const I29 = null != i78 ? 3 - Math.min(f59, 2) : 1;
    if (y41 * I29 < e78.relativeWidthLimit || s84 >= e78.maxLod)
      return A39();
    if (s84 < 7)
      return E33.SPLIT;
    g3(Ae2, this.up, T31), e8(Ae2, Ae2, r79);
    const M26 = v3(Ae2);
    if (M26 <= this.radius * this.radius)
      return E33.SPLIT;
    g3(Ae2, Ae2, this.radius / Math.sqrt(M26)), u2(Ae2, Ae2, this._center[c75]), e8(Ae2, t88, Ae2);
    const D21 = Math.min(1, (Math.abs(P3(Ae2, this.up)) + 0.5 * E43 + this._curvatureHeight) / s10(Ae2)), x36 = ie6 / e78.angledSplitBias, S27 = e78.fovY * m55 * 2;
    return D21 * (this._edgeLen / S27 * I29) < x36 * e78.relativeHeightLimit ? E33.NONE : E33.SPLIT;
  }
  setChildren(e78, t88, i78, s84) {
    a28(!!(e78 && t88 && i78 && s84), "Null child passed"), this._children[0] = e78, this._children[1] = t88, this._children[2] = i78, this._children[3] = s84;
  }
  unsetChildren() {
    this._children[0] = null, this._children[1] = null, this._children[2] = null, this._children[3] = null;
  }
  get isLoaded() {
    var _a;
    return ((_a = this.renderData) == null ? void 0 : _a.hasGeometry) ?? false;
  }
  load() {
    this.refMapData();
    for (const e78 of E32)
      this._createOrUpdateAgents(0, e78);
    this.surface.renderer.loadTile(this);
  }
  unload(e78) {
    e78.unloadTile(this);
    for (const t88 of E32) {
      const e79 = this.layerInfo[t88];
      for (const t89 of e79)
        t89.loadingAgent && t89.loadingAgent !== r59 && (re5(t89.loadingAgent), t89.loadingAgent = null), t89.pendingUpdates = 0;
    }
    this.resetPendingUpdate(E33.GEOMETRY), this.resetPendingUpdate(E33.TEXTURE_NOFADING), this.resetPendingUpdate(E33.TEXTURE_FADING), this.unrefMapData();
  }
  unloadMapData() {
    const e78 = this.layerInfo[A29.MAP];
    for (const t88 of e78)
      t88.loadingAgent && t88.loadingAgent !== r59 && (re5(t88.loadingAgent), t88.loadingAgent = null), t88.pendingUpdates = 0;
    this.renderData && this.renderData.releaseTexture(), this.setMemoryDirty();
  }
  updateClippingStatus(e78) {
    if (H3(e78, this._clippingArea))
      return false;
    const t88 = this._intersectsClippingArea, i78 = this._isWithinClippingArea;
    null != e78 ? (this._intersectsClippingArea = this.intersectsExtent(e78), this._isWithinClippingArea = this._isWithinExtent(e78)) : (this._intersectsClippingArea = true, this._isWithinClippingArea = true), this._clippingArea = e78, this.updateVisibility();
    const s84 = i78 && this._isWithinClippingArea, n103 = !(i78 || t88 || this._isWithinClippingArea || this._intersectsClippingArea);
    return !this.renderData || s84 || n103 || this.setPendingUpdate(E33.GEOMETRY), true;
  }
  updateVisibility() {
    this._dirty = true, this._surface.setTileTreeDirty();
  }
  getLayerInfo(e78, t88) {
    return this.layerInfo[t88][e78];
  }
  hasLayerData(e78, t88) {
    const i78 = this.layerInfo[t88][e78];
    return !(!i78 || !i78.data || i78.dataInvalidated);
  }
  get updating() {
    if (this.hasPendingUpdates)
      return true;
    for (const e78 of E32) {
      const t88 = this.layerInfo[e78];
      for (const e79 of t88)
        if (e79.loadingAgent && e79.loadingAgent !== r59 && e79.loadingAgent.updating)
          return true;
    }
    return false;
  }
  _isSuspended(e78) {
    return !!this.hasPendingUpdate(E33.SPLIT) || e78 !== A29.ELEVATION && !this.loadable;
  }
  get hasPendingUpdates() {
    return 0 !== this._pendingUpdates;
  }
  hasPendingUpdate(e78) {
    return (this._pendingUpdates & e78) === e78;
  }
  setPendingUpdate(e78) {
    this._pendingUpdates |= e78, e78 === E33.SPLIT || e78 === E33.MERGE ? this._surface.setTileTreeDirty() : this._surface.requestUpdate();
  }
  resetPendingUpdate(e78) {
    return !!this.hasPendingUpdate(e78) && (this._pendingUpdates &= ~e78, true);
  }
  requestLayerData(e78, i78, s84) {
    const n103 = this.layerInfo[i78][e78];
    if (n103.waitingAgents.has(s84))
      return console.warn("agent already requested this piece of map data (tile %s, agent tile %s, layer: %d/%d)", this.lij.toString(), s84.tile.lij.toString(), i78, e78), true;
    if (n103.waitingAgents.push(s84), n103.data && !n103.dataInvalidated) {
      console.warn("agent requested existing data (tile %s, agent tile %s, layer: %d/%d)", this.lij.toString(), s84.tile.lij.toString(), i78, e78);
      const t88 = n103.data && "type" in n103.data && "vector-tile" === n103.data.type;
      return s84.dataArrived(this, t88), true;
    }
    if (n103.requestPromise)
      return true;
    e3(n103.requestAbort), n103.requestAbort = new AbortController();
    const r79 = this._surface.requestTileData(this, e78, i78, n103.requestAbort);
    if (!r79)
      return n103.requestAbort = null, false;
    const a85 = () => {
      n103.requestPromise === r79 && (n103.requestPromise = null, n103.requestAbort = null);
    };
    return n103.requestPromise = r79, r79.then(a85, a85), true;
  }
  get isLeaf() {
    return null == this._children[0];
  }
  hasLij(e78) {
    return this.lij[0] === e78[0] && this.lij[1] === e78[1] && this.lij[2] === e78[2];
  }
  findByLij(e78) {
    if (this.hasLij(e78))
      return this;
    const t88 = this._children;
    if (!t88[0])
      return null;
    return t88[0].findByLij(e78) || t88[1].findByLij(e78) || t88[2].findByLij(e78) || t88[3].findByLij(e78);
  }
  distanceToSquared(e78) {
    return v3(e8(Ae2, this._center[he5.MIDDLE], e78));
  }
  containsPoint(e78) {
    const t88 = this.extent;
    return e78[0] >= t88[0] && e78[1] >= t88[1] && e78[0] <= t88[2] && e78[1] <= t88[3];
  }
  containsPointXY(e78, t88) {
    const i78 = this.extent;
    return e78 >= i78[0] && t88 >= i78[1] && e78 <= i78[2] && t88 <= i78[3];
  }
  unrequestLayerData(e78, t88, i78) {
    const s84 = this.layerInfo[t88][e78], n103 = s84.waitingAgents, r79 = null != n103.removeUnordered(i78);
    a28(r79, "agent has not requested this piece of map data"), n103.length < 1 && (s84.abortRequest(), this.setMemoryDirty());
  }
  dataArrived(e78, t88, i78) {
    const s84 = null != i78 && "type" in i78 && "vector-tile" === i78.type, n103 = this.layerInfo[t88][e78];
    n103.data = i78, n103.dataInvalidated = false, n103.waitingAgents.forAll((e79) => e79.dataArrived(this, s84)), n103.waitingAgents.clear(), this.setMemoryDirty();
  }
  dataMissing(e78, t88, i78) {
    i78.notInTilemap || console.error(`Tile ${this.lij.toString()} layer ${t88}/${e78} error ${i78}`);
    const s84 = this.layerInfo[t88][e78];
    s84.dataMissing = true, s84.waitingAgents.forAll((e79) => e79.dataMissing()), s84.waitingAgents.clear(), this.setMemoryDirty();
  }
  updateRenderData(e78, t88, i78) {
    switch (i78 && this.forEachLoadedNeighbor((i79) => i79.updateRenderData(e78, t88)), e78) {
      case A29.MAP:
        return this._updateTexture(t88);
      case A29.ELEVATION:
        return this._updateGeometry();
    }
  }
  _updateTexture(e78) {
    this.renderData && (this.resetPendingUpdate(e78 === r28.FADING ? E33.TEXTURE_NOFADING : E33.TEXTURE_FADING), this.setPendingUpdate(e78 === r28.FADING ? E33.TEXTURE_FADING : E33.TEXTURE_NOFADING));
  }
  _updateGeometry() {
    this.setPendingUpdate(E33.GEOMETRY);
    for (const e78 of this.layerInfo[A29.ELEVATION])
      e78.pendingUpdates |= E33.GEOMETRY;
  }
  invalidateLayerData(e78, t88) {
    this.layerInfo[t88][e78].invalidateSourceData(), this.restartAgents(t88);
  }
  computeElevationBounds() {
    const e78 = this._elevationBounds, t88 = e78[0], i78 = e78[1];
    r14(e78, 1 / 0, -1 / 0);
    const s84 = this.layerInfo[A29.ELEVATION];
    let r79 = true;
    for (const n103 of s84)
      null != n103.elevationBounds && (e78[0] = Math.min(e78[0], n103.elevationBounds.min), e78[1] = Math.max(e78[1], n103.elevationBounds.max), n103.elevationBounds.hasNoDataValues || (r79 = false));
    r79 && (e78[0] = Math.min(e78[0], 0), e78[1] = Math.max(e78[1], 0)), t88 === e78[0] && i78 === e78[1] || (this.updateRadiusAndCenter(), this._surface.setTileTreeDirty());
  }
  _updateCenter() {
    const e78 = this._elevationBounds, t88 = 0.5 * (e78[0] + e78[1]), i78 = this._center;
    g3(Ae2, this.up, t88), u2(i78[he5.MIDDLE], this.centerAtSeaLevel, Ae2), g3(Ae2, this.up, e78[0]), u2(i78[he5.TOP], this.centerAtSeaLevel, Ae2), g3(Ae2, this.up, e78[1]), u2(i78[he5.BOTTOM], this.centerAtSeaLevel, Ae2);
  }
  findElevationBoundsForLayer(e78, t88) {
    const i78 = this.layerInfo[A29.ELEVATION][e78], s84 = d13(this.level), n103 = Math.max(this.elevationLevel - s84, 0), r79 = i78.elevationBounds;
    if (null != r79 && r79.level >= t88 && r79.level <= n103)
      return;
    const a85 = this._surface.layerViewByIndex(e78, A29.ELEVATION), o77 = m9(a85);
    if (!o34(this, o77, false))
      return;
    const l75 = le5;
    let h58 = false;
    const u58 = i78.data;
    if (u58 && u58.level <= n103) {
      const e79 = i78.data;
      l75.min = e79.samplerData.data.minValue, l75.max = e79.samplerData.data.maxValue, l75.hasNoDataValues = e79.samplerData.data.hasNoDataValues, l75.level = this.level, h58 = true;
    } else {
      let t89, i79, r80 = 0;
      for (let a86 = this._parent; a86 && (!i79 || r80 < s84) && (r80 = this.elevationLevel - a86.level, t89 = i79 || t89, i79 = a86.layerInfo[A29.ELEVATION][e78].data, !(!i79 && t89 && a86.level <= n103)); a86 = a86.parent)
        ;
      i79 = i79 || t89, i79 && (i79.computeMinMaxValue(this.lij[0], this.lij[1], this.lij[2], l75), l75.min !== 1 / 0 && (l75.level = i79.level, h58 = true));
    }
    h58 && (null == i78.elevationBounds && (i78.elevationBounds = new s66()), i78.elevationBounds.copyFrom(l75));
  }
  modifyLayers(e78, t88, i78) {
    const s84 = this.layerInfo[i78];
    for (const a85 of s84)
      a85.loadingAgent && a85.loadingAgent !== r59 && (re5(a85.loadingAgent), a85.loadingAgent = null), a85.waitingAgents.clear();
    for (let a85 = 0; a85 < s84.length; ++a85)
      void 0 === e78[a85] && s84[a85].release();
    const n103 = new Array(...s84), r79 = t88.length;
    s84.length = r79;
    for (let a85 = 0; a85 < r79; a85++) {
      const e79 = t88[a85];
      s84[a85] = e79 > -1 ? n103[e79] : l57.acquire(this._surface.upsampleInfoPool);
    }
    this.setMemoryDirty();
  }
  restartAgents(e78) {
    this.renderData && (this._createOrUpdateAgents(0, e78), this.updateRenderData(e78, r28.FADING));
  }
  updateAgents(e78) {
    if (this.renderData) {
      const t88 = this.layerInfo[e78];
      for (const e79 of t88)
        e79.loadingAgent === r59 && (e79.loadingAgent = null);
      this._createOrUpdateAgents(0, e78);
    }
  }
  updateAgentSuspension() {
    for (const e78 of E32) {
      const t88 = this._isSuspended(e78);
      for (const i78 of this.layerInfo[e78])
        i78.loadingAgent && i78.loadingAgent !== r59 && (i78.loadingAgent.setSuspension(t88), i78.loadingAgent === r59 && this.updateRenderData(e78, r28.FADING));
    }
  }
  removeLayerAgent(e78, t88) {
    const i78 = this.layerInfo[t88][e78];
    i78.loadingAgent && i78.loadingAgent !== r59 && i78.loadingAgent.dispose(), i78.loadingAgent = null;
  }
  agentDone(e78, t88) {
    const i78 = this.layerInfo[t88][e78];
    i78.loadingAgent = r59, i78.data || null != i78.upsampleInfo || this._createOrUpdateAgents(e78 + 1, t88);
  }
  _hasBlendableAncestor(e78) {
    return "normal" !== e78.blendMode || a12(e78.parent) && this._hasBlendableAncestor(e78.parent);
  }
  _hasBlendModes(e78, t88, i78) {
    var _a, _b, _c;
    for (let s84 = e78; s84 < t88; ++s84) {
      const e79 = this._surface.layerViewByIndex(s84, i78);
      if (U6(e79) && "normal" !== ((_a = e79 == null ? void 0 : e79.layer) == null ? void 0 : _a.blendMode) || a12((_b = e79 == null ? void 0 : e79.layer) == null ? void 0 : _b.parent) && this._hasBlendableAncestor((_c = e79 == null ? void 0 : e79.layer) == null ? void 0 : _c.parent))
        return true;
    }
    return false;
  }
  _createOrUpdateAgents(e78, t88) {
    const i78 = this.layerInfo[t88];
    if (0 === i78.length)
      return;
    const s84 = this._isSuspended(t88);
    for (let n103 = e78; n103 < i78.length; ++n103) {
      const r79 = i78[n103];
      let a85 = false;
      const o77 = this._surface.layerViewByIndex(n103, t88), l75 = m9(o77);
      if (r79.loadingAgent ? o34(this, l75, false) ? (r79.loadingAgent !== r59 && r79.loadingAgent.setSuspension(s84), r79.loadingAgent !== r59 && (a85 = r79.loadingAgent.update())) : r79.dispose() : o34(this, l75, false) && (r79.loadingAgent = ne5(this, n103, t88, s84), a85 = r79.loadingAgent.startLoading(), a85 ? r79.loadingAgent === r59 && this.setPendingUpdate(E33.GEOMETRY) : (re5(r79.loadingAgent), r79.loadingAgent = r59)), r79.loadingAgent === r59 && this.updateRenderData(t88, r28.FADING), !this._hasBlendModes(e78, i78.length, t88) && a85 && o77.isOpaque)
        return;
    }
  }
  _isWithinExtent(e78) {
    const t88 = this.extent;
    return t88[0] >= e78[0] && e78[2] >= t88[2] && t88[1] >= e78[1] && e78[3] >= t88[3];
  }
  intersectsExtent(e78) {
    const t88 = this.extent;
    return t88[2] >= e78[0] && e78[2] >= t88[0] && t88[3] >= e78[1] && e78[3] >= t88[1];
  }
  getElevationVerticesPerSide(t88) {
    const i78 = this.elevationLevel - this.level, s84 = Math.max(this.level - t88, d13(this.level) - i78), n103 = i3(1 + (this.maxTesselation >> s84), 2, this.maxTesselation + 1), r79 = this.getDefaultVerticesPerSide();
    return Math.max(n103, r79);
  }
  get test() {
    return { cachedMemory: this._cachedMemory };
  }
  _findLIJ(e78, t88) {
    if (!e78)
      return null;
    const i78 = this.surface.rootTiles;
    if (null != i78) {
      for (const s84 of i78)
        if (ue4(s84, e78)) {
          let i79 = s84, n103 = e78[0] - i79.level - 1;
          for (; n103 >= 0 && !i79.isLeaf && !t88(i79); ) {
            const t89 = e78[1] >> n103 & 1, s85 = e78[2] >> n103 & 1;
            i79 = i79.children[2 * t89 + s85], n103--;
          }
          return t88(i79) ? i79 : null;
        }
    }
    return null;
  }
  findNeighborTile(e78, t88) {
    const i78 = this.lij, s84 = this.getNeighborLIJ(i78, e78);
    return s84 ? de4(i78, s84) ? t88(this) ? this : null : this._findLIJ(s84, t88) : null;
  }
  findCorner(e78, t88) {
    const i78 = e78 === S9.NORTH_EAST ? 1 : e78 === S9.NORTH_WEST ? 0 : e78 === S9.SOUTH_WEST ? 2 : 3;
    let s84 = this;
    for (; s84.children[0] && (!t88 || !t88(s84)); )
      s84 = s84.children[i78];
    return s84;
  }
  findNeighborCornerTileExact(e78, t88) {
    var _a;
    return ((_a = this.findNeighborTile(e78, (e79) => t88(e79) || e79.level === this.level)) == null ? void 0 : _a.findCorner(D6(e78), t88)) || null;
  }
  forAllSubtreeOnSide(e78, t88) {
    const i78 = e78 === S9.NORTH ? [0, 1] : e78 === S9.NORTH_EAST ? [1] : e78 === S9.EAST ? [1, 3] : e78 === S9.SOUTH_EAST ? [3] : e78 === S9.SOUTH ? [2, 3] : e78 === S9.SOUTH_WEST ? [2] : e78 === S9.WEST ? [0, 2] : [0], s84 = (e79) => {
      const n103 = e79.children;
      !t88(e79) && n103[0] && i78.forEach((e80) => s84(n103[e80]));
    };
    s84(this);
  }
  forallNeighbors(e78) {
    Y5.forEach((t88) => this.findNeighborCornerTileExact(t88, e78)), X3.forEach((t88) => {
      var _a;
      return (_a = this.findNeighborTile(t88, (t89) => t89.level === this.level || e78(t89))) == null ? void 0 : _a.forAllSubtreeOnSide(P8(t88), e78);
    });
  }
  getNeighborEdgeStartVertexIndex(e78, t88) {
    if (!t88)
      return 0;
    const i78 = this.level - t88.level;
    if (p15(!T11 || i78 >= 0), 0 === i78)
      return 0;
    const s84 = 2 ** i78, n103 = 1 == (1 & e78), r79 = n103 ? 0 : 1, a85 = t88.lij[r79 + 1] * s84, o77 = this.lij[r79 + 1], l75 = o77 - a85, h58 = n103 ? s84 - 1 - l75 : l75;
    return T11 && (p15(a85 <= o77 && o77 < a85 + s84), p15(0 <= h58 && h58 < s84)), h58;
  }
  forEachLoadedNeighbor(e78) {
    const t88 = this.level, i78 = (e79) => e79.level === t88 || e79.isLoaded;
    X3.forEach((t89) => {
      const s84 = this.findNeighborTile(t89, i78);
      null != s84 && s84 !== this && s84.forAllSubtreeOnSide(P8(t89), (i79) => !!i79.isLoaded && (e78(i79, t89), true));
    }), Y5.forEach((t89) => {
      var _a;
      const s84 = (_a = this.findNeighborTile(t89, i78)) == null ? void 0 : _a.findCorner(D6(t89), (e79) => e79.isLoaded);
      p15(!s84 || ge3(this, s84, t89)), (s84 == null ? void 0 : s84.isLoaded) && e78(s84, t89);
    });
  }
  getNeighborLIJ(e78, t88) {
    const i78 = Q(t88) ? -1 : K2(t88) ? 1 : 0, s84 = B4(t88) ? -1 : J3(t88) ? 1 : 0, n103 = [e78[0], e78[1] + i78, e78[2] + s84];
    return n103[1] < 0 ? null : this.surface.isGlobal ? this.wrapLIJ(n103) : n103[2] < 0 ? null : n103;
  }
  wrapLIJ(e78) {
    return !e78 || e78[1] < 0 || e78[1] >= 2 ** e78[0] ? null : this.surface.wrapEastWest(e78);
  }
  get westNeighborWestExtent() {
    return this.extent[0] * (this.isWestEnd ? -1 : 1);
  }
  get eastNeighborEastExtent() {
    return this.extent[2] * (this.isEastEnd ? -1 : 1);
  }
  get isEastEnd() {
    return this.lij[2] === this.surface.lijEastEnd(this.level) - 1;
  }
  get isWestEnd() {
    return 0 === this.lij[2];
  }
  get isNorthEnd() {
    return 0 === this.lij[1];
  }
  get isSouthEnd() {
    const e78 = this.surface.extent, t88 = (e78 == null ? void 0 : e78[1]) ?? null;
    return null != t88 && this.extent[1] + a6() >= t88;
  }
  checkGeometryWaterproofness() {
    var _a;
    s32 && (p15(this.isLoaded), (_a = this.renderData) == null ? void 0 : _a.checkGeometryWaterproofness());
  }
  shouldHaveNeighbor(e78) {
    const t88 = this.extent, i78 = this.surface.rootTilesExtent, s84 = 0.25 * (t88[2] - t88[0]);
    if (Q(e78) && t88[3] + s84 >= i78[3])
      return false;
    if (K2(e78) && t88[1] - s84 <= i78[1])
      return false;
    const n103 = this.surface.isGlobal;
    return !(!n103 && B4(e78) && t88[0] - s84 <= i78[0]) && !(!n103 && J3(e78) && t88[2] + s84 >= i78[2]);
  }
  updateDistanceToPOI(e78) {
    const t88 = this._lastPOI;
    if (this.distanceToPOI >= 0 && t88[0] === e78[0] && t88[1] === e78[1] && t88[2] === e78[2])
      return;
    r7(this._lastPOI, e78);
    const i78 = this._center[he5.MIDDLE], s84 = e78[0] - i78[0], n103 = e78[1] - i78[1], r79 = e78[2] - i78[2];
    this.distanceToPOI = s84 * s84 + n103 * n103 + r79 * r79;
  }
};
function ne5(e78, t88, i78, s84) {
  const n103 = i78 === A29.ELEVATION ? oe5.acquire() : ae5.acquire();
  return n103.init(e78, t88, i78, s84), n103;
}
function re5(e78) {
  e78.dispose(), e78 instanceof l56 ? oe5.release(e78) : e78 instanceof t66 && ae5.release(e78);
}
var ae5 = new e4(t66);
var oe5 = new e4(l56);
var le5 = new s66();
var he5;
function ue4(e78, t88) {
  const i78 = e78.level, s84 = t88[0];
  if (i78 > s84)
    return false;
  const n103 = s84 - i78, r79 = Math.floor(t88[1] / 2 ** n103), a85 = Math.floor(t88[2] / 2 ** n103);
  return r79 === e78.lij[1] && a85 === e78.lij[2];
}
function de4(e78, t88) {
  return e78[0] === t88[0] && e78[1] === t88[1] && e78[2] === t88[2];
}
function ce6(e78, t88, i78) {
  if (null == e78 || null == t88)
    return false;
  if (0 === e78.level && 0 === t88.level) {
    if (e78.isEastEnd && t88.isWestEnd && i78 === S9.EAST)
      return true;
    if (e78.isWestEnd && t88.isEastEnd && i78 === S9.WEST)
      return true;
  }
  const s84 = Math.max(1e-6 * (e78.extent[2] - e78.extent[0]), 1);
  switch (i78) {
    case S9.NORTH:
      return G7(e78.extent[3], t88.extent[1], s84);
    case S9.SOUTH:
      return G7(e78.extent[1], t88.extent[3], s84);
    case S9.EAST:
      return G7(e78.extent[2], t88.extent[0], s84) || G7(e78.extent[2], -t88.extent[0], s84);
    case S9.WEST:
      return G7(e78.extent[0], t88.extent[2], s84) || G7(e78.extent[0], -t88.extent[2], s84);
  }
}
function ge3(e78, t88, i78) {
  return null != e78 && null != t88 && t88 !== e78 && (e78.level >= t88.level ? pe4(e78, t88, i78) : pe4(t88, e78, D6(i78)));
}
function pe4(e78, t88, i78) {
  p15(e78.level >= t88.level);
  const s84 = q4(i78), n103 = z7(i78), r79 = e78.extent, a85 = t88.extent, o77 = [s84 ? r79[0] : r79[2], n103 ? r79[3] : r79[1]], l75 = [s84 ? a85[2] : a85[0], n103 ? a85[1] : a85[3]], h58 = 1e-5 * (r79[2] - r79[0]), u58 = G7(o77[0], l75[0], h58) || e78.surface.isGlobal && G7(o77[0], -l75[0], h58), d63 = G7(o77[1], l75[1], h58);
  if (u58 && d63)
    return true;
  if (e78.level === t88.level)
    return p15(false), false;
  if (!u58 && !d63)
    return p15(false), false;
  const c75 = u58 ? fe3(a85[1], a85[3], r79[1], r79[3], h58) : fe3(a85[0], a85[2], r79[0], r79[2], h58);
  return p15(c75), c75;
}
function fe3(e78, t88, i78, s84, n103) {
  return e78 - n103 <= i78 && i78 <= s84 && s84 <= t88 + n103;
}
!function(e78) {
  e78[e78.TOP = 0] = "TOP", e78[e78.MIDDLE = 1] = "MIDDLE", e78[e78.BOTTOM = 2] = "BOTTOM";
}(he5 || (he5 = {}));
var me4 = n7();
var _e2 = n7();
var ye4 = n7();
var Ae2 = n7();

// node_modules/@arcgis/core/views/3d/terrain/TileOverlayData.js
var t68 = class {
  constructor() {
    this._scales = r12(-1, -1, -1, -1), this._offsets = r12(-1, -1, -1, -1);
  }
  clear() {
    this._scales[0] = this._scales[1] = this._scales[2] = this._scales[3] = -1, this._offsets[0] = this._offsets[1] = this._offsets[2] = this._offsets[3] = -1;
  }
  setScale(s84, t88, e78) {
    this._scales[2 * s84] = t88, this._scales[2 * s84 + 1] = e78;
  }
  setOffset(s84, t88, e78) {
    this._offsets[2 * s84] = t88, this._offsets[2 * s84 + 1] = e78;
  }
  get scales() {
    return this._scales;
  }
  get offsets() {
    return this._offsets;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/TerrainTechnique.js
var g32 = class _g extends e25 {
  constructor() {
    super(...arguments), this.useStencil = false;
  }
  initializeConfiguration(i78, r79) {
    r79.spherical = i78.viewingMode === l14.Global;
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _g.shader.get().build(this.configuration), S21);
  }
  initializePipeline() {
    return this._stencilPipelineState = this._createPipeline(true), this._createPipeline(false);
  }
  _createPipeline(e78) {
    const i78 = this.configuration, r79 = i78.backfaceCullingEnabled && !i78.renderOccluded;
    return W4({ blending: i78.renderOccluded ? s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA) : null, culling: r79 ? r27 : null, depthTest: i78.renderOccluded ? null : { func: I4.LESS }, depthWrite: i78.renderOccluded ? null : a25, colorWrite: _7, stencilTest: e78 ? t25(a19.IntegratedMeshMaskExcluded) : null });
  }
  getPipelineState(e78, i78) {
    return this.useStencil ? this._stencilPipelineState : super.getPipelineState(e78, i78);
  }
};
g32.shader = new t24(H7, () => import("./Terrain.glsl-RSLXA4JG.js"));
var S21 = /* @__PURE__ */ new Map([[O4.POSITION, 0], [O4.UV0, 1], [O4.NORMALCOMPRESSED, 2]]);

// node_modules/@arcgis/core/views/3d/terrain/PatchRenderData.js
var G15 = class {
  constructor() {
    this.geometry = new l53(), this.intersectionData = null, this.geometryState = null, this._textureRef = new i65(() => this.tile.surface.textureFadeDuration), this.overlay = new t68(), this._geometryStateChangedSinceLastUpdate = true, this._hasGeometry = false, this._numVerticesPerSideChanged = false, this._samplerDataChanged = false, this._clippingAreaChanged = false, this._wireframeChanged = false, this._dirtyEdgeResolutions = 15, this._dirtyEdges = 15, this._dirtyCorners = 15;
  }
  get tile() {
    return this._tile;
  }
  init(e78) {
    this.clear(), this._tile = e78;
    const t88 = this.geometry;
    t88.indices = null, t88.vertexAttributes = null, P4(t88.boundingBox), t88.indexCount = 0, t88.numVerticesPerSide = 0, this.intersectionData = null, this.geometryState = new r58(), this.localOrigin = null, this.overlay.clear();
  }
  clear() {
    this.releaseGeometry(), this.releaseTexture(), this._textureRef.clear(), this._tile = null, this.intersectionData = null, this.geometryState = null;
  }
  updateGeometryIfNeeded(e78) {
    if ((!this._vao || this._geometryStateChangedSinceLastUpdate || this._wireframeChanged || this._clippingAreaChanged || this._samplerDataChanged || this._numVerticesPerSideChanged || this._dirtyCorners || this._dirtyEdgeResolutions || this._dirtyEdges) && (this._updateGeometry(e78), this._geometryStateChangedSinceLastUpdate = false), T11 && this.tile.intersectsClippingArea)
      for (let t88 = 0; t88 < 4; ++t88)
        p15(this.geometry.outerEdges[t88].count === this.geometryState.neighborData.edgeResolutions[t88] + 1);
  }
  _calculateEdgeResolution(e78, t88) {
    var _a;
    const r79 = this.tile, i78 = this.geometryState.numVerticesPerSide - 1;
    if (!r79.surface.isGlobal) {
      const t89 = r79.surface.extent;
      if (null != t89 && (0 === e78 && r79.extent[3] > t89[3] || 1 === e78 && r79.extent[2] > t89[2] || 2 === e78 && r79.extent[1] < t89[1] || 3 === e78 && r79.extent[0] < t89[0]))
        return i78;
    }
    const s84 = r79.level, a85 = X3[e78];
    if (!t88)
      return p15(null == ((_a = r79.surface) == null ? void 0 : _a.rootTiles) || r79.surface.updatingRootTiles || !r79.shouldHaveNeighbor(a85)), i78;
    if (t88.isLoaded) {
      const r80 = t88, a86 = r80.renderData.geometryState, o78 = s84 - r80.level;
      if (p15(o78 >= 0), 0 === o78) {
        const e79 = a86.numVerticesPerSide - 1;
        return Math.max(e79, i78);
      }
      const n103 = 2 ** o78, l75 = a86.neighborData.edgeResolutions[(e78 + 2) % 4] / n103;
      return Math.max(1, l75);
    }
    p15(!t88.isLeaf);
    let o77 = i78;
    return t88.forAllSubtreeOnSide(P8(a85), (e79) => e79 === r79 || (e79.isLoaded ? (o77 = Math.max(o77, 2 ** (e79.level - s84)), true) : (p15(!e79.isLeaf), false))), o77;
  }
  updateNeighborData() {
    var _a;
    const e78 = this.tile;
    if (!e78.intersectsClippingArea)
      return;
    const r79 = e78.renderData.geometryState.neighborData, i78 = (t88) => (t88.isLoaded || t88.level === e78.level) && (t88 == null ? void 0 : t88.intersectsClippingArea), s84 = r79.edgePeerNeighbors, a85 = r79.edgePeerNeighborSamplerVersions;
    for (let n103 = 0; n103 < 4; ++n103) {
      const o78 = e78.findNeighborTile(X3[n103], i78), l75 = H21(e78, o78), h58 = ((_a = l75 == null ? void 0 : l75.renderData) == null ? void 0 : _a.geometryState.samplerDataVersion) ?? -1, d63 = s84[n103], g49 = l75 !== H21(e78, d63), u58 = a85[n103] !== h58;
      s84[n103] = o78, (g49 || u58) && (a85[n103] = h58, this._markEdgeDirty(n103));
      const c75 = r79.edgeResolutions[n103], m55 = this._calculateEdgeResolution(n103, o78);
      p15(o5(m55)), p15(m55 >= 1), r79.edgeResolutions[n103] = m55, c75 !== m55 && this._markEdgeResolutionDirty(n103);
    }
    const o77 = r79.cornerPeerNeighbors;
    for (let t88 = 0; t88 < 4; ++t88) {
      const a86 = e78.findNeighborTile(Y5[t88], i78);
      o77[t88] = a86;
      const n103 = H21(e78, s84[t88]), l75 = H21(e78, s84[(t88 + 1) % 4]), h58 = H21(e78, a86);
      X10[t88] = h58, X10[(t88 + 1) % 4] = l75, X10[(t88 + 2) % 4] = e78, X10[(t88 + 3) % 4] = n103, p15(X10.some((t89) => (t89 == null ? void 0 : t89.isLoaded) || t89 === e78));
      const d63 = X10.reduce((e79, t89) => Math.min(e79, (t89 == null ? void 0 : t89.level) ?? 1 / 0), 1 / 0);
      X10.forEach((e79, t89) => {
        e79 && (e79 == null ? void 0 : e79.level) > d63 && (X10[t89] = null);
      }), p15(X10.some((t89) => (t89 == null ? void 0 : t89.isLoaded) || t89 === e78));
      const g49 = r79.cornerNeighborData[t88].cornerTiles, u58 = r79.cornerNeighborData[t88].cornerTileSamplerVersions;
      for (let e79 = 0; e79 < 4; ++e79) {
        const r80 = X10[e79], i79 = (r80 == null ? void 0 : r80.renderData.geometryState.samplerDataVersion) ?? -1, s85 = g49[e79] !== r80, a87 = !s85 && u58[e79] !== i79;
        (s85 || a87) && (g49[e79] = r80, u58[e79] = i79, this._markCornerDirty(t88));
      }
      p15(g49.some((t89) => (t89 == null ? void 0 : t89.isLoaded) || t89 === e78));
    }
    T11 && p15(this.geometryState.neighborData.edgeResolutions.every((e79) => e79 > 0));
    for (let t88 = 0; t88 < 4; ++t88)
      X10[t88] = null;
  }
  _updateGeometry(e78) {
    if (!this.tile.intersectsClippingArea)
      return;
    T11 && p15(!this.tile.intersectsClippingArea || this.geometryState.neighborData.edgeResolutions.every((e79) => e79 > 0)), this.intersectionData = null;
    const t88 = this.tile, r79 = this._vao, i78 = this.geometry.vertexAttributes, s84 = !r79 || !i78 || this._wireframeChanged || this._numVerticesPerSideChanged || this._samplerDataChanged || this._clippingAreaChanged || this._dirtyEdgeResolutions, a85 = !s84 && (0 !== this._dirtyEdges || 0 !== this._dirtyEdgeResolutions), o77 = !a85 && 0 !== this._dirtyCorners;
    s84 ? (this.releaseGeometry(), this._createGeometry(e78)) : a85 || o77 ? t88.updateEdgeElevations() : o77 ? t88.updateCornerElevations() : console.warn("Update for no reason?"), this._numVerticesPerSideChanged = false, this._samplerDataChanged = false, this._dirtyEdgeResolutions = 0, this._dirtyEdges = 0, this._dirtyCorners = 0, this._clippingAreaChanged = false, this._wireframeChanged = false;
  }
  get hasGeometry() {
    return this._hasGeometry;
  }
  releaseGeometry() {
    return this._hasGeometry = false, this.intersectionData = null, !!this._vao && (this._vao.dispose(), this._vao = null, f43(this.geometry), true);
  }
  ensureTexture(e78, t88) {
    return null != this._texture && this._texture.descriptor.width !== e78 && this.releaseTexture(), null == this._texture && (this._texture = t88(), this.tile.setMemoryDirty()), this._texture;
  }
  releaseTexture() {
    null != this._texture && (this._texture.release(), this._texture = null, this.tile.setMemoryDirty());
  }
  _markCornerDirty(e78) {
    const t88 = 1 << e78;
    this._dirtyCorners |= t88;
  }
  _markEdgeDirty(e78) {
    const t88 = 1 << e78;
    this._dirtyEdges |= t88, this._markCornerDirty((e78 + 0) % 4), this._markCornerDirty((e78 + 3) % 4);
  }
  _markEdgeResolutionDirty(e78) {
    const t88 = 1 << e78;
    this._dirtyEdgeResolutions |= t88, this._markEdgeDirty(e78);
  }
  _markAllEdgesAndCornersDirty() {
    this._dirtyCorners = 15, this._dirtyEdges = 15, this._dirtyEdgeResolutions = 15;
  }
  updateGeometryState() {
    const t88 = this._getElevationInfo(), r79 = this.tile, i78 = t88.samplerData ? r79.getElevationVerticesPerSide(t88.maxTileLevel) : r79.getDefaultVerticesPerSide(), s84 = Math.max(i78, 5);
    let a85 = r79.clippingArea;
    r79.intersectsClippingArea && !r79.isWithinClippingArea || (a85 = null);
    const o77 = this.geometryState;
    let n103 = false;
    o77.numVerticesPerSide !== s84 && (this._numVerticesPerSideChanged = true, o77.numVerticesPerSide = s84, o77.samplerDataVersion++, n103 = true), t88.changed && (this._samplerDataChanged = true, o77.samplerData = t88.samplerData, o77.samplerDataVersion++, n103 = true), s(o77.clippingArea, a85) || (this._clippingAreaChanged = true, o77.clippingArea = a85, n103 = true);
    const l75 = r79.surface.wireframe;
    return o77.wireframe !== l75 && (this._wireframeChanged = true, o77.wireframe = l75, n103 = true), this._geometryStateChangedSinceLastUpdate || (this._geometryStateChangedSinceLastUpdate = n103), n103 && this._markAllEdgesAndCornersDirty(), this._hasGeometry = true, this._geometryStateChangedSinceLastUpdate;
  }
  _createGeometry(e78) {
    this.tile.createGeometry();
    const t88 = this.geometry.vertexAttributes, r79 = this.geometry.indices, i78 = e78.gl;
    this._vao = new r30(e78, S21, { geometry: r16(t88.layout) }, { geometry: c17.createVertex(e78, i78.STATIC_DRAW, t88.buffer) }, c17.createIndex(e78, i78.STATIC_DRAW, r79)), this._hasGeometry = true;
  }
  get vao() {
    return this._vao;
  }
  setTextureReference(e78, t88 = n77.Immediate) {
    null != e78 && e78.texture !== this._texture && this.releaseTexture(), this._textureRef.push(e78, t88);
  }
  get textureReference() {
    return this._textureRef.current;
  }
  get nextTextureReference() {
    return this._textureRef.next;
  }
  get textureFadeFactor() {
    return this._textureRef.fadeFactor;
  }
  get textureIsFading() {
    return this._textureRef.isFading;
  }
  _getElevationInfo() {
    const e78 = this.geometryState.samplerData, t88 = this.tile.layerInfo[A29.ELEVATION], r79 = t88.length, i78 = new Array(r79);
    let s84 = 0, a85 = 0, o77 = false;
    for (let h58 = 0; h58 < r79; h58++) {
      const r80 = t88[h58];
      if (null != r80.upsampleInfo) {
        const t89 = r80.upsampleInfo.tile, n104 = t89.layerInfo[A29.ELEVATION][h58].data, l76 = n104 && n104.samplerData;
        e78 && e78[s84] === l76 || (o77 = true), i78[s84++] = l76, a85 = Math.max(a85, t89.lij[0]);
      } else if (r80.data) {
        const t89 = this.tile.surface.layerViewByIndex(h58, A29.ELEVATION);
        if (o34(this.tile, t89.layer, false)) {
          const t90 = r80.data;
          e78 && e78[s84] === t90.samplerData || (o77 = true), i78[s84++] = t90.samplerData, a85 = this.tile.level;
        }
      }
    }
    null != e78 && e78.length !== s84 && (o77 = true);
    const n103 = s84 > 0, l75 = n103 ? i78 : null;
    return n103 && (i78.length = s84), { changed: o77, samplerData: l75, maxTileLevel: a85 };
  }
  get estimatedGeometryMemoryUsage() {
    var _a, _b, _c;
    const e78 = ((_a = this.intersectionData) == null ? void 0 : _a.estimatedMemoryUsage) ?? 0;
    return (((_b = this.geometry.indices) == null ? void 0 : _b.byteLength) ?? 0) + (((_c = this.geometry.vertexAttributes) == null ? void 0 : _c.byteLength) ?? 0) + e78;
  }
  get texture() {
    return this._texture;
  }
  get test() {
    return { hasTexture: null != this._texture };
  }
  checkGeometryWaterproofness() {
    if (!T11)
      return;
    const e78 = this.tile;
    if (!e78.isLoaded || !e78.intersectsClippingArea || 0 === e78.level)
      return void p15(e78 == null ? void 0 : e78.isLoaded);
    const u58 = e78.surface.extent;
    if (null != u58 && !e78.intersectsExtent(u58))
      return;
    const p70 = X3.map((t88, r79) => null != u58 && (r79 < 2 ? -1 : 1) * (e78.extent[3 - r79] - u58[3 - r79]) < 0), y41 = e78.level;
    p15(0 === this._dirtyCorners), p15(0 === this._dirtyEdges), p15(0 === this._dirtyEdgeResolutions), p15(!this._numVerticesPerSideChanged), p15(!this._samplerDataChanged), p15(!this._clippingAreaChanged), p15(!this._wireframeChanged);
    const _42 = Y5.map((t88) => e78.findNeighborCornerTileExact(t88, (t89) => !t89.intersectsClippingArea || t89.isLoaded || t89.level === e78.level) ?? null).map((e79) => (e79 == null ? void 0 : e79.intersectsClippingArea) ? e79 : null), x36 = this.geometryState.neighborData;
    for (let t88 = 0; t88 < 4; ++t88) {
      const r79 = x36.cornerPeerNeighbors[t88], i78 = _42[t88];
      p15(i78 === r79, `Tile[${e78.lij}].corner[${t88}] out of date: cur=[${r79 == null ? void 0 : r79.lij}] exp=[${i78 == null ? void 0 : i78.lij}]`);
    }
    X3.forEach((u59, _43) => {
      if (p70[_43])
        return;
      const x37 = e78.findNeighborTile(u59, (e79) => (e79.level === y41 || (e79 == null ? void 0 : e79.isLoaded)) && (e79 == null ? void 0 : e79.intersectsClippingArea));
      if (!x37) {
        const t88 = !e78.surface.updatingRootTiles && null != e78.surface.rootTiles && e78.surface.rootTiles.length > 0 && e78.shouldHaveNeighbor(u59);
        return void p15(!t88);
      }
      p15(x37.isLoaded || x37.level === e78.level), p15(x37 === this.geometryState.neighborData.edgePeerNeighbors[_43]);
      const D21 = y41 - x37.level;
      if (!x37.isLoaded)
        return p15(!x37.isLeaf), void p15(0 === D21);
      const v44 = x37.renderData;
      p15(ce6(e78, x37, u59)), p15(D21 >= 0);
      const S27 = 2 ** D21;
      if (D21 < 0)
        return void p15(false);
      const $12 = e78.renderData, E43 = $12.geometry, A39 = E43.outerEdges[_43], V17 = E43.numVerticesPerSide - 1, R25 = v44.geometry;
      if (!R25)
        return void p15(false);
      const w33 = this.geometryState.neighborData.edgePeerNeighbors[_43];
      if (w33 == null ? void 0 : w33.isLoaded) {
        const e79 = w33.renderData;
        p15(w33 == w33), p15($12.geometryState.neighborData.edgePeerNeighborSamplerVersions[_43] === e79.geometryState.samplerDataVersion), p15(this.geometryState.neighborData.edgePeerNeighborSamplerVersions[_43] === e79.geometryState.samplerDataVersion);
      }
      const L28 = (_43 + 2) % 4, P29 = R25.outerEdges[L28], N21 = A39.count - 1, G22 = P29.count - 1;
      p15(N21 * S27 === G22, `Tile[${e78.lij}]:e${_43},res=${N21} edgeRes mismatch with Neighbor[${x37.lij}]:e${L28},res=${G22} (expected:${N21 * S27})`);
      const X15 = e78.extent, H26 = u59 === S9.NORTH || u59 === S9.SOUTH, W18 = P29.count - 1, q21 = W18 / 2 ** D21, z21 = A39.count - 1;
      if (q21 < 1)
        return void p15(1 === z21);
      p15(q21 === z21), p15(o5(q21));
      const J15 = R25.numVerticesPerSide - 1;
      p15(D21 > 0 || q21 === Math.max(J15, V17));
      const K16 = e78.getNeighborEdgeStartVertexIndex(_43, x37);
      p15(0 <= K16 && K16 < S27);
      const Q14 = K16 * q21;
      p15(0 <= Q14 && Q14 <= W18 - q21);
      let Y14 = 0, Z11 = Q14;
      A39.getVertexPos(I21, 0), A39.getVertexPos(M18, A39.count - 1);
      const ee5 = x4(I21, M18), te6 = Math.max(B13, 1e-4 * ee5);
      for (let t88 = 0; t88 <= q21; ++t88) {
        A39.getVertexPos(I21, Y14), P29.getVertexPos(M18, Z11);
        const r79 = t88 / q21, p71 = H26 ? X15[0] + r79 * (X15[2] - X15[0]) : u59 === S9.WEST ? X15[0] : X15[2], y42 = H26 ? u59 === S9.SOUTH ? X15[1] : X15[3] : X15[1] + r79 * (X15[3] - X15[1]), D22 = e78.surface.extent;
        if (null == D22 || F4(D22, p71, y42)) {
          const t89 = U(I21, M18), r80 = Y(I21) - s7.radius, u60 = Y(M18) - s7.radius, c75 = t89 < te6;
          if (!c75) {
            console.warn(`Tile edge vertex position mismatch: between [${e78.lij}].edge${_43}[${Y14}/${A39.count}] and [${x37.lij}].edge${L28}[${Z11}/${P29.count}]`), null != D22 && console.warn("  surface extent= ", D22, " x,y=", p71, ",", y42);
            const i78 = n7();
            e8(i78, $12.localOrigin, v44.localOrigin), Y(i78) > 0 && console.warn(`   localOrigins: ${$12.localOrigin} vs ${v44.localOrigin} d=${Y(i78)} [${i78}]`);
            (() => {
              const t90 = t8(I21), r81 = t8(M18);
              e78.updateEdgeElevations(), x37.updateEdgeElevations(), A39.getVertexPos(I21, Y14), P29.getVertexPos(M18, Z11);
              const i79 = n7();
              J(i79, I21, t90), Y(i79) > 0 && console.warn(`  XXX Tile[${e78.lij}] edge out of date: ${t90} vs ${I21} d=${Y(i79)} [${i79}]`), J(i79, M18, r81), Y(i79) > 0 && console.warn(`  XXX Neighbor[${x37.lij}] edge out of date: ${r81} vs ${M18} d=${Y(i79)} [${i79}]`);
            })(), p15(c75, `Mismatch in tile [${e78.lij}].edge[${_43}][${Y14}/${A39.count}] vs neighbor [${x37.lij}].edge[${L28}][${Z11}/${P29.count}] ${F11(I21)} vs ${F11(M18)}  dist=${t89} h(t|n|d)=${r80}|${u60}|${u60 - r80}`);
          }
          A39.getNormal(O20, Y14), P29.getNormal(U18, Z11), z2(k21, O20), z2(F22, U18);
          const f59 = P3(k21, F22), S28 = 1 - f59 < 0.01 || false || e78 === x37;
          if (!S28) {
            const t90 = n7();
            J(t90, O20, U18);
            const r81 = () => `Mismatch in tile edge normal ${V4(e78.lij)} (${Y14}/${A39.count - 1}) edge ${_43} vs neighbor ${V4(x37.lij)}  (${Z11}/${P29.count - 1}) nedge ${L28} :${F11(O20)} vs ${F11(U18)}  dot = ${f59} : ${F11(t90)}`;
            console.warn("Mismatch in tile edge normal: ", r81());
            {
              e78.updateEdgeElevations(), x37.updateEdgeElevations();
              const t91 = n7(), r82 = n7();
              A39.getNormal(t91, Y14), P29.getNormal(r82, Z11), G2(O20, t91) || console.warn("Missing update in tile normal: ", F11(O20), " => ", F11(t91)), G2(U18, r82) || console.warn("Missing update in neighbor normal: ", F11(U18), " => ", F11(r82));
            }
            p15(S28, r81());
          }
        }
        Y14 += 1, Z11 += 1;
      }
    });
  }
};
var I21 = n7();
var M18 = n7();
var O20 = n7();
var U18 = n7();
var k21 = n7();
var F22 = n7();
var B13 = 1;
var X10 = [null, null, null, null];
function H21(e78, t88) {
  return (t88 == null ? void 0 : t88.isLoaded) || t88 === e78 ? t88 : null;
}

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometryFactory.js
var b21 = 65536;
function v35(t88, e78) {
  const n103 = t88.tile, { extent: s84, extentInRadians: r79, surface: a85 } = n103, f59 = t88.localOrigin, d63 = t88.geometryState, m55 = a85.isWebMercator, h58 = d63.numVerticesPerSide, M26 = h58 - 1, x36 = (h58 - 2) ** 2, y41 = m55 && (e78 === o24.HAS_SOUTH_POLE || e78 === o24.HAS_BOTH_POLES), b31 = m55 && (e78 === o24.HAS_NORTH_POLE || e78 === o24.HAS_BOTH_POLES), v44 = 6, L28 = ((y41 ? 1 : 0) + (b31 ? 1 : 0)) * v44 * (M26 + 1), R25 = d63.neighborData, T31 = R25.edgeResolutions.reduce((t89, e79) => t89 + e79 + 1, 0), D21 = d48(x36 + L28 + T31), A39 = t88.geometry;
  A39.numVerticesPerSide = d63.numVerticesPerSide, A39.vertexAttributes = D21;
  const V17 = A39.boundingBox;
  P4(V17);
  const U24 = E34(t88);
  X11.update(M26, r79, U24), B14(t88), k22(t88, x36), O21(t88);
  const C30 = [];
  if ((() => {
    let t89 = x36 + T31;
    const e79 = f59[0], o77 = f59[1], r80 = f59[2], i78 = n103.ellipsoid.radius, a86 = s84[1], l75 = s84[3], d64 = (n104, s85) => {
      const f60 = s85 * h58;
      x29(-e79, -o77, n104 * i78 - r80, V17), C30.push({ connectedRowOffset: f60, connectedOuterEdgeOffset: 1 === n104 ? 0 : 2, rowOffset: t89, latitudeResolution: v44 });
      const d65 = P22(-1 === n104 ? a86 : l75, i78), m56 = n104 * Math.PI / 2 - d65, g49 = 0.99 * (1 === n104 ? 1 : -1), p70 = i78 + 0, x37 = D21.position, y42 = D21.uv0, { typedBuffer: b32, typedBufferStride: B21 } = D21.normalCompressed;
      for (let i79 = 1; i79 <= v44; ++i79) {
        const n105 = d65 + m56 * (i79 / v44), s86 = Math.cos(n105), a87 = Math.sin(n105);
        for (let i80 = 0; i80 <= M26; i80++) {
          const n106 = i80 / M26, l76 = X11.sinLonLUT[i80], f61 = X11.cosLonLUT[i80] * s86, d66 = l76 * s86, m57 = a87, h59 = f61 * p70 - e79, v45 = d66 * p70 - o77, L29 = m57 * p70 - r80;
          x29(h59, v45, L29, V17), x37.setValues(t89, h59, v45, L29), b20(y42, t89, n106, g49), n43(b32, t89, f61, d66, m57, B21), ++t89;
        }
      }
    };
    y41 && d64(-1, 0), b31 && d64(1, M26);
  })(), F23(A39, d63.numVerticesPerSide, C30, [0, h58 - 1], [0, h58 - 1], d63.wireframe), t88.intersectionData = null, T11)
    for (let o77 = 0; o77 < 4; ++o77)
      p15(A39.outerEdges[o77].count === R25.edgeResolutions[o77] + 1);
}
function B14(t88) {
  const e78 = t88.tile;
  if (!e78.intersectsClippingArea)
    return;
  const n103 = t88.geometryState, o77 = n103.numVerticesPerSide, s84 = o77 - 2, i78 = o77 - 1, a85 = t88.geometry, l75 = a85.vertexAttributes, f59 = l75.position, d63 = l75.uv0, { typedBuffer: m55, typedBufferStride: g49 } = l75.normalCompressed, p70 = e78.extent, h58 = p70[0], M26 = p70[2], x36 = p70[1], y41 = p70[3], b31 = e78.ellipsoid.radius, v44 = n103.samplerData, B21 = t88.localOrigin, L28 = B21[0], R25 = B21[1], O29 = B21[2], T31 = f59.typedBuffer, D21 = f59.typedBufferStride, P29 = 1 / i78, A39 = a85.boundingBox;
  let V17 = 0;
  if (1 <= s84) {
    const t89 = P29, e79 = x36 * (1 - t89) + y41 * t89, n104 = X11.sinLatLUT[1], o78 = X11.cosLatLUT[1];
    for (let i79 = 1; i79 <= s84; i79++) {
      const s85 = i79 * P29, a86 = h58 * (1 - s85) + M26 * s85, l76 = X11.sinLonLUT[i79], f60 = X11.cosLonLUT[i79], m56 = b31 + e51(a86, e79, v44), g50 = m56 * f60 * o78 - L28, p71 = m56 * l76 * o78 - R25, x37 = m56 * n104 - O29;
      x29(g50, p71, x37, A39);
      const y42 = (i79 - 1) * D21;
      T31[y42] = g50, T31[y42 + 1] = p71, T31[y42 + 2] = x37, b20(d63, i79 - 1, s85, t89);
    }
  }
  for (let E43 = 1; E43 <= s84; E43++) {
    const t89 = E43 * P29, e79 = x36 * (1 - t89) + y41 * t89, n104 = X11.sinLatLUT[E43], o78 = X11.cosLatLUT[E43], a86 = E43 + 1, l76 = a86 * P29, f60 = x36 * (1 - l76) + y41 * l76, p71 = X11.sinLatLUT[a86], B22 = X11.cosLatLUT[a86], U24 = X11.sinLonLUT[0], C30 = X11.cosLonLUT[0], I29 = b31 + e51(h58, e79, v44);
    let j29 = C30 * o78 * I29 - L28, w33 = U24 * o78 * I29 - R25, N21 = n104 * I29 - O29;
    const H26 = V17 * D21;
    let _42 = T31[H26], q21 = T31[H26 + 1], W18 = T31[H26 + 2];
    for (let y42 = 1; y42 <= s84; y42++) {
      const t90 = y42 * P29, a87 = h58 * (1 - t90) + M26 * t90, U25 = X11.sinLonLUT[y42], C31 = X11.cosLonLUT[y42];
      let I30 = 0, H27 = 0, F30 = 0;
      if (y42 < s84) {
        const t91 = (V17 + 1) * D21;
        I30 = T31[t91], H27 = T31[t91 + 1], F30 = T31[t91 + 2];
      } else {
        const t91 = X11.sinLonLUT[i78], s85 = X11.cosLonLUT[i78], a88 = b31 + e51(M26, e79, v44);
        I30 = s85 * o78 * a88 - L28, H27 = t91 * o78 * a88 - R25, F30 = n104 * a88 - O29;
      }
      const k27 = j29, z21 = w33, G22 = N21;
      j29 = _42, w33 = q21, N21 = W18, _42 = I30, q21 = H27, W18 = F30;
      const J15 = I30 - k27, K16 = H27 - z21, Q14 = F30 - G22;
      let Y14 = 0, Z11 = 0, $12 = 0;
      if (E43 > 1) {
        const t91 = (V17 - s84) * D21;
        Y14 = T31[t91], Z11 = T31[t91 + 1], $12 = T31[t91 + 2];
      } else {
        const t91 = X11.sinLatLUT[0], e80 = X11.cosLatLUT[0], n105 = b31 + e51(a87, x36, v44);
        Y14 = C31 * e80 * n105 - L28, Z11 = U25 * e80 * n105 - R25, $12 = t91 * n105 - O29;
      }
      const tt6 = b31 + e51(a87, f60, v44), et5 = C31 * B22 * tt6 - L28, nt6 = U25 * B22 * tt6 - R25, ot6 = p71 * tt6 - O29;
      if (E43 < s84) {
        const e80 = V17 + s84, n105 = e80 * D21;
        T31[n105] = et5, T31[n105 + 1] = nt6, T31[n105 + 2] = ot6, x29(et5, nt6, ot6, A39), b20(d63, e80, t90, l76);
      }
      const st6 = Y14 - et5, rt5 = Z11 - nt6, it5 = $12 - ot6;
      let at6 = C31 * o78, lt6 = U25 * o78, ct6 = n104;
      ct6 * ct6 < 0.999 && (at6 = Q14 * rt5 - K16 * it5, lt6 = J15 * it5 - Q14 * st6, ct6 = K16 * st6 - J15 * rt5);
      const ut6 = 1 / Math.sqrt(at6 * at6 + lt6 * lt6 + ct6 * ct6);
      n43(m55, V17, at6 * ut6, lt6 * ut6, ct6 * ut6, g49), ++V17;
    }
  }
}
function L22(t88) {
  t88.tile.intersectsClippingArea && (O21(t88), K11(t88));
}
function R16(t88) {
  t88.tile.intersectsClippingArea && (D15(t88), T24(t88, true), K11(t88));
}
function O21(t88) {
  t88.tile.intersectsClippingArea && (D15(t88), T24(t88));
}
function T24(e78, n103 = false) {
  const o77 = e78.geometryState, s84 = e78.geometry, i78 = o77.neighborData, a85 = e78.tile, l75 = a85.level, f59 = a85.extent, d63 = a85.ellipsoid.radius, x36 = a85.extentInRadians, S27 = x36[0], b31 = x36[2], v44 = x36[1], B21 = x36[3], L28 = o77.samplerData, R25 = f59[0], O29 = f59[2], T31 = f59[1], D21 = f59[3], P29 = E34(e78), A39 = s84.boundingBox, V17 = e78.localOrigin, U24 = V17[0], C30 = V17[1], I29 = V17[2], j29 = s84.vertexAttributes, w33 = j29.position, N21 = w33.typedBuffer, H26 = w33.typedBufferStride, _42 = j29.uv0;
  for (let E43 = 0; E43 < 4; ++E43) {
    const o78 = 1 === E43 || 3 === E43, x37 = i78.edgeResolutions[E43];
    p15(o5(x37));
    const V18 = x37 + 1, j30 = H21(a85, i78.edgePeerNeighbors[E43]);
    if ($9(a85, j30, E43)) {
      z19(e78, E43, j30);
      continue;
    }
    const w34 = null != j30;
    p15(!w34 || j30.level === a85.level), p15(!w34 || l22(a85, j30) <= 0);
    const q21 = j30 == null ? void 0 : j30.renderData, W18 = q21 == null ? void 0 : q21.geometryState;
    if (T11) {
      const t88 = a85.surface;
      if (!j30 && t88 && !t88.updatingRootTiles) {
        const e79 = X3[E43], n104 = a85.findNeighborTile(e79, (t89) => t89.isLoaded || t89.isLeaf || t89.level === a85.level);
        n104 ? n104.intersectsClippingArea && (p15(!n104.isLoaded), p15(!n104.isLeaf), p15(n104.level === l75)) : p15(null == (t88 == null ? void 0 : t88.rootTiles) || !a85.shouldHaveNeighbor(e79));
      }
    }
    const F30 = 1 === E43 ? f59[2] : f59[0], k27 = j30 == null ? void 0 : j30.extent, G22 = k27 && o78 ? 1 === E43 ? k27[0] : k27[2] : F30, J15 = 0 === E43 ? f59[3] : f59[1], K16 = 1 === E43 ? 1 : 0, Q14 = 0 === E43 ? 1 : 0, X15 = 1 === E43 ? b31 : S27, Y14 = 0 === E43 ? B21 : v44, Z11 = Math.sin(X15), tt6 = Math.cos(X15), et5 = Math.sin(Y14), nt6 = Math.cos(Y14), ot6 = W18 == null ? void 0 : W18.samplerData, st6 = w34 ? (t88, e79, n104) => 0.5 * (e51(t88, e79, L28) + e51(n104, e79, ot6)) : (t88, e79, n104) => e51(t88, e79, L28), rt5 = s84.outerEdges[E43], it5 = n103 && V18 > 3 ? V18 - 3 : 1, at6 = null != L28 && L28.some((t88) => null != t88), lt6 = null != ot6 && ot6.some((t88) => null != t88), ct6 = at6 || lt6, ut6 = 1 / x37, ft3 = rt5.index0;
    p15(!k27 || G7(k27[2] - k27[0], f59[2] - f59[0]));
    (() => {
      const t88 = 1 === E43 ? -1 : 3 === E43 ? 1 : 0, e79 = 0 === E43 ? -1 : 2 === E43 ? 1 : 0, n104 = (f59[2] - f59[0]) * ut6, s85 = t88 * n104, i79 = e79 * n104, a86 = o78 ? t88 * ((b31 - S27) * ut6) : 0, l76 = o78 ? 0 : e79 * ut6, m55 = Q14, g49 = o78 ? X15 + a86 : X15, p70 = o78 ? Math.sin(g49) : Z11, h58 = o78 ? Math.cos(g49) : tt6, M26 = o78 ? X15 - a86 : X15, x38 = o78 ? Math.sin(M26) : Z11, y41 = o78 ? Math.cos(M26) : tt6, v45 = o78 ? Y14 : P29(m55 + l76), B22 = o78 ? et5 : Math.sin(v45), j31 = o78 ? nt6 : Math.cos(v45), q22 = o78 ? Y14 : P29(m55 - l76), W19 = o78 ? et5 : Math.sin(q22), k28 = o78 ? nt6 : Math.cos(q22);
      let z21 = 0, $12 = 0, at7 = 0;
      {
        const t89 = 0 * ut6, e80 = o78 ? F30 : R25 * (1 - t89) + O29 * t89, n105 = o78 ? G22 : e80, s86 = o78 ? T31 * (1 - t89) + D21 * t89 : J15, r79 = o78 ? X15 : S27 * (1 - t89) + b31 * t89, i80 = o78 ? Z11 : Math.sin(r79), a87 = o78 ? tt6 : Math.cos(r79), l77 = o78 ? P29(t89) : Y14, c75 = o78 ? Math.sin(l77) : et5, u58 = o78 ? Math.cos(l77) : nt6, f60 = d63 + st6(e80, s86, n105);
        z21 = a87 * u58 * f60, $12 = i80 * u58 * f60, at7 = c75 * f60;
      }
      let lt7 = 0, dt5 = 0, mt4 = 0;
      {
        const t89 = 1 * ut6, e80 = o78 ? F30 : R25 * (1 - t89) + O29 * t89, n105 = o78 ? G22 : e80, s86 = o78 ? T31 * (1 - t89) + D21 * t89 : J15, r79 = o78 ? X15 : S27 * (1 - t89) + b31 * t89, i80 = o78 ? Z11 : Math.sin(r79), a87 = o78 ? tt6 : Math.cos(r79), l77 = o78 ? P29(t89) : Y14, c75 = o78 ? Math.sin(l77) : et5, u58 = o78 ? Math.cos(l77) : nt6, f60 = d63 + st6(e80, s86, n105);
        lt7 = a87 * u58 * f60, dt5 = i80 * u58 * f60, mt4 = c75 * f60;
      }
      for (let f60 = 1; f60 < V18 - 1; f60 += it5) {
        let t89 = 0, e80 = 0, n105 = 0;
        {
          const s86 = (f60 + 1) * ut6, r79 = o78 ? F30 : R25 * (1 - s86) + O29 * s86, i80 = o78 ? G22 : r79, a88 = o78 ? T31 * (1 - s86) + D21 * s86 : J15, l78 = o78 ? X15 : S27 * (1 - s86) + b31 * s86, c75 = o78 ? Z11 : Math.sin(l78), u58 = o78 ? tt6 : Math.cos(l78), m57 = o78 ? P29(s86) : Y14, g51 = o78 ? Math.sin(m57) : et5, p71 = o78 ? Math.cos(m57) : nt6, h59 = d63 + st6(r79, a88, i80);
          t89 = u58 * p71 * h59, e80 = c75 * p71 * h59, n105 = g51 * h59;
        }
        const a87 = t89, l77 = e80, m56 = n105, g50 = lt7, M27 = dt5, v46 = mt4;
        lt7 = a87, dt5 = l77, mt4 = m56;
        {
          const t90 = ft3 + f60, e81 = t90 * H26, n106 = g50 - U24, s86 = M27 - C30, r79 = v46 - I29;
          N21[e81] = n106, N21[e81 + 1] = s86, N21[e81 + 2] = r79, x29(n106, s86, r79, A39);
          const i80 = f60 * ut6;
          b20(_42, t90, o78 ? K16 : i80, o78 ? i80 : Q14);
        }
        const V19 = z21, q23 = $12, it6 = at7;
        z21 = g50, $12 = M27, at7 = v46;
        const gt3 = g50, pt5 = M27, ht6 = v46, Mt2 = 1 / Math.sqrt(gt3 * gt3 + pt5 * pt5 + ht6 * ht6), xt2 = ht6 * Mt2;
        let yt2 = 0, St2 = 0, bt2 = 0;
        if (ct6 && xt2 * xt2 < 0.999) {
          let t90 = 0, e81 = 0, n106 = 0;
          {
            const o79 = 0 === E43 ? -1 : 1;
            t90 = o79 * (a87 - V19), e81 = o79 * (l77 - q23), n106 = o79 * (m56 - it6);
          }
          {
            const a88 = f60 * ut6, l78 = o78 ? F30 : R25 * (1 - a88) + O29 * a88, c75 = o78 ? G22 : l78, u58 = o78 ? T31 * (1 - a88) + D21 * a88 : J15, m57 = o78 ? X15 : S27 * (1 - a88) + b31 * a88, g51 = o78 ? Z11 : Math.sin(m57), M28 = o78 ? tt6 : Math.cos(m57), v47 = o78 ? P29(a88) : Y14, A40 = o78 ? Math.sin(v47) : et5, V20 = o78 ? Math.cos(v47) : nt6;
            let U25 = gt3, C31 = pt5, I30 = ht6;
            if (w34) {
              const t91 = d63 + e51(c75 - s85, u58 - i79, ot6), e82 = o78 ? V20 : k28;
              U25 = (o78 ? y41 : M28) * e82 * t91, C31 = (o78 ? x38 : g51) * e82 * t91, I30 = (o78 ? A40 : W19) * t91;
            }
            {
              const a89 = d63 + e51(l78 + s85, u58 + i79, L28), c76 = o78 ? V20 : j31, f61 = (o78 ? h58 : M28) * c76 * a89, m58 = (o78 ? p70 : g51) * c76 * a89, x39 = (o78 ? A40 : B22) * a89;
              w34 || (U25 = 2 * gt3 - f61, C31 = 2 * pt5 - m58, I30 = 2 * ht6 - x39);
              const y42 = 3 === E43 ? -1 : 1, S28 = y42 * (U25 - f61), b32 = y42 * (C31 - m58), v48 = y42 * (I30 - x39);
              yt2 = n106 * b32 - e81 * v48, St2 = t90 * v48 - n106 * S28, bt2 = e81 * S28 - t90 * b32;
              const R26 = 1 / Math.sqrt(yt2 * yt2 + St2 * St2 + bt2 * bt2);
              yt2 *= R26, St2 *= R26, bt2 *= R26;
            }
          }
        } else
          yt2 = gt3 * Mt2, St2 = pt5 * Mt2, bt2 = ht6 * Mt2;
        rt5.setNormalFromValues(f60, yt2, St2, bt2);
      }
    })();
  }
}
function D15(t88) {
  G16(t88);
}
function P22(t88, e78) {
  return Math.PI / 2 - 2 * Math.atan(Math.exp(-t88 / e78));
}
function A30(t88, e78, n103, o77) {
  return P22(t88 * (1 - o77) + e78 * o77, n103);
}
function V13(t88, e78, n103) {
  return t88 * (1 - n103) + e78 * n103;
}
function E34(t88) {
  const e78 = t88.tile;
  if (e78.surface.isWebMercator) {
    const t89 = e78.extent, n104 = e78.ellipsoid.radius;
    return (e79) => A30(t89[1], t89[3], n104, e79);
  }
  const n103 = e78.extentInRadians;
  return (t89) => V13(n103[1], n103[3], t89);
}
function U19(t88, e78) {
  const s84 = t88.tile.extent, r79 = t88.geometryState, i78 = s84[0], a85 = s84[1], c75 = s84[2] - i78, u58 = s84[3] - a85, f59 = r79.clippingArea, d63 = null != f59 ? Math.max(0, (f59[0] - i78) / c75) : 0, m55 = null != f59 ? Math.max(0, (f59[1] - a85) / u58) : 0, g49 = null != f59 ? Math.min(1, (f59[2] - i78) / c75) : 1, p70 = null != f59 ? Math.min(1, (f59[3] - a85) / u58) : 1, h58 = r79.numVerticesPerSide, M26 = (h58 - 2) ** 2, x36 = r79.neighborData.edgeResolutions.reduce((t89, e79) => t89 + e79 + 1, 0), y41 = d48(M26 + x36), S27 = t88.geometry, b31 = S27.boundingBox;
  P4(b31), S27.numVerticesPerSide = r79.numVerticesPerSide, S27.vertexAttributes = y41, r8(S27.uvRange, d63, m55, g49, p70), C23(t88), k22(t88, M26), w26(t88), F23(S27, r79.numVerticesPerSide, [], [0, h58 - 1], [0, h58 - 1], r79.wireframe), t88.intersectionData = null;
}
function C23(t88) {
  const n103 = t88.tile;
  if (!n103.intersectsClippingArea)
    return;
  const o77 = n103.surface, s84 = t88.geometryState, i78 = s84.samplerData, a85 = t88.localOrigin, l75 = o77.isWebMercatorOnPlateeCarree, f59 = s84.clippingArea, d63 = null != f59 ? f59 : Y12, m55 = n103.extent, g49 = m55[0], p70 = m55[1], h58 = m55[2], M26 = m55[3], x36 = Math.max(g49, d63[0]), y41 = Math.min(h58, d63[2]), b31 = Math.max(p70, d63[1]), v44 = Math.min(M26, d63[3]), B21 = n103.ellipsoid.radius, L28 = n103.horizontalScale, R25 = s84.numVerticesPerSide, O29 = R25 - 1, T31 = R25 - 2, D21 = t88.geometry, P29 = D21.vertexAttributes, A39 = P29.position, V17 = P29.uv0, { typedBuffer: E43, typedBufferStride: U24 } = P29.normalCompressed, C30 = D21.uvRange, I29 = C30[0], j29 = C30[1], w33 = C30[2], N21 = C30[3], H26 = D21.boundingBox, _42 = a85[0], q21 = a85[1], W18 = a85[2], F30 = A39.typedBuffer, k27 = A39.typedBufferStride;
  let z21 = 0;
  const G22 = i3(p70, b31, v44), J15 = l75 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-G22 / B21))) * B21 : G22 * L28, K16 = 1 / O29, Q14 = i3(p70 * (1 - K16) + M26 * K16, b31, v44);
  let X15 = J15, Z11 = l75 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-Q14 / B21))) * B21 : Q14 * L28;
  for (let Y14 = 1; Y14 <= T31; Y14++) {
    const t89 = Y14 / O29, n104 = i3(p70 * (1 - t89) + M26 * t89, b31, v44), o78 = i3(t89, j29, N21), s85 = Z11, a86 = (Y14 - 1) / O29, f60 = i3(p70 * (1 - a86) + M26 * a86, b31, v44), d64 = X15, m56 = (Y14 + 1) / O29, R26 = i3(p70 * (1 - m56) + M26 * m56, b31, v44), D22 = l75 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-R26 / B21))) * B21 : R26 * L28, P30 = i3(m56, j29, N21);
    X15 = Z11, Z11 = D22;
    const A40 = i3(g49, x36, y41);
    let C31 = A40 * L28, G23 = e51(A40, n104, i78);
    const J16 = 1 / O29, K17 = i3(J16, I29, w33), Q15 = i3(g49 * (1 - K17) + h58 * K17, x36, y41);
    let $12 = K17, tt6 = Q15, et5 = Q15 * L28, nt6 = e51(Q15, n104, i78);
    if (1 === Y14) {
      const t90 = et5 - _42, n105 = X15 - q21, s86 = nt6 - W18, r79 = 0 * k27;
      F30[r79] = t90, F30[r79 + 1] = n105, F30[r79 + 2] = s86, x29(t90, n105, s86, H26);
      const i79 = i3(J16, I29, w33);
      b20(V17, z21, i79, o78);
    }
    for (let l76 = 1; l76 <= T31; l76++) {
      const t90 = et5, a87 = nt6, m57 = (l76 + 1) / O29, p71 = i3(m57, I29, w33), M27 = i3(g49 * (1 - m57) + h58 * m57, x36, y41), b32 = tt6;
      tt6 = M27;
      {
        const t91 = z21 + 1, e78 = t91 * k27;
        if (1 === Y14 || l76 === T31) {
          const a88 = M27 * L28, f61 = e51(M27, n104, i78);
          if (1 === Y14 && l76 < T31) {
            const n105 = a88 - _42, r79 = s85 - q21, i79 = f61 - W18;
            F30[e78] = n105, F30[e78 + 1] = r79, F30[e78 + 2] = i79, x29(n105, r79, i79, H26), b20(V17, t91, p71, o78);
          }
          et5 = a88, nt6 = f61;
        } else
          et5 = F30[e78] + _42, nt6 = F30[e78 + 2] + W18;
      }
      const v45 = et5, B22 = nt6, A41 = C31, j30 = G23;
      C31 = t90, G23 = a87;
      const N22 = (z21 - T31) * k27, J17 = 1 === Y14 ? e51(b32, f60, i78) : F30[N22 + 2] + W18, K18 = e51(b32, R26, i78);
      if (Y14 < T31) {
        const e78 = z21 + T31, n105 = e78 * k27, o79 = t90 - _42, s86 = D22 - q21, r79 = K18 - W18;
        F30[n105] = o79, F30[n105 + 1] = s86, F30[n105 + 2] = r79, x29(o79, s86, r79, H26);
        const i79 = $12;
        $12 = p71, b20(V17, e78, i79, P30);
      }
      {
        const t91 = v45 - A41, e78 = d64 - D22, n105 = e78 * (B22 - j30), o79 = t91 * (J17 - K18), s86 = -e78 * t91, r79 = n105 * n105 + o79 * o79 + s86 * s86;
        if (0 === r79)
          n43(E43, z21, 0, 0, 1, U24);
        else {
          const t92 = 1 / Math.sqrt(r79);
          n43(E43, z21, n105 * t92, o79 * t92, s86 * t92, U24);
        }
      }
      ++z21;
    }
  }
}
function I22(t88, e78) {
  t88.tile.intersectsClippingArea && (H22(t88), N15(t88, true), K11(t88));
}
function j25(t88, e78) {
  t88.tile.intersectsClippingArea && (w26(t88), K11(t88));
}
function w26(t88, e78) {
  t88.tile.intersectsClippingArea && (H22(t88), N15(t88, false));
}
function N15(n103, o77) {
  const s84 = n103.geometryState, i78 = s84.neighborData, a85 = n103.tile, l75 = a85.surface, u58 = a85.extent, f59 = s84.clippingArea, d63 = null != f59 ? f59 : Y12, M26 = u58[0], x36 = u58[2], S27 = u58[1], b31 = u58[3], v44 = [b31 > d63[3], x36 > d63[2], S27 < d63[1], M26 < d63[0]], B21 = n103.geometry, L28 = a85.horizontalScale, R25 = W14(l75.isWebMercatorOnPlateeCarree, a85.ellipsoid.radius, L28), O29 = B21.boundingBox, T31 = B21.uvRange[0], D21 = B21.uvRange[1], P29 = B21.uvRange[2], A39 = B21.uvRange[3], V17 = Math.max(M26, d63[0]), E43 = Math.min(x36, d63[2]), U24 = Math.max(S27, d63[1]), C30 = Math.min(b31, d63[3]), I29 = n103.localOrigin, j29 = I29[0], w33 = I29[1], N21 = I29[2], H26 = s84.samplerData;
  for (let _42 = 0; _42 < 4; ++_42) {
    const s85 = 1 === _42 || 3 === _42, u59 = i78.edgeResolutions[_42];
    p15(o5(u59));
    const f60 = u59 + 1, d64 = v44[_42], I30 = H21(a85, i78.edgePeerNeighbors[_42]);
    if (!d64 && $9(a85, I30, _42)) {
      z19(n103, _42, I30);
      continue;
    }
    const q21 = null != I30 && !d64, W18 = I30 == null ? void 0 : I30.renderData, F30 = W18 == null ? void 0 : W18.geometryState;
    if (T11 && (p15(!q21 || I30.level === a85.level), p15(!q21 || l22(a85, I30) <= 0), a85 && !I30 && !l75.updatingRootTiles)) {
      const t88 = X3[_42], e78 = a85.findNeighborTile(t88, (t89) => t89.isLoaded || t89.isLeaf || t89.level === a85.level);
      l75.updatingRootTiles || (e78 ? e78.intersectsClippingArea && (p15(!e78.isLoaded), p15(!e78.isLeaf), p15(e78.level === a85.level)) : p15(null == (l75 == null ? void 0 : l75.rootTiles) || !a85.shouldHaveNeighbor(t88)));
    }
    const k27 = i3(1 === _42 ? x36 : M26, V17, E43), G22 = i3(0 === _42 ? b31 : S27, U24, C30), J15 = F30 == null ? void 0 : F30.samplerData, K16 = B21.outerEdges[_42], Q14 = o77 && f60 > 3 ? f60 - 3 : 1, X15 = i3(1 === _42 ? 1 : 0, T31, P29), Y14 = i3(0 === _42 ? 1 : 0, D21, A39), Z11 = q21 ? (t88, e78) => 0.5 * (e51(t88, e78, J15) + e51(t88, e78, H26)) : (t88, e78) => e51(t88, e78, H26), tt6 = (x36 - M26) / u59, et5 = s85 ? 1 === _42 ? tt6 : -tt6 : 0, nt6 = s85 ? 0 : 0 === _42 ? tt6 : -tt6, ot6 = -et5, st6 = -nt6;
    let rt5 = 0, it5 = 0, at6 = 0;
    {
      const t88 = 0 / u59, n104 = s85 ? k27 : i3(M26 * (1 - t88) + x36 * t88, V17, E43), o78 = s85 ? i3(S27 * (1 - t88) + b31 * t88, U24, C30) : G22, r79 = Z11(n104, o78);
      rt5 = n104 * L28, it5 = R25(o78), at6 = r79;
    }
    let lt6 = 0, ct6 = 0, ut6 = 0;
    {
      const t88 = 1 / u59, n104 = s85 ? k27 : i3(M26 * (1 - t88) + x36 * t88, V17, E43), o78 = s85 ? i3(S27 * (1 - t88) + b31 * t88, U24, C30) : G22, r79 = Z11(n104, o78);
      lt6 = n104 * L28, ct6 = R25(o78), ut6 = r79;
    }
    for (let t88 = 1; t88 < f60 - 1; t88 += Q14) {
      const n104 = t88 / u59, o78 = lt6, i79 = ct6, a86 = ut6;
      {
        const r79 = s85 ? X15 : i3(n104, T31, P29), l77 = s85 ? i3(n104, D21, A39) : Y14, u60 = o78 - j29, f62 = i79 - w33, d66 = a86 - N21;
        x29(o78, f62, d66, O29), K16.setVertexFromValuesRawPositionUV(t88, u60, f62, d66, r79, l77);
      }
      {
        const n105 = (t88 + 1) / u59, o79 = s85 ? k27 : i3(M26 * (1 - n105) + x36 * n105, V17, E43), r79 = s85 ? i3(S27 * (1 - n105) + b31 * n105, U24, C30) : G22, i80 = Z11(o79, r79);
        lt6 = o79 * L28, ct6 = R25(r79), ut6 = i80;
      }
      const l76 = lt6, f61 = ut6, d65 = rt5, m55 = it5, g49 = at6;
      rt5 = o78, it5 = i79, at6 = a86;
      let p70 = 0, h58 = 0, y41 = 0;
      if (s85) {
        const t89 = ct6 - i79, s86 = f61 - a86, l77 = m55 - i79, c75 = g49 - a86, u60 = i3(S27 * (1 - n104) + b31 * n104, U24, C30), d66 = k27 + ot6, M27 = d66 * L28 - o78, x37 = e51(d66, u60, H26) - a86, v46 = 3 === _42 ? -1 : 1;
        if (p70 = v46 * (-l77 + t89) * x37, h58 = v46 * M27 * (-c75 + s86), y41 = -v46 * M27 * (-l77 + t89), q21) {
          const e78 = k27 + et5, n105 = e78 * L28 - o78;
          p70 = (-l77 + t89) * (x37 - (e51(e78, u60, J15) - a86)), h58 = (M27 - n105) * (-c75 + s86), y41 = -(M27 - n105) * (-l77 + t89);
        }
      } else {
        const t89 = l76 - o78, s86 = f61 - a86, c75 = d65 - o78, u60 = g49 - a86, m56 = i3(M26 * (1 - n104) + x36 * n104, V17, E43), S28 = G22 + st6, b32 = e51(m56, S28, H26) - a86, v46 = R25(S28) - i79, B22 = 2 === _42 ? -1 : 1;
        if (p70 = B22 * v46 * (-u60 + s86), h58 = B22 * (-c75 + t89) * b32, y41 = -B22 * v46 * (-c75 + t89), q21) {
          const e78 = m56, n105 = G22 + nt6, o79 = R25(n105) - i79;
          p70 = (-v46 + o79) * (-u60 + s86), h58 = (-c75 + t89) * (-b32 + (e51(e78, n105, J15) - a86)), y41 = -(-v46 + o79) * (-c75 + t89);
        }
      }
      const v45 = 1 / Math.sqrt(p70 * p70 + h58 * h58 + y41 * y41);
      K16.setNormalFromValues(t88, p70 * v45, h58 * v45, y41 * v45);
    }
  }
}
function H22(t88, e78) {
  G16(t88);
}
function _30(t88, e78) {
  return (Math.PI / 2 - 2 * Math.atan(Math.exp(-t88 / e78))) * e78;
}
function q17(t88, e78) {
  return t88 * e78;
}
function W14(t88, e78, n103) {
  return t88 ? (t89) => _30(t89, e78) : (t89) => q17(t89, n103);
}
function F23(t88, e78, n103, o77, s84, r79) {
  const i78 = e78 - 1, a85 = t88.vertexAttributes.count, l75 = 2 * (Math.min(e78 - 2, o77[1]) - Math.max(1, o77[0])) * (Math.min(e78 - 2, s84[1]) - Math.max(1, s84[0])), c75 = X3.map((t89, n104) => 0 === n104 && s84[1] < e78 - 2 || 1 === n104 && o77[1] < e78 - 2 || 2 === n104 && s84[0] > 1 || 3 === n104 && o77[0] > 1), u58 = t88.outerEdges.reduce((t89, e79, n104) => t89 + (c75[n104] ? 0 : i78 - 2 + e79.count - 1), 0), f59 = n103.reduce((t89, e79) => t89 + i78 * (2 * (e79.latitudeResolution - 1) + 1), 0), d63 = r79 ? 2 : 1, m55 = 3 * (l75 + u58 + f59) * d63, M26 = a85 >= b21 ? new Uint32Array(m55) : new Uint16Array(m55);
  let x36 = 0;
  const y41 = e78 - 2, S27 = i78 - 2;
  p15(S27 >= 0);
  const v44 = (t89, e79, n104, o78, s85, r80) => {
    const i79 = t89 * s85, a86 = r80[i79], l76 = r80[i79 + 1], c76 = r80[i79 + 2], u59 = e79 * s85, f60 = r80[u59], d64 = r80[u59 + 1], m56 = r80[u59 + 2], g49 = n104 * s85, p70 = r80[g49], h58 = r80[g49 + 1], M27 = r80[g49 + 2], x37 = o78 * s85, y42 = r80[x37], S28 = r80[x37 + 1], b31 = r80[x37 + 2];
    return (f60 - y42) * (f60 - y42) + (d64 - S28) * (d64 - S28) + (m56 - b31) * (m56 - b31) > (a86 - p70) * (a86 - p70) + (l76 - h58) * (l76 - h58) + (c76 - M27) * (c76 - M27);
  };
  if (r79) {
    const r80 = (t89, e79, n104) => {
      M26[x36++] = t89, M26[x36++] = e79, M26[x36++] = e79, M26[x36++] = n104, M26[x36++] = n104, M26[x36++] = t89, T11 && (p15(t89 < a85), p15(e79 < a85), p15(n104 < a85), p15(x36 <= m55));
    };
    (() => {
      for (let n104 = Math.max(s84[0], 1) - 1; n104 < Math.min(s84[1], e78 - 2) - 1; ++n104) {
        const s85 = n104 * y41;
        for (let i79 = Math.max(o77[0], 1) - 1; i79 < Math.min(o77[1], e78 - 2) - 1; ++i79) {
          const e79 = n104 * y41 + i79, o78 = e79 + 1, a86 = o78 + y41, l76 = a86 - 1, c76 = s85 + i79, u59 = c76 + 1, f61 = u59 + y41, d64 = f61 - 1, m56 = t88.vertexAttributes.position.typedBuffer, g49 = t88.vertexAttributes.position.typedBufferStride;
          v44(c76, u59, f61, d64, g49, m56) ? (r80(e79, o78, a86), r80(a86, l76, e79)) : (r80(e79, o78, l76), r80(l76, a86, o78));
        }
      }
    })(), p15(x36 === 3 * l75 * d63);
    (() => {
      for (let e79 = 0; e79 < 4; ++e79) {
        const n104 = x36;
        if (c75[e79])
          continue;
        const o78 = t88.outerEdges[e79], s85 = t88.innerEdges[e79];
        let a86 = 0, l76 = 0;
        const u59 = o78.count, f61 = s85.count;
        p15(f61 === i78 - 1);
        let m56 = 0;
        const h58 = 1 === e79 || 2 === e79 ? (t89, e80, n105) => r80(t89, e80, n105) : (t89, e80, n105) => r80(t89, n105, e80);
        for (; a86 < u59 - 1 || l76 < f61 - 1; ) {
          const t89 = s85.getVertexIndex(l76), e80 = o78.getVertexIndex(a86), n105 = a86 < u59 - 1, r81 = l76 < f61 - 1;
          if (n105 && (!r81 || (n105 ? 0 + i78 * (a86 + 0.5) / (u59 - 1) : 0) <= (r81 ? 1 + S27 * (l76 + 0.5) / (f61 - 1) : 0))) {
            ++a86, T11 && p15(a86 < u59);
            h58(t89, e80, o78.getVertexIndex(a86)), m56++;
          } else {
            ++l76, T11 && p15(l76 < f61);
            h58(t89, e80, s85.getVertexIndex(l76)), m56++;
          }
        }
        T11 && (p15(a86 === u59 - 1), p15(l76 === f61 - 1), p15(m56 === u59 + f61 - 2), p15(m56 === i78 - 2 + o78.count - 1), p15(x36 === n104 + 3 * m56 * d63));
      }
    })(), p15(x36 === 3 * (l75 + u58) * d63);
    const f60 = (n104) => {
      const o78 = t88.outerEdges[n104.connectedOuterEdgeOffset];
      let s85 = o78.getVertexIndex(0), a86 = o78.stride;
      for (let t89 = 0; t89 < n104.latitudeResolution; ++t89) {
        const o79 = 0 === t89 ? n104.rowOffset : s85 + e78;
        for (let e79 = 0; e79 < i78; e79++)
          r80(s85, s85 + 1, o79 + e79), t89 < n104.latitudeResolution - 1 && r80(s85 + 1, o79 + e79 + 1, o79 + e79), s85 += a86;
        s85 = o79, a86 = 1;
      }
    };
    (() => n103.forEach(f60))();
  } else {
    (() => {
      const n104 = Math.max(s84[0], 1) - 1, r81 = Math.min(s84[1], e78 - 2) - 1, i79 = Math.max(o77[0], 1) - 1, a86 = Math.min(o77[1], e78 - 2) - 1;
      for (let e79 = n104; e79 < r81; ++e79) {
        const n105 = e79 * y41;
        for (let e80 = i79; e80 < a86; ++e80) {
          const o78 = n105 + e80, s85 = o78 + 1, r82 = s85 + y41, i80 = r82 - 1, a87 = t88.vertexAttributes.position.typedBuffer, l76 = t88.vertexAttributes.position.typedBufferStride;
          v44(o78, s85, r82, i80, l76, a87) ? (M26[x36] = o78, M26[x36 + 1] = s85, M26[x36 + 2] = r82, M26[x36 + 3] = r82, M26[x36 + 4] = i80, M26[x36 + 5] = o78) : (M26[x36] = o78, M26[x36 + 1] = s85, M26[x36 + 2] = i80, M26[x36 + 3] = i80, M26[x36 + 4] = s85, M26[x36 + 5] = r82), x36 += 6;
        }
      }
    })(), p15(x36 === 3 * l75 * d63);
    (() => {
      for (let e79 = 0; e79 < 4; ++e79) {
        if (c75[e79])
          continue;
        const n104 = t88.outerEdges[e79], o78 = t88.innerEdges[e79];
        let s85 = 0, r81 = 0;
        const a86 = n104.count, l76 = o78.count;
        p15(l76 === i78 - 1);
        const u59 = 1 === e79 || 2 === e79, f60 = u59 ? 1 : 2, d64 = u59 ? 2 : 1, m56 = n104.index0, g49 = n104.stride, h58 = o78.index0, y42 = o78.stride;
        for (; s85 < a86 - 1 || r81 < l76 - 1; ) {
          const t89 = h58 + r81 * y42, e80 = m56 + s85 * g49, n105 = s85 < a86 - 1, o79 = r81 < l76 - 1, c76 = n105 && (!o79 || (n105 ? 0 + i78 * (s85 + 0.5) / (a86 - 1) : 0) <= (o79 ? 1 + S27 * (r81 + 0.5) / (l76 - 1) : 0));
          c76 ? ++s85 : ++r81;
          const u60 = c76 ? e80 + g49 : t89 + y42;
          M26[x36] = t89, M26[x36 + f60] = e80, M26[x36 + d64] = u60, x36 += 3;
        }
      }
    })(), p15(x36 === 3 * (l75 + u58) * d63);
    const r80 = (n104) => {
      const o78 = t88.outerEdges[n104.connectedOuterEdgeOffset];
      let s85 = o78.getVertexIndex(0), r81 = o78.stride;
      for (let t89 = 0; t89 < n104.latitudeResolution; ++t89) {
        const o79 = 0 === t89 ? n104.rowOffset : s85 + e78;
        for (let e79 = 0; e79 < i78; e79++) {
          const i79 = o79 + e79;
          M26[x36] = s85, M26[x36 + 1] = s85 + 1, M26[x36 + 2] = i79, t89 < n104.latitudeResolution - 1 ? (M26[x36 + 3] = s85 + 1, M26[x36 + 4] = i79 + 1, M26[x36 + 5] = i79, x36 += 6) : x36 += 3, s85 += r81;
        }
        s85 = o79, r81 = 1;
      }
    };
    (() => n103.forEach(r80))();
  }
  p15(x36 === m55), t88.indices = M26, t88.indexCount = m55;
}
function k22(t88, e78) {
  const n103 = t88.localOrigin, o77 = t88.geometry, s84 = t88.geometryState.neighborData.edgeResolutions, r79 = o77.numVerticesPerSide - 2, i78 = o77.vertexAttributes;
  let a85 = e78;
  for (let l75 = 0; l75 < 4; ++l75) {
    {
      const t89 = 0 === l75 || 2 === l75, e79 = (0 === l75 ? r79 - 1 : 0) * r79 + (1 === l75 ? r79 - 1 : 0), s85 = (t89 ? 0 : 1) * r79 + (t89 ? 1 : 0);
      o77.innerEdges[l75] = new a64(i78, n103, e79, s85, r79);
    }
    {
      const t89 = a85, e79 = s84[l75] + 1;
      o77.outerEdges[l75] = new a64(i78, n103, t89, 1, e79), a85 += e79;
    }
  }
}
function z19(n103, o77, s84) {
  const r79 = (o77 + 2) % 4, i78 = n103.geometryState, a85 = n103.tile, l75 = i78.neighborData, f59 = a85.level - s84.level, d63 = 1 === o77 || 3 === o77, m55 = l75.edgeResolutions[o77];
  p15(o5(m55));
  const g49 = m55 + 1, h58 = n103.geometry, M26 = h58.boundingBox, x36 = h58.outerEdges[o77], y41 = h58.uvRange[0], S27 = h58.uvRange[1], b31 = h58.uvRange[2], v44 = h58.uvRange[3], B21 = i3(1 === o77 ? 1 : 0, y41, b31), L28 = i3(0 === o77 ? 1 : 0, S27, v44), R25 = s84.renderData, O29 = R25.geometryState, T31 = R25.geometry.outerEdges[r79], D21 = a85.getNeighborEdgeStartVertexIndex(o77, s84) * m55, P29 = m55 * 2 ** f59;
  p15(O29.neighborData.edgeResolutions[r79] === P29), p15(T31.count - 1 === P29);
  const A39 = R25.localOrigin[0] - n103.localOrigin[0], V17 = R25.localOrigin[1] - n103.localOrigin[1], E43 = R25.localOrigin[2] - n103.localOrigin[2], U24 = x36.attributes, C30 = x36.index0, I29 = x36.stride, j29 = U24.position.typedBuffer, w33 = U24.position.typedBufferStride, N21 = U24.normalCompressed.typedBuffer, H26 = U24.normalCompressed.typedBufferStride, _42 = U24.uv0, q21 = T31.attributes, W18 = T31.index0, F30 = T31.stride, k27 = q21.position.typedBuffer, z21 = q21.position.typedBufferStride, G22 = q21.normalCompressed.typedBuffer, J15 = q21.normalCompressed.typedBufferStride;
  for (let t88 = 1; t88 < g49 - 1; ++t88) {
    const n104 = C30 + I29 * t88, o78 = W18 + F30 * (D21 + t88), s85 = n104 * w33, r80 = o78 * z21, i79 = k27[r80] + A39, a86 = k27[r80 + 1] + V17, l76 = k27[r80 + 2] + E43;
    j29[s85] = i79, j29[s85 + 1] = a86, j29[s85 + 2] = l76, x29(i79, a86, l76, M26);
    const f60 = n104 * H26, g50 = o78 * J15;
    N21[f60] = G22[g50], N21[f60 + 1] = G22[g50 + 1];
    const p70 = t88 / m55, h59 = d63 ? B21 : i3(p70, y41, b31), x37 = d63 ? i3(p70, S27, v44) : L28;
    b20(_42, n104, h59, x37);
  }
}
function G16(t88) {
  var _a;
  const n103 = t88.geometryState, o77 = n103.neighborData, s84 = t88.localOrigin, i78 = o77.cornerNeighborData, a85 = t88.geometry, l75 = a85.outerEdges, f59 = a85.boundingBox, d63 = t88.tile, m55 = "local" === ((_a = t88.tile.surface.view) == null ? void 0 : _a.viewingMode), g49 = d63.ellipsoid.radius, h58 = d63.extentInRadians, M26 = d63.horizontalScale;
  let x36 = 0, S27 = 0, b31 = 0;
  const v44 = (t89, e78, n104) => {
    const o78 = h58[0 === e78 ? 1 : 3], s85 = h58[0 === t89 ? 0 : 2], r79 = Math.cos(o78), i79 = Math.sin(o78), a86 = Math.sin(s85), l76 = Math.cos(s85), c75 = g49 + n104;
    x36 = l76 * r79 * c75, S27 = a86 * r79 * c75, b31 = i79 * c75;
  }, B21 = m55 ? (() => {
    const n104 = t88.geometryState.clippingArea, o78 = d63.extent, s85 = null != n104 && (o78[3] > n104[3] || o78[2] > n104[2] || o78[1] < n104[1] || o78[0] < n104[0]), r79 = W14(d63.surface.isWebMercatorOnPlateeCarree, d63.ellipsoid.radius, M26);
    return (t89, o79, i79) => {
      const a86 = 0 === t89 ? j29[0] : j29[2], l76 = 0 === o79 ? j29[1] : j29[3], c75 = s85 ? i3(a86, n104[0], n104[2]) : a86, u58 = s85 ? i3(l76, n104[1], n104[3]) : l76, f60 = i79;
      x36 = c75 * M26, S27 = r79(u58), b31 = f60;
    };
  })() : v44;
  let L28 = 0, R25 = 0, O29 = 0, T31 = 0, D21 = 0, P29 = 0, A39 = 0, V17 = 0, U24 = 0;
  const C30 = m55 && t88.tile.surface.isWebMercatorOnPlateeCarree, I29 = (t89, e78, n104, o78, s85) => {
    let r79 = 0, i79 = 0, a86 = 0;
    if (m55) {
      const t90 = e78 * M26, s86 = C30 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-n104 / g49))) * g49 : n104 * M26;
      r79 = t90 - x36, i79 = s86 - S27, a86 = o78 - b31;
    } else {
      const s86 = E34(t89), l76 = t89.tile, c75 = l76.extent, u58 = l76.extentInRadians, f60 = (e78 - c75[0]) / (c75[2] - c75[0]), d64 = (n104 - c75[1]) / (c75[3] - c75[1]), m56 = u58[0] * (1 - f60) + u58[2] * f60, p70 = s86(d64), h59 = Math.cos(p70), M27 = Math.sin(p70), y41 = Math.sin(m56), v45 = Math.cos(m56), B22 = g49 + o78;
      r79 = v45 * h59 * B22 - x36, i79 = y41 * h59 * B22 - S27, a86 = M27 * B22 - b31;
    }
    switch (s85) {
      case 0:
        A39 += r79, V17 += i79, U24 += a86;
        break;
      case 1:
        T31 -= r79, D21 -= i79, P29 -= a86;
        break;
      case 2:
        A39 -= r79, V17 -= i79, U24 -= a86;
        break;
      case 3:
        T31 += r79, D21 += i79, P29 += a86;
    }
  }, j29 = d63.extent, w33 = n103.clippingArea, N21 = null != w33 ? w33 : Y12, H26 = j29[0], _42 = j29[2], q21 = j29[1], F30 = j29[3], k27 = [F30 > N21[3], _42 > N21[2], q21 < N21[1], H26 < N21[0]], z21 = Math.max(H26, N21[0]), G22 = Math.min(_42, N21[2]), K16 = Math.max(q21, N21[1]), X15 = Math.min(F30, N21[3]), $12 = a85.uvRange[0], tt6 = a85.uvRange[1], et5 = a85.uvRange[2], nt6 = a85.uvRange[3], ot6 = (t89) => {
    var _a2;
    const e78 = i78[t89].cornerTiles;
    L28 = 0, R25 = 0, O29 = 1, T31 = 0, D21 = 0, P29 = 0, A39 = 0, V17 = 0, U24 = 0;
    let n104 = 1 / 0;
    for (let r79 = 0; r79 < 4; ++r79)
      n104 = Math.min(n104, ((_a2 = e78[r79]) == null ? void 0 : _a2.level) ?? 1 / 0);
    for (let r79 = 0; r79 < 4; ++r79) {
      const t90 = e78[r79];
      Z9[r79] = (t90 == null ? void 0 : t90.level) === n104 ? t90 : null;
    }
    let o78 = 1, s85 = 0;
    for (let r79 = 0; r79 < 4; ++r79) {
      const t90 = Z9[r79];
      t90 && (o78 = Math.max(o78, t90 == null ? void 0 : t90.renderData.geometryState.numVerticesPerSide), s85 = t90.extent[2] - t90.extent[0]);
    }
    const a86 = s85, l76 = o78;
    p15(l76 > 1);
    const c75 = a86 / l76;
    for (let i79 = 0; i79 < 4; ++i79) {
      const t90 = Z9[(i79 + 3) % 4], e79 = Z9[i79 % 4];
      if (!t90 && !e79)
        continue;
      const n105 = 0 === i79 ? 1 : 1 === i79 ? 2 : 2 === i79 ? 3 : 0, o79 = 0 === i79 ? 2 : 1 === i79 ? 3 : 2 === i79 ? 0 : 1;
      if (t90 && e79) {
        const s86 = Q12[i79][0] * c75, a87 = Q12[i79][1] * c75, l77 = t90.extent, u58 = l77[0 === n105 || 1 === n105 ? 2 : 0] + s86, f60 = l77[0 === n105 || 3 === n105 ? 3 : 1] + a87, d64 = e79.extent, m56 = d64[0 === o79 || 1 === o79 ? 2 : 0] + s86, g50 = d64[0 === o79 || 3 === o79 ? 3 : 1] + a87, p70 = t90.renderData, h59 = e79.renderData, M27 = e51(u58, f60, p70.geometryState.samplerData), x37 = e51(m56, g50, h59.geometryState.samplerData);
        I29(p70, u58, f60, 0.5 * (M27 + x37), i79);
      } else {
        const s86 = t90 ?? e79, a87 = t90 ? n105 : o79, l77 = s86.extent, u58 = Q12[i79], f60 = l77[0 === a87 || 1 === a87 ? 2 : 0] + u58[0] * c75, d64 = l77[0 === a87 || 3 === a87 ? 3 : 1] + u58[1] * c75, m56 = s86.renderData, g50 = e51(f60, d64, m56.geometryState.samplerData);
        I29(m56, f60, d64, g50, i79);
      }
    }
    if (!m55) {
      const t90 = Math.sqrt(x36 * x36 + S27 * S27 + b31 * b31);
      L28 = x36 / t90, R25 = S27 / t90, O29 = b31 / t90;
    }
    if (m55 || O29 * O29 < 0.999) {
      const t90 = Math.sqrt(T31 * T31 + D21 * D21 + P29 * P29);
      T31 /= t90, D21 /= t90, P29 /= t90;
      const e79 = Math.sqrt(A39 * A39 + V17 * V17 + U24 * U24);
      A39 /= e79, V17 /= e79, U24 /= e79, L28 = P29 * V17 - D21 * U24, R25 = T31 * U24 - P29 * A39, O29 = D21 * A39 - T31 * V17;
      const n105 = 1 / Math.sqrt(L28 * L28 + R25 * R25 + O29 * O29);
      L28 *= n105, R25 *= n105, O29 *= n105;
    }
  };
  for (let E43 = 0; E43 < 4; ++E43) {
    const o78 = E43, a86 = (E43 + 1) % 4, m56 = 0 === E43 || 1 === E43 ? 1 : 0, g50 = 0 === E43 || 3 === E43 ? 1 : 0, h59 = i3(m56, $12, et5), M27 = i3(g50, tt6, nt6), v45 = l75[o78], T32 = 0 === E43 || 3 === E43 ? v45.count - 1 : 0, D22 = l75[a86], P30 = 0 === E43 || 1 === E43 ? D22.count - 1 : 0, A40 = i78[E43].cornerTiles;
    let V18 = -1;
    for (let t89 = 0; t89 < 4; ++t89) {
      const e78 = A40[t89];
      e78 && (-1 === V18 || l22(A40[V18], e78) > 0) && (V18 = t89);
    }
    const U25 = V18, C31 = A40[U25];
    if (C31 !== d63) {
      const e78 = d63.level - C31.level, n104 = 2 ** e78, o79 = [C31.lij[0] + e78, C31.lij[1] * n104, C31.lij[2] * n104], s85 = [o79[1] + n104 === d63.lij[1], 0 === E43 && (1 === U25 || 0 === U25 && C31 !== A40[3]) || 1 === E43 && (0 === U25 || 1 === U25 && C31 !== A40[2]), o79[1] === d63.lij[1] + 1, 2 === E43 && (3 === U25 || 2 === U25 && C31 !== A40[1]) || 3 === E43 && (2 === U25 || 3 === U25 && C31 !== A40[0])], r79 = s85.reduce((t89, e79) => t89 + (e79 ? 1 : 0), 0);
      p15(1 === r79 || 2 === r79);
      let i79 = -1, a87 = -1;
      const l76 = C31.renderData;
      if (1 === r79) {
        const e79 = s85.findIndex((t89) => t89);
        p15(0 <= e79 && e79 <= 3), i79 = (e79 + 2) % 4;
        const n105 = t88.geometryState.neighborData.edgeResolutions[e79];
        a87 = d63.getNeighborEdgeStartVertexIndex(e79, C31) * n105 + n105 * (0 === e79 && 0 === E43 || 1 === e79 && 0 === E43 || 2 === e79 && 1 === E43 || 3 === e79 && 3 === E43 ? 1 : 0);
      } else {
        p15(s85[1] || s85[3]), i79 = s85[1] ? 3 : 1;
        const t89 = l76.geometryState.neighborData.edgeResolutions[i79];
        a87 = 0 === E43 || 3 === E43 ? 0 : t89;
      }
      const m57 = l76.geometry.outerEdges[i79];
      {
        const e79 = v45.index0 + T32 * v45.stride, n105 = D22.index0 + P30 * D22.stride, o80 = m57.index0 + a87 * m57.stride;
        {
          const s86 = m57.attributes.position, r80 = s86.typedBuffer, i80 = o80 * s86.typedBufferStride, a88 = t88.localOrigin, l77 = m57.localOrigin, u58 = r80[i80] + l77[0] - a88[0], d64 = r80[i80 + 1] + l77[1] - a88[1], g51 = r80[i80 + 2] + l77[2] - a88[2];
          x29(u58, d64, g51, f59);
          {
            const t89 = v45.attributes.position, n106 = t89.typedBuffer, o81 = e79 * t89.typedBufferStride;
            n106[o81] = u58, n106[o81 + 1] = d64, n106[o81 + 2] = g51;
          }
          {
            const t89 = D22.attributes.position, e80 = t89.typedBuffer, o81 = n105 * t89.typedBufferStride;
            e80[o81] = u58, e80[o81 + 1] = d64, e80[o81 + 2] = g51;
          }
        }
        b20(v45.attributes.uv0, e79, h59, M27), b20(D22.attributes.uv0, n105, h59, M27);
        {
          const t89 = m57.attributes.normalCompressed.typedBuffer, s86 = o80 * m57.attributes.normalCompressed.typedBufferStride;
          {
            const n106 = v45.attributes.normalCompressed, o81 = n106.typedBuffer, r80 = e79 * n106.typedBufferStride;
            o81[r80] = t89[s86], o81[r80 + 1] = t89[s86 + 1];
          }
          {
            const e80 = D22.attributes.normalCompressed, o81 = e80.typedBuffer, r80 = n105 * e80.typedBufferStride;
            o81[r80] = t89[s86], o81[r80 + 1] = t89[s86 + 1];
          }
        }
      }
    } else {
      const t89 = k27[o78], i79 = k27[a86];
      let l76;
      if (t89 || i79) {
        const t90 = i3(H26 * (1 - m56) + _42 * m56, z21, G22), o79 = i3(q21 * (1 - g50) + F30 * g50, K16, X15), s85 = n103.samplerData;
        l76 = e51(t90, o79, s85);
      } else
        l76 = J13(A40);
      B21(m56, g50, l76), ot6(E43);
      const u58 = x36 - s84[0], d64 = S27 - s84[1], p70 = b31 - s84[2];
      x29(u58, d64, p70, f59), v45.setVertexFromValuesRawPositionUVNormal(T32, u58, d64, p70, h59, M27, L28, R25, O29), D22.setVertexFromValuesRawPositionUVNormal(P30, u58, d64, p70, h59, M27, L28, R25, O29);
    }
  }
  for (let e78 = 0; e78 < 4; ++e78)
    Z9[e78] = null;
}
function J13(t88) {
  var _a, _b;
  const e78 = t88.reduce((t89, e79) => Math.min(t89, (e79 == null ? void 0 : e79.level) ?? 1 / 0), 1 / 0);
  T11 && (p15(!t88[0] || !t88[2] || ge3(t88[0], t88[2], S9.SOUTH_WEST)), p15(!t88[1] || !t88[3] || ge3(t88[1], t88[3], S9.NORTH_WEST)));
  let n103 = 0, o77 = 0;
  for (let i78 = 0; i78 < 4; ++i78) {
    const s85 = t88[i78];
    if (s85 && s85.level === e78) {
      const t89 = 0 === i78 || 1 === i78, e79 = 0 === i78 || 3 === i78, a85 = s85.extent, l75 = a85[t89 ? 0 : 2], c75 = a85[e79 ? 1 : 3], u58 = (_b = (_a = s85.renderData) == null ? void 0 : _a.geometryState) == null ? void 0 : _b.samplerData;
      o77 += e51(l75, c75, u58), n103++;
    }
  }
  const s84 = n103 ? o77 / n103 : 0;
  return p15(null != s84), s84;
}
function K11(t88) {
  const e78 = t88.vao, n103 = t88.geometry.vertexAttributes.position.typedBuffer;
  e78.vertexBuffers.geometry.setSubData(n103, 0, 0, n103.length);
}
var Q12 = [[0, 1], [1, 0], [0, -1], [-1, 0]];
var X11 = new t65();
var Y12 = a8(-1 / 0, -1 / 0, 1 / 0, 1 / 0);
var Z9 = [null, null, null, null];
function $9(t88, e78, n103) {
  if (!e78)
    return false;
  const o77 = l22(t88, e78);
  return o77 > 0 || 0 === o77 && n103 >= 2;
}

// node_modules/@arcgis/core/views/3d/terrain/PlanarPatch.js
var p52 = class extends se5 {
  get horizontalScale() {
    return this._horizontalScaleFactor;
  }
  constructor(e78, t88, r79) {
    super(), this._horizontalScaleFactor = 1, this._extentInRenderSR = i4(), void 0 !== e78 && this.init(e78, t88, r79);
  }
  init(t88, a85, s84) {
    super.init(t88, a85, s84);
    const n103 = s84.view.renderSpatialReference, l75 = s84.spatialReference, c75 = null != n103 && G(n103) && null != l75 && l75.isGeographic ? this.ellipsoid.radius * Math.PI / 180 : 1;
    this._horizontalScaleFactor = c75;
    const h58 = this.surface.isWebMercatorOnPlateeCarree, u58 = this._extentInRenderSR, d63 = this.extent;
    if (h58) {
      const t89 = r5(d63[0], d63[1], 0);
      Hn(t89, f2.WebMercator, t89, f2.PlateCarree);
      const a86 = r5(d63[2], d63[3], 0);
      Hn(a86, f2.WebMercator, a86, f2.PlateCarree), u58[0] = t89[0], u58[1] = t89[1], u58[2] = a86[0], u58[3] = a86[1];
    } else
      for (let e78 = 0; e78 < 4; ++e78)
        u58[e78] = d63[e78] * c75;
    this.centerAtSeaLevel[0] = 0.5 * (u58[0] + u58[2]), this.centerAtSeaLevel[1] = 0.5 * (u58[1] + u58[3]), this.centerAtSeaLevel[2] = 0, this._edgeLen = Math.max(u58[2] - u58[0], u58[3] - u58[1]), this._edgeLen2 = this._edgeLen * this._edgeLen, this.updateRadiusAndCenter();
  }
  updateRadiusAndCenter() {
    this._updateCenter();
    const e78 = this._extentInRenderSR, t88 = 0.5 * (e78[2] - e78[0]), r79 = 0.5 * (e78[3] - e78[1]), i78 = Math.sqrt(t88 * t88 + r79 * r79), a85 = 0.5 * (this.elevationBounds[0] - this.elevationBounds[1]), s84 = Math.max(i78, a85);
    this._center[he5.MIDDLE][3] = s84;
  }
  _calculateFrustumVisibilityStatus(e78) {
    const t88 = this._aabb(), r79 = t88[0], i78 = t88[1], a85 = t88[2], s84 = t88[3], o77 = t88[4], l75 = t88[5];
    let c75 = true;
    for (let h58 = 0; h58 < 6; h58++) {
      const t89 = e78[h58], u58 = t89[0], d63 = t89[1], m55 = t89[2], p70 = t89[3];
      if (u58 * (u58 > 0 ? r79 : s84) + d63 * (d63 > 0 ? i78 : o77) + m55 * (m55 > 0 ? a85 : l75) + p70 >= 0)
        return T10.OUTSIDE;
      c75 = c75 && u58 * (u58 < 0 ? r79 : s84) + d63 * (d63 < 0 ? i78 : o77) + m55 * (m55 < 0 ? a85 : l75) + p70 <= 0;
    }
    return c75 ? T10.INSIDE : T10.INTERSECTS;
  }
  _aabb() {
    const e78 = this._extentInRenderSR;
    return k2(e78[0], e78[1], this.elevationBounds[0], e78[2], e78[3], this.elevationBounds[1]);
  }
  intersectsRay(e78, t88, r79, i78) {
    return f44[0] = 1 / t88[0], f44[1] = 1 / t88[1], f44[2] = 1 / t88[2], O6(this._aabb(), e78, f44, r79, i78);
  }
  createGeometry() {
    U19(this.renderData, this._horizontalScaleFactor), this.setMemoryDirty();
  }
  getDefaultVerticesPerSide() {
    return this.level < 9 ? 3 : 2;
  }
  updateCornerElevations() {
    I22(this.renderData, this._horizontalScaleFactor);
  }
  updateEdgeElevations() {
    j25(this.renderData, this._horizontalScaleFactor);
  }
};
var f44 = n7();

// node_modules/@arcgis/core/views/3d/terrain/ScaleRangeQueries.js
var c57 = class {
  constructor() {
    this.extent = n19(), this.minLevel = 0, this.maxLevel = 0, this.callback = null;
  }
};
var l58 = class extends m {
  constructor() {
    super(...arguments), this._queries = new l2({ initialSize: 10 }), this._queriesInvPtr = 0, this._queryQueue = new l2({ initialSize: 30 }), this._queryPool = new e4(c57);
  }
  queryVisibleLevelRange(e78, t88, s84, r79) {
    const i78 = this._queryPool.acquire();
    a7(i78.extent, e78), i78.minLevel = t88 ?? -Number.MAX_VALUE, i78.maxLevel = s84 ?? Number.MAX_VALUE, i78.callback = r79, this._queryQueue.push(i78), this.notifyChange("updating");
  }
  get updating() {
    return 0 !== this._queryQueue.length;
  }
  prepare() {
    for (; this._queries.length < this._queries.data.length && this._queryQueue.length > 0; ) {
      const e78 = this._queryQueue.pop();
      this._queries.push(e78);
    }
    this._queriesInvPtr = this._queries.length;
  }
  process() {
    for (let e78 = 0; e78 < this._queries.length; e78++) {
      const t88 = this._queries.data[e78];
      this._queryPool.release(t88), t88.callback(e78 >= this._queriesInvPtr), t88.callback = null;
    }
    this._queries.clear(), this.notifyChange("updating");
  }
  queriesForTile(e78) {
    const t88 = e78.level;
    let s84 = 0;
    for (; s84 < this._queriesInvPtr; ) {
      const r79 = this._queries.data[s84], i78 = r79.extent;
      t88 >= r79.minLevel && t88 <= r79.maxLevel && i78[0] <= e78.extent[2] && i78[2] >= e78.extent[0] && i78[1] <= e78.extent[3] && i78[3] >= e78.extent[1] ? (this._queries.swapElements(s84, this._queriesInvPtr - 1), this._queriesInvPtr--) : s84++;
    }
  }
};
e([y()], l58.prototype, "updating", null), l58 = e([a4("esri.views.3d.terrain.ScaleRangeQueries")], l58);

// node_modules/@arcgis/core/views/3d/terrain/SphericalPatch.js
var D16 = class extends se5 {
  get convexHull() {
    return this._convexHull;
  }
  constructor(t88, e78, s84) {
    super(), this._convexHull = new Array(24), this._boundingSphere = _5(), void 0 !== t88 && this.init(t88, e78, s84);
  }
  init(s84, i78, o77) {
    super.init(s84, i78, o77);
    const n103 = this.ellipsoid.radius, r79 = this.extentInRadians[0], l75 = this.extentInRadians[1], a85 = this.extentInRadians[2], h58 = this.extentInRadians[3], u58 = s84[0], d63 = s12(l75, h58, 0.5), p70 = s12(r79, a85, 0.5), f59 = 0 === u58 ? 0 : Math.min(Math.abs(l75), Math.abs(h58));
    this._edgeLen = (a85 - r79) * Math.cos(f59) * n103, this._edgeLen2 = this._edgeLen * this._edgeLen, this._curvatureHeight = n103 - Math.sqrt(n103 * n103 - this._edgeLen2 / 4), Ee(this.centerAtSeaLevel, p70, d63, this.ellipsoid.radius), z2(this.up, this.centerAtSeaLevel), this.updateRadiusAndCenter();
  }
  updateRadiusAndCenter() {
    this._updateBoundingVolumes();
    const t88 = this._center;
    if (0 === this.lij[0])
      o4(t88[he5.MIDDLE], 0, 0, 0), o4(t88[he5.TOP], 0, 0, 0), o4(t88[he5.BOTTOM], 0, 0, 0), t88[he5.MIDDLE][3] = this.ellipsoid.radius + this.elevationBounds[1];
    else {
      this._updateCenter();
      const e78 = t88[he5.MIDDLE], s84 = this.convexHull;
      let i78 = 0;
      for (let t89 = 0; t89 < 8; ++t89)
        i78 = Math.max(i78, L23(e78, s84, 3 * t89));
      t88[he5.MIDDLE][3] = Math.sqrt(i78);
    }
  }
  _calculateFrustumVisibilityStatus(t88) {
    if (!P6(t88, this._boundingSphere))
      return T10.OUTSIDE;
    if (this.lij[0] < 10)
      return T10.INTERSECTS;
    const e78 = this.convexHull, s84 = this.surface.view.state.camera.near;
    let i78 = true;
    for (let o77 = 0; o77 < v6; o77++) {
      const n103 = o77 === l12.NEAR, r79 = t88[o77], l75 = r79[0], a85 = r79[1], h58 = r79[2], u58 = r79[3] - (n103 ? s84 : 0);
      let c75 = false;
      for (let t89 = 0; t89 < 8; ++t89) {
        const s85 = 3 * t89;
        if (l75 * e78[s85] + a85 * e78[s85 + 1] + h58 * e78[s85 + 2] + u58 < 0) {
          if (c75 = true, !i78)
            break;
        } else
          i78 = false;
      }
      if (!c75)
        return T10.OUTSIDE;
    }
    return i78 ? T10.INSIDE : T10.INTERSECTS;
  }
  computeElevationBounds() {
    super.computeElevationBounds(), this._updateBoundingVolumes();
  }
  createGeometry() {
    v35(this.renderData, this._getPatchType()), this._updateBoundingVolumes(), this.setMemoryDirty();
  }
  _updateBoundingVolumes() {
    this._updateConvexHull(), this._updateBoundingSphere(), T11 && this._checkBVs();
  }
  _updateBoundingSphere() {
    const t88 = this._boundingSphere, e78 = t88, r79 = this.elevationBounds, l75 = this.ellipsoid.radius, a85 = r79[1];
    if (0 === this.level)
      o4(e78, 0, 0, 0), t88[3] = l75 + a85;
    else {
      const s84 = this.extentInRadians, a86 = 0.5 * (s84[0] + s84[2]), h58 = s84[1], u58 = s84[3];
      y32(O22, a86, h58, l75), y32(A31, a86, u58, l75), u2(e78, O22, A31);
      const c75 = 0.5 * (r79[0] + r79[1]);
      g3(e78, e78, (l75 + c75) / Y(e78));
      const d63 = this.convexHull;
      let p70 = 0;
      const f59 = (t89, e79) => {
        const s85 = t89[0] - d63[3 * e79], i78 = t89[1] - d63[3 * e79 + 1], o77 = t89[2] - d63[3 * e79 + 2];
        return Math.sqrt(s85 * s85 + i78 * i78 + o77 * o77);
      };
      for (let t89 = 0; t89 < 8; ++t89) {
        const s85 = f59(e78, t89);
        p70 = Math.max(p70, s85);
      }
      const m55 = p70;
      t88[3] = m55 + 2;
    }
  }
  _updateConvexHull() {
    const t88 = this.extentInRadians, s84 = this.ellipsoid.radius;
    if (0 === this.level)
      return;
    const a85 = this.elevationBounds, c75 = this._getPatchType(), d63 = this.surface.isWebMercator, p70 = d63 && c75 === o24.HAS_NORTH_POLE, f59 = d63 && c75 === o24.HAS_SOUTH_POLE, m55 = f59 || p70, g49 = Math.PI / 2, _42 = t88[0], v44 = t88[2], x36 = f59 ? -g49 : t88[1], M26 = p70 ? g49 : t88[3], j29 = 0.5 * (_42 + v44), T31 = a85[0], E43 = s84 + (m55 ? Math.min(0, T31 - 1) : T31), H26 = (t89, e78, s85) => y32(t89, e78, s85, E43), D21 = n7(), I29 = n7(), L28 = n7(), R25 = n7();
    H26(D21, _42, x36), H26(I29, _42, M26), H26(L28, v44, M26), H26(R25, v44, x36);
    const O29 = (t89, e78) => {
      for (let s85 = 0; s85 < 3; ++s85)
        this._convexHull[3 * e78 + s85] = t89[s85];
    };
    O29(D21, 0), O29(I29, 1), O29(L28, 2), O29(R25, 3);
    const A39 = a85[1], P29 = s84 + (m55 ? Math.max(0, A39 + 1) : A39), V17 = n7(), C30 = n7(), N21 = n7();
    y32(C30, j29, M26, E43), y32(N21, j29, x36, E43), u2(V17, C30, N21), z2(V17, V17);
    const k27 = n7(), U24 = n7(), F30 = (t89, s85) => {
      J(U24, t89, s85), z2(U24, U24);
      const n103 = -P3(t89, k27) / P3(U24, k27);
      p15(n103 >= 0), g3(U24, U24, n103), u2(t89, t89, U24);
    };
    if (2 ** this.lij[0] > 2 * this.lij[1]) {
      const t89 = N21, s85 = n7();
      _(s85, B15, t89), z2(s85, s85), _(k27, t89, s85), z2(k27, k27), p15(G7(P3(k27, t89) / Y(t89), 0)), F30(D21, I29), F30(R25, L28), O29(D21, 0), O29(R25, 3);
    } else if (2 ** this.lij[0] !== 2 * this.lij[1]) {
      const t89 = C30, s85 = n7();
      _(s85, B15, t89), z2(s85, s85), _(k27, s85, t89), z2(k27, k27), F30(I29, D21), F30(L28, R25), O29(I29, 1), O29(L28, 2);
    }
    const w33 = (t89, e78) => {
      const s85 = P29 / P3(e78, V17);
      for (let i78 = 0; i78 < 3; ++i78)
        this._convexHull[3 * t89 + i78] = e78[i78] * s85;
    };
    w33(4, D21), w33(5, I29), w33(6, L28), w33(7, R25);
  }
  _getPatchType() {
    const t88 = this.lij[1], e78 = 0 === t88, s84 = t88 === (1 << this.level) - 1;
    return e78 ? s84 ? o24.HAS_BOTH_POLES : o24.HAS_NORTH_POLE : s84 ? o24.HAS_SOUTH_POLE : o24.REGULAR;
  }
  intersectsRay(t88, e78, s84, i78) {
    const o77 = this._boundingSphere, n103 = o77[3] + s84, r79 = e78[0] * e78[0] + e78[1] * e78[1] + e78[2] * e78[2], l75 = o77[0] - t88[0], a85 = o77[1] - t88[1], h58 = o77[2] - t88[2], u58 = (l75 * e78[0] + a85 * e78[1] + h58 * e78[2]) / r79, c75 = e78[0] * u58 - l75, d63 = e78[1] * u58 - a85, p70 = e78[2] * u58 - h58;
    return c75 * c75 + d63 * d63 + p70 * p70 < n103 * n103;
  }
  getDefaultVerticesPerSide() {
    return this.level < I23.length ? I23[this.level] + 1 : 2;
  }
  updateCornerElevations() {
    R16(this.renderData), this._updateBoundingVolumes();
  }
  updateEdgeElevations() {
    L22(this.renderData), this._updateBoundingVolumes();
  }
  _checkBVs() {
    var _a;
    if (!T11)
      return;
    if (this.level <= 2)
      return;
    const t88 = this._boundingSphere, s84 = t88[3], o77 = t88, c75 = n7(), p70 = this.ellipsoid.radius, f59 = this.elevationBounds;
    f59[1], f59[0];
    const m55 = p70 + f59[0], g49 = 1, $12 = 0, _42 = this._center[he5.MIDDLE][3], v44 = this.convexHull, x36 = (t89, e78) => {
      for (let s85 = 0; s85 < 3; ++s85)
        t89[s85] = v44[3 * e78 + s85];
    };
    {
      const t89 = n7(), s85 = n7(), i78 = n7(), o78 = n7(), n103 = n7(), a85 = (a86, u58, c76, d63) => {
        x36(s85, a86), x36(i78, u58), x36(o78, c76), J(s85, s85, i78), J(o78, o78, i78), _(t89, s85, o78), z2(t89, t89);
        const p71 = P3(t89, i78);
        x36(n103, d63);
        const f60 = P3(t89, n103), m56 = Math.abs(f60 - p71);
        p15(G7(m56, 0), `Non coplanar ${a86},${u58},${c76},${d63} diff = ${m56}`);
      };
      a85(0, 1, 2, 3), a85(4, 5, 6, 7), a85(0, 1, 4, 5), a85(1, 2, 5, 6), a85(2, 3, 6, 7), a85(3, 0, 7, 4);
    }
    const M26 = t16(24), T31 = (t89, e78, s85) => {
      const i78 = 4 * t89;
      for (let o78 = 0; o78 < 3; ++o78)
        M26[i78 + o78] = e78[o78];
      M26[i78 + 3] = s85;
    }, D21 = n7(), I29 = n7(), L28 = n7(), B21 = n7(), O29 = (t89, s85, i78, o78) => {
      x36(D21, s85), x36(I29, i78), x36(L28, o78), J(D21, D21, I29), z2(D21, D21), J(L28, L28, I29), z2(L28, L28), _(B21, D21, L28), z2(B21, B21);
      const n103 = P3(B21, I29);
      T31(t89, B21, n103);
    };
    O29(0, 0, 1, 2), O29(1, 1, 0, 4), O29(2, 1, 5, 2), O29(3, 3, 2, 6), O29(4, 4, 0, 3), O29(5, 4, 6, 5);
    const A39 = 1, P29 = (t89, e78, s85, i78) => {
      const o78 = 4 * t89;
      return M26[o78] * e78 + M26[o78 + 1] * s85 + M26[o78 + 2] * i78 - M26[o78 + 3];
    }, V17 = (t89, e78, s85, i78) => P29(t89, e78, s85, i78) >= -A39, C30 = (t89, e78) => V17(t89, e78[0], e78[1], e78[2]), N21 = 2 ** this.lij[0] > 2 * this.lij[1], k27 = (t89, e78, i78) => Math.sqrt(R17(t89, e78, i78, o77[0], o77[1], o77[2])) < s84, U24 = (t89) => k27(t89[0], t89[1], t89[2]), F30 = (t89, e78) => k27(t89[e78], t89[e78 + 1], t89[e78 + 2]), w33 = this.extentInRadians, q21 = 0.5 * (w33[0] + w33[2]), G22 = w33[1], z21 = w33[3], W18 = n7(), J15 = n7();
    y32(W18, q21, z21, m55), y32(J15, q21, G22, m55);
    const K16 = N21 ? "Upper" : "Lower";
    let Q14 = true;
    for (let e78 = 0; e78 < 6; ++e78) {
      for (let t89 = 0; t89 < 8; ++t89) {
        const s85 = 3 * t89, i78 = V17(e78, v44[s85], v44[s85 + 1], v44[s85 + 2]);
        Q14 && (Q14 = i78), p15(i78, `Tile[${this.lij}] Convex hull point ${t89} outside of plane ${e78}`);
      }
      p15(C30(e78, J15), `Tile[${this.lij}] (${K16}) bottom mid outside of plane ${e78}`), p15(C30(e78, W18), `Tile[${this.lij}] (${K16}) top mid outside of plane ${e78}`);
    }
    p15(Q14, "Not all convex hull points are inside  convex hull polyhedron"), p15(U24(J15), `Tile[${this.lij}] (${K16}) bottom mid outside of bounding sphere`), p15(U24(W18), `Tile[${this.lij}] (${K16}) top mid outside of bounding sphere`);
    for (let e78 = 0; e78 < 8; ++e78) {
      const t89 = F30(v44, 3 * e78);
      p15(t89, `Tile[${this.lij}] Convex hull point ${e78} outside of bounding sphere`);
    }
    for (let e78 = 0; e78 < 6; ++e78)
      for (let t89 = 0; t89 < 8; ++t89) {
        const s85 = 3 * t89;
        V17(e78, v44[s85], v44[s85 + 1], v44[s85 + 2]) || console.error(`Tile[${this.lij}] Convex hull point ${t89} outside of plane ${e78}`);
      }
    const X15 = this.extentInRadians, Y14 = Math.max(X15[2] - X15[0], X15[3] - X15[1]), Z11 = Math.round(Y14 * p70), tt6 = this.renderData;
    if (!tt6)
      return;
    const { geometry: et5, localOrigin: st6 } = tt6, it5 = (_a = et5.vertexAttributes) == null ? void 0 : _a.position;
    if (!it5)
      return;
    const ot6 = it5.count, nt6 = n7(), rt5 = et5.numVerticesPerSide - 2, lt6 = rt5 * rt5, at6 = tt6.geometryState.neighborData, ht6 = at6.edgeResolutions.reduce((t89, e78) => t89 + e78 + 1, 0);
    for (let e78 = 0; e78 < ot6; ++e78) {
      const t89 = e78 < lt6, r79 = !t89 && e78 < lt6 + ht6;
      let l75 = false, h58 = -1;
      if (r79) {
        let t90 = lt6;
        for (let s85 = 0; s85 < 4; ++s85) {
          const i78 = at6.edgeResolutions[s85];
          if (e78 === t90 || e78 === t90 + i78 - 1) {
            l75 = true;
            break;
          }
          if (t90 += i78, e78 < t90) {
            h58 = s85;
            break;
          }
        }
      }
      const u58 = r79 ? at6.edgePeerNeighbors[h58] : null, d63 = r79 && u58 && l22(this, u58) > 0;
      it5.getVec(e78, c75), u2(nt6, c75, st6);
      const m56 = Y(nt6) - p70;
      let v45 = 0, x37 = false;
      const M27 = f59[0] - m56, j29 = m56 - f59[1], b31 = M27 > g49, S27 = j29 > g49, T32 = b31 || S27, E43 = () => {
        const s85 = t89 ? "internal" : r79 && !l75 ? "edge" : l75 ? "corner" : "pole";
        return `Tile[${this.lij}].vertex[${e78}]:${s85}` + (b31 ? "(below)" : S27 ? "(above)" : "") + (d63 ? "(Neighbor)" : "");
      }, D22 = U(nt6, o77);
      if (D22 >= s84 + $12) {
        const t90 = D22 - s84;
        T32 || (console.error(`${E43()} is out of the bounding sphere by ${t90.toFixed(0)} / ${s84.toFixed(0)}[tol=${$12}] h=${m56.toFixed(0)} / [${f59[0].toFixed(0)}..${f59[1].toFixed(0)}] (${(t90 / s84).toFixed(0)})`), x37 = true);
      }
      for (let i78 = 0; i78 < 6; ++i78)
        if (!V17(i78, nt6[0], nt6[1], nt6[2])) {
          const t90 = P29(i78, nt6[0], nt6[1], nt6[2]), o78 = e78 % rt5, n103 = (e78 - o78) / rt5;
          0 === i78 && M27 || 5 === i78 && j29 || (console.error(`${E43()} (${o78},${n103})|${rt5}] is out of the bounding trapezoid plane ${i78} h=${Math.round(m56)} / [${Math.round(f59[0])}..${Math.round(f59[1])}] dist=${Math.round(t90)} radii = ${Math.round(s84)}/${Math.round(_42)}} : maxL = ${Z11}`), ++v45);
        }
      if (x37 || v45 > 0)
        break;
    }
  }
};
var I23 = [128, 64, 64, 32, 16, 8, 8, 4];
function L23(t88, e78, s84) {
  return R17(t88[0], t88[1], t88[2], e78[s84], e78[s84 + 1], e78[s84 + 2]);
}
function R17(t88, e78, s84, i78, o77, n103) {
  const r79 = i78 - t88, l75 = o77 - e78, a85 = n103 - s84;
  return r79 * r79 + l75 * l75 + a85 * a85;
}
var y32 = (t88, e78, s84, i78) => {
  const o77 = Math.cos(e78), n103 = Math.sin(e78), r79 = Math.cos(s84), l75 = Math.sin(s84);
  t88[0] = i78 * r79 * o77, t88[1] = i78 * r79 * n103, t88[2] = i78 * l75;
};
var B15 = [0, 0, 1];
var O22 = n7();
var A31 = n7();

// node_modules/@arcgis/core/views/3d/terrain/SplitLimits.js
var e54 = class extends m {
  constructor() {
    super(...arguments), this.fovX = 0, this.fovY = 0, this.relativeWidthLimit = 0, this.relativeHeightLimit = 0, this.maxLod = 0, this.angledSplitBias = 0, this.aboveGround = true;
  }
};
e([y()], e54.prototype, "fovX", void 0), e([y()], e54.prototype, "fovY", void 0), e([y()], e54.prototype, "relativeWidthLimit", void 0), e([y()], e54.prototype, "relativeHeightLimit", void 0), e([y()], e54.prototype, "maxLod", void 0), e([y()], e54.prototype, "angledSplitBias", void 0), e([y()], e54.prototype, "aboveGround", void 0), e([y()], e54.prototype, "frustum", void 0), e54 = e([a4("esri.views.3d.terrain.SplitLimits")], e54);

// node_modules/@arcgis/core/views/3d/terrain/BlendModeTechniqueConfiguration.js
var s67 = class extends t26 {
  constructor() {
    super(...arguments), this.blendMode = t38.Normal;
  }
};
e([r29({ count: t38.COUNT })], s67.prototype, "blendMode", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TileBlendTechniqueConfiguration.js
var p53 = class extends s67 {
  constructor() {
    super(...arguments), this.output = u13.Composite, this.baseOpacityMode = n45.NotRequired, this.premultipliedSource = d18.Off;
  }
};
e([r29({ count: u13.COUNT })], p53.prototype, "output", void 0), e([r29({ count: n45.COUNT })], p53.prototype, "baseOpacityMode", void 0), e([r29()], p53.prototype, "premultipliedSource", void 0);

// node_modules/@arcgis/core/views/3d/terrain/BlendLayersTechnique.js
var b22 = class extends i30 {
  constructor() {
    super(...arguments), this.opacity = 1, this.baseOpacity = 1, this.texture = null, this.fboTexture = null, this.backgroundColor = f4;
  }
};
var p54 = class _p extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
  }
};
p54.shader = new t24(u16, () => import("./BlendLayers.glsl-E35XA3S2.js"));
var f45 = class extends p53 {
  constructor() {
    super(...arguments), this.background = l24.BelowLayer;
  }
};
e([r29()], f45.prototype, "background", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TextureReference.js
var e55 = class {
  constructor(e78, f59, o77, r79, c75, i78) {
    this.texture = e78, this.type = f59, e78.retain(), this.offsetAndScale = r12(o77.offset[0], o77.offset[1], o77.scale, o77.scale), this.opacities = r5(r79, c75, i78);
  }
  destroy() {
    this.texture.release();
  }
};

// node_modules/@arcgis/core/chunks/mat2df64.js
function e56() {
  return [1, 0, 0, 1, 0, 0];
}
function r61(e78) {
  return [e78[0], e78[1], e78[2], e78[3], e78[4], e78[5]];
}
function t69(e78, r79, t88, n103, o77, a85) {
  return [e78, r79, t88, n103, o77, a85];
}
function n79(e78, r79) {
  return new Float64Array(e78, r79, 6);
}
var o61 = Object.freeze(Object.defineProperty({ __proto__: null, clone: r61, create: e56, createView: n79, fromValues: t69 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n80(n103) {
  return n103 instanceof Float32Array && n103.length >= 2;
}
function r62(n103) {
  return Array.isArray(n103) && n103.length >= 2;
}
function t70(t88) {
  return n80(t88) || r62(t88);
}

// node_modules/@arcgis/core/views/2d/viewpointUtils.js
var C24 = 96;
var E35 = 39.37;
var O23 = 180 / Math.PI;
function U20(t88, e78) {
  return e78.type ? r14(t88, e78.x, e78.y) : a14(t88, e78);
}
function B16(t88) {
  return H(t88);
}
function K12(t88, e78) {
  const n103 = t88.targetGeometry, r79 = e78.targetGeometry;
  return n103.x = r79.x, n103.y = r79.y, n103.spatialReference = r79.spatialReference, t88.scale = e78.scale, t88.rotation = e78.rotation, t88;
}
function X12(t88, e78, n103) {
  return n103 ? r14(t88, 0.5 * (e78[0] - n103.right + n103.left), 0.5 * (e78[1] - n103.bottom + n103.top)) : l10(t88, e78, 0.5);
}
var Y13 = function() {
  const t88 = n20();
  return function(e78, n103, r79) {
    const o77 = n103.targetGeometry;
    U20(t88, o77);
    const a85 = 0.5 * et4(n103);
    return e78.xmin = t88[0] - a85 * r79[0], e78.ymin = t88[1] - a85 * r79[1], e78.xmax = t88[0] + a85 * r79[0], e78.ymax = t88[1] + a85 * r79[1], e78.spatialReference = o77.spatialReference, e78;
  };
}();
function $10(t88, e78, n103, r79) {
  return ct3(t88, e78, n103, r79), r19(t88, t88);
}
var _31 = function() {
  const t88 = n20();
  return function(e78, n103, r79) {
    return C5(e78, at4(e78, n103), X12(t88, n103, r79));
  };
}();
var tt5 = function() {
  const t88 = e56(), e78 = n20();
  return function(n103, r79, c75, s84) {
    const u58 = et4(r79), f59 = rt4(r79);
    return r14(e78, u58, u58), M6(t88, e78), e19(t88, t88, f59), i14(t88, t88, _31(e78, c75, s84)), i14(t88, t88, [0, s84.top - s84.bottom]), r14(n103, t88[4], t88[5]);
  };
}();
function et4(t88) {
  return t88.scale * nt3(t88.targetGeometry);
}
function nt3(t88) {
  return null != t88 && s8(t88.spatialReference) ? 1 / (B16(t88.spatialReference) * E35 * C24) : 1;
}
function rt4(t88) {
  return r6(t88.rotation) || 0;
}
function at4(t88, e78) {
  return l10(t88, e78, 0.5);
}
var it4 = function() {
  const t88 = n20(), e78 = n20(), n103 = n20();
  return function(r79, o77, u58, f59, l75, p70) {
    return g6(t88, o77), l10(e78, u58, 0.5 * p70), r14(n103, 1 / f59 * p70, -1 / f59 * p70), f11(r79, e78), l75 && e19(r79, r79, l75), c10(r79, r79, n103), i14(r79, r79, t88), r79;
  };
}();
var ct3 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77) {
    const a85 = et4(n103), i78 = rt4(n103);
    return U20(t88, n103.targetGeometry), it4(e78, t88, r79, a85, i78, o77);
  };
}();
var st5 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77) {
    const a85 = et4(n103);
    return U20(t88, n103.targetGeometry), it4(e78, t88, r79, a85, 0, o77);
  };
}();
function ut3(t88) {
  const e78 = d3(t88);
  return e78 ? e78.valid[1] - e78.valid[0] : 0;
}
function ft2(t88, e78) {
  return Math.round(ut3(t88) / e78);
}
var lt3 = function() {
  const t88 = n20(), e78 = n20(), n103 = [0, 0, 0];
  return function(r79, o77, a85) {
    o10(t88, r79, o77), v5(t88, t88), o10(e78, r79, a85), v5(e78, e78), y6(n103, t88, e78);
    let i78 = Math.acos(j5(t88, e78) / (q2(t88) * q2(e78))) * O23;
    return n103[2] < 0 && (i78 = -i78), isNaN(i78) && (i78 = 0), i78;
  };
}();
var mt2 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77) {
    const a85 = e78.targetGeometry;
    return K12(e78, n103), tt5(t88, n103, r79, o77), a85.x += t88[0], a85.y += t88[1], e78;
  };
}();
var pt2 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77, a85) {
    a85 || (a85 = "center"), C5(t88, r79, o77), l10(t88, t88, 0.5);
    const i78 = t88[0], c75 = t88[1];
    switch (a85) {
      case "center":
        r14(t88, 0, 0);
        break;
      case "left":
        r14(t88, -i78, 0);
        break;
      case "top":
        r14(t88, 0, c75);
        break;
      case "right":
        r14(t88, i78, 0);
        break;
      case "bottom":
        r14(t88, 0, -c75);
        break;
      case "top-left":
        r14(t88, -i78, c75);
        break;
      case "bottom-left":
        r14(t88, -i78, -c75);
        break;
      case "top-right":
        r14(t88, i78, c75);
        break;
      case "bottom-right":
        r14(t88, i78, -c75);
    }
    return Rt2(e78, n103, t88), e78;
  };
}();
var ht3 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77, a85) {
    return K12(e78, n103), isNaN(r79) || 0 === r79 || (jt2(t88, o77, n103, a85), e78.scale = n103.scale * r79, Gt2(t88, t88, e78, a85), Rt2(e78, e78, r14(t88, t88[0] - o77[0], o77[1] - t88[1]))), e78;
  };
}();
var wt2 = function() {
  const t88 = n20();
  return function(e78, n103, r79, o77, a85, i78) {
    return K12(e78, n103), isNaN(r79) || 0 === r79 || (jt2(t88, a85, n103, i78), e78.scale = n103.scale * r79, e78.rotation += o77, Gt2(t88, t88, e78, i78), Rt2(e78, e78, r14(t88, t88[0] - a85[0], a85[1] - t88[1]))), e78;
  };
}();
var dt2 = function() {
  const t88 = n20(), e78 = n20();
  return function(n103, r79, o77, a85, i78, c75, s84) {
    return _31(e78, c75, s84), s19(t88, i78, e78), a85 ? wt2(n103, r79, o77, a85, t88, c75) : ht3(n103, r79, o77, t88, c75);
  };
}();
var jt2 = function() {
  const t88 = e56();
  return function(e78, n103, r79, o77) {
    return z5(e78, n103, $10(t88, r79, o77, 1));
  };
}();
var Gt2 = function() {
  const t88 = e56();
  return function(e78, n103, r79, o77) {
    return z5(e78, n103, ct3(t88, r79, o77, 1));
  };
}();
var Rt2 = function() {
  const t88 = n20(), e78 = e56();
  return function(n103, r79, o77) {
    K12(n103, r79);
    const a85 = et4(r79), i78 = n103.targetGeometry;
    return h11(e78, rt4(r79)), c10(e78, e78, r15(a85, a85)), z5(t88, o77, e78), i78.x += t88[0], i78.y += t88[1], n103;
  };
}();

// node_modules/@arcgis/core/views/2d/ViewState.js
var b23;
var G17 = [0, 0];
var O24 = b23 = class extends l3 {
  constructor(t88) {
    super(t88), this._viewpoint2D = { center: n20(), rotation: 0, scale: 0, spatialReference: void 0 }, this.center = [0, 0], this.extent = new M(), this.id = 0, this.inverseTransform = e56(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e56(), this.transformNoRotation = e56(), this.displayMat3 = e21(), this.displayViewMat3 = e21(), this.viewMat3 = e21(), this.viewMat2d = n22(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t88) {
    this._set("pixelRatio", t88), this._update();
  }
  set size(t88) {
    this._set("size", t88), this._update();
  }
  set viewpoint(t88) {
    if (t88) {
      const s84 = this._viewpoint2D, i78 = t88.targetGeometry;
      s84.center[0] = i78.x, s84.center[1] = i78.y, s84.rotation = t88.rotation, s84.scale = t88.scale, s84.spatialReference = i78.spatialReference;
    }
    this._update();
  }
  copy(t88) {
    const s84 = this.size, i78 = this.viewpoint;
    return i78 && s84 ? (this.viewpoint = K12(i78, t88.viewpoint), this._set("size", a14(s84, t88.size))) : (this.viewpoint = t88.viewpoint.clone(), this._set("size", [t88.size[0], t88.size[1]])), this._set("pixelRatio", t88.pixelRatio), this;
  }
  clone() {
    return new b23({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t88, s84, i78) {
    return t70(s84) ? z5(t88, s84, this.inverseTransform) : (G17[0] = s84, G17[1] = i78, z5(t88, G17, this.inverseTransform));
  }
  toScreen(t88, s84, i78) {
    return t70(s84) ? z5(t88, s84, this.transform) : (G17[0] = s84, G17[1] = i78, z5(t88, G17, this.transform));
  }
  toScreenNoRotation(t88, s84, i78) {
    return t70(s84) ? z5(t88, s84, this.transformNoRotation) : (G17[0] = s84, G17[1] = i78, z5(t88, G17, this.transformNoRotation));
  }
  getScreenTransform(t88, s84) {
    const { center: i78 } = this._viewpoint2D, e78 = this._get("pixelRatio") || 1, o77 = this._get("size");
    return it4(t88, i78, o77, s84, 0, e78), t88;
  }
  _update() {
    const { center: t88, spatialReference: i78, scale: e78, rotation: o77 } = this._viewpoint2D, c75 = this._get("pixelRatio") || 1, m55 = this._get("size"), d63 = new l27({ targetGeometry: new x3(t88[0], t88[1], i78), scale: e78, rotation: o77 });
    if (this._set("viewpoint", d63), !m55 || !i78 || !e78)
      return;
    this.resolution = et4(d63), this.rotation = o77, this.scale = e78, this.spatialReference = i78, a14(this.center, t88);
    const y41 = 0 !== m55[0] ? 2 / m55[0] : 0, _42 = 0 !== m55[1] ? -2 / m55[1] : 0;
    s21(this.displayMat3, y41, 0, 0, 0, _42, 0, -1, 1, 1);
    const x36 = r18(this.viewMat3), z21 = t17(m55[0] / 2, m55[1] / 2), g49 = t17(-m55[0] / 2, -m55[1] / 2), D21 = r6(o77);
    M5(x36, x36, z21), h9(x36, x36, D21), M5(x36, x36, g49), i13(this.displayViewMat3, this.displayMat3, x36);
    const b31 = f11(this.viewMat2d, z21);
    return e19(b31, b31, D21), i14(b31, b31, g49), Y13(this.extent, d63, m55), ct3(this.transform, d63, m55, c75), r19(this.inverseTransform, this.transform), st5(this.transformNoRotation, d63, m55, c75), this.worldScreenWidth = ft2(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e([y({ readOnly: true })], O24.prototype, "id", void 0), e([y({ value: 1, json: { write: true } })], O24.prototype, "pixelRatio", null), e([y({ json: { write: true } })], O24.prototype, "size", null), e([y()], O24.prototype, "spatialReference", void 0), e([y({ type: l27, json: { write: true } })], O24.prototype, "viewpoint", null), O24 = b23 = e([a4("esri.views.2d.ViewState")], O24);
var U21 = O24;

// node_modules/@arcgis/core/views/2d/engine/vectorTiles/VectorTileRendererHelper3D.js
var l59 = 0.125;
var n81 = class {
  constructor() {
    this._renderParams = { context: null, drawPhase: 1, state: new U21({ viewpoint: new l27({ targetGeometry: new x3(0, 0), scale: 1, rotation: 0 }), size: [256, 256] }), stationary: true, pixelRatio: 1, displayLevel: -1, requiredLevel: -1, globalOpacity: 1, renderPass: "background", styleLayer: null, styleLayerUID: -1, painter: null, glyphMosaic: null, spriteMosaic: null, profiler: null, renderingOptions: null, requestRender: null, allowDelayedRender: false, deltaTime: -1, timeline: null, time: 0, hasClipping: false, blendMode: null, dataUploadCounter: 0, effects: null, inFadeTransition: false, requireFBO: false, highlightGradient: null };
  }
  dispose() {
    this._renderParams = null;
  }
  render(e78, t88, r79, i78, l75, n103, s84, a85, o77, d63, p70) {
    this._render(e78, t88, r79, i78, l75, n103, s84, a85, o77, d63, p70);
  }
  renderSymbols(e78, t88, i78, l75, n103, s84, a85, o77, d63, p70, u58) {
    this._render(e78, t88, i78, l75, n103, s84, a85, o77, d63, p70, u58, a18.SYMBOL);
  }
  _render(e78, t88, r79, i78, n103, s84, a85, o77, d63, p70, u58, c75) {
    const m55 = t88[0] - s84.getLevelShift(t88[0]), y41 = this._renderParams;
    y41.context = e78, y41.painter = i78, y41.glyphMosaic = i78.glyphMosaic, y41.spriteMosaic = i78.spriteMosaic, y41.pixelRatio = p70 * u58, y41.displayLevel = m55, y41.requiredLevel = m55;
    const g49 = s84.getScale(t88[0]), [h58, f59] = s84.getOffset(t88, a85 * g49), w33 = l59 * a85 * g49 / d63, L28 = r79.transforms.dvs;
    L28[0] = w33, L28[4] = -w33, L28[6] = -1 - h58 - o77[0] * a85 * 2, L28[7] = 1 + f59 + (1 - o77[1]) * a85 * 2 - 2, y41.state.size[0] = d63 / u58, y41.state.size[1] = d63 / u58, y41.state.pixelRatio = u58, r79.stage || r79.attachWithContext(e78), r79.triangleCount = 0, i78.drawTile(y41, r79, n103, c75);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/RasterColorizerTechnique.js
var u43 = class _u extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _u.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
  }
};
u43.shader = new t24(z8, () => import("./RasterColorizer.glsl-XTNSR4R3.js"));
var d49 = class extends p53 {
  constructor() {
    super(...arguments), this.colorizerType = t37.Stretch, this.stretchType = e29.Noop, this.applyColormap = true, this.requireBilinearWithNN = false;
  }
};
e([r29({ count: t37.COUNT })], d49.prototype, "colorizerType", void 0), e([r29({ count: e29.COUNT })], d49.prototype, "stretchType", void 0), e([r29()], d49.prototype, "applyColormap", void 0), e([r29()], d49.prototype, "requireBilinearWithNN", void 0);

// node_modules/@arcgis/core/views/3d/terrain/support/MultiSizeFramebuffer.js
var o62 = class {
  constructor(e78) {
    this._rctx = e78, this._fbos = /* @__PURE__ */ new Map();
  }
  get(e78) {
    return this._getPool(e78);
  }
  dispose() {
    this._fbos.forEach((e78) => e78.dispose()), this._fbos.clear();
  }
  _getPool(o77) {
    const i78 = this._fbos.get(o77);
    if (i78)
      return i78;
    const f59 = new x11(this._rctx, new e23(o77), new i21(B2.DEPTH_COMPONENT16, o77));
    return this._fbos.set(o77, f59), f59;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileCompositor.js
var O25 = s3.getLogger("esri.views.3d.terrain");
var I24 = class {
  constructor(e78, t88) {
    this._rctx = e78, this._techniqueRepository = t88, this._fbos = [], this._vectorTileHelper = new n81(), this._bindParameters = new o31(null, null, null), this._blendLayersTechniqueConfig = new f45(), this._current = 0, this._lastUsedIds = new Array(), this._lastCreatedBufferId = 0, this._onHoldIds = new Array(), this._vaoQuad = f15(this._rctx, A10);
  }
  dispose() {
    this._fbos.forEach(t), this._fbos = null, this._vtFBO = t(this._vtFBO), this._vaoQuad = t(this._vaoQuad), this._vectorTileHelper = t(this._vectorTileHelper), this._backgroundTechnique = f(this._backgroundTechnique), this._applyOpacityTechnique = f(this._applyOpacityTechnique), this._blendLayersTechnique = f(this._blendLayersTechnique);
  }
  _getBlendLayersTechnique(e78, t88, r79, i78 = d18.Off, s84 = l24.BelowLayer) {
    return this._blendLayersTechniqueConfig.output = t88, this._blendLayersTechniqueConfig.blendMode = e78, this._blendLayersTechniqueConfig.baseOpacityMode = r79, this._blendLayersTechniqueConfig.premultipliedSource = i78, this._blendLayersTechniqueConfig.background = s84, this._blendLayersTechnique = this._techniqueRepository.releaseAndAcquire(p54, this._blendLayersTechniqueConfig, this._blendLayersTechnique), this._blendLayersTechnique;
  }
  drawBackground(e78, t88) {
    const r79 = this._getBlendLayersTechnique(t38.Normal, t88 ? u13.ColorComposite : u13.GridComposite, n45.NotRequired, d18.Off, l24.Only), i78 = this._rctx.bindTechnique(r79, e78, this._bindParameters);
    this._render(i78);
  }
  _render(e78) {
    this._rctx.bindVAO(this._vaoQuad), e78.assertCompatibleVertexAttributeLocations(this._vaoQuad), this._rctx.drawArrays(E5.TRIANGLE_STRIP, 0, n28(this._vaoQuad, "geometry"));
  }
  drawGroup(e78, t88, r79, i78, s84, o77 = d18.On) {
    t88 === u13.Composite && (e78.fboTexture = this._fbos[this.getLastOnHoldId()].get(r79).colorTexture), e78.texture = this.currentFBO(r79).colorTexture, this.closeGroup(r79);
    const n103 = this._getBlendLayersTechnique(i78, t88, s84, o77), a85 = this._rctx.bindTechnique(n103, e78, this._bindParameters);
    this._render(a85);
  }
  drawRasterData(e78, t88, r79, i78, s84, o77 = d18.Off) {
    if (null == e78.texture)
      return;
    e78.fboTexture = t88 === u13.GroupBackgroundComposite || i78 === t38.Normal && s84 === n45.NotRequired && o77 === d18.Off ? null : this.switch(r79).colorTexture;
    const n103 = this._getBlendLayersTechnique(i78, t88, s84, o77), a85 = this._rctx.bindTechnique(n103, e78, this._bindParameters);
    this._render(a85);
  }
  drawImageryTileData(e78, t88, r79, i78, s84, o77) {
    const n103 = o77.sourceLayerInfo.data;
    if (!n103.source)
      return;
    if (o77.tile.surface.layerViewByIndex(o77.layerIndex, A29.MAP).ensureSymbolizerParameters(n103), !n103.bind(this._rctx))
      return;
    e78.fboTexture = i78 === t38.Normal && s84 === n45.NotRequired ? null : this.switch(r79).colorTexture;
    const a85 = this._getRasterColorizerTechnique(n103, t88, i78, s84);
    n103.opacity = e78.opacity;
    const h58 = n103.getUniforms();
    h58.scale = o77.scale, h58.offset = o77.offset, h58.backgroundColor = e78.backgroundColor, h58.fboTexture = e78.fboTexture, h58.baseOpacity = e78.baseOpacity;
    const u58 = this._rctx.bindTechnique(a85, h58, null);
    this._render(u58);
  }
  _getRasterColorizerTechnique(e78, t88, r79, i78) {
    const o77 = e78.symbolizerParameters, n103 = ["stretch", "lut", "hillshade"].indexOf(o77.type);
    return null == this._rasterColorizerConfig && (this._rasterColorizerConfig = new d49(), this._rctx.gl.getExtension("WEBGL_color_buffer_float"), this._rctx.gl.getExtension("OES_texture_float")), this._rasterColorizerConfig.output = t88, this._rasterColorizerConfig.blendMode = r79, this._rasterColorizerConfig.baseOpacityMode = i78, this._rasterColorizerConfig.colorizerType = n103, this._rasterColorizerConfig.applyColormap = !!o77.colormap, this._rasterColorizerConfig.requireBilinearWithNN = e78.isBilinearWithStretchColorRamp, this._rasterColorizerConfig.stretchType = e78.hasStretchTypeNone() ? e29.Noop : e29.PerBand, this._rasterColorizerTechnique = this._techniqueRepository.releaseAndAcquire(u43, this._rasterColorizerConfig, this._rasterColorizerTechnique), this._rasterColorizerTechnique;
  }
  drawVectorData(e78, t88, r79, s84, o77, n103, a85, h58, u58) {
    const b31 = this._rctx, g49 = n103.sourceLayerInfo.data, m55 = n103.tile.surface.layerViewByIndex(n103.layerIndex, A29.MAP), T31 = o77 === n45.Required || e78.opacity < 1 || s84 !== t38.Normal || t88 !== u13.Composite, y41 = T31 ? d18.On : d18.Off;
    this._getBlendLayersTechnique(s84, t88, o77, y41).bindPipelineState(b31);
    let C30 = null, B21 = null;
    T31 ? (B21 = this.currentFBO(r79), null == this._vtFBO && (this._vtFBO = new o62(this._rctx)), C30 = this._vtFBO.get(r79), b31.bindFramebuffer(C30), this._clearCurrentFBO()) : u58 && b31.clearSafe(_4.DEPTH_BUFFER_BIT);
    try {
      this._vectorTileHelper.render(b31, n103.sourceLod, g49, m55.painter, m55.layer.styleRepository, m55.schemaHelper, Math.round(1 / n103.scale), n103.offset, h58, a85, m55.contentZoom), n103.vtlNeighborInfos.forAll((e79) => this._vectorTileHelper.renderSymbols(b31, e79.sourceLod, e79.sourceLayerInfo.data, m55.painter, m55.layer.styleRepository, m55.schemaHelper, 1, e79.offset, h58, a85, m55.contentZoom));
    } catch (q21) {
      O25.warnOnce("A render call containing vector tiles did not resolve correctly.", q21);
    }
    return null == C30 || (b31.bindFramebuffer(B21), e78.texture = C30.colorTexture, e78.offset = f8, e78.scale = 1, this.drawRasterData(e78, t88, r79, s84, o77, y41), u58);
  }
  copyFBOToTexture(e78) {
    const t88 = this._rctx, r79 = t88.bindTexture(e78.texture, T8.TEXTURE_UNIT_FOR_UPDATES), i78 = e78.descriptor;
    t88.gl.copyTexImage2D(M4.TEXTURE_2D, 0, i78.pixelFormat, 0, 0, i78.width, i78.height, 0), e78.generateMipmap(), t88.bindTexture(r79, T8.TEXTURE_UNIT_FOR_UPDATES);
  }
  _clearCurrentFBO() {
    this._rctx.setClearColor(0, 0, 0, 0), this._rctx.setClearDepth(1), this._rctx.clearSafe(_4.COLOR_BUFFER_BIT | _4.DEPTH_BUFFER_BIT);
  }
  _initFBO(e78, t88, r79) {
    this._rctx.bindFramebuffer(e78), r79 && (this._rctx.setViewport(0, 0, t88, t88), this._clearCurrentFBO());
  }
  ensureBuffer(e78) {
    this._lastUsedIds.length = 0, this._lastUsedIds.push(1), this._lastCreatedBufferId = 1, this._onHoldIds.length = 0, this.bind(e78);
  }
  bind(e78, t88 = 0, r79 = true) {
    if (this._current = t88, t88 >= this._fbos.length)
      for (let i78 = this._fbos.length; i78 <= t88; i78++)
        this._fbos.push(new o62(this._rctx));
    this._initFBO(this._fbos[t88].get(e78), e78, r79);
  }
  _bindNextFreeBuffer(e78) {
    this._lastUsedIds.length > 0 ? this.bind(e78, this._lastUsedIds.pop()) : (this._lastCreatedBufferId++, this.bind(e78, this._lastCreatedBufferId));
  }
  openGroup(e78) {
    this._onHoldIds.push(this._current), this._bindNextFreeBuffer(e78);
  }
  switch(e78) {
    const t88 = this.currentFBO(e78), r79 = this._current;
    return this._bindNextFreeBuffer(e78), this._lastUsedIds.push(r79), t88;
  }
  getLastOnHoldId() {
    return this._onHoldIds[this._onHoldIds.length - 1];
  }
  closeGroup(e78) {
    const t88 = this._current;
    this._bindNextFreeBuffer(e78), this._lastUsedIds.push(t88), this._lastUsedIds.push(this._onHoldIds.pop());
  }
  unbind() {
    this._rctx.bindFramebuffer(null);
  }
  currentFBO(e78) {
    return this._fbos[this._current].get(e78);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileRenderInfo.js
var s68 = class {
  constructor() {
    this.sourceLod = [0, 0, 0], this.offset = [0, 0], this.scale = 1, this.layerIndex = 0, this.vtlNeighborInfos = new l2({ allocator: (o77) => o77 || new t71() });
  }
};
var t71 = class {
  constructor() {
    this.sourceLayerInfo = null, this.sourceLod = [0, 0, 0], this.offset = [-1, 0];
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileRenderer.js
var N16 = class {
  constructor(e78, t88, r79, s84) {
    this.start = e78, this.end = t88, this.blendMode = r79, this.opacity = s84;
  }
};
var C25 = class {
  constructor(e78, t88, r79) {
    this._rctx = e78, this.tileSize = t88, this._techniqueRepository = r79, this._passParameters = new b22(), this._backgroundTexture = null, this._backgroundColor = null, this._backgroundDirty = false, this._blackTex = null, this._maxAnisotropy = this._rctx.parameters.maxMaxAnisotropy, this._composition = new I24(this._rctx, this._techniqueRepository), this._blackTex = new t67(c18(this._rctx, [0, 0, 0, 1])), this._ensureBackgroundTexture(this.tileSize);
  }
  dispose() {
    this._composition = t(this._composition), this._backgroundTexture = f(this._backgroundTexture), this._blackTex = f(this._blackTex);
  }
  get backgroundIsGrid() {
    return null == this._backgroundColor;
  }
  get backgroundColor() {
    return this._backgroundColor;
  }
  updateTileTexture(e78, t88) {
    if (!e78.renderData)
      return;
    const r79 = e78.surface, s84 = r79.baseOpacity;
    let o77 = 0, n103 = 0, u58 = this.tileSize, c75 = false;
    const l75 = r79.view.state.contentPixelRatio;
    let m55 = false;
    z20.clear(), H23.length = 0;
    const _42 = e78.layerInfo[A29.MAP];
    let f59 = _42.length, T31 = 0, y41 = null;
    for (; T31 < _42.length; T31++) {
      const t89 = r79.layerViewByIndex(T31, A29.MAP), g50 = t89.layer.opacity;
      F24[T31] = g50;
      const b31 = t89.fullOpacity;
      if (q18[T31] = b31, y5(t89.layer) && f59 >= _42.length && (f59 = T31), U6(t89)) {
        v36[T31] = t89.layer.blendMode;
        let e79 = "normal" !== t89.layer.blendMode;
        if (a12(t89.layer.parent)) {
          const r80 = U22(t89.layer.parent);
          null != r80 && "" !== r80 && (e79 = B17(t89.layer.parent) || e79);
        }
        e79 && (m55 = e79, c75 = false);
      }
      if (0 === g50 && !m55) {
        _42[T31].pendingUpdates &= ~(E33.TEXTURE_NOFADING & E33.TEXTURE_FADING);
        continue;
      }
      ++n103;
      const x36 = S22(e78, T31);
      if (x36) {
        if (_42[T31].pendingUpdates &= ~(E33.TEXTURE_NOFADING & E33.TEXTURE_FADING), a12(t89.layer.parent)) {
          const e79 = U22(t89.layer.parent);
          null != e79 && "" !== e79 && G18(t89.layer.parent, T31);
        }
        _10(t89) ? u58 = Math.max(u58, this.tileSize * l75) : 1 === s84 && 1 === b31 && (t89.isOpaque || this._dataToTexture(x36) && x36.sourceLayerInfo.data.descriptor.isOpaque) && (c75 = true), ++o77, null === y41 && (y41 = T31);
      }
    }
    const g49 = u58 / this.tileSize;
    this._ensureBackgroundTexture(this.tileSize), 0 !== o77 && null !== y41 ? 1 === o77 && !m55 && this._useLayerTexture(e78, y41, f59, q18[y41]) || this._composeMapLayers(e78, t88, T31 - 1, f59, F24, v36, u58, g49, !c75 || m55, z20, m55) : this._useBackgroundTexture(e78, n103);
  }
  _ensureBackgroundTexture(e78) {
    null == this._backgroundTexture && (this._backgroundTexture = this._buildTexture(e78), this._backgroundDirty = true), this._backgroundDirty && (this._composition.bind(e78), this._passParameters.offset = f8, this._passParameters.scale = 1, this._passParameters.opacity = 1, null != this.backgroundColor && (this._passParameters.backgroundColor = this.backgroundColor), this._composition.drawBackground(this._passParameters, null != this.backgroundColor), this._composition.copyFBOToTexture(this._backgroundTexture), this._composition.unbind(), this._backgroundDirty = false);
  }
  _useBackgroundTexture(e78, t88) {
    let r79 = n77.Immediate;
    (e78.surface.view.layerViewManager.updating || t88 > 0) && (r79 = n77.Delayed);
    const s84 = e78.renderData;
    this._backgroundTexture && null == s84.textureReference && (r79 = n77.Immediate), s84.setTextureReference(null != this._backgroundTexture ? new e55(this._backgroundTexture, r28.FADING, V14, e78.surface.baseOpacity, 0, 1) : null, r79);
  }
  _useLayerTexture(e78, t88, r79, s84) {
    const o77 = t88 < r79, a85 = o77 ? 1 : e78.surface.baseOpacity, i78 = o77 ? e78.surface.baseOpacity : 1, n103 = S22(e78, t88);
    return !!this._dataToTexture(n103) && (e78.renderData.setTextureReference(new e55(n103.sourceLayerInfo.data, r28.FADING, n103, a85, i78, s84)), true);
  }
  _composeMapLayers(e78, t88, r79, s84, a85, i78, n103, u58, c75, l75, p70) {
    this._composition.ensureBuffer(n103);
    const h58 = e78.surface.baseOpacity;
    let d63 = false, f59 = L.LINEAR_MIPMAP_LINEAR, T31 = false, y41 = 0;
    for (let b31 = r79; b31 >= 0; b31--) {
      const t89 = S22(e78, b31);
      if (!t89)
        continue;
      if (0 === a85[b31] && !p70)
        continue;
      const r80 = b31 < s84 && h58 < 1 && !d63;
      this._passParameters.baseOpacity = r80 ? h58 : 1;
      const g50 = this._passParameters.baseOpacity < 1 ? n45.Required : n45.NotRequired;
      r80 && (d63 = true);
      let x37 = false;
      l75.forEach((e79) => {
        e79.start === b31 && (H23.push(e79), this._composition.openGroup(n103), x37 = true);
      });
      const k27 = 0 === y41, w33 = x37 ? u13.GroupBackgroundComposite : c75 && k27 ? this.backgroundIsGrid ? u13.GridComposite : u13.ColorComposite : u13.Composite, I29 = e30[i78[b31]];
      for (A12(t89) ? (this._passParameters.opacity = a85[b31], T31 = this._composition.drawVectorData(this._passParameters, w33, n103, I29, g50, t89, u58, this.tileSize, T31)) : x12(t89) ? (this._passParameters.opacity = a85[b31], this._composition.drawImageryTileData(this._passParameters, w33, n103, I29, g50, t89), this._hasNearestInterpolation(t89) && (f59 = L.NEAREST)) : this._dataToTexture(t89) && (this._passParameters.texture = t89.sourceLayerInfo.data.texture, this._passParameters.offset = t89.offset, this._passParameters.scale = t89.scale, this._passParameters.opacity = a85[b31], this._composition.drawRasterData(this._passParameters, w33, n103, I29, g50)); H23.length > 0 && H23[H23.length - 1].end === b31; ) {
        const e79 = H23.pop();
        this._passParameters.opacity = e79.opacity, this._passParameters.offset = f8, this._passParameters.scale = 1;
        const t90 = c75 && k27 ? this.backgroundIsGrid ? u13.GridComposite : u13.ColorComposite : u13.Composite;
        this._composition.drawGroup(this._passParameters, t90, n103, e30[e79.blendMode], g50);
      }
      y41++;
    }
    const g49 = e78.renderData, x36 = g49.ensureTexture(n103, () => this._buildTexture(n103, f59));
    this._composition.copyFBOToTexture(x36), this._composition.unbind(), g49.setTextureReference(new e55(x36, t88, V14, d63 ? 1 : h58, 0, 1));
  }
  _hasNearestInterpolation(e78) {
    const t88 = e78.sourceLayerInfo.data;
    return !!t88.source && "nearest" === t88.interpolation;
  }
  _dataToTexture(e78) {
    if (h18(e78)) {
      const t88 = e78.sourceLayerInfo;
      t88.data = this._buildTexture(t88.data), e78.tile.setMemoryDirty();
    }
    return g11(e78);
  }
  setBackground(e78) {
    this._backgroundColor !== e78 && (this._backgroundColor = e78, this._backgroundDirty = true);
  }
  _buildTexture(e78, t88 = L.LINEAR_MIPMAP_LINEAR) {
    if (null == e78)
      return null;
    const r79 = new e23();
    r79.wrapMode = D2.CLAMP_TO_EDGE, r79.samplingMode = t88, r79.maxAnisotropy = this._maxAnisotropy, r79.preMultiplyAlpha = true, r79.flipped = true, r79.hasMipmap = true;
    const s84 = this._rctx;
    let o77;
    if ("number" == typeof e78)
      r79.width = r79.height = e78, o77 = new t67(new T8(s84, r79));
    else if (e78 instanceof A11)
      r79.isOpaque = e78.isOpaque, o77 = new t67(new T8(s84, r79, e78.image)), e78.release();
    else
      try {
        r79.width = e78.width, r79.height = e78.height, o77 = new t67(new T8(s84, r79, e78));
      } catch (i78) {
        o77 = new t67(l17(s84)), console.warn("TileRenderer: failed to execute 'texImage2D', cross-origin image may not be loaded.");
      }
    const a85 = s84.bindTexture(o77.texture, T8.TEXTURE_UNIT_FOR_UPDATES);
    return o77.generateMipmap(), s84.bindTexture(a85, T8.TEXTURE_UNIT_FOR_UPDATES), o77;
  }
  get test() {
    return { backgroundTexture: this._backgroundTexture };
  }
};
function S22(e78, t88) {
  X13.layerIndex = t88, X13.vtlNeighborInfos.clear();
  const o77 = e78.layerInfo[A29.MAP][t88];
  if (o77.data)
    return r14(X13.offset, 0, 0), X13.tile = e78, X13.scale = 1, X13.sourceLod = e78.lij, X13.sourceLayerInfo = o77, A12(X13) && e78.forEachLoadedNeighbor((r79, s84) => {
      if (r79.level !== e78.level)
        return;
      const a86 = r79.layerInfo[A29.MAP][t88];
      if (!L5(a86) || o77.data === a86.data)
        return;
      const i78 = X13.vtlNeighborInfos.pushNew();
      i78.offset = W15[s84], i78.sourceLod = r79.lij, i78.sourceLayerInfo = a86;
    }), X13;
  const a85 = o77.upsampleInfo;
  if (a85) {
    const e79 = a85.tile.layerInfo[A29.MAP][t88];
    return X13.tile = a85.tile, a14(X13.offset, a85.offset), X13.scale = a85.scale, X13.sourceLod = a85.tile.lij, X13.sourceLayerInfo = e79, X13;
  }
  return null;
}
function U22(e78) {
  return e78.get("uid");
}
function B17(e78) {
  let t88 = "normal" !== e78.blendMode;
  return a12(e78.parent) && (t88 = B17(e78.parent) || t88), t88;
}
function G18(e78, t88) {
  a12(e78.parent) && G18(e78.parent, t88);
  const r79 = U22(e78);
  if (null != r79 && "" !== r79) {
    const s84 = z20.get(r79);
    s84 ? s84.start = t88 : z20.set(r79, new N16(t88, t88, e78.blendMode, e78.opacity));
  }
}
var F24 = new Array();
var q18 = new Array();
var v36 = new Array();
var z20 = /* @__PURE__ */ new Map();
var H23 = new Array();
var X13 = new s68();
var V14 = { offset: [0, 0], scale: 1 };
var W15 = new Array();
W15[S9.NORTH] = [0, -1], W15[S9.NORTH_EAST] = [-1, -1], W15[S9.EAST] = [-1, 0], W15[S9.SOUTH_EAST] = [-1, 1], W15[S9.SOUTH] = [0, 1], W15[S9.SOUTH_WEST] = [1, 1], W15[S9.WEST] = [1, 0], W15[S9.NORTH_WEST] = [1, -1];

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentIntersectionData.js
var s69 = 200;
var o63 = 40;
var a66 = 0.8;
var c58 = 10;
var h43 = 1e-6;
function f46(t88, e78, i78) {
  const n103 = e78, r79 = i78;
  let s84 = 0, o77 = 1 / 0;
  for (let a85 = 0; a85 < 3; ++a85) {
    {
      const e79 = t88[a85];
      if (n103[a85] < e79) {
        if (r79[a85] <= h43)
          return false;
        const t89 = (e79 - n103[a85]) / r79[a85];
        s84 = Math.max(s84, t89);
      } else if (r79[a85] <= -h43) {
        const t89 = (e79 - n103[a85]) / r79[a85];
        o77 = Math.min(o77, t89);
      }
      if (s84 > o77)
        return false;
    }
    {
      const e79 = t88[a85 + 3];
      if (n103[a85] > e79) {
        if (r79[a85] >= -h43)
          return false;
        const t89 = (e79 - n103[a85]) / r79[a85];
        s84 = Math.max(s84, t89);
      } else if (r79[a85] >= h43) {
        const t89 = (e79 - n103[a85]) / r79[a85];
        o77 = Math.min(o77, t89);
      }
      if (s84 > o77)
        return false;
    }
  }
  return true;
}
var l60 = class {
  constructor(t88, e78, i78, n103, r79) {
    this.aabb = t88, this.axis = e78, this.d = i78, this.midStartIndex = n103, this.rightStartIndex = r79;
  }
};
var d50 = class _d {
  constructor(i78, n103, r79, s84) {
    this.globalTriangleVertexIndices = i78, this.firstTriangleIndex = n103, this.positionAttribute = s84, this._rayDirection = n7(), this.bspNodeTree = new Array();
    const h58 = r79 - n103, f59 = h58 <= I25 ? new Uint16Array(h58) : new Uint32Array(h58);
    this.indices = f59;
    for (let t88 = 0; t88 < h58; ++t88)
      f59[t88] = t88;
    {
      const e78 = b24(i78, n103, r79, s84.data, s84.stride), d63 = i3(Math.log2(h58 / o63), 2, c58), u58 = (t88, i79, n104) => {
        const r80 = y33(f59, e78, t88, i79), s85 = i79 - t88;
        if (s85 <= o63) {
          const e79 = new l60(r80, void 0, 0, t88, i79);
          return this.bspNodeTree.push(e79), e79;
        }
        const { axis: c75, midValue: h59 } = N17(r80), m55 = x30(f59, e78, t88, i79, c75, h59), g49 = (t89, e79) => {
          if (n104 > d63)
            return;
          const i80 = e79 - t89;
          return i80 < o63 || i80 >= a66 * s85 ? void 0 : u58(t89, e79, n104 + 1);
        }, b31 = new l60(r80, c75, h59, m55.next, m55.mid);
        return this.bspNodeTree.push(b31), b31.leftNode = g49(t88, m55.next), b31.rightNode = g49(m55.mid, i79), b31;
      };
      u58(0, h58, 0), this.triangleVertexIndices = p55(f59, i78, n103, r79);
    }
  }
  intersectRayTriangleRange(t88, e78) {
    {
      if (t88 >= e78)
        return;
      const i78 = this.triangleVertexIndices, n103 = this.positionAttribute.data, s84 = this.positionAttribute.stride, o77 = this._rayOrigin, a85 = o77[0], c75 = o77[1], h58 = o77[2], f59 = this._rayDirection, l75 = f59[0], d63 = f59[1], m55 = f59[2];
      for (let g49 = t88, x36 = 3 * t88; g49 < e78; ++g49) {
        let t89 = i78[x36++] * s84;
        const e79 = n103[t89++], o78 = n103[t89++], f60 = n103[t89];
        t89 = i78[x36++] * s84;
        const y41 = n103[t89++], N21 = n103[t89++], b31 = n103[t89];
        t89 = i78[x36++] * s84;
        const p70 = y41 - e79, I29 = N21 - o78, T31 = b31 - f60, M26 = n103[t89++] - e79, R25 = n103[t89++] - o78, S27 = n103[t89] - f60, A39 = d63 * S27 - R25 * m55, _42 = m55 * M26 - S27 * l75, w33 = l75 * R25 - M26 * d63, V17 = p70 * A39 + I29 * _42 + T31 * w33;
        if (Math.abs(V17) <= Number.EPSILON)
          continue;
        const U24 = a85 - e79, B21 = c75 - o78, v44 = h58 - f60, P29 = U24 * A39 + B21 * _42 + v44 * w33;
        if (V17 > 0) {
          if (P29 < 0 || P29 > V17)
            continue;
        } else if (P29 > 0 || P29 < V17)
          continue;
        const j29 = B21 * T31 - I29 * v44, D21 = v44 * p70 - T31 * U24, F30 = U24 * I29 - p70 * B21, O29 = l75 * j29 + d63 * D21 + m55 * F30;
        if (V17 > 0) {
          if (O29 < 0 || P29 + O29 > V17)
            continue;
        } else if (O29 > 0 || P29 + O29 < V17)
          continue;
        const k27 = (M26 * j29 + R25 * D21 + S27 * F30) / V17;
        if (k27 >= 0) {
          const t90 = this.indices[g49] + this.firstTriangleIndex, e80 = v8(p70, I29, T31, M26, R25, S27, u44);
          this._callback(k27, e80, t90, false);
        }
      }
    }
    _d.numFacesTested += e78 - t88;
  }
  intersectRay(t88, e78) {
    _d.numFacesTested = 0;
    const n103 = r5(t88.r0[0], t88.r0[1], t88.r0[2]), r79 = r5(t88.r1[0], t88.r1[1], t88.r1[2]), s84 = r79[0] - n103[0], o77 = r79[1] - n103[1], a85 = r79[2] - n103[2];
    if (s84 * s84 + o77 * o77 + a85 * a85 < h43)
      return;
    this._rayOrigin = n103;
    const c75 = this._rayDirection;
    c75[0] = s84, c75[1] = o77, c75[2] = a85;
    const f59 = this.triangleVertexIndices.length / 3;
    this._callback = e78;
    const l75 = this.bspNodeTree[0];
    this.intersectRayBSP(l75, 0, f59);
  }
  intersectRayBSP(t88, e78, i78) {
    const n103 = this._rayOrigin, r79 = this._rayDirection;
    if (!f46(t88.aabb, n103, r79))
      return;
    const s84 = t88.axis, o77 = t88.d;
    if (n103[s84] < o77 || r79[s84] < 0) {
      const i79 = e78, n104 = t88.midStartIndex;
      if (i79 < n104) {
        const e79 = t88.leftNode;
        void 0 !== e79 ? this.intersectRayBSP(e79, i79, n104) : this.intersectRayTriangleRange(i79, n104);
      }
    }
    if (this.intersectRayTriangleRange(t88.midStartIndex, t88.rightStartIndex), n103[s84] > o77 || r79[s84] > 0) {
      const e79 = t88.rightStartIndex, n104 = i78;
      if (e79 < n104) {
        const i79 = t88.rightNode;
        void 0 !== i79 ? this.intersectRayBSP(i79, e79, n104) : this.intersectRayTriangleRange(e79, n104);
      }
    }
  }
  get estimatedMemoryUsage() {
    return this.triangleVertexIndices.byteLength + this.indices.byteLength;
  }
};
d50.numFacesTested = 0;
var u44 = n7();
var m40 = [1 / 0, 1 / 0, 1 / 0];
var g33 = [-1 / 0, -1 / 0, -1 / 0];
function x30(t88, e78, i78, n103, r79, s84) {
  let o77 = i78, a85 = n103;
  for (; o77 < a85; ) {
    const i79 = t88[o77];
    e78[6 * i79 + r79 + 3] <= s84 ? ++o77 : (--a85, t88[o77] = t88[a85], t88[a85] = i79);
  }
  let c75 = o77;
  for (a85 = n103; c75 < a85; ) {
    const i79 = t88[a85 - 1];
    e78[6 * i79 + r79] >= s84 ? --a85 : (t88[a85 - 1] = t88[c75], t88[c75] = i79, ++c75);
  }
  return { next: o77, mid: c75 };
}
function y33(t88, e78, i78, r79) {
  if (r79 <= i78)
    return a11(NaN, NaN, NaN, NaN, NaN, NaN);
  {
    const n103 = 6 * t88[i78];
    for (let t89 = 0; t89 < 3; ++t89)
      m40[t89] = e78[n103 + 0 + t89], g33[t89] = e78[n103 + 3 + t89];
  }
  for (let n103 = i78 + 1; n103 < r79; ++n103) {
    const i79 = 6 * t88[n103];
    for (let t89 = 0; t89 < 3; ++t89)
      m40[t89] = Math.min(m40[t89], e78[i79 + 0 + t89]), g33[t89] = Math.max(g33[t89], e78[i79 + 3 + t89]);
  }
  return a11(m40[0], m40[1], m40[2], g33[0], g33[1], g33[2]);
}
function N17(t88) {
  const e78 = t88[3] - t88[0], i78 = t88[4] - t88[1], n103 = t88[5] - t88[2], r79 = e78 > i78 ? e78 > n103 ? 0 : i78 > n103 ? 1 : 2 : i78 > n103 ? 1 : n103 > e78 ? 2 : 0;
  return { axis: r79, midValue: (t88[r79] + t88[r79 + 3]) / 2 };
}
function b24(t88, e78, i78, n103, r79) {
  const s84 = i78 - e78, o77 = new Float32Array(6 * s84);
  for (let a85 = 0; a85 < s84; ++a85) {
    const i79 = 3 * (a85 + e78), s85 = t88[i79] * r79, c75 = t88[i79 + 1] * r79, h58 = t88[i79 + 2] * r79;
    for (let t89 = 0; t89 < 3; ++t89) {
      const e79 = n103[s85 + t89], i80 = n103[c75 + t89], r80 = n103[h58 + t89];
      o77[6 * a85 + t89] = Math.min(e79, i80, r80), o77[6 * a85 + 3 + t89] = Math.max(e79, i80, r80);
    }
  }
  return o77;
}
function p55(t88, e78, i78, n103) {
  const r79 = n103 - i78;
  let s84 = 0;
  for (let a85 = i78; a85 < n103; ++a85)
    for (let t89 = 0; t89 < 3; ++t89)
      s84 = Math.max(e78[3 * a85 + t89], s84);
  const o77 = s84 <= I25 ? new Uint16Array(3 * r79) : new Uint32Array(3 * r79);
  for (let a85 = 0; a85 < r79; ++a85) {
    const n104 = 3 * (t88[a85] + i78);
    for (let t89 = 0; t89 < 3; ++t89) {
      const i79 = e78[n104 + t89];
      o77[3 * a85 + t89] = i79;
    }
  }
  return o77;
}
var I25 = 65535;

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/TerrainTechniqueConfiguration.js
var d51 = class extends s30 {
  constructor() {
    super(...arguments), this.output = h13.Color, this.overlayMode = y11.Disabled, this.tileBlendInput = o40.LayerOnly, this.spherical = false, this.doublePrecisionRequiresObfuscation = false, this.receiveShadows = false, this.hasSlicePlane = false, this.backfaceCullingEnabled = false, this.textureFadingEnabled = false, this.renderOccluded = false, this.hasScreenSpaceReflections = false, this.hasCloudsReflections = false, this.invisible = false, this.tileBorders = false, this.visualizeNormals = false, this.screenSizePerspective = false, this.receiveAmbientOcclusion = false, this.pbrMode = c14.Terrain;
  }
};
e([r29({ count: h13.COUNT })], d51.prototype, "output", void 0), e([r29({ count: y11.COUNT })], d51.prototype, "overlayMode", void 0), e([r29({ count: o40.COUNT })], d51.prototype, "tileBlendInput", void 0), e([r29()], d51.prototype, "spherical", void 0), e([r29()], d51.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r29()], d51.prototype, "receiveShadows", void 0), e([r29()], d51.prototype, "hasSlicePlane", void 0), e([r29()], d51.prototype, "backfaceCullingEnabled", void 0), e([r29()], d51.prototype, "textureFadingEnabled", void 0), e([r29()], d51.prototype, "renderOccluded", void 0), e([r29()], d51.prototype, "hasScreenSpaceReflections", void 0), e([r29()], d51.prototype, "hasCloudsReflections", void 0), e([r29()], d51.prototype, "invisible", void 0), e([r29()], d51.prototype, "tileBorders", void 0), e([r29()], d51.prototype, "visualizeNormals", void 0), e([r29()], d51.prototype, "screenSizePerspective", void 0), e([r29()], d51.prototype, "receiveAmbientOcclusion", void 0), e([r29({ count: c14.COUNT })], d51.prototype, "pbrMode", void 0), e([r29({ constValue: a24.Compressed })], d51.prototype, "normalType", void 0), e([r29({ constValue: d11.Compressed })], d51.prototype, "textureCoordinateType", void 0), e([r29({ constValue: false })], d51.prototype, "highStepCount", void 0), e([r29({ constValue: false })], d51.prototype, "useCustomDTRExponentForWater", void 0), e([r29({ constValue: false })], d51.prototype, "useFillLights", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TerrainRenderer.js
var re6 = 7;
var ie7 = 10;
var se6 = i8();
var ne6;
!function(e78) {
  e78[e78.Opaque = 0] = "Opaque", e78[e78.Semitransparent = 1] = "Semitransparent", e78[e78.TransparentWithDraped = 2] = "TransparentWithDraped", e78[e78.Empty = 3] = "Empty";
}(ne6 || (ne6 = {}));
var oe6 = class extends m {
  get _isGlobal() {
    return this._stage.viewingMode === l14.Global;
  }
  constructor(e78) {
    super(e78), this.type = i27.TERRAIN, this.isGround = true, this._tileSize = 256, this._techniqueConfiguration = new d51(), this._passParameters = new _12(), this._rctx = null, this._renderDataPool = new e4(G15), this._patchGroups = /* @__PURE__ */ new Map(), this._patchGroupsDirty = true, this._patchSortingDirty = true, this._tileIterator = new n44(), this._highestVisibleLODTile = null, this._visible = true, this._transparencyState = ne6.Opaque, this._castShadows = true, this._emptyTex = null, this._tileRenderer = null, this._stencilEnabledLayerExtents = new Array(), this._numTilesRendered = 0, this._numTilesCulled = 0, this._numOriginsRendered = 0, this.needsHighlight = false, this.renderOccludedFlags = o21.Occlude;
  }
  initialize() {
    const e78 = [E8.OPAQUE_TERRAIN, E8.TRANSPARENT_TERRAIN, E8.OCCLUDED_TERRAIN];
    this._stage.addRenderPlugin(e78, this);
  }
  destroy() {
    this._stage.removeRenderPlugin(this), m39();
  }
  get canRender() {
    return this._visible && !!this._rootTiles && !this.renderingDisabled;
  }
  set renderingDisabled(e78) {
    this._set("renderingDisabled", !!e78), this.setDirty();
  }
  set transparency(e78) {
    this._transparencyState !== e78 && (this._techniqueConfiguration.invisible = e78 === ne6.TransparentWithDraped || e78 === ne6.Empty, this._transparencyState = e78, this.setNeedsRender());
  }
  get transparency() {
    return this._transparencyState;
  }
  get needsLinearDepth() {
    return this._overlayRenderer.hasWater;
  }
  get renderPatchBorders() {
    return !!this._techniqueConfiguration.tileBorders;
  }
  set renderPatchBorders(e78) {
    this._techniqueConfiguration.tileBorders !== e78 && (this._techniqueConfiguration.tileBorders = e78, this.setNeedsRender(), this.notifyChange("renderPatchBorders"));
  }
  get visualizeNormals() {
    return !!this._techniqueConfiguration.visualizeNormals;
  }
  set visualizeNormals(e78) {
    this._techniqueConfiguration.visualizeNormals !== e78 && (this._techniqueConfiguration.visualizeNormals = e78, this.setNeedsRender(), this.notifyChange("visualizeNormals"));
  }
  get cullBackFaces() {
    return this._techniqueConfiguration.backfaceCullingEnabled;
  }
  set cullBackFaces(e78) {
    this._techniqueConfiguration.backfaceCullingEnabled !== e78 && (this._techniqueConfiguration.backfaceCullingEnabled = e78, this.notifyChange("cullBackFaces"), this.setNeedsRender());
  }
  set renderOrder(e78) {
    this._set("renderOrder", e78), this._setSortingDirty();
  }
  get layerUid() {
    return L4;
  }
  get slicePlaneEnabled() {
    return this._techniqueConfiguration.hasSlicePlane;
  }
  set slicePlaneEnabled(e78) {
    this._techniqueConfiguration.hasSlicePlane !== e78 && (this._techniqueConfiguration.hasSlicePlane = e78, this.setNeedsRender());
  }
  set textureFadingEnabled(e78) {
    this._techniqueConfiguration.textureFadingEnabled !== e78 && (this._techniqueConfiguration.textureFadingEnabled = e78, this.setNeedsRender());
  }
  set pbrMode(e78) {
    this._techniqueConfiguration.pbrMode !== e78 && (this._techniqueConfiguration.pbrMode = e78, this.setNeedsRender());
  }
  setDebugScreenSizePerspective(e78) {
    this._techniqueConfiguration.screenSizePerspective !== e78 && (this._techniqueConfiguration.screenSizePerspective = e78, this.setNeedsRender());
  }
  setRootTiles(e78) {
    this._rootTiles = e78, this.setDirty();
  }
  setNeedsHighlight(e78) {
    this.needsHighlight = e78, this.setNeedsRender();
  }
  setRenderOccludedOverlay(e78) {
    this.renderOccludedFlags = e78 ? he : o21.Occlude, this.setNeedsRender();
  }
  setStencilEnabledLayerExtents(e78) {
    this._stencilEnabledLayerExtents = e78, this._setSortingDirty();
  }
  setTileSize(e78) {
    this._tileSize = e78, null != this._tileRenderer && (this._tileRenderer.tileSize = e78), this.setDirty();
  }
  _prepareTileForLoading(e78) {
    e78.renderData || (e78.renderData = this._renderDataPool.acquire(), e78.renderData.init(e78), e78.renderData.localOrigin = this._getLocalOriginOfTile(e78));
  }
  loadTile(e78) {
    this._prepareTileForLoading(e78), this.updateTileGeometryState(e78), this.updateTileTexture(e78, E33.TEXTURE_FADING);
  }
  updateTileTexture(e78, t88) {
    null != this._tileRenderer && (this._tileRenderer.updateTileTexture(e78, t88 === E33.TEXTURE_FADING ? r28.FADING : r28.UNFADED), this.setNeedsRender(), e78.resetPendingUpdate(t88));
  }
  updateTileGeometryState(e78) {
    for (const r79 of e78.layerInfo[A29.ELEVATION])
      r79.pendingUpdates &= ~E33.GEOMETRY;
    e78.resetPendingUpdate(E33.GEOMETRY);
    const t88 = e78.renderData.updateGeometryState();
    return t88 && this.setDirty(), t88;
  }
  updateGeometryIfNeeded(e78) {
    e78.isLoaded && e78.renderData.updateGeometryIfNeeded(this._rctx);
  }
  unloadTile(e78) {
    const t88 = e78.renderData;
    t88 && (t88.releaseGeometry(), this._renderDataPool.release(t88), t88.clear(), e78.renderData = null, e78.setMemoryDirty(), this.setDirty());
  }
  _getLocalOriginOfTile(e78) {
    const t88 = ie7 - re6, r79 = Math.max(0, Math.floor((e78.level - t88) / re6) * re6);
    if (this._isGlobal && 0 === r79)
      return f4;
    for (; e78.parent && e78.level > r79; )
      e78 = e78.parent;
    return e78.centerAtSeaLevel;
  }
  setVisibility(e78) {
    this._visible = e78, this.setDirty();
  }
  getStats() {
    return { numTilesRendered: this._numTilesRendered, numTilesCulled: this._numTilesCulled, numOriginsRendered: this._numOriginsRendered };
  }
  set wireframe(e78) {
    this._get("wireframe") !== e78 && (this._set("wireframe", e78), this.setNeedsRender());
  }
  setDirty(e78 = O5.UPDATE) {
    this._patchGroupsDirty = true, this._context.requestRender(e78);
  }
  _setSortingDirty(e78 = O5.UPDATE) {
    this._patchSortingDirty = true, this._context.requestRender(e78);
  }
  setNeedsRender(e78 = O5.UPDATE) {
    this._context.requestRender(e78);
  }
  initializeRenderContext(e78) {
    this._context = e78, this._rctx = e78.renderContext.rctx, this._techniqueRepository = e78.techniqueRepository, this._tileRenderer = new C25(this._rctx, this._tileSize, this._techniqueRepository), this.updateTileBackground(), this._emptyTex = l17(this._rctx);
  }
  uninitializeRenderContext() {
    this._emptyTex = t(this._emptyTex), this._tileRenderer = t(this._tileRenderer);
  }
  intersect(e78, t88, r79, i78) {
    if (!this._rootTiles || e78.options.selectOpaqueTerrainOnly && e78.options.selectionMode && this.transparency !== ne6.Opaque)
      return;
    const s84 = ae6, n103 = le6;
    e8(s84, i78, r79), o4(n103, 1 / s84[0], 1 / s84[1], 1 / s84[2]);
    const o77 = e78.results.min, u58 = e78.results.max, d63 = e78.results.ground, p70 = e78.options.store === t33.MIN, f59 = !!e78.results.ground.target, _42 = d12(e78.verticalOffset), b31 = e78.tolerance;
    let y41, T31 = p70 && null != o77.dist ? o77.dist : 1 / 0;
    const R25 = (h58) => {
      const f60 = h58.renderData;
      if (!(f60 == null ? void 0 : f60.vao))
        return;
      const R26 = f60.geometry;
      O2(se6, R26.boundingBox);
      const O30 = f60.localOrigin;
      null != _42 && (_42.localOrigin = O30, _42.applyToAabb(se6));
      const x36 = se6;
      if (he6[0] = r79[0] - O30[0], he6[1] = r79[1] - O30[1], he6[2] = r79[2] - O30[2], !O6(x36, he6, n103, b31, T31))
        return;
      const C30 = (e79, t89, r80) => {
        e79.set(this.type, h58, t89, r80, o12), T31 = p70 && null != o77.dist ? o77.dist : 1 / 0;
      }, v44 = (n104, a85) => {
        if (null != a85 && n104 >= 0 && (e78.options.backfacesTerrain || P3(a85, s84) < 0) && (e78.options.invisibleTerrain || !e78.options.selectionMode || null == t88 || t88(r79, i78, n104))) {
          if ((null == d63.dist || n104 < d63.dist) && C30(d63, n104, a85), e78.options.isFiltered)
            return;
          e78.options.store === t33.ALL && (null == y41 ? (y41 = M8(e78.ray), C30(y41, n104, a85), e78.results.all.push(y41)) : n104 < y41.dist && C30(y41, n104, a85)), (null == o77.dist || n104 < o77.dist) && C30(o77, n104, a85), e78.options.store !== t33.MIN && (null == u58.dist || n104 > u58.dist) && C30(u58, n104, a85);
        }
      }, D21 = ce7;
      e8(D21, i78, O30);
      const P29 = R26.indices, S27 = R26.vertexAttributes, E43 = S27.getField(O4.POSITION, i11), q21 = new s23(E43.typedBuffer, 3, false, S27.stride / 4), A39 = R26.indexCount / 3;
      if (!_42 && A39 > s69) {
        const e79 = h58.renderData;
        null == e79.intersectionData && (e79.intersectionData = new d50(P29, 0, A39, q21)), e79.intersectionData.intersectRay({ r0: he6, r1: D21 }, v44);
      } else
        g8(he6, D21, 0, A39, P29, q21, null, _42, v44);
    }, O29 = this._rootTiles;
    if (null != O29) {
      (() => {
        const t89 = this._tileIterator;
        t89.reset(O29);
        const i79 = e78.options.invisibleTerrain;
        for (let e79 = t89.next(); e79; e79 = t89.next())
          !(e79.visible || i79 && e79.intersectsClippingArea) || null == _42 && !e79.intersectsRay(r79, s84, b31, T31) || f59 && this._useStencilForTile(e79) ? t89.skipSubtree() : R25(e79);
      })();
    }
  }
  processScaleRangeQueries(e78, t88) {
    var _a;
    if (!t88.done)
      for (this._updatePatchGroups(); e78.updating && !t88.done; ) {
        e78.prepare();
        for (const t89 of this._patchGroups.values())
          for (const r79 of t89)
            null != ((_a = r79.renderData) == null ? void 0 : _a.textureReference) && e78.queriesForTile(r79);
        e78.process(), t88.madeProgress();
      }
  }
  prepareTechnique(e78) {
    if (e78.bindParameters.slot === E8.OCCLUDED_TERRAIN) {
      if (0 == (e78.renderOccludedMask & he))
        return null;
    } else {
      const t88 = this.transparency === ne6.Opaque ? E8.OPAQUE_TERRAIN : E8.TRANSPARENT_TERRAIN;
      if (e78.bindParameters.slot !== t88)
        return null;
    }
    switch (e78.output) {
      case h13.Color:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.hasScreenSpaceReflections = e78.bindParameters.ssr.enabled, this._techniqueConfiguration.hasCloudsReflections = null != e78.bindParameters.cloudsFade.data, this._techniqueConfiguration.receiveShadows = e78.bindParameters.shadowMap.ready, this._techniqueConfiguration.receiveAmbientOcclusion = e78.bindParameters.ssaoHelper.active, this._techniqueConfiguration.overlayMode = this._overlayRenderer.isEmpty ? y11.Disabled : this._overlayRenderer.hasWater ? y11.EnabledWithWater : y11.Enabled, this._updateTechnique(h13.Color, e78.bindParameters.slot === E8.OCCLUDED_TERRAIN));
      case h13.Shadow:
      case h13.ShadowExcludeHighlight:
        return this._castShadows && 1 === e78.bindParameters.lighting.globalFactor ? (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h13.Shadow, false)) : null;
      case h13.Depth:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h13.Depth, false));
      case h13.Normal:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h13.Normal, false));
      case h13.ObjectAndLayerIdColor:
        return this.transparency === ne6.Empty ? null : this._updateTechnique(h13.ObjectAndLayerIdColor, false);
      case h13.Highlight:
        return this.transparency !== ne6.Empty && this.needsHighlight ? (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h13.Highlight, false)) : null;
    }
    return null;
  }
  render(e78, t88) {
    const r79 = 1 === e78.bindParameters.lighting.globalFactor;
    switch (this._updatePatchGroups(), t88.useStencil = false, e78.output) {
      case h13.Color: {
        const r80 = e78.bindParameters.slot === E8.OCCLUDED_TERRAIN ? n32.Occluded : n32.ColorAndWater;
        this.transparency === ne6.Opaque ? this._renderMaterialPass(e78, t88, r80) : e78.offscreenRenderingHelper.renderToTargets(() => this._renderMaterialPass(e78, t88, r80), e78.offscreenRenderingHelper.tmpColor, e78.offscreenRenderingHelper.mainDepth, [0, 0, 0, 0]);
        break;
      }
      case h13.Depth:
      case h13.Normal:
        this._renderAuxiliaryPass(e78, t88, n32.ColorAndWater);
        break;
      case h13.Highlight:
        this.needsHighlight && this._renderAuxiliaryPass(e78, t88, n32.Highlight);
        break;
      case h13.Shadow:
      case h13.ShadowExcludeHighlight:
        this._castShadows && r79 && this._renderAuxiliaryPass(e78, t88, n32.None);
        break;
      case h13.ObjectAndLayerIdColor:
        this._renderAuxiliaryPass(e78, t88, n32.ObjectAndLayerIdColor);
    }
  }
  _renderMaterialPass(e78, t88, r79) {
    const { rctx: i78 } = e78;
    this._passParameters.overlaySource = r79, i78.bindTechnique(t88, this._passParameters, e78.bindParameters), this._numTilesRendered = 0, this._numTilesCulled = 0, this._numOriginsRendered = 0, this._renderPatchGroups(e78, t88, r79);
  }
  _renderAuxiliaryPass(e78, t88, r79) {
    const i78 = e78.rctx;
    this._passParameters.overlaySource = r79, i78.bindTechnique(t88, this._passParameters, e78.bindParameters), this._renderPatchGroupsAuxiliary(e78, t88, r79);
  }
  updateTileBackground(e78 = null) {
    if (null == this._tileRenderer)
      return;
    const r79 = this._tileRenderer;
    let i78 = null;
    if (null != e78) {
      const r80 = h7.toUnitRGBA(e78);
      i78 = r5(r80[0] || 0, r80[1] || 0, r80[2] || 0);
    }
    r79.setBackground(i78), this._allTiles.forAll((e79) => r79.updateTileTexture(e79, r28.FADING)), this._techniqueConfiguration.tileBlendInput = r79.backgroundIsGrid ? o40.GridComposite : null != r79.backgroundColor ? o40.ColorComposite : o40.LayerOnly, this.setNeedsRender();
  }
  _updatePatchGroups() {
    if (this._patchGroupsDirty && (this._highestVisibleLODTile = null, this._rebuildPatchGroups(), this._patchGroupsDirty = false, this._patchSortingDirty = true), this._patchSortingDirty && this.renderOrder !== O9.NONE) {
      const e78 = Array.from(this._patchGroups.values()), t88 = this._stencilEnabledLayerExtents;
      for (const r79 of e78)
        u11(this.renderOrder, r79, t88);
      e78.sort((e79, t89) => h19(e79[0], t89[0], this.renderOrder)), this._patchGroups = new Map(e78.map((e79) => [e79[0].renderData.localOrigin, e79])), this._patchSortingDirty = false;
    }
  }
  _rebuildPatchGroups() {
    var _a;
    const e78 = this._rootTiles;
    if (null != e78) {
      (_a = e78[0]) == null ? void 0 : _a.surface.checkAllTilesWaterproofness(), this._patchGroups.clear();
      for (const t88 of e78)
        this._rebuildPatchGroupsForRootTile(t88);
    }
  }
  _rebuildPatchGroupsForRootTile(e78) {
    const t88 = this._tileIterator;
    for (t88.resetOne(e78); !t88.done; ) {
      const e79 = t88.next(), r79 = e79.renderData;
      if (!r79) {
        this._numTilesCulled++;
        continue;
      }
      if (!e79.visible) {
        this._numTilesCulled++, t88.skipSubtree();
        continue;
      }
      const i78 = r79.localOrigin;
      let s84 = this._patchGroups.get(i78);
      s84 || (s84 = new Array(), this._patchGroups.set(i78, s84)), s84.push(e79), (!this._highestVisibleLODTile || e79.elevationLevel > this._highestVisibleLODTile.elevationLevel) && (this._highestVisibleLODTile = e79), t88.skipSubtree();
    }
  }
  _useStencilForTile(e78) {
    for (const t88 of this._stencilEnabledLayerExtents)
      if (e78.intersectsExtent(t88))
        return true;
    return false;
  }
  _renderPatchGroupsAuxiliary(e78, t88, r79) {
    const i78 = this._stencilEnabledLayerExtents.length > 0;
    this._patchGroups.forEach((s84) => {
      const n103 = s84[0].renderData.localOrigin;
      t88.program.bindDraw(new i28(n103), e78.bindParameters, this._passParameters);
      for (let o77 = 0; o77 < s84.length; o77++)
        this._renderPatch(e78, t88, s84[o77], E5.TRIANGLES, i78, r79);
    }), e78.rctx.bindVAO(null);
  }
  _renderPatchGroups(e78, t88, r79) {
    const i78 = e78.bindParameters.camera, s84 = t88.program;
    if (this._techniqueConfiguration.screenSizePerspective && this.pointsOfInterest) {
      const e79 = r26(this._stage.viewingMode, this._ellipsoidRadius), t89 = this.pointsOfInterest.centerOnSurfaceFrequent.distance;
      e79.update({ distance: t89, fovY: i78.fovY });
    }
    const n103 = this._stencilEnabledLayerExtents.length > 0, o77 = r79 === n32.Occluded;
    o77 && (s84.bindTexture("tex", this._emptyTex), s84.setUniform3fv("textureOpacities", f4), s84.setUniform4fv("texOffsetAndScale", l9));
    const a85 = null != this._tileRenderer && null != this._tileRenderer.backgroundColor ? this._tileRenderer.backgroundColor : f4;
    this._techniqueConfiguration.tileBlendInput === o40.ColorComposite && s84.setUniform3fv("backgroundColor", a85);
    const l75 = this.wireframe ? E5.LINES : E5.TRIANGLES;
    this._techniqueConfiguration.textureFadingEnabled && s84.bindTexture("texNext", this._emptyTex);
    const h58 = this._patchGroups;
    for (const c75 of h58.values()) {
      const i79 = c75[0].renderData.localOrigin;
      t88.program.bindDraw(new i28(i79), e78.bindParameters, this._passParameters), this._numOriginsRendered++;
      for (const a86 of c75) {
        const i80 = a86.renderData, h59 = i80.textureReference;
        if (null != h59) {
          if (!o77) {
            s84.setUniform4fv("texOffsetAndScale", h59.offsetAndScale), s84.bindTexture("tex", h59.texture.texture);
            const e79 = i80.textureFadeFactor, t89 = e79 < 1 ? i80.nextTextureReference : null;
            this._techniqueConfiguration.textureFadingEnabled && null != t89 && e79 < 1 ? (s84.setUniform1f("fadeFactor", e79), s84.setUniform4fv("nextTexOffsetAndScale", t89.offsetAndScale), s84.setUniform3fv("nextTexOpacities", t89.opacities), s84.bindTexture("texNext", t89.texture.texture)) : s84.setUniform1f("fadeFactor", 1), i80.textureIsFading && this.setNeedsRender(), s84.setUniform3fv("textureOpacities", h59.opacities);
          }
          this._renderPatch(e78, t88, a86, l75, n103, r79), a86.renderOrder = this._numTilesRendered, this._numTilesRendered++;
        }
      }
    }
    e78.rctx.bindVAO(null);
  }
  _renderPatch(e78, t88, r79, i78, s84, n103) {
    const o77 = r79.renderData, a85 = o77.vao, l75 = a85.indexBuffer;
    if (null == l75)
      return void (T11 && console.error("Rendered tile with no indices: ", r79.lij, " : ", o77));
    const h58 = t88.program;
    n103 === n32.None || this._overlayRenderer.isEmpty || this._bindOverlayPatchData(h58, o77.overlay), s84 && (t88.useStencil = this._useStencilForTile(r79), t88.bindPipelineState(e78.rctx, e78.bindParameters.slot));
    const c75 = o77.geometry.indexCount;
    e78.rctx.bindVAO(a85), h58.assertCompatibleVertexAttributeLocations(a85), e78.rctx.drawElements(i78, c75, l75.indexType, 0);
  }
  _bindOverlayPatchData(e78, t88) {
    e78.setUniform4fv("overlayTexOffset", t88.offsets), e78.setUniform4fv("overlayTexScale", t88.scales);
  }
  _updateTechnique(e78, t88) {
    return this._techniqueConfiguration.output = e78, this._techniqueConfiguration.renderOccluded = t88, this._shaderTechnique = this._techniqueRepository.releaseAndAcquire(g32, this._techniqueConfiguration, this._shaderTechnique), this._shaderTechnique;
  }
  get test() {
    return { tileRenderer: this._tileRenderer };
  }
};
e([y({ constructOnly: true })], oe6.prototype, "_overlayRenderer", void 0), e([y({ constructOnly: true })], oe6.prototype, "_stage", void 0), e([y({ readOnly: true })], oe6.prototype, "_isGlobal", null), e([y({ constructOnly: true })], oe6.prototype, "_allTiles", void 0), e([y({ constructOnly: true })], oe6.prototype, "_ellipsoidRadius", void 0), e([y({ value: false })], oe6.prototype, "renderingDisabled", null), e([y()], oe6.prototype, "renderPatchBorders", null), e([y()], oe6.prototype, "visualizeNormals", null), e([y()], oe6.prototype, "cullBackFaces", null), e([y({ value: O9.FRONT_TO_BACK })], oe6.prototype, "renderOrder", null), e([y()], oe6.prototype, "wireframe", null), oe6 = e([a4("esri.views.3d.terrain.TerrainRenderer")], oe6);
var ae6 = n7();
var le6 = n7();
var he6 = n7();
var ce7 = n7();

// node_modules/@arcgis/core/views/3d/terrain/TerrainSurfacePerformanceInfo.js
var e57 = class {
  constructor() {
    this.numNodes = 0, this.numLeaves = 0, this.numVisible = 0, this.numRendered = 0, this.numSplit = 0, this.numMerged = 0, this.numRenderedPerLevel = new Array(), this.numLoadedPerLevel = new Array();
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TilingSchemeLogic.js
var S23 = class extends m {
  constructor(e78) {
    super(e78), this._handles = new t3();
  }
  initialize() {
    this._handles.add(this.layers.on("change", () => this._update())), this._handles.add(l6(() => this.extentHelper.layerViewsExtent, () => this._setAdHocTilingScheme())), this._update(), this.tilingSchemeLocked || this._setAdHocTilingScheme();
  }
  destroy() {
    this._handles = l(this._handles), this._waitTask = null, this.layers.destroy();
  }
  _update() {
    if (this._waitTask = null, this.tilingSchemeLocked)
      return;
    let e78;
    if (this.layers.some((t88) => !(!s16(t88) || t88.isRejected()) && (!(t88.isFulfilled() && !g34(t88, this.viewSpatialReference, this.viewingMode)) && (e78 = t88, !("vector-tile" === (t88 == null ? void 0 : t88.type) || H6(t88))))), e78)
      if (e78.isResolved()) {
        const t88 = b3(e78, this.viewSpatialReference, this.viewingMode);
        if (null != t88) {
          const e79 = new v11(t88.tileInfo);
          this._lockTilingScheme(e79);
        }
      } else
        this._updateWhen(e78);
  }
  _updateWhen(e78) {
    const t88 = e78.when().catch(() => {
    }).then(() => {
      t88 !== this._waitTask || this.destroyed || this._update();
    });
    this._waitTask = t88;
  }
  _lockTilingScheme(e78) {
    if (this.viewingMode === l14.Global) {
      const t88 = e78.levels.length - 1;
      e78.spatialReference.isWebMercator ? e78 = v11.makeWebMercatorAuxiliarySphere(t88) : ce(e78.spatialReference) && (e78 = v11.makeGCSWithTileSize(e78.spatialReference, e78.pixelSize, t88));
    }
    this.tilingSchemeLocked = true, this.tilingScheme = e78, this.extentHelper.tilingScheme = this.tilingScheme, this._updateTiledLayerExtent(), this._handles.removeAll(), this._handles.add(l6(() => this.extentHelper.tiledLayersExtent, () => this._updateTiledLayerExtent()));
  }
  _updateTiledLayerExtent() {
    this._set("extent", this.extentHelper.tiledLayersExtent);
  }
  _setAdHocTilingScheme() {
    if (this.viewingMode === l14.Global) {
      const e78 = this.extentHelper.viewSpatialReference, t88 = ce(e78) || T2(e78) || P2(e78);
      e78.isWebMercator ? this.tilingScheme = v11.WebMercatorAuxiliarySphere : t88 && (this.tilingScheme = v11.makeGCSWithTileSize(e78, 256)), this._set("extent", this.extentHelper.layerViewsExtent);
    } else {
      const e78 = this.extentHelper.layerViewsExtent;
      null == e78 || H3(e78, this.extent) || (this.tilingScheme = v11.fromExtent(e78, this.extentHelper.viewSpatialReference), this._set("extent", e78));
    }
  }
  get test() {
    return { lockTilingScheme: (e78) => this._lockTilingScheme(e78), done: !this._waitTask };
  }
};
function g34(e78, t88, i78) {
  return null != b3(e78, t88, i78);
}
e([y()], S23.prototype, "tilingScheme", void 0), e([y({ readOnly: true })], S23.prototype, "extent", void 0), e([y({ value: false })], S23.prototype, "tilingSchemeLocked", void 0), e([y({ constructOnly: true })], S23.prototype, "viewSpatialReference", void 0), e([y({ constructOnly: true })], S23.prototype, "layers", void 0), e([y({ constructOnly: true })], S23.prototype, "extentHelper", void 0), e([y({ constructOnly: true })], S23.prototype, "viewingMode", void 0), S23 = e([a4("esri.views.3d.terrain.TilingSchemeLogic")], S23);

// node_modules/@arcgis/core/views/3d/terrain/UpsampleInfo.js
var t72 = class {
  constructor() {
    this.offset = n20(), this.scale = 0, this.tile = null;
  }
  init(s84, t88, i78, e78) {
    this.tile = s84, this.offset[0] = t88, this.offset[1] = i78, this.scale = e78;
  }
  dispose() {
    this.tile = null, this.offset[0] = 0, this.offset[1] = 0, this.scale = 0;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TerrainSurface.js
var nt4 = class extends n9.EventedMixin(m) {
  constructor(e78) {
    var _a, _b;
    super(e78), this._scaleRangeQueries = new l58(), this._iteratorPool = new e4(n44, (e79) => e79.remove = () => this._iteratorPool.release(e79)), this._postorderIterator = new r38(), this._hasPendingUpdates = false, this._pendingUpdates = 0, this._asyncWorkItems = 0, this._allTilesDirty = true, this._allTilesSorted = true, this._visibleCached = false, this._usedMemory = null, this._performanceInfo = new e57(), this._viewChanged = false, this._inFrameTask = false, this._viewChangeUpdateDirty = false, this._eyePosRenderSR = n7(), this._eyePosSurfaceSR = n7(), this._splitLimits = new e54(), this._frustum = I5(), this._viewProjectionMatrix = e17(), this._layerViews = [new Array(), new Array()], this._layerIndexByUid = [/* @__PURE__ */ new Map(), /* @__PURE__ */ new Map()], this._basemapLayerViewHandles = /* @__PURE__ */ new Map(), this._handles = new t3(), this._watchUpdatingTracking = new c8(), this._frameTask = F5, this._allTiles = new l2(), this._upsampleInfoPool = new e4(t72), this._rootTilesExtent = i4(), this.updatingProgress = 0.5, this._maxNumUpdating = 1, this.maxTextureScale = 1.2, this._spatialReference = f2.WebMercator, this.visibleElevationBounds = new s66(1 / 0, -1 / 0), this.rootTileElevationBounds = new s66(1 / 0, -1 / 0), this._updatingRootTiles = false, this._pendingTilesForElevationUpdateEvent = /* @__PURE__ */ new Set(), this._pendingTilesToUpdate = /* @__PURE__ */ new Set(), this.totalGeometryUpdates = 0, this.totalTileUpdates = 0, this.oneBatchPerFrameTask = true, this._layerViewsDirty = false, this.unloadedMemory = 0, this.ignoresMemoryFactor = false, this._isWebMercator = false, this._isWebMercatorOnPlateeCarree = false, this.overlayManager = new le4({ ...e78, surface: this }), this._isGlobal = !((_b = (_a = e78.view) == null ? void 0 : _a.state) == null ? void 0 : _b.isLocal);
  }
  initialize() {
    this._lercDecoder = s25(this.view.resourceController), this._tilePool = this.view.state.isLocal ? new e4(p52) : new e4(D16);
    const e78 = this.view.resourceController.memoryController;
    this._upsampleMapCache = e78.newCache("terrain-upsample", (e79) => e79.unloadMapData()), this._elevationQueryCache = new t63(e78.newCache("elevation-query")), this._handles.add([l6(() => this.overlayManager.hasHighlights, (e79) => this._renderer.setNeedsHighlight(e79)), l6(() => this.overlayManager.rendersOccluded, (e79) => this._renderer.setRenderOccludedOverlay(e79)), l6(() => this.overlayManager.renderer.isEmpty, () => this._evaluateTransparency())], "overlayManager"), this._renderer = new oe6({ _overlayRenderer: this.overlayManager.renderer, _ellipsoidRadius: A2(this.view.spatialReference).radius, _stage: this.view._stage, _allTiles: this._allTiles }), this._handles.add([l6(() => this.baseOpacity, () => {
      this._handleLayerViewChanges(), this._updateTileTextures(this._evaluateTransparency() ? r28.UNFADED : r28.IMMEDIATE);
    }, w3), l6(() => this.hasCompositeBlendMode, () => this._updateTileTextures(this._evaluateTransparency() ? r28.UNFADED : r28.IMMEDIATE), w3), l6(() => this.renderingDisabled, () => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ terrainRenderingEnabled: !this.renderingDisabled });
    }, U3), l6(() => this.backgroundColor, (e79) => {
      this._handleLayerViewChanges(), this._renderer.updateTileBackground(e79);
    }, w3), l6(() => this.snapLevel, () => this._viewChanged = true, U3), l6(() => this.view.pointsOfInterest, (e79) => {
      this._renderer.pointsOfInterest = e79, this._watchUpdatingTracking.removeAll(), e79 && this._watchUpdatingTracking.add(() => e79.focus.renderLocation, () => this._allTilesSorted = false);
    }), l6(() => t27.TERRAIN_TILE_TREE_SHOW_TILES, (e79) => {
      e79 && !this._treeDebugger ? import("./TerrainTileTree3DDebugger-EPD4IAPJ.js").then(({ TerrainTileTree3DDebugger: e80 }) => {
        !this._treeDebugger && t27.TERRAIN_TILE_TREE_SHOW_TILES && (this._treeDebugger = new e80({ view: this.view }));
      }) : e79 || (this._treeDebugger = l(this._treeDebugger));
    }, h3)]);
    const { spatialReference: t88 } = this.view;
    this._extentHelper = x28(this.viewingMode, { layers: this.view.map.allLayers, layerViews: this.view.allLayerViews, viewSpatialReference: t88 });
    const i78 = new n15({ getCollections: () => {
      var _a, _b, _c;
      return (_c = (_b = (_a = this.view) == null ? void 0 : _a.defaultsFromMap) == null ? void 0 : _b.mapCollections) == null ? void 0 : _c.map(({ layers: e79 }) => e79);
    }, getChildrenFunction: (e79) => e79 && "layers" in e79 ? e79.layers : null }), r79 = new S23({ layers: i78, extentHelper: this._extentHelper, viewingMode: this.viewingMode, viewSpatialReference: t88 });
    this._set("tilingSchemeLogic", r79), this._updateTilingScheme(), this._elevationDataRequester = this.view.resourceController.createStreamDataRequester(A13.ELEVATION), this._mapDataRequester = this.view.resourceController.createStreamDataRequester(A13.BASEMAP);
    const a85 = this.view.resourceController.scheduler;
    this._frameTask = a85.registerTask(I3.TERRAIN_SURFACE, this), this._handles.add([l6(() => this._extentHelper.stencilEnabledExtents, (e79) => this._renderer.setStencilEnabledLayerExtents(e79), h3), l6(() => this.tilingSchemeLogic.tilingScheme, () => this._updateTilingScheme(), U3), l6(() => this.extent, () => this._updateRootTiles(), h3), this.view.on("resize", () => this._viewChangeUpdate()), l6(() => {
      var _a, _b;
      const e79 = this.view, t89 = e79.state;
      return [this._lodBias, this.lodSnapping, (_b = (_a = e79.resourceController) == null ? void 0 : _a.memoryController) == null ? void 0 : _b.memoryFactor, t89.camera, t89.contentCamera, t89.fixedContentCamera];
    }, () => this._viewChangeUpdate(), w3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.qualitySettings) == null ? void 0 : _a.tiledSurface) == null ? void 0 : _b.textureFadeDuration;
    }, (e79) => this._renderer.textureFadingEnabled = e79 > 0, h3), l6(() => {
      var _a;
      return (_a = this.view.qualitySettings) == null ? void 0 : _a.physicallyBasedRenderingEnabled;
    }, (e79) => this._renderer.pbrMode = e79 ? c14.Terrain : c14.Disabled, h3), l6(() => this._userClippingExtent, () => this._updateClippingExtent(), U3)]), this._handles.add(this.view.allLayerViews.on("after-changes", () => this._layerViewsDirty = true)), this._layerViewsDirty = true, this._handleLayerViewChanges();
  }
  destroy() {
    this._frameTask.remove(), this._handles.destroy(), this._watchUpdatingTracking.destroy(), this._lercDecoder = f(this._lercDecoder), this._removeAllTiles(), this._upsampleMapCache = l(this._upsampleMapCache), this._elevationQueryCache = l(this._elevationQueryCache), this._set("tilingSchemeLogic", l(this.tilingSchemeLogic)), this._basemapLayerViewHandles.forEach((e78, t88) => this._unregisterTiledLayerView(t88)), this._elevationDataRequester = null, this._mapDataRequester = null, this._set("overlayManager", l(this.overlayManager)), this._tilePool = l(this._tilePool), se5.prune(), this._treeDebugger = l(this._treeDebugger), this._renderer = l(this._renderer), this._iteratorPool = l(this._iteratorPool), this._set("view", null), this._extentHelper = l(this._extentHelper), this._upsampleInfoPool = l(this._upsampleInfoPool), u14(), r60();
  }
  get renderer() {
    return this._renderer;
  }
  get frustum() {
    return this._frustum;
  }
  get snapLevel() {
    var _a, _b;
    if (this.lodSnapping === E9.ON) {
      const e78 = this.view, t88 = this.tilingScheme, i78 = (_b = (_a = e78.pointsOfInterest) == null ? void 0 : _a.cameraOnSurface) == null ? void 0 : _b.scale;
      if (t88 && i78) {
        const r79 = e78.state.contentCamera;
        let s84 = Q8(e78, r79.eye, r79.viewForward, r79.up).tilt;
        s84 > 90 && (s84 = 180 - s84);
        const a85 = 2 * (s84 / 90) ** 2, n103 = t88.levelAtScale(i78) - a85, l75 = Math.min(n103, this._splitLimits.maxLod || 1 / 0);
        return l75 <= 0 ? null : l75;
      }
    }
    return null;
  }
  get lodSnapping() {
    return this.view.qualitySettings.tiledSurface.reduceTileLevelDifferences ? E9.ON : E9.OFF;
  }
  get upsampleInfoPool() {
    return this._upsampleInfoPool;
  }
  get upsampleMapCache() {
    return this._upsampleMapCache;
  }
  get elevationQueryCache() {
    return this._elevationQueryCache;
  }
  get mapTileRequester() {
    return this._mapDataRequester;
  }
  get _userClippingExtent() {
    const { spatialReference: e78 } = this, { clippingArea: t88 } = this.view;
    if (null == t88 || null == e78)
      return null;
    const i78 = i4(), r79 = u10(t88, i78, e78) ? i78 : null, s84 = this._get("extent");
    return H3(r79, s84) ? s84 : r79;
  }
  get rootTilesExtent() {
    return this._rootTilesExtent;
  }
  get extent() {
    const e78 = R3(this.groundExtent, this._userClippingExtent, i4()), t88 = this._get("extent");
    return H3(e78, t88) ? t88 : e78;
  }
  get groundExtent() {
    return null != this._tilingSchemeExtent ? this._tilingSchemeExtent : this._rootTilesExtent;
  }
  get _tilingSchemeExtent() {
    var _a;
    return (_a = this.tilingSchemeLogic) == null ? void 0 : _a.extent;
  }
  get updating() {
    var _a, _b;
    return this._hasPendingUpdates || (this._maxNumUpdating = 1), !!((this.running || ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) || this._asyncWorkItems > 0) && this.ready && !this.suspended || ((_b = this.overlayManager) == null ? void 0 : _b.updating));
  }
  get running() {
    return (this._hasPendingUpdates || this._viewChanged || this._allTilesDirty || !this._allTilesSorted || this._layerViewsDirty || this._scaleRangeQueries.updating || this._frameTask.updating) && this.ready && !this.suspended;
  }
  get updatingProgressValue() {
    return this._maxNumUpdating = Math.max(this._pendingUpdates, this._maxNumUpdating), 1 - this._pendingUpdates / this._maxNumUpdating;
  }
  get baseOpacity() {
    var _a, _b, _c;
    return ((_c = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground) == null ? void 0 : _c.opacity) ?? 1;
  }
  set baseOpacity(e78) {
    this.view.map.ground.opacity = e78;
  }
  get viewingMode() {
    return this.view.state.viewingMode;
  }
  get ready() {
    return null != this._rootTiles;
  }
  set renderOrder(e78) {
    this._renderer.renderOrder = e78, this._set("renderOrder", e78);
  }
  get rootTiles() {
    return this._rootTiles;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.tilingScheme) == null ? void 0 : _a.spatialReference) ?? null;
  }
  get backgroundColor() {
    return this.view.map.ground.surfaceColor;
  }
  set backgroundColor(e78) {
    this.view.map.ground.surfaceColor = e78;
  }
  set slicePlaneEnabled(e78) {
    this._renderer.slicePlaneEnabled = e78, this._set("slicePlaneEnabled", e78), this._evaluateTransparency();
  }
  get tilingSchemeLocked() {
    var _a;
    return ((_a = this.tilingSchemeLogic) == null ? void 0 : _a.tilingSchemeLocked) ?? false;
  }
  get wireframe() {
    var _a;
    return (_a = this._renderer) == null ? void 0 : _a.wireframe;
  }
  set wireframe(e78) {
    e78 !== this._renderer.wireframe && (this._renderer.wireframe = e78, this._updateAllTileGeometries());
  }
  set _visible(e78) {
    e78 !== this._visibleCached && (this._visibleCached = e78, this._renderer.setVisibility(e78), this.suspended = !e78);
  }
  get opaque() {
    return this._renderer.transparency === ne6.Opaque;
  }
  set suspended(e78) {
    this._set("suspended", e78), this._viewChangeUpdate();
  }
  get textureFadeDuration() {
    return this.view.qualitySettings.tiledSurface.textureFadeDuration ?? 0;
  }
  intersect(e78, t88, i78, r79) {
    this._renderer.intersect(e78, t88, i78, r79);
  }
  getElevation(e78, t88, i78, r79) {
    const s84 = this._rootTiles;
    if (null == s84 || !s84.length)
      return null;
    if (0 === s84[0].layerInfo[A29.ELEVATION].length)
      return null;
    const a85 = pt3;
    if (a85[0] = e78, a85[1] = t88, a85[2] = i78, !Hn(a85, r79, a85, this._spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getElevation(): could not project given point to tiling scheme coordinate system"), null;
    return Tt2(s84, a85[0], a85[1]);
  }
  getElevations(e78, t88, i78) {
    const r79 = this._rootTiles, s84 = r79 ? r79[0].layerInfo[A29.ELEVATION].length : 0;
    if (null != r79 && r79.length && 0 !== s84)
      for (let a85 = 0; a85 < t88; ++a85) {
        const t89 = 3 * a85;
        i78(a85, Tt2(r79, e78[t89], e78[t89 + 1]));
      }
    else
      for (let a85 = 0; a85 < t88; ++a85)
        i78(a85, null);
  }
  getScale(e78) {
    if (!this.tilingScheme)
      return null;
    if (!In(e78, pt3, this.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getScale(): could not project given point to tiling scheme coordinate system"), null;
    const t88 = this._rootTiles;
    if (null != t88) {
      for (const i78 of t88)
        if (i78 == null ? void 0 : i78.containsPoint(pt3)) {
          let e79 = i78;
          for (; e79.children[0] && !e79.rendered; ) {
            const t89 = e79.children[0].extent;
            let i79 = 0;
            pt3[0] > t89[2] && (i79 += 1), pt3[1] < t89[1] && (i79 += 2), e79 = e79.children[i79];
          }
          return this._getLodBiasCorrectedScale(e79.level);
        }
    }
    return 1 / 0;
  }
  getSphereElevationBounds(e78, t88) {
    var _a;
    if (pt3[0] = e78[0], pt3[1] = e78[1], pt3[2] = e78[2], pt3[3] = e78[3], !Hn(pt3, t88, pt3, (_a = this.tilingScheme) == null ? void 0 : _a.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getSphereElevationBounds(): could not project given point to tiling scheme coordinate system"), null;
    let i78 = 1 / 0, r79 = -1 / 0;
    const s84 = (e79) => {
      if (e79 && b(e79.extent, pt3))
        if (e79.isLeaf || e79.rendered)
          i78 = Math.min(i78, e79.elevationBounds[0]), r79 = Math.max(r79, e79.elevationBounds[1]);
        else
          for (const t89 of e79.children)
            s84(t89);
    }, a85 = this._rootTiles;
    if (null != a85)
      for (const n103 of a85)
        s84(n103);
    return { min: i78, max: r79 };
  }
  getSphereScale(e78, t88) {
    if (!this.tilingScheme)
      return null;
    if (!In(e78, pt3, this.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getSphereScale(): could not project given point to tiling scheme coordinate system"), null;
    pt3[3] = t88;
    let i78 = null;
    const r79 = (e79) => {
      if (e79 && b(e79.extent, pt3)) {
        const t89 = e79.children;
        if (t89[0] && !e79.rendered)
          for (const e80 of t89)
            r79(e80);
        else {
          const t90 = this._getLodBiasCorrectedScale(e79.level);
          i78 = null == i78 ? t90 : Math.min(i78, t90);
        }
      }
    }, s84 = this._rootTiles;
    if (null != s84)
      for (const a85 of s84)
        r79(a85);
    return i78;
  }
  queryVisibleScaleRange(e78, t88, i78, r79) {
    const s84 = t88 ? this.tilingScheme.levelAtScale(t88) : 0, a85 = i78 ? this.tilingScheme.levelAtScale(i78) : 1 / 0, n103 = this._lodBias;
    this._scaleRangeQueries.queryVisibleLevelRange(e78, s84 + n103, a85 + n103, r79);
  }
  _evaluateTransparency() {
    var _a, _b;
    const e78 = this.baseOpacity, t88 = this.overlayManager.renderer.isEmpty, i78 = this._renderer.transparency, r79 = this._allSurfaceLayersTransparent() ? t88 ? ne6.Empty : ne6.TransparentWithDraped : e78 >= 1 && !this.hasCompositeBlendMode && !this._renderer.slicePlaneEnabled ? ne6.Opaque : ne6.Semitransparent, s84 = i78 !== r79;
    return s84 && (this._renderer.transparency = r79, (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ terrainTransparency: this._renderer.transparency })), s84;
  }
  _updateTilingScheme() {
    var _a, _b, _c;
    const e78 = this.tilingSchemeLogic.tilingScheme;
    if (!(e78 !== this.tilingScheme))
      return;
    a28(!!e78, "tiling scheme cannot be reset to undefined"), this._isGlobal = !((_b = (_a = this.view) == null ? void 0 : _a.state) == null ? void 0 : _b.isLocal), this.tilingScheme && this._removeAllTiles();
    const t88 = (e78 == null ? void 0 : e78.spatialReference) ?? f2.WebMercator;
    this._spatialReference = t88, this._isWebMercator = !!(t88 == null ? void 0 : t88.isWebMercator), this._isWebMercatorOnPlateeCarree = this._isWebMercator && G((_c = this.view) == null ? void 0 : _c.renderSpatialReference), this._set("tilingScheme", e78), this._updateClippingExtent(), e78 && (this._updateTiledLayers(), this._renderer.setTileSize(e78.pixelSize), this.overlayManager.setSpatialReference(e78.spatialReference), this._updateRootTiles());
  }
  _acquireTile(e78, t88, i78, r79) {
    const s84 = this._tilePool.acquire();
    return ct4[0] = e78, ct4[1] = t88, ct4[2] = i78, s84.init(ct4, r79, this), s84;
  }
  get updatingRootTiles() {
    return this._updatingRootTiles;
  }
  _updateRootTiles() {
    const { extent: e78, tilingScheme: t88 } = this;
    if (!t88)
      return;
    const i78 = ut4;
    let s84 = t88.rootTilesInExtent(e78, i78, 5 * s31);
    if (null != this._rootTiles) {
      if (s84.length > s31)
        return void s3.getLogger(this).warn(p13);
      const e79 = this._rootTiles.map((e80) => e80.lij), t89 = a(e79, s84, ot4);
      if (this._updatingRootTiles = true, t89.removed.length > 0 || t89.added.length > 0) {
        const e80 = this._rootTiles.filter((e81) => !(t89.removed.findIndex((t90) => ot4(t90, e81.lij)) > -1) || (this._purgeTile(e81), false));
        t89.added.forEach((t90) => e80.push(this._newRootTile(t90))), this._setRootTiles(e80);
      }
    } else
      this._updatingRootTiles = true, s84.length > s31 && (s3.getLogger(this).warn(f16), s84 = t88.rootTilesInExtent(e78, i78, s31)), this._setRootTiles(s84.map((e79) => this._newRootTile(e79)));
    H3(i78, this._rootTilesExtent) || (this._rootTilesExtent = i4(i78)), this._visible = true, this._viewChangeUpdate(), this.overlayManager.setPlacementDirty(), this.notifyChange("ready"), this._updateAllTileGeometries(), this._updatingRootTiles = false, this.checkAllTilesWaterproofness();
  }
  _updateAllTileGeometries() {
    const e78 = this._allTiles.filter((e79) => e79.isLoaded && e79.intersectsClippingArea);
    e78.forEach((e79) => this._renderer.updateTileGeometryState(e79)), e78.forEach((e79) => e79.renderData.updateNeighborData()), this._updateTilesGeometries(e78), this._pendingTilesToUpdate.clear();
  }
  _updateTilesGeometries(e78) {
    if (0 === e78.length)
      return;
    e78.sort(l22);
    const t88 = this.renderer;
    e78.forEach((e79) => t88.updateGeometryIfNeeded(e79)), e78.forEach((e79) => this._pendingTilesForElevationUpdateEvent.add(e79));
  }
  _shouldSplit(e78) {
    return e78.shouldSplit(this._splitLimits, this._eyePosRenderSR, this.snapLevel) === E33.SPLIT;
  }
  _newRootTile(e78) {
    const t88 = this._acquireTile(0, e78[1], e78[2], null);
    return this._shouldSplit(t88) && t88.setPendingUpdate(E33.SPLIT), this._loadTile(t88), this._markTileToUpdate(t88), this._updateRootTileElevationBounds(), t88;
  }
  _setRootTiles(e78) {
    if (this._rootTiles = e78, this._allTiles.clear(), null != e78) {
      const t88 = this._iteratorPool.acquire();
      for (t88.reset(e78); !t88.done; )
        this._allTiles.push(t88.next());
      t88.remove();
    }
    this._renderer.setRootTiles(this._rootTiles), this._updateTilesVisibility(e78);
  }
  _runViewChangeUpdateIfDirty() {
    this._viewChangeUpdateDirty && (this._viewChangeUpdateDirty = false, this._viewChangeUpdate());
  }
  _viewChangeUpdate() {
    this.view && !this.suspended && this.tilingScheme && this._visibleCached && (this._inFrameTask ? this._viewChangeUpdateDirty = true : (this._viewChangeUpdateDirty = false, this._updateViewDependentParameters(), this._updateTilesVisibility(this._rootTiles)));
  }
  _updateClippingStatus(e78) {
    e78.updateClippingStatus(this.extent) && e78.resetPendingUpdate(E33.GEOMETRY) && this._updateTileGeometryState(e78);
  }
  _updateTilesVisibility(e78) {
    if (null == e78)
      return;
    const t88 = q5(e78), i78 = this.visibleElevationBounds;
    let r79 = t88 ? i78.min : 1 / 0, s84 = t88 ? i78.max : -1 / 0;
    const a85 = this.extent, n103 = this._viewProjectionMatrix;
    this.setTileTreeDirty();
    const l75 = this._iteratorPool.acquire();
    for (l75.reset(e78); !l75.done; ) {
      const e79 = l75.next();
      e79.updateClippingStatus(a85) && e79.resetPendingUpdate(E33.GEOMETRY) && this._updateTileGeometryState(e79), e79.setPendingUpdate(E33.RENDERDATA), e79.computeVisibility(), e79.updateScreenDepth(n103), e79.renderData && (r79 = Math.min(e79.elevationBounds[0], r79), s84 = Math.max(e79.elevationBounds[1], s84));
    }
    l75.remove(), this._viewChanged = true, this._allTilesDirty = true, this._batchUpdatePendingTileGeometries(), isFinite(r79) && isFinite(s84) && (i78.min !== r79 || i78.max !== s84) && (this.visibleElevationBounds = new s66(r79, s84));
  }
  _updateRootTileElevationBounds() {
    let e78 = 1 / 0, t88 = -1 / 0;
    const i78 = this._rootTiles;
    null != i78 && i78.forEach(({ elevationBounds: i79 }) => {
      e78 = Math.min(e78, i79[0]), t88 = Math.max(t88, i79[1]);
    });
    const r79 = this.rootTileElevationBounds;
    r79.min === e78 && r79.max === t88 || (this.rootTileElevationBounds = new s66(e78, t88));
  }
  _updateViewDependentParameters() {
    const { camera: e78, contentCamera: t88 } = this.view.state, i78 = Math.tan(0.5 * t88.fovX), r79 = Math.tan(0.5 * t88.fovY), s84 = this.tilingScheme.pixelSize, a85 = 2 ** -this._lodBias * e78.pixelRatio;
    this._splitLimits.aboveGround = e78.aboveGround, this._splitLimits.fovX = i78, this._splitLimits.fovY = r79, this._splitLimits.relativeWidthLimit = s84 / e78.width * this.maxTextureScale * a85, this._splitLimits.relativeHeightLimit = s84 / e78.height * this.maxTextureScale * a85, this._splitLimits.maxLod = this.tilingScheme.getMaxLod(), this._splitLimits.angledSplitBias = this.view.qualitySettings.tiledSurface.angledSplitBias, this.view.state.fixedContentCamera ? (null == this._splitLimits.frustum && (this._splitLimits.frustum = I5()), L3(this._splitLimits.frustum, t88.frustum)) : this._splitLimits.frustum = null, L3(this._frustum, e78.frustum), c5(this._viewProjectionMatrix, t88.projectionMatrix, t88.viewMatrix), r7(this._eyePosRenderSR, t88.eye), Hn(e78.eye, this.view.renderSpatialReference, this._eyePosSurfaceSR, this.spatialReference);
  }
  _updateRenderData(e78) {
    e78.rendered && !e78.shouldLoad && (ht4(e78) ? this._loadChildren(e78) : dt3(e78) && this._loadParent(e78));
  }
  _updateTileGeometryState(e78) {
    e78.updateVisibility();
    this._renderer.updateTileGeometryState(e78) && this._markTileToUpdate(e78), this._usedMemory = null;
  }
  _markAllTileNeighborsForGeometryUpdate(e78) {
    const t88 = this._pendingTilesToUpdate;
    e78.forEachLoadedNeighbor((e79) => {
      t88.add(e79);
    });
  }
  _updateTileTexture(e78, t88) {
    const i78 = e78.resetPendingUpdate(E33.TEXTURE_FADING) ? E33.TEXTURE_FADING : !!e78.resetPendingUpdate(E33.TEXTURE_NOFADING) && E33.TEXTURE_NOFADING;
    i78 && (this._renderer.updateTileTexture(e78, i78), this._usedMemory = null, t88.madeProgress());
  }
  _emitElevationUpdateEventForTiles() {
    const e78 = gt2.extent;
    C2(e78), this._pendingTilesForElevationUpdateEvent.forEach((t88) => m3(e78, t88.extent, e78)), this._pendingTilesForElevationUpdateEvent.clear(), gt2.spatialReference = this.spatialReference, this.emit("elevation-change", gt2);
  }
  runTask(e78) {
    this._handleLayerViewChanges(e78), this._frameTask.processQueue(e78), this.renderer.processScaleRangeQueries(this._scaleRangeQueries, e78), this._inFrameTask = true, this._pendingUpdates = 0, this._hasPendingUpdates = false, this._updateAllTilesStatus(e78), this._sortTiles(e78);
    const t88 = !this.view.state.fixedContentCamera;
    this._mergeAndSplit(e78, t88), this._updateElevation(e78), this._updateTextures(e78), t88 || this._mergeAndSplit(e78, true), this._inFrameTask = false, this._runViewChangeUpdateIfDirty(), this._batchUpdatePendingTileGeometries(), this._emitElevationUpdateEventForTiles(), e78.done && e78.hasProgressed && this.requestUpdate(), this.notifyChange("updatingProgressValue");
  }
  _updateAllTilesStatus(e78) {
    if (!this._viewChanged || !this._rootTiles || e78.done)
      return;
    this._viewChanged = false;
    const t88 = this._iteratorPool.acquire();
    t88.reset(this._rootTiles);
    const i78 = this.snapLevel, r79 = this._splitLimits, s84 = this._eyePosRenderSR;
    for (; !t88.done; ) {
      const e79 = t88.next(), a85 = e79.shouldSplit(r79, s84, i78);
      if (a85 !== E33.SPLIT) {
        if (e79.resetPendingUpdate(E33.SPLIT) && e79.updateAgentSuspension(), a85 === E33.ELEVATION && e79.updateAgents(A29.ELEVATION), t88.skipSubtree(), !e79.isLeaf) {
          e79.setPendingUpdate(E33.MERGE), e79.resetPendingUpdate(E33.SPLIT);
          const t89 = this._iteratorPool.acquire();
          t89.resetOne(e79);
          const i79 = this._viewProjectionMatrix;
          for (let e80 = t89.next(); !t89.done; e80 = t89.next())
            this._updateClippingStatus(e80), e80.updateVisibility(), e80.updateScreenDepth(i79);
          t89.remove();
        }
      } else
        e79.resetPendingUpdate(E33.MERGE), e79.isLeaf && (e79.setPendingUpdate(E33.SPLIT), t88.skipSubtree()), e79.rendered && e79.setPendingUpdate(E33.RENDERDATA);
    }
    t88.remove(), this.requestUpdate(), (this.shortBatches || !this.oneBatchPerFrameTask) && this._batchUpdatePendingTileGeometries(), e78.madeProgress();
  }
  _sortTiles(e78) {
    e78.done || this._allTilesSorted || (d16(this._allTiles, this.view.pointsOfInterest.focus.renderLocation), this._allTilesSorted = true, this._treeDebugger && this._treeDebugger.update(), e78.madeProgress());
  }
  _markTileToUpdate(e78) {
    p15(e78.isLoaded), e78.intersectsClippingArea && (this._pendingTilesToUpdate.add(e78), this._markAllTileNeighborsForGeometryUpdate(e78));
  }
  _batchUpdatePendingTileGeometries() {
    const e78 = this._pendingTilesToUpdate;
    if (0 === e78.size)
      return;
    const t88 = Array.from(this._pendingTilesToUpdate.keys()).filter((e79) => e79.isLoaded && e79.intersectsClippingArea), i78 = (i79, r80) => {
      !(r80 == null ? void 0 : r80.isLoaded) || !r80.intersectsClippingArea || r80.level < i79.level || e78.has(r80) || (e78.add(r80), t88.push(r80), r80.renderData.updateNeighborData());
    };
    t88.sort(l22);
    const r79 = t88.length;
    for (let s84 = 0; s84 < r79; ++s84) {
      const r80 = t88[s84];
      p15(r80.isLoaded), p15(r80.intersectsClippingArea);
      const a85 = r80.renderData;
      a85.updateNeighborData();
      const n103 = a85._dirtyEdgeResolutions, l75 = a85.geometryState.neighborData.cornerPeerNeighbors, o77 = (e79) => {
        var _a;
        const t89 = Y5[e79];
        i78(r80, (_a = l75[e79]) == null ? void 0 : _a.findCorner(D6(t89), (e80) => e80.isLoaded));
      };
      for (let t89 = 0; t89 < 4; ++t89)
        if (n103 & 1 << t89) {
          const s85 = a85.geometryState.neighborData.edgePeerNeighbors[t89];
          s85 && (s85 == null ? void 0 : s85.level) >= r80.level && s85.forAllSubtreeOnSide(P8(X3[t89]), (t90) => !(!t90.isLoaded || !t90.intersectsClippingArea) && (p15(e78.has(t90) || l22(r80, t90) < 0), i78(r80, t90), true)), o77((t89 + 1) % 4), o77(t89);
        }
    }
    e78.clear(), this._updateTilesGeometries(t88), T11 && s32 && this.checkAllTilesWaterproofness();
  }
  _mergeAndSplit(e78, t88) {
    if (this.suspended || e78.done || !this._allTilesDirty)
      return;
    this._allTilesDirty = false, this.requestUpdate();
    let i78 = false;
    const r79 = this.view.state.fixedContentCamera;
    let s84 = false;
    for (; !e78.done; ) {
      s84 = true;
      let a85 = false;
      const n103 = !this._allTiles.some((s85) => {
        var _a;
        if (!i78 && !r79 && !s85.visible)
          return e78.done;
        let n104 = s85;
        if (s85.resetPendingUpdate(E33.MERGE)) {
          if (!t88)
            return s85.setPendingUpdate(E33.MERGE), e78.done;
          for (; (_a = n104.parent) == null ? void 0 : _a.resetPendingUpdate(E33.MERGE); )
            n104 = n104.parent;
          this._mergeTile(n104), a85 = true, e78.madeProgress();
        } else
          s85.resetPendingUpdate(E33.SPLIT) && (this._splitTile(s85), a85 = true, e78.madeProgress());
        return !e78.done && n104 === s85 && s85.resetPendingUpdate(E33.RENDERDATA) && (this._updateRenderData(s85), e78.madeProgress()), e78.done;
      });
      if (a85 && (this._allTilesSorted = false, this._allTilesDirty = true), n103) {
        if (!i78) {
          i78 = true;
          continue;
        }
        if (!a85)
          break;
      } else
        this._allTilesDirty = true;
    }
    s84 ? e78.madeProgress() : this._allTilesDirty = true, !this.oneBatchPerFrameTask && this._batchUpdatePendingTileGeometries(), this._sortTiles(e78);
  }
  _updateElevation(e78) {
    e78.done || (this._allTiles.some((t88) => (t88.resetPendingUpdate(E33.GEOMETRY) && (this._updateTileGeometryState(t88), this._updateTileTexture(t88, e78), this.shortBatches && this._batchUpdatePendingTileGeometries(), e78.madeProgress()), e78.done)), !this.oneBatchPerFrameTask && this._batchUpdatePendingTileGeometries());
  }
  _updateTextures(e78) {
    e78.done || this._allTiles.some((t88) => (this._updateTileTexture(t88, e78), e78.done));
  }
  _updateClippingExtent() {
    this.spatialReference && (this.updateTileOverlayParams(O5.UPDATE), this.overlayManager.setPlacementDirty(), this._updateRootTiles());
  }
  get _lodBias() {
    const e78 = this.view.resourceController.memoryController.memoryFactor;
    return this.view.qualitySettings.tiledSurface.lodBias - (1 - e78) * a27;
  }
  _getLodBiasCorrectedScale(e78) {
    const t88 = this.tilingScheme.levels, i78 = i3(e78 - this._lodBias, 0, t88.length - 1), r79 = i78 - Math.floor(i78);
    return t88[Math.floor(i78)].scale * (1 - r79) + t88[Math.ceil(i78)].scale * r79;
  }
  _removeAllTiles() {
    null != this._rootTiles && (this._rootTiles.forEach((e78) => this._purgeTile(e78)), this._setRootTiles(null), this.notifyChange("ready")), this._allTiles.clear(), this._visible = false;
  }
  _purgeDescendantTiles(e78) {
    if (!e78.children[0])
      return false;
    let t88 = false;
    for (let i78 = 0; i78 < 4; ++i78)
      t88 = this._purgeTile(e78.children[i78]) || t88;
    return e78.unsetChildren(), t88;
  }
  _purgeTile(e78) {
    const t88 = this._purgeDescendantTiles(e78) || e78.rendered;
    return this._allTiles.removeUnordered(e78), this._unloadTile(e78), this._tilePool.release(e78), t88;
  }
  _unloadTile(e78) {
    this._pendingTilesToUpdate.delete(e78), this._pendingTilesForElevationUpdateEvent.delete(e78), e78.unload(this._renderer);
  }
  _splitTile(e78) {
    a28(e78.isLeaf, "tile that is already split should not be split again!");
    const t88 = e78.level + 1, i78 = 2 * e78.lij[1], r79 = 2 * e78.lij[2];
    e78.setChildren(this._createTile(t88, i78, r79, e78), this._createTile(t88, i78, r79 + 1, e78), this._createTile(t88, i78 + 1, r79, e78), this._createTile(t88, i78 + 1, r79 + 1, e78)), e78.setPendingUpdate(E33.RENDERDATA), e78.updateAgentSuspension(), this._allTiles.pushArray(e78.children), this._allTilesDirty = true, ++this._performanceInfo.numSplit;
  }
  _emitTileScaleChange(e78, t88 = e78.level) {
    mt3.spatialReference = this.spatialReference, mt3.extent = e78.extent, mt3.scale = this._getLodBiasCorrectedScale(t88), this.emit("scale-change", mt3);
  }
  _createTile(e78, t88, i78, r79) {
    a28(!!r79, "_createTile sanity check");
    const s84 = this._acquireTile(e78, t88, i78, r79);
    return s84.updateClippingStatus(this.extent), s84.updateScreenDepth(this._viewProjectionMatrix), this._shouldSplit(s84) && s84.setPendingUpdate(E33.SPLIT), s84;
  }
  get shortBatches() {
    return this.view.state.mode !== I2.IDLE;
  }
  _mergeTile(e78) {
    a28(!e78.hasPendingUpdate(E33.SPLIT), "_mergeTile sanity check"), this._purgeDescendantTiles(e78) && (a28(!e78.renderData, "_mergeTile sanity check"), this._loadTile(e78), this._markTileToUpdate(e78), this._emitTileScaleChange(e78), this.shortBatches && this._batchUpdatePendingTileGeometries()), this._allTilesDirty = true, ++this._performanceInfo.numMerged;
  }
  _loadChildren(e78) {
    a28(e78.rendered, "parent should be rendered"), this._unloadTile(e78);
    const t88 = e78.children;
    t88.forEach((e79) => this._loadTile(e79)), t88.forEach((e79) => this._pendingTilesToUpdate.add(e79)), this._markAllTileNeighborsForGeometryUpdate(e78), this._emitTileScaleChange(e78, e78.level + 1), this.shortBatches && this._batchUpdatePendingTileGeometries();
  }
  _loadParent(e78) {
    const t88 = e78.parent;
    this._unloadChildren(t88), this._loadTile(t88), this._markTileToUpdate(t88), this._emitTileScaleChange(t88, t88.level), this.shortBatches && this._batchUpdatePendingTileGeometries();
  }
  _unloadChildren(e78) {
    const t88 = e78.children;
    if (t88[0])
      for (let i78 = 0; i78 < 4; ++i78) {
        const e79 = t88[i78];
        this._unloadChildren(e79), this._unloadTile(e79);
      }
  }
  _loadTile(e78) {
    e78.load(), e78.setPendingUpdate(E33.RENDERDATA), this.requestUpdate(), this._allTilesDirty = true, this.overlayManager && this.overlayManager.hasOverlays && this.overlayManager.setTileParameters(e78);
  }
  _elevationDataArrived(e78, t88, i78) {
    const r79 = new r57(e78.lij, e78.extent, i78);
    e78.dataArrived(t88, A29.ELEVATION, r79);
    const s84 = [e78], a85 = e78.level, n103 = this._iteratorPool.acquire();
    for (n103.reset(s84); !n103.done; ) {
      const e79 = n103.next();
      e79.findElevationBoundsForLayer(t88, a85), e79.computeElevationBounds();
    }
    0 === a85 && this._updateRootTileElevationBounds(), n103.remove(), this._updateTilesVisibility(s84);
  }
  _handleLayerViewChanges(e78 = C4) {
    if (!this._layerViewsDirty)
      return;
    this._layerViewsDirty = false;
    let t88 = false;
    const i78 = /* @__PURE__ */ new Set();
    let r79 = -1;
    for (const s84 of this.view.allLayerViews.items)
      if (i78.add(s84.uid), N4(s84) || d15(s84))
        if (this._basemapLayerViewHandles.has(s84.uid) && !d15(s84)) {
          const e79 = this._layerClassFromLayerView(s84), i79 = this._getLayerIdxByUID(e79, s84.uid);
          null != i79 && ((i79 < r79 || null == r79) && (t88 = true), r79 = i79);
        } else
          this._registerTiledLayerView(s84), s84.layer.loaded && (t88 = true);
    this._basemapLayerViewHandles.forEach((e79, r80) => {
      i78.has(r80) || (this._unregisterTiledLayerView(r80), t88 = true);
    }), t88 && this._updateTiledLayers(), this.hasCompositeBlendMode = this._hasCompositeBlendMode(), this._evaluateTransparency(), e78.madeProgress();
  }
  _allSurfaceLayersTransparent() {
    var _a, _b;
    let e78 = 0 === ((_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.opacity);
    for (const t88 of this.view.allLayerViews.items)
      if (W7(t88) && !y5(t88.layer) && 0 !== t88.fullOpacity)
        return e78 = false, e78;
    return e78;
  }
  _hasCompositeBlendMode() {
    for (const e78 of this.view.allLayerViews.items)
      if ((U6(e78) || d15(e78)) && o36(e30[e78.layer.blendMode]))
        return true;
    return false;
  }
  _layerClassFromLayerView(e78) {
    return R9(e78) ? A29.ELEVATION : A29.MAP;
  }
  _registerTiledLayerView(e78) {
    const t88 = [];
    if ((U6(e78) || d15(e78)) && t88.push(l6(() => e78.layer.blendMode, () => {
      this.hasCompositeBlendMode = this._hasCompositeBlendMode(), this._updateTileTextures(r28.UNFADED);
    })), !d15(e78)) {
      const i78 = this._layerClassFromLayerView(e78);
      t88.push(l6(() => e78.suspended, () => this._updateTiledLayers())), t88.push(l6(() => e78.fullOpacity, () => this._updateTileTextures(r28.UNFADED))), t88.push(l6(() => "effectiveScaleRange" in e78.layer ? e78.layer.effectiveScaleRange : null, () => this._restartAllAgents(i78))), t88.push(e78.on("data-changed", () => {
        const t89 = this._getLayerIdxByUID(i78, e78.uid);
        null != t89 && this._invalidateLayerData(t89, i78);
      }));
    }
    this._unregisterTiledLayerView(e78.uid), this._basemapLayerViewHandles.set(e78.uid, t88);
  }
  _unregisterTiledLayerView(e78) {
    const t88 = this._basemapLayerViewHandles.get(e78);
    if (t88) {
      for (const e79 of t88)
        e79.remove();
      this._basemapLayerViewHandles.delete(e78);
    }
  }
  _updateTiledLayers() {
    if (!this.tilingScheme || this.view.suspended)
      return;
    const e78 = this.view.allLayerViews, t88 = [[], []];
    let i78 = null;
    e78.forEach((e79) => {
      if (!e79.layer || e79.suspended || !N4(e79) || !e79.fullExtent)
        return;
      const r79 = this._layerClassFromLayerView(e79);
      if (r79 === A29.MAP) {
        const t89 = e79.displayLevelRange.maxLevel;
        t89 !== 1 / 0 && (null === i78 || t89 > i78) && (i78 = t89);
      }
      t88[r79].push(e79);
    });
    for (const r79 of E32) {
      const e79 = this._layerViews[r79], i79 = t88[r79];
      i79.reverse();
      const s84 = i79.length;
      let a85 = e79.length !== s84;
      const n103 = new Array(s84), l75 = new Array(e79.length);
      this._layerIndexByUid[r79].clear();
      for (let t89 = 0; t89 < s84; t89++) {
        const s85 = i79[t89].uid;
        this._layerIndexByUid[r79].set(s85, t89);
        const o77 = e79.indexOf(i79[t89]);
        n103[t89] = o77, t89 !== o77 && (a85 = true), o77 > -1 && (l75[o77] = t89);
      }
      if (a85) {
        const e80 = this._postorderIterator;
        for (e80.reset(this._rootTiles); !e80.done; )
          e80.next().modifyLayers(l75, n103, r79);
        this._layerViews[r79] = i79, this._restartAllAgents(r79), this._updateTilesVisibility(this._rootTiles);
      }
    }
    this.tilingScheme.ensureMaxLod(i78) && this._viewChangeUpdate();
  }
  _restartAllAgents(e78) {
    const t88 = this._postorderIterator;
    for (t88.reset(this._rootTiles); !t88.done; ) {
      const i78 = t88.next();
      i78.restartAgents(e78), e78 === A29.ELEVATION && i78.computeElevationBounds();
    }
    this._updateRootTileElevationBounds();
  }
  layerViewByIndex(e78, t88) {
    return this._layerViews[t88][e78];
  }
  numLayers(e78) {
    return this._layerViews[e78].length;
  }
  _updateTileTextures(e78) {
    this._allTiles.forAll((t88) => {
      t88.updateAgents(A29.MAP), e78 === r28.IMMEDIATE ? this.renderer.updateTileTexture(t88, E33.TEXTURE_NOFADING) : t88.updateRenderData(A29.MAP, e78);
    }), this._evaluateTransparency();
  }
  _invalidateLayerData(e78, t88) {
    this._allTiles.forAll((i78) => i78.removeLayerAgent(e78, t88)), this._allTiles.forAll((i78) => i78.invalidateLayerData(e78, t88));
  }
  setTileTreeDirty() {
    this._allTilesDirty = true;
  }
  requestRender(e78 = O5.UPDATE) {
    this.renderer.setNeedsRender(e78);
  }
  requestUpdate() {
    1 == ++this._pendingUpdates && (this._hasPendingUpdates = true);
  }
  requestTileData(e78, t88, i78, r79) {
    const s84 = this.layerViewByIndex(t88, i78), a85 = s84.layer;
    return !a85.tilemapCache || _10(s84) ? this._requestTileData(e78, i78, s84, r79) : (++this._asyncWorkItems, a85.tilemapCache.fetchAvailability(e78.lij[0], e78.lij[1], e78.lij[2], { ...r79, timeout: 6e3 }).then(() => --this._asyncWorkItems).catch((t89) => {
      throw --this._asyncWorkItems, s6(r79), d2(t89) || this._dataMissing(e78, i78, s84, { notInTilemap: true }), t89;
    }).then(() => this._frameTask.schedule(() => this._requestTileData(e78, i78, s84, r79), r79.signal)));
  }
  _requestTileData(e78, t88, i78, r79) {
    return t88 === A29.ELEVATION ? R9(i78) ? this._requestElevationTileData(e78, i78, r79) : Promise.reject() : W7(i78) ? this._requestMapTileData(e78, i78, r79) : Promise.reject();
  }
  _requestElevationTileData(e78, t88, i78) {
    ++this._asyncWorkItems;
    const r79 = (r80) => {
      if (a5(i78))
        return;
      const s85 = this._layerIndexByUid[A29.ELEVATION].get(t88.uid);
      null != s85 ? (this._usedMemory = null, this.requestUpdate(), this._elevationDataArrived(e78, s85, r80)) : s3.getLogger(this).warn("TerrainSurface: received data from unknown layer %d %s", A29.ELEVATION, e78.lij.toString());
    }, s84 = (i79) => {
      d2(i79) || (this._dataMissing(e78, A29.ELEVATION, t88, i79), this.requestUpdate());
    };
    if (j7(t88.layer))
      return t88.layer.fetchTile(e78.lij[0], e78.lij[1], e78.lij[2], { noDataValue: l19, signal: i78.signal }).then((e79) => {
        if (!a5(i78))
          return this._frameTask.schedule(() => r79(e79), i78.signal, s84);
        s3.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true.");
      }, s84).finally(() => {
        --this._asyncWorkItems;
      });
    const a85 = t88.getTileUrl(e78.lij[0], e78.lij[1], e78.lij[2]);
    return this._elevationDataRequester.request(a85, "binary", i78).then((e79) => this._lercDecoder.decode(e79, { noDataValue: l19 }, i78.signal)).then((e79) => {
      e79 ? r79(new a21(e79)) : s84(new Error("LERC decoding failed"));
    }, s84).finally(() => {
      --this._asyncWorkItems;
    });
  }
  _requestMapTileData(e78, t88, i78) {
    ++this._asyncWorkItems;
    const r79 = (r80, s85) => {
      --this._asyncWorkItems, w11(s85), a5(i78) || (this._dataMissing(e78, A29.MAP, t88, r80), this.requestUpdate());
    }, s84 = (e79) => (t89) => r79(t89, e79), a85 = (r80) => this._frameTask.schedule(() => {
      --this._asyncWorkItems, this.requestUpdate(), a5(i78) ? w11(r80) : this._mapTileDataArrived(e78, t88, r80);
    }, i78.signal, s84(r80)).catch(s84(r80)), n103 = (e79, t89 = null) => this._frameTask.schedule(() => r79(e79, t89));
    if (_10(t88)) {
      const r80 = t88.schemaHelper.getLevelRowColumn(e78.lij);
      return t88.fetchTile(r80[0], r80[1], r80[2], i78).then(a85, n103);
    }
    if (O8(t88))
      return t88.fetchTile(e78.lij[0], e78.lij[1], e78.lij[2], i78).then(a85, n103);
    if (y9(t88) && j7(t88.layer))
      return t88.layer.fetchTile(e78.lij[0], e78.lij[1], e78.lij[2], i78).then((e79) => {
        if (a5(i78))
          return s3.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."), void n103(c());
        a85(e79);
      }, n103);
    let o77 = t88.getTileUrl(e78.lij[0], e78.lij[1], e78.lij[2]);
    n17(t88.layer) && t88.layer.refreshTimestamp && (o77 += `${o77.includes("?") ? "&" : "?"}_ts=${t88.layer.refreshTimestamp}`);
    const h58 = t88.hasMixedImageFormats ? "image+type" : "image";
    return this._mapDataRequester.request(o77, h58, i78).then(a85, n103);
  }
  _mapTileDataArrived(e78, t88, i78) {
    const r79 = this._getLayerIdxByUID(A29.MAP, t88.uid);
    null != r79 ? e78.dataArrived(r79, A29.MAP, i78) : (w11(i78), s3.getLogger(this).warn("TerrainSurface: received data from unknown layer"));
  }
  _getLayerIdxByUID(e78, t88) {
    return this._layerIndexByUid[e78].get(t88);
  }
  _dataMissing(e78, t88, i78, r79) {
    const s84 = this._getLayerIdxByUID(t88, i78.uid);
    null != s84 ? e78.dataMissing(s84, t88, r79) : s3.getLogger(this).warn("TerrainSurface: received data from unknown layer");
  }
  updateTileOverlayParams(e78) {
    this._rootTiles && this.overlayManager && (this._allTiles.forAll((e79) => {
      e79.renderData && this.overlayManager.setTileParameters(e79);
    }), this._renderer.setNeedsRender(e78));
  }
  get performanceInfo() {
    const e78 = this._performanceInfo;
    return e78.numNodes = this._allTiles.length, e78.numLeaves = e78.numVisible = e78.numRendered = e78.numLoadedPerLevel.length = e78.numRenderedPerLevel.length = 0, this._allTiles.forAll((t88) => {
      t88.isLeaf && e78.numLeaves++;
      const i78 = t88.level;
      t88.renderData && (e78.numLoadedPerLevel[i78] = (e78.numLoadedPerLevel[i78] || 0) + 1), t88.visible && (e78.numVisible++, t88.rendered && (e78.numRenderedPerLevel[i78] = (e78.numRenderedPerLevel[i78] || 0) + 1, e78.numRendered++));
    }), e78;
  }
  get usedMemory() {
    return this.tilingScheme ? (null == this._usedMemory && (this._usedMemory = this._recalculateUsedMemory()), null != this._usedMemory ? this._usedMemory : 0) : 0;
  }
  _recalculateUsedMemory() {
    return this.tilingScheme ? this._allTiles.reduce((e78, t88) => e78 + t88.usedMemory, 0) : null;
  }
  getUsedMemoryForLayerView(e78) {
    let t88 = this.overlayManager.gpuMemoryUsage;
    const i78 = this._layerClassFromLayerView(e78), r79 = this._getLayerIdxByUID(i78, e78.uid);
    return null != r79 && this._allTiles.forAll((e79) => t88 += e79.getUsedMemoryForLayer(i78, r79)), t88;
  }
  getTile(e78) {
    if (null == e78 || null == this._rootTiles)
      return null;
    const t88 = e78.split("/").map((e79) => +e79);
    if (0 === t88[0])
      return this._rootTiles.find((e79) => e79.lij[1] === t88[1] && e79.lij[2] === t88[2]);
    const i78 = 2 ** t88[0], r79 = Math.floor(t88[1] / i78), s84 = Math.floor(t88[2] / i78);
    let a85;
    if (this._rootTiles.some((e79) => e79.lij[1] === r79 && e79.lij[2] === s84 && (a85 = e79, true)), a85) {
      let e79 = 1 << t88[0] - 1;
      for (; a85.lij[0] < t88[0]; ) {
        let i79 = t88[1] & e79 ? 2 : 0;
        if ((t88[2] & e79) > 0 && i79++, !a85.children[i79])
          return null;
        a85 = a85.children[i79], e79 >>= 1;
      }
      return a28(a85.lij[0] === t88[0] && a85.lij[1] === t88[1] && a85.lij[2] === t88[2], "not the right tile?"), a85;
    }
    return null;
  }
  get renderPatchBorders() {
    return this._renderer.renderPatchBorders;
  }
  set renderPatchBorders(e78) {
    this._renderer.renderPatchBorders = e78;
  }
  get visualizeNormals() {
    return this._renderer.visualizeNormals;
  }
  set visualizeNormals(e78) {
    this._renderer.visualizeNormals = e78;
  }
  get renderingDisabled() {
    return this._renderer.renderingDisabled;
  }
  set renderingDisabled(e78) {
    this._renderer.renderingDisabled = e78;
  }
  get test() {
    const e78 = this;
    return { renderer: e78._renderer, lercDecoder: e78._lercDecoder, forceReload: () => {
      null != e78._rootTiles && e78._rootTiles.length > 0 && (e78._mergeTile(e78._rootTiles[0]), e78._viewChangeUpdate());
    }, getTiles: () => e78._allTiles.toArray(), getRenderedTiles() {
      _t2.clear(), e78._allTiles.forAll((e79) => {
        e79.visible && e79.rendered && _t2.push(e79);
      });
      const t88 = _t2.toArray();
      return u11(e78.renderOrder, t88), t88;
    }, lockTilingScheme(t88, i78) {
      e78._extentHelper.defaultTiledLayersExtent = i78, e78.tilingSchemeLogic.test.lockTilingScheme(t88);
    } };
  }
  checkAllTilesWaterproofness() {
    if (!s32)
      return;
    const e78 = this._rootTiles;
    if (null == e78)
      return;
    const t88 = (e79) => {
      var _a, _b, _c;
      return ((_c = (_b = (_a = e79 == null ? void 0 : e79.renderData) == null ? void 0 : _a.geometry) == null ? void 0 : _b.indices) == null ? void 0 : _c.length) > 0;
    }, i78 = (e79, i79) => {
      t88(e79) && console.error("Tile[", e79.lij, "] has geometry although parent[", i79.lij, "] has geom");
    }, r79 = (e79) => {
      var _a, _b;
      if (e79.intersectsClippingArea)
        if (e79.renderData && !e79.renderData.geometryState && console.error("Tile[", e79.lij, "] has renderData but not geometryState"), e79.renderData && !e79.renderData.geometry && console.error("Tile[", e79.lij, "] has renderData but not geometryInfo"), !((_a = e79.renderData) == null ? void 0 : _a.geometry) || (((_b = e79.renderData.geometry.indices) == null ? void 0 : _b.length) ?? 0) > 0 || console.error("Tile[", e79.lij, "] has renderData but no indices - geometryInfo: ", e79.renderData.geometry), t88(e79)) {
          e79.checkGeometryWaterproofness();
          for (const t89 of e79.children)
            i78(t89, e79);
        } else if (e79.isLeaf)
          console.error("Tile[", e79.lij, "] has no geometry and no children, from root to leaf");
        else
          for (const t89 of e79.children)
            r79(t89);
    }, s84 = (e79) => {
      var _a;
      const t89 = ((_a = e79.parent) == null ? void 0 : _a.visible) ?? true, i79 = e79.visible;
      e79.computeVisibility();
      const r80 = e79.visible;
      if (i79 !== r80 && t89 && console.error(" Tile[", e79.lij, "] has out of date visibility: ", i79, " instead of ", r80), !e79.isLeaf)
        for (const a85 of e79.children)
          s84(a85);
    };
    for (const a85 of e78)
      r79(a85), s84(a85);
  }
  get isGlobal() {
    return this._isGlobal;
  }
  get isWebMercator() {
    return this._isWebMercator;
  }
  get isWebMercatorOnPlateeCarree() {
    return this._isWebMercatorOnPlateeCarree;
  }
  isEastEndWrap(e78) {
    return this.isGlobal && e78[2] === this.lijEastEnd(e78[0]) - 1;
  }
  isWestEndWrap(e78) {
    return this.isGlobal && 0 === e78[2];
  }
  lijEastEnd(e78) {
    return 2 ** (e78 + (null != this.spatialReference && this.spatialReference.isGeographic ? 1 : 0));
  }
  wrapEastWest(e78) {
    const t88 = this.lijEastEnd(e78[0]), i78 = e78[2];
    if (0 <= i78 && i78 < t88)
      return e78;
    if (!this.isGlobal)
      return null;
    const r79 = (i78 + (i78 < 0 ? t88 : 0)) % t88;
    return [e78[0], e78[1], r79];
  }
  enableInternalChecks(e78) {
    E10(e78);
  }
  enableWaterproofnessChecks(e78) {
    S10(e78);
  }
};
e([y()], nt4.prototype, "_renderer", void 0), e([y({ constructOnly: true })], nt4.prototype, "_scaleRangeQueries", void 0), e([y({ constructOnly: true })], nt4.prototype, "view", void 0), e([y({ constructOnly: true })], nt4.prototype, "overlayManager", void 0), e([y()], nt4.prototype, "_hasPendingUpdates", void 0), e([y()], nt4.prototype, "_asyncWorkItems", void 0), e([y()], nt4.prototype, "_allTilesDirty", void 0), e([y()], nt4.prototype, "_allTilesSorted", void 0), e([y()], nt4.prototype, "_viewChanged", void 0), e([y()], nt4.prototype, "_splitLimits", void 0), e([y({ readOnly: true })], nt4.prototype, "_watchUpdatingTracking", void 0), e([y()], nt4.prototype, "_frameTask", void 0), e([y({ readOnly: true })], nt4.prototype, "snapLevel", null), e([y({ readOnly: true })], nt4.prototype, "lodSnapping", null), e([y()], nt4.prototype, "_userClippingExtent", null), e([y()], nt4.prototype, "_rootTilesExtent", void 0), e([y({ readOnly: true })], nt4.prototype, "extent", null), e([y({ readOnly: true })], nt4.prototype, "groundExtent", null), e([y({ readOnly: true })], nt4.prototype, "_tilingSchemeExtent", null), e([y({ readOnly: true })], nt4.prototype, "updating", null), e([y({ readOnly: true })], nt4.prototype, "running", null), e([y(t30)], nt4.prototype, "updatingProgress", void 0), e([y({ readOnly: true })], nt4.prototype, "updatingProgressValue", null), e([y()], nt4.prototype, "_maxNumUpdating", void 0), e([y()], nt4.prototype, "baseOpacity", null), e([y()], nt4.prototype, "hasCompositeBlendMode", void 0), e([y({ readOnly: true })], nt4.prototype, "viewingMode", null), e([y()], nt4.prototype, "maxTextureScale", void 0), e([y({ readOnly: true })], nt4.prototype, "ready", null), e([y({ value: O9.FRONT_TO_BACK })], nt4.prototype, "renderOrder", null), e([y({ readOnly: true })], nt4.prototype, "rootTiles", null), e([y()], nt4.prototype, "_rootTiles", void 0), e([y({ readOnly: true })], nt4.prototype, "spatialReference", null), e([y({ type: h7 })], nt4.prototype, "backgroundColor", null), e([y({ value: false })], nt4.prototype, "slicePlaneEnabled", null), e([y({ readOnly: true })], nt4.prototype, "tilingScheme", void 0), e([y({ readOnly: true })], nt4.prototype, "tilingSchemeLocked", null), e([y({ readOnly: true })], nt4.prototype, "tilingSchemeLogic", void 0), e([y()], nt4.prototype, "wireframe", null), e([y({ value: false })], nt4.prototype, "suspended", null), e([y()], nt4.prototype, "textureFadeDuration", null), e([y()], nt4.prototype, "visibleElevationBounds", void 0), e([y()], nt4.prototype, "rootTileElevationBounds", void 0), e([y()], nt4.prototype, "_layerViewsDirty", void 0), e([y()], nt4.prototype, "renderPatchBorders", null), e([y()], nt4.prototype, "visualizeNormals", null), e([y()], nt4.prototype, "renderingDisabled", null), nt4 = e([a4("esri.views.3d.terrain.TerrainSurface")], nt4);
var lt4 = nt4;
function ot4(e78, t88) {
  return e78[0] === t88[0] && e78[1] === t88[1] && e78[2] === t88[2];
}
function ht4(e78) {
  const t88 = e78.children;
  if (!t88[0])
    return false;
  for (const i78 of t88)
    if (i78.shouldLoad)
      return true;
  for (const i78 of t88)
    if (ht4(i78))
      return true;
  return false;
}
function dt3(e78) {
  var _a;
  return e78.isLeaf && (((_a = e78.parent) == null ? void 0 : _a.shouldLoad) ?? false);
}
var pt3 = n19();
var ut4 = i4();
var ct4 = [0, 0, 0];
var _t2 = new l2();
var gt2 = { spatialReference: null, extent: i4(), context: "ground" };
var mt3 = { spatialReference: null, extent: null, scale: 0 };
function Tt2(e78, t88, i78) {
  var _a;
  for (const r79 of e78) {
    if (!r79.containsPointXY(t88, i78))
      continue;
    let e79 = r79;
    for (; e79 && !e79.renderData; ) {
      const r80 = (t88 > e79.extentMidX ? 1 : 0) + (i78 < e79.extentMidY ? 2 : 0);
      e79 = e79.children[r80];
    }
    const s84 = ((_a = e79 == null ? void 0 : e79.renderData) == null ? void 0 : _a.geometryState.samplerData) ?? null;
    return e51(t88, i78, s84);
  }
  return null;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ModelDirtySet.js
var n82 = class {
  constructor(e78, t88, r79) {
    this.operation = e78, this.geometry = t88, this.states = r79;
  }
};
var m41 = class extends m {
  constructor(e78) {
    super(e78), this._residentGeomRecords = /* @__PURE__ */ new Map(), this._dirtyGeomRecords = /* @__PURE__ */ new Map(), this.dirty = false;
  }
  commitLayer(e78, t88) {
    const r79 = this._dirtyGeomRecords.get(e78);
    r79 && (r79.forEach((r80, o77) => {
      const s84 = this._ensureGeomRecord(e78, o77);
      r80.forEach(({ geometry: e79, operation: r81, states: d63 }, n103) => {
        let m55 = false;
        if (r81 === E11.UPDATE) {
          const r82 = s84.get(n103);
          if (r82) {
            if (d63 & I7.TRANSFORMATION) {
              const t89 = this.model.getObject(o77);
              this.model.updateRenderGeometryTransformation(t89, e79, r82) && (m55 = true);
            }
            m55 || t88.updates.push({ renderGeometry: r82, updateType: d63 });
          } else
            s20(false, "ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update");
        }
        if (r81 === E11.REMOVE || m55) {
          const e80 = s84.get(n103);
          e80 ? (t88.removes.push(e80), s84.delete(n103)) : r81 === E11.REMOVE && s20(false, "ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove");
        }
        if (r81 === E11.ADD || m55) {
          const r82 = this.model.getObject(o77);
          if (null != r82) {
            const o78 = this.model.getRenderGeometry(r82, e79);
            t88.adds.push(o78), s84.set(n103, o78);
          }
        }
      }), 0 === s84.size && this._residentGeomRecords.get(e78).delete(o77);
    }), 0 === this._residentGeomRecords.get(e78).size && this._residentGeomRecords.delete(e78), this._dirtyGeomRecords.delete(e78), this.dirty = this._hasDirtyGeometryRecords);
  }
  getResidentRenderGeometries(e78, t88) {
    const r79 = this._residentGeomRecords.get(e78);
    r79 && r79.forEach((e79) => e79.forEach((e80) => t88.push(e80)));
  }
  _objectStateChanged(e78, t88) {
    for (const r79 of t88.geometries)
      this._updateOrCreateDirtyRecord(t88, r79, null, E11.UPDATE, e78);
  }
  visibilityChanged(e78) {
    this._objectStateChanged(I7.VISIBILITY, e78);
  }
  highlightChanged(e78) {
    this._objectStateChanged(I7.HIGHLIGHT, e78);
  }
  occlusionChanged(e78) {
    this._objectStateChanged(I7.OCCLUDEE, e78);
  }
  objectGeometryUpdated(e78) {
    this._updateOrCreateDirtyRecord(e78.object, e78.geometry, null, E11.UPDATE, I7.GEOMETRY);
  }
  layerAdded(e78) {
    e78.objects.forAll((t88) => this._layerObjectAdded(e78, t88));
  }
  layerRemoved(e78) {
    e78.objects.forAll((t88) => this._layerObjectRemoved(e78, t88));
  }
  layerObjectAdded(e78) {
    this._layerObjectAdded(e78.layer, e78.object);
  }
  _layerObjectAdded(e78, t88) {
    const r79 = e78.id;
    for (const o77 of t88.geometries)
      this._objectGeometryAdded(t88, o77, r79);
  }
  layerObjectRemoved(e78) {
    this._layerObjectRemoved(e78.layer, e78.object);
  }
  layerObjectsAdded(e78) {
    for (const t88 of e78.objects)
      this._layerObjectAdded(e78.layer, t88);
  }
  layerObjectsRemoved(e78) {
    for (const t88 of e78.objects)
      this._layerObjectRemoved(e78.layer, t88);
  }
  _layerObjectRemoved(e78, t88) {
    const r79 = e78.id;
    for (const o77 of t88.geometries)
      this._objectGeometryRemoved(t88, o77, r79);
  }
  shaderTransformationChanged(e78) {
    const t88 = this._residentGeomRecords.get(e78.id);
    t88 && t88.forEach((e79, t89) => {
      const r79 = this.model.getObject(t89);
      r79 && r79.hasVolativeTransformation() && e79.forEach((e80) => e80.shaderTransformationChanged());
    });
  }
  objectTransformation(e78) {
    const t88 = this._getParentLayerId(e78), r79 = e78.id;
    this._ensureGeomRecord(t88, r79).forEach((r80) => {
      this._updateOrCreateDirtyRecord(e78, r80.geometry, t88, E11.UPDATE, I7.TRANSFORMATION);
    });
  }
  objectShaderTransformation() {
  }
  objectGeometryAdded(e78) {
    this._objectGeometryAdded(e78.object, e78.geometry);
  }
  _objectGeometryAdded(e78, t88, r79 = null) {
    this._updateOrCreateDirtyRecord(e78, t88, r79, E11.ADD);
  }
  objectGeometryRemoved(e78) {
    this._objectGeometryRemoved(e78.object, e78.geometry);
  }
  _objectGeometryRemoved(e78, t88, r79 = null) {
    this._updateOrCreateDirtyRecord(e78, t88, r79, E11.REMOVE);
  }
  _updateOrCreateDirtyRecord(e78, t88, r79, o77, s84 = I7.NONE) {
    r79 = r79 ?? this._getParentLayerId(e78);
    const d63 = e78.id, m55 = t88.id, h58 = this._ensureDirtyRecord(r79, d63), y41 = h58.get(m55);
    if (y41) {
      const e79 = y41.operation;
      e79 === E11.REMOVE && o77 === E11.ADD && y41.states !== I7.NONE ? y41.operation = E11.UPDATE : e79 === E11.REMOVE && o77 === E11.ADD || e79 === E11.ADD && o77 === E11.REMOVE ? h58.delete(m55) : e79 !== E11.UPDATE || o77 !== E11.REMOVE && o77 !== E11.UPDATE ? (s20((e79 === E11.REMOVE || e79 === E11.ADD) && o77 === E11.UPDATE, "ModelDirtySet.objectGeometryAdded: inconsistent state"), y41.states |= s84) : (y41.operation = o77, y41.states |= s84);
    } else
      h58.set(m55, new n82(o77, t88, s84));
    this.dirty = this._hasDirtyGeometryRecords;
  }
  _ensureGeomRecord(e78, t88) {
    let r79 = this._residentGeomRecords.get(e78);
    r79 || (r79 = /* @__PURE__ */ new Map(), this._residentGeomRecords.set(e78, r79));
    let o77 = r79.get(t88);
    return o77 || (o77 = /* @__PURE__ */ new Map(), r79.set(t88, o77)), o77;
  }
  get _hasDirtyGeometryRecords() {
    return n2(this._dirtyGeomRecords, (e78) => n2(e78, (e79) => e79 && e79.size > 0));
  }
  _ensureDirtyRecord(e78, t88) {
    let r79 = this._dirtyGeomRecords.get(e78);
    r79 || (r79 = /* @__PURE__ */ new Map(), this._dirtyGeomRecords.set(e78, r79));
    let o77 = r79.get(t88);
    return o77 || (o77 = /* @__PURE__ */ new Map(), r79.set(t88, o77)), o77;
  }
  _getParentLayerId(e78) {
    return e78.parentLayer ? e78.parentLayer.id : n6;
  }
  formatDebugInfo() {
    const e78 = ["ADD", "UPD", void 0, "REM"];
    let t88 = "";
    return this._dirtyGeomRecords.forEach((r79, o77) => {
      r79.forEach((r80, s84) => {
        t88.length > 0 && (t88 += "\n"), t88 += o77 + "." + s84;
        const d63 = [];
        r80.forEach((e79) => {
          const t89 = e79.operation;
          d63[t89] || (d63[t89] = []), d63[t89].push(e79.geometry.id);
        });
        for (let o78 = 0; o78 < d63.length; o78++)
          if (d63[o78]) {
            t88 += " " + e78[o78 - 1] + ": ";
            for (let e79 = 0; e79 < d63[o78].length; e79++)
              t88 += d63[o78][e79] + ", ";
          }
      });
    }), t88;
  }
  get test() {
    const e78 = this;
    return { get residentLayerCount() {
      return e78._residentGeomRecords.size;
    }, get residentObjectCount() {
      return Array.from(e78._residentGeomRecords.values()).reduce((e79, t88) => e79 + t88.size, 0);
    }, commit: (t88) => e78._dirtyGeomRecords.forEach((r79, o77) => e78.commitLayer(o77, t88)) };
  }
};
e([y({ constructOnly: true })], m41.prototype, "model", void 0), e([y()], m41.prototype, "dirty", void 0), m41 = e([a4("esri.views.3d.webgl-engine.lib.ModelDirtySet")], m41);
var h44 = m41;

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/Model.js
var l61 = class extends m {
  constructor() {
    super(...arguments), this.dirtySet = new h44({ model: this }), this._content = /* @__PURE__ */ new Map(), this._originFactory = new f18(null);
  }
  getObject(t88) {
    return this._content.get(t88);
  }
  add(t88) {
    const e78 = t88.id;
    s20(!this._content.has(e78), "Model/Stage already contains object to be added"), this._content.set(e78, t88), n38(t88) && this.dirtySet.layerAdded(t88);
  }
  remove(t88) {
    s20(this._content.has(t88.id), "Model/Stage doesn't contain object to be removed"), this._content.delete(t88.id), t88.unload(), n38(t88) && this.dirtySet.layerRemoved(t88);
  }
  addMany(t88) {
    for (const e78 of t88)
      null != e78 && (s20(!this._content.has(e78.id), "Model/Stage already contains object to be added"), this._content.set(e78.id, e78));
  }
  removeMany(t88) {
    for (const e78 of t88)
      s20(this._content.has(e78.id), "Model/Stage doesn't contain object to be removed"), this._content.delete(e78.id), e78.unload();
  }
  has(t88) {
    return this._content.has(t88.id);
  }
  forEachOfType(t88, e78) {
    this._content.forEach((o77) => {
      o77.type === t88 && e78(o77);
    });
  }
  getRenderGeometry(t88, e78) {
    const { shaderTransformer: o77, localOrigin: r79 } = e78, n103 = new a29(e78, { shaderTransformer: o77, castShadow: t88.castShadow });
    return n103.updateTransformation((o78) => t88.getCombinedStaticTransformation(e78, o78)), n103.localOrigin = null != r79 ? r79 : this._originFactory.getOrigin(n103.boundingSphere), n103;
  }
  updateRenderGeometryTransformation(t88, e78, o77) {
    if (null == t88)
      return false;
    o77.updateTransformation((o78) => t88.getCombinedStaticTransformation(e78, o78));
    const r79 = this._originFactory.getOrigin(o77.boundingSphere);
    return o77.localOrigin !== r79;
  }
  getStats() {
    const t88 = {}, e78 = Array.from(this._content.values());
    for (let o77 = 0; o77 < e22.COUNT; ++o77)
      t88[o77] = e78.filter((t89) => t89.type === o77).length;
    return { contentTypes: t88, dirtySet: this.dirtySet.formatDebugInfo() };
  }
  get test() {
    return { content: Array.from(this._content.values()) };
  }
};
e([y({ constructOnly: true })], l61.prototype, "dirtySet", void 0), l61 = e([a4("esri.views.3d.webgl-engine.parts.Model")], l61);

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/IndexRange/ComponentRangeRunLengthEncoded.js
var t73 = class {
  constructor(t88) {
    this._totalCount = t88, this._indexRanges = [0, t88];
  }
  allVisible() {
    return this.componentCount() === this._totalCount;
  }
  allInvisible() {
    return 0 === this._indexRanges.length;
  }
  componentCount() {
    const t88 = this._indexRanges;
    let n103 = 0;
    for (let e78 = 0; e78 < t88.length; e78 += 2)
      n103 += t88[e78 + 1];
    return n103;
  }
  reset(t88) {
    "all" === t88 || t88.length === this._totalCount ? this._indexRanges = [0, this._totalCount] : this._indexRanges = n83(t88);
  }
  forEachComponent(t88) {
    const n103 = this._indexRanges;
    for (let e78 = 0; e78 < n103.length; e78 += 2) {
      const s84 = n103[e78], o77 = s84 + n103[e78 + 1];
      for (let n104 = s84; n104 < o77; n104++)
        if (!t88(n104))
          return false;
    }
    return true;
  }
  forEachComponentRange(t88) {
    const n103 = this._indexRanges;
    for (let e78 = 0; e78 < n103.length; e78 += 2) {
      const s84 = n103[e78];
      if (!t88(s84, s84 + n103[e78 + 1]))
        return false;
    }
    return true;
  }
  computeOffsetRanges(t88) {
    const n103 = new Array(this._indexRanges.length), e78 = this._indexRanges;
    for (let s84 = 0; s84 < e78.length; s84 += 2) {
      const o77 = e78[s84], r79 = o77 + e78[s84 + 1], i78 = t88[o77], l75 = t88[r79];
      n103[s84] = i78, n103[s84 + 1] = l75 - i78;
    }
    return n103;
  }
};
function n83(t88) {
  const n103 = new Array();
  if (0 === t88.length)
    return n103;
  let e78 = t88[0], s84 = 1;
  for (let o77 = 1; o77 < t88.length; o77++) {
    const r79 = t88[o77];
    e78 + s84 === r79 ? s84 += 1 : (n103.push(e78), n103.push(s84), e78 = r79, s84 = 1);
  }
  return n103.push(e78), n103.push(s84), n103;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentData.js
var e58 = class {
  constructor(e78, h58) {
    this.offsets = h58, this.pickability = null, this.highlightCounts = null, this.verticalOffsets = null, this.cachedGeometryRanges = null, this.cachedHighlightRanges = null, this.cachedDefaultRanges = null;
    const i78 = this.count;
    this.visibility = new t73(i78), this.materialDataBuffer = e78.getBuffer(i78), this.materialDataIndices = new Uint16Array(i78);
    for (let t88 = 0; t88 < i78; t88++)
      this.materialDataIndices[t88] = this.materialDataBuffer.acquireIndex();
  }
  destroy() {
    for (let t88 = 0; t88 < this.count; t88++)
      this.materialDataBuffer.releaseIndex(this.materialDataIndices[t88]);
  }
  get count() {
    return this.offsets.length - 1;
  }
  get geometryRanges() {
    return null == this.cachedGeometryRanges && (this.cachedGeometryRanges = this.visibility.computeOffsetRanges(this.offsets)), this.cachedGeometryRanges;
  }
  get highlightRanges() {
    return null == this.highlightCounts ? null : (this._updateCachedHighlightRanges(), this.cachedHighlightRanges);
  }
  get defaultShadowMapRanges() {
    return null == this.highlightCounts ? this.geometryRanges : (this._updateCachedHighlightRanges(), this.cachedDefaultRanges);
  }
  highlightsDirty() {
    this.cachedHighlightRanges = null, this.cachedDefaultRanges = null;
  }
  visibilityDirty() {
    this.cachedGeometryRanges = null, this.highlightsDirty();
  }
  _updateCachedHighlightRanges() {
    if ((null == this.cachedHighlightRanges || null == this.cachedDefaultRanges) && null != this.highlightCounts) {
      const { highlightRanges: t88, defaultRanges: e78 } = h45(this.highlightCounts, this.visibility, this.offsets);
      this.cachedHighlightRanges = t88, this.cachedDefaultRanges = e78;
    }
  }
};
function h45(t88, e78, h58) {
  const i78 = [], s84 = [];
  let a85 = h58.length, n103 = h58.length;
  return e78.forEachComponent((e79) => (t88[e79] > 0 ? (a85 !== e79 - 1 && (i78.length && i78.push(h58[a85 + 1] - i78[i78.length - 1]), i78.push(h58[e79])), a85 = e79) : (n103 !== e79 - 1 && (s84.length && s84.push(h58[n103 + 1] - s84[s84.length - 1]), s84.push(h58[e79])), n103 = e79), true)), i78.length && i78.push(h58[a85 + 1] - i78[i78.length - 1]), s84.length && s84.push(h58[n103 + 1] - s84[s84.length - 1]), { highlightRanges: i78, defaultRanges: s84 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ComponentUtils.js
function n84(n103, i78, e78, s84) {
  if (e78 >= i78)
    return n103;
  null == n103 && (n103 = r63());
  const a85 = n103.isVisibleBit;
  let l75 = n103.data;
  const c75 = u45(l75), f59 = e78 / c75 | 0, h58 = e78 - c75 * f59, B21 = (i78 - 1) / c75 | 0, E43 = l75, b31 = s84 === a85;
  if (!(e78 < E43.length * c75) && b31) {
    const n104 = f59 + 1, i79 = Math.ceil(E43.length * n), r79 = B21 + 1;
    let e79 = Math.max(n104, i79);
    e79 = Math.min(e79, r79), l75 = new Uint32Array(e79), l75.set(E43);
  }
  return f59 < l75.length && (l75[f59] = o64(l75[f59], h58, b31)), n103.data = l75, n103;
}
function i66(t88, n103) {
  if (null == t88)
    return true;
  const { isVisibleBit: i78, data: r79 } = t88, o77 = u45(r79);
  return n103 < r79.length * o77 ? e59(i78, r79, n103, o77) : !t88.isVisibleBit;
}
function r63(t88 = true) {
  return { isVisibleBit: !t88, data: new Uint32Array(0) };
}
function e59(t88, n103, i78, r79) {
  const e78 = i78 / r79 | 0, u58 = i78 - e78 * r79;
  return s70(n103[e78], u58) === t88;
}
function u45(t88) {
  const n103 = 8;
  return t88.BYTES_PER_ELEMENT * n103;
}
function o64(t88, n103, i78) {
  return t88 & ~(1 << n103) | (i78 ? 1 : 0) << n103;
}
function s70(t88, n103) {
  return 0 != (t88 & 1 << n103);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/IntersectionGeometry.js
var f47 = class {
  constructor(t88, o77) {
    this._components = o77, this._indices = null != t88.indices ? t14(t88.indices) : y7(t88.positions.length / 3), this._positions = t88.positions, this._componentIntersectionData = new Array(o77.count);
  }
  getComponentAabb(t88, o77) {
    this._perComponentAabbs || (this._perComponentAabbs = this._computePerComponentAabbs());
    for (let n103 = 0; n103 < 6; n103++)
      o77[n103] = this._perComponentAabbs[6 * t88 + n103];
    return o77;
  }
  getComponentPositions(t88, o77) {
    o77.indices = this._indices, o77.data = this._positions, o77.stride = 3, o77.startIndex = this._components.offsets[t88], o77.endIndex = this._components.offsets[t88 + 1];
  }
  intersect(o77, n103, s84, i78, e78, f59, b31) {
    const d63 = new s23(this._positions, 3, false, 3), A39 = this._indices, C30 = this._components.offsets, g49 = T9(o77, n103, _32), j29 = o77[2], y41 = n103[2];
    this._components.visibility.forEachComponent((m55) => {
      if (!i66(this._components.pickability, m55))
        return true;
      const a85 = this.getComponentAabb(m55, u46);
      if (null != f59) {
        const t88 = f59[m55];
        null != e78 ? e78.componentOffset = t88 : (o77[2] = j29 - t88, n103[2] = y41 - t88);
      }
      if (null != e78 && e78.applyToAabb(a85), !I6(a85, o77, g49, s84))
        return true;
      const _42 = C30[m55] / 3, I29 = C30[m55 + 1] / 3, x36 = (o78, n104, s85) => b31(m55, o78, S4(n104, n104, i78), s85);
      return null == e78 && I29 - _42 > s69 ? (null == this._componentIntersectionData[m55] && (this._componentIntersectionData[m55] = new d50(this._indices, _42, I29, d63)), this._componentIntersectionData[m55].intersectRay({ r0: o77, r1: n103 }, x36)) : g8(o77, n103, _42, I29, A39, d63, void 0, e78, x36), true;
    });
  }
  _computePerComponentAabbs() {
    const t88 = this._components.count, o77 = t20(6 * t88), n103 = this._indices, i78 = this._positions, e78 = this._components.offsets;
    let r79 = 0;
    for (let s84 = 0; s84 < t88; s84++) {
      const t89 = e78[s84], p70 = e78[s84 + 1];
      let m55 = 1 / 0, c75 = 1 / 0, a85 = 1 / 0, h58 = -1 / 0, l75 = -1 / 0, f59 = -1 / 0;
      for (let o78 = t89; o78 < p70; o78++) {
        const t90 = 3 * n103[o78], s85 = i78[t90], e79 = i78[t90 + 1], r80 = i78[t90 + 2];
        m55 = Math.min(m55, s85), c75 = Math.min(c75, e79), a85 = Math.min(a85, r80), h58 = Math.max(h58, s85), l75 = Math.max(l75, e79), f59 = Math.max(f59, r80);
      }
      o77[r79++] = m55, o77[r79++] = c75, o77[r79++] = a85, o77[r79++] = h58, o77[r79++] = l75, o77[r79++] = f59;
    }
    return o77;
  }
  get positions() {
    return this._positions;
  }
  get indices() {
    return this._indices;
  }
};
var _32 = n7();
var u46 = i8();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Renderable.js
var t74 = class {
  constructor(t88, s84, e78) {
    this.material = t88, this.geometry = s84, this.meta = e78;
  }
  destroy() {
    this.material.dispose(), this.geometry.dispose();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/RenderGeometry.js
var s71 = class {
  constructor(s84, i78, t88, e78) {
    this.vao = s84, this.primitiveType = i78, this.parameters = t88, this.indexed = e78;
  }
  dispose() {
    this.vao.dispose();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/depthRange.js
var r64 = class {
  constructor() {
    this.near = Number.MAX_VALUE, this.far = -Number.MAX_VALUE;
  }
};
function n85(r79, n103) {
  return { near: r79, far: n103 };
}
function a67(r79) {
  return r79 ? t75(r79, 1 / 0, -1 / 0) : n85(1 / 0, -1 / 0);
}
function t75(r79, n103, a85) {
  return r79.near = n103, r79.far = a85, r79;
}
function e60(r79, n103, a85 = r79) {
  return null != n103 && (a85.near = Math.min(r79.near, n103.near), a85.far = Math.max(r79.far, n103.far)), a85;
}
function u47(r79, n103) {
  return r79.near <= n103 && n103 <= r79.far;
}
var f48 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/DepthRange.js
function S24(t88, n103) {
  const o77 = a67(), { eye: e78, frustum: r79, viewForward: a85 } = t88;
  n103.forAll((t89) => {
    const n104 = null != t89.offsetObb ? t89.offsetObb : t89.obb, s84 = P3(J(G19, n104.center, e78), a85), l75 = ne(n104, a85);
    if (u47(o77, s84 - l75) && u47(o77, s84 + l75))
      return;
    const u58 = C26(n104, r79);
    if (-1 === u58)
      return;
    if (0 === u58)
      return y34.far = s84 + l75, y34.near = s84 - l75, void e60(o77, y34);
    const i78 = q19.pushNew();
    i78.near = s84 - l75, i78.far = s84 + l75, i78.mask = u58, i78.object = t89;
  });
  for (let s84 = 0; s84 < q19.length; s84++) {
    const t89 = q19.data[s84];
    if (u47(o77, t89.near) && u47(o77, t89.far))
      continue;
    y34.far = t89.far, y34.near = 1 / 0;
    const n104 = N18(null != t89.object.offsetObb ? t89.object.offsetObb : t89.object.obb, e78, A32, (n105) => {
      let o78 = x31;
      for (let e79 = 0; e79 < R18 && n105.length > 0; e79++) {
        if (0 == (t89.mask & 1 << e79))
          continue;
        B18(r79[e79], n105, o78);
        const a86 = n105;
        n105 = o78, o78 = a86;
      }
      for (let t90 = 0; t90 < n105.length; t90 += 3) {
        o4(v37, n105.data[t90], n105.data[t90 + 1], n105.data[t90 + 2]);
        const o79 = P3(J(v37, v37, e78), a85);
        y34.near = Math.min(y34.near, o79);
      }
    });
    0 === n104 && (y34.near = 0), e60(o77, y34);
  }
  return q19.length = 0, o77;
}
var q19 = new l2({ allocator: (t88) => t88 || { near: 1 / 0, far: -1 / 0, mask: 0, object: null }, deallocator: (n103) => (n103.object = i(n103.object), n103) });
var y34 = a67();
var v37 = n7();
var O26 = n7();
var A32 = new l2({ deallocator: null });
var x31 = new l2({ deallocator: null });
function B18(t88, n103, o77) {
  o77.length = 0;
  const e78 = n103.length - 3;
  F25(v37, n103, e78);
  const r79 = R6(t88, v37);
  r79 <= 0 && (o77.push(v37[0]), o77.push(v37[1]), o77.push(v37[2]));
  let a85 = 0, s84 = r79;
  for (; a85 < e78; a85 += 3) {
    F25(O26, n103, a85);
    const e79 = R6(t88, O26);
    if (s84 * e79 < 0) {
      A3(v37, O26, v37, e79 / (e79 - s84)), M19(o77, v37);
    }
    e79 <= 0 && M19(o77, O26), s84 = e79, r7(v37, O26);
  }
  if (s84 * r79 < 0) {
    F25(O26, n103, e78);
    A3(v37, O26, v37, r79 / (r79 - s84)), M19(o77, v37);
  }
}
function F25(t88, n103, o77) {
  return o4(t88, n103.data[o77], n103.data[o77 + 1], n103.data[o77 + 2]);
}
function M19(t88, n103) {
  t88.push(n103[0]), t88.push(n103[1]), t88.push(n103[2]);
}
function N18(t88, n103, r79, s84) {
  S7(E36, t88.quaternion), J(G19, n103, t88.center), E(G19, G19, E36);
  const f59 = 8 * ((G19[0] < -t88.halfSize[0] ? -1 : G19[0] > t88.halfSize[0] ? 1 : 0) + 3 * (G19[1] < -t88.halfSize[1] ? -1 : G19[1] > t88.halfSize[1] ? 1 : 0) + 9 * (G19[2] < -t88.halfSize[2] ? -1 : G19[2] > t88.halfSize[2] ? 1 : 0) + 13), i78 = P23[f59];
  if (0 === i78)
    return i78;
  p9(D17, t88.quaternion), f9(D17, D17, t88.halfSize);
  const h58 = (n104, o77) => {
    const e78 = P23[f59 + o77 + 1];
    return o4(n104, ((1 & e78) << 1) - 1, (2 & e78) - 1, ((4 & e78) >> 1) - 1), S4(n104, n104, D17), u2(n104, t88.center, n104);
  };
  return r79.length = 0, M19(r79, h58(H24, 0)), M19(r79, h58(I26, 1)), M19(r79, h58(G19, 2)), M19(r79, h58(J14, 3)), s84(r79), 1 === i78 ? i78 : (r79.length = 0, M19(r79, H24), M19(r79, J14), M19(r79, h58(G19, 4)), M19(r79, h58(K13, 5)), s84(r79), 2 === i78 || (r79.length = 0, M19(r79, H24), M19(r79, K13), M19(r79, h58(G19, 6)), M19(r79, I26), s84(r79)), i78);
}
var P23 = (() => {
  const t88 = new Array(216);
  let n103 = 0;
  const o77 = (o78) => {
    for (let e78 = 0; e78 < o78.length; e78++)
      t88[n103 + e78] = o78[e78];
    n103 += 8;
  };
  return o77([3, 0, 6, 2, 3, 1, 5, 4]), o77([2, 0, 2, 3, 1, 5, 4, 0]), o77([3, 1, 0, 2, 3, 7, 5, 4]), o77([2, 0, 1, 3, 2, 6, 4, 0]), o77([1, 0, 1, 3, 2, 0, 0, 0]), o77([2, 1, 5, 7, 3, 2, 0, 0]), o77([3, 2, 0, 1, 3, 7, 6, 4]), o77([2, 2, 0, 1, 3, 7, 6, 0]), o77([3, 3, 0, 1, 5, 7, 6, 2]), o77([2, 0, 1, 5, 4, 6, 2, 0]), o77([1, 0, 1, 5, 4, 0, 0, 0]), o77([2, 1, 3, 7, 5, 4, 0, 0]), o77([1, 0, 2, 6, 4, 0, 0, 0]), o77([0, 0, 0, 0, 0, 0, 0, 0]), o77([1, 1, 3, 7, 5, 0, 0, 0]), o77([2, 2, 3, 7, 6, 4, 0, 0]), o77([1, 2, 3, 7, 6, 0, 0, 0]), o77([2, 3, 1, 5, 7, 6, 2, 0]), o77([3, 4, 0, 1, 5, 7, 6, 2]), o77([2, 5, 7, 6, 4, 0, 1, 0]), o77([3, 5, 0, 1, 3, 7, 6, 4]), o77([2, 4, 5, 7, 6, 2, 0, 0]), o77([1, 4, 5, 7, 6, 0, 0, 0]), o77([2, 5, 1, 3, 7, 6, 4, 0]), o77([3, 6, 0, 2, 3, 7, 5, 4]), o77([2, 6, 2, 3, 7, 5, 4, 0]), o77([3, 7, 6, 2, 3, 1, 5, 4]), t88;
})();
var R18 = 4;
function C26(t88, n103) {
  let o77 = 0;
  for (let e78 = 0; e78 < R18; e78++) {
    const r79 = T7(t88, n103[e78]);
    if (r79 > 0)
      return -1;
    0 === r79 && (o77 |= 1 << e78);
  }
  return o77;
}
var D17 = e16();
var E36 = e18();
var G19 = n7();
var H24 = n7();
var I26 = n7();
var J14 = n7();
var K13 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/RenderSubmitSystem.js
var e61 = class {
  constructor(t88) {
    this._objects = t88;
  }
  submit(t88, e78) {
    this._objects.preSubmit(e78), this._objects.visibleObjects.forAll((s84) => s84.renderable.material.submit(t88, e78, s84));
  }
  queryShadowCasterDepthRange(e78) {
    return this._objects.visibleObjects.length ? S24(e78, this._objects.visibleObjects) : null;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/UniformComponentParameters.js
var t76 = class {
  constructor() {
    this.externalColor = n19(), this.externalColorMixMode = n26.Multiply, this.castShadows = true, this.pickable = true, this.elevationOffset = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechnique.js
var T25 = class _T extends e25 {
  initializeConfiguration(r79, i78) {
    i78.spherical = r79.viewingMode === l14.Global, i78.doublePrecisionRequiresObfuscation = r79.rctx.driverTest.doublePrecisionRequiresObfuscation.result;
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _T.shader.get().build(this.configuration), M20);
  }
  _setPipelineState(e78) {
    const i78 = this.configuration, o77 = i78.integratedMeshMode !== v13.None, n103 = e78 === o22.NONE, d63 = e78 === o22.FrontFace;
    return W4({ blending: i78.output !== h13.Color && i78.output !== h13.Alpha || !i78.blendingEnabled ? null : n103 ? c15 : A8(e78), culling: h15(i78.cullFace), depthTest: { func: l16(e78) }, depthWrite: n103 || d63 ? a25 : null, colorWrite: _7, stencilWrite: o77 || i78.hasOccludees ? e26 : null, stencilTest: o77 ? u7(a19.IntegratedMeshMaskExcluded) : i78.hasOccludees ? f14 : null, polygonOffset: n103 || d63 ? i78.hasPolygonOffset ? { factor: 2, units: 2 } : null : _8 });
  }
  initializePipeline() {
    return this._setPipelineState(this.configuration.transparencyPassType);
  }
};
T25.shader = new t24(F13, () => import("./ComponentShader.glsl-WUNB3222.js"));
var M20 = /* @__PURE__ */ new Map([[O4.POSITION, 0], [O4.NORMAL, 1], [O4.NORMALCOMPRESSED, 1], [O4.COLOR, 2], [O4.UV0, 3], [O4.UVREGION, 4], [O4.COMPONENTINDEX, 5]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/core/material/MaterialBase.js
var e62 = class extends n29 {
  constructor() {
    super(...arguments), this._dirty = true;
  }
  _setDirty() {
    this._dirty = true;
  }
  _setClean() {
    if (this._dirty = false, null != this._parameterBlocks)
      for (const t88 of this._parameterBlocks)
        this[t88]._setClean();
  }
  get dirty() {
    return this._dirty || this._checkParameterBlocksDirty();
  }
  _checkParameterBlocksDirty() {
    if (null == this._parameterBlocks)
      return false;
    for (const t88 of this._parameterBlocks)
      if (this[t88].dirty)
        return true;
    return false;
  }
};
var r65 = class {
  constructor() {
    this._dirty = true;
  }
  _setDirty() {
    this._dirty = true;
  }
  _setClean() {
    this._dirty = false;
  }
  get dirty() {
    return this._dirty;
  }
};
function s72(t88 = {}) {
  return (e78, r79) => {
    const s84 = e78._parameterCount ?? 0;
    if (e78._parameterCount = s84 + 1, t88.vectorOps) {
      const i78 = t88.vectorOps;
      Object.defineProperty(e78, r79, { get() {
        return this[s84];
      }, set(t89) {
        const e79 = this[s84];
        if (null == e79)
          this[s84] = t89;
        else {
          if (i78.equals(e79, t89))
            return;
          i78.copy(e79, t89);
        }
        this._setDirty();
      } });
    } else
      Object.defineProperty(e78, r79, { get() {
        return this[s84];
      }, set(e79) {
        this[s84] !== e79 && (t88.dispose && this[s84] && this[s84].dispose(), this[s84] = e79, this._setDirty());
      } });
  };
}
function i67() {
  return (t88, e78) => {
    const r79 = t88._parameterCount ?? 0;
    t88._parameterCount = r79 + 1, t88._parameterBlocks = t88._parameterBlocks || [], t88._parameterBlocks.push(r79), Object.defineProperty(t88, e78, { get() {
      return this[r79];
    }, set(t89) {
      this[r79] !== t89 && (this[r79] = t89, this._setDirty());
    } });
  };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/util/TwoVectorPosition.js
var c59 = class {
  constructor(s84) {
    this._low = n7(), this._high = n7(), s84 && this.set(s84);
  }
  get low() {
    return this._low;
  }
  get high() {
    return this._high;
  }
  set(h58) {
    r7(this._low, r7(e63, h58));
    const i78 = J(e63, h58, this._low);
    r7(this._high, i78);
  }
  get(s84) {
    return u2(s84, this._low, this._high);
  }
  getLowScaled(s84) {
    return g3(s84, this._low, 1);
  }
};
var e63 = n23();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentMaterial.js
var F26 = class extends e62 {
  constructor(e78, t88) {
    super(), this.toMapSpace = t88, this.baseColor = r12(1, 1, 1, 1), this.usePBR = false, this.hasParametersFromSource = false, this.mrrFactors = e7(n31), this.emissiveFactor = r5(0, 0, 0), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null, this.objectOpacity = 1, this.commonMaterialParameters = new E37(), this.componentParameters = new B19(), this.textureAlphaCutoff = o23, this.alphaDiscardMode = i16.Opaque, this.isIntegratedMesh = false, this.polygonOffsetEnabled = false, this.ellipsoidMode = t31.Earth, this.hasOccludees = false, this._techniqueConfiguration = new m13();
    const i78 = new c59(e78.position), u58 = r25(e78.rotationScale);
    u5(u58, u58), this.transformNormalGlobalFromModel = r17(o13(u58, u58)), this.transformWorldFromModelTL = i78.low, this.transformWorldFromModelTH = i78.high, this.transformWorldFromModelRS = e78.rotationScale;
  }
  dispose() {
    this._technique = f(this._technique), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null;
  }
  get texture() {
    return null != this.baseColorTexture ? this.baseColorTexture.glTexture : null;
  }
  get textureMetallicRoughness() {
    return null != this.metallicRoughnessTexture ? this.metallicRoughnessTexture.glTexture : null;
  }
  get textureEmissive() {
    return null != this.emissionTexture ? this.emissionTexture.glTexture : null;
  }
  get textureOcclusion() {
    return null != this.occlusionTexture ? this.occlusionTexture.glTexture : null;
  }
  get textureNormal() {
    return null != this.normalTexture ? this.normalTexture.glTexture : null;
  }
  prepareTechnique(e78, t88, r79, s84) {
    const o77 = this._techniqueConfiguration;
    o77.hasVertexColors = s84.colors, o77.hasNormals = s84.normals, o77.textureCoordinateType = s84.textureCoordinates, o77.hasMetallicRoughnessTexture = null != this.metallicRoughnessTexture, o77.hasEmissionTexture = null != this.emissionTexture, o77.hasOcclusionTexture = null != this.occlusionTexture, o77.hasNormalTexture = null != this.normalTexture, o77.transparencyPassType = t88.identifier === o39.Material && null != r79.transparencyPassType ? r79.transparencyPassType : o22.NONE, o77.hasMultipassTerrain = t88.identifier === o39.Material && null != r79.multipassTerrain && r79.multipassTerrain.enabled, o77.cullAboveGround = t88.identifier === o39.Material && null != r79.multipassTerrain && r79.multipassTerrain.cullAboveGround, o77.ellipsoidMode = this.ellipsoidMode, o77.componentData = this.componentParameters.type, o77.cullFace = this.commonMaterialParameters.cullFace, o77.doubleSidedMode = this.commonMaterialParameters.doubleSided ? i18.View : i18.None, o77.hasBaseColorTexture = null != this.baseColorTexture;
    const a85 = this._computeWhichMaterialPass();
    o77.blendingEnabled = a85 === _33.Transparent || a85 === _33.OpaqueAndTransparent, o77.alphaDiscardMode = this.alphaDiscardMode, o77.integratedMeshMode = this.isIntegratedMesh ? G20(r79) ? I11(r79) ? v13.ColorOverlayWithWater : v13.ColorOverlay : v13.NoOverlay : v13.None, o77.hasPolygonOffset = this.polygonOffsetEnabled;
    const i78 = this.hasParametersFromSource && null == this.baseColorTexture;
    if (o77.pbrMode = o77.integratedMeshMode === v13.ColorOverlayWithWater ? c14.WaterOnIntegratedMesh : this.usePBR ? i78 ? c14.Schematic : c14.Normal : c14.Disabled, o77.normalType = o77.integratedMeshMode === v13.None ? o77.hasNormals ? a24.Compressed : a24.ScreenDerivative : a24.Ground, o77.hasSlicePlane = null != r79.slicePlane && this.commonMaterialParameters.hasSlicePlane, t88.identifier === o39.ShadowMap)
      o77.output = h13.Shadow, o77.vertexDiscardMode = a33.None;
    else if (t88.identifier === o39.Highlight)
      o77.output = h13.Highlight, o77.vertexDiscardMode = a33.None;
    else {
      switch (this._computeWhichMaterialPass() === _33.OpaqueAndTransparent ? o77.vertexDiscardMode = t88.transparent ? a33.Opaque : a33.Transparent : o77.vertexDiscardMode = a33.None, o77.output = t88.output, o77.receiveAmbientOcclusion = false, o77.receiveShadows = false, t88.output) {
        case h13.Color:
          o77.receiveAmbientOcclusion = r79.ssaoHelper.active, o77.hasOccludees = r79.hasOccludees, o77.receiveShadows = r79.shadowMap.ready, o77.hasScreenSpaceReflections = r79.ssr.enabled, o77.hasCloudsReflections = null != r79.cloudsFade.data;
          break;
        case h13.Alpha:
          o77.hasOccludees = r79.hasOccludees;
          break;
        case h13.ObjectAndLayerIdColor:
          o77.objectAndLayerIdColor = true;
      }
      o77.snowCover = this.hasSnowCover(r79);
    }
    return this._technique = e78.releaseAndAcquire(T25, o77, this._technique), this._setClean(), this._technique;
  }
  hasSnowCover(e78) {
    return null != e78.weather && e78.weatherVisible && "snowy" === e78.weather.type && "enabled" === e78.weather.snowCover;
  }
  submit(e78, t88, r79) {
    if (0 === this.objectOpacity)
      return;
    const s84 = r79.renderable.geometry, o77 = r79.components, a85 = r79.renderable.meta.cameraDepthSquared, i78 = o77.geometryRanges, l75 = o77.highlightRanges, n103 = o77.defaultShadowMapRanges;
    switch (this._computeWhichMaterialPass()) {
      case _33.Opaque:
        e78.materialOpaque.submitDraw(this, s84, i78, a85);
        break;
      case _33.Transparent:
        e78.materialTransparent.submitDraw(this, s84, i78, a85);
        break;
      case _33.OpaqueAndTransparent:
        e78.materialOpaque.submitDraw(this, s84, i78, a85), e78.materialTransparent.submitDraw(this, s84, i78, a85);
        break;
      case _33.IntegratedMesh:
        e78.materialIntegratedMesh.submitDraw(this, s84, i78, a85), V15(t88) && e78.highlightIntegratedMesh.submitDraw(this, s84, i78, a85);
    }
    const u58 = this.componentParameters.castShadows !== W16.None;
    u58 && e78.shadowMap.submitDraw(this, s84, i78, a85), null != l75 && (e78.highlight.submitDraw(this, s84, l75, a85), u58 && e78.highlightShadowMap.submitDraw(this, s84, l75, a85)), u58 && null != n103 && e78.defaultShadowMap.submitDraw(this, s84, n103, a85);
  }
  _computeWhichMaterialPass() {
    return this.isIntegratedMesh ? _33.IntegratedMesh : this.objectOpacity < 1 ? _33.Transparent : this.componentParameters.opaqueOverride === W16.All ? _33.Opaque : this.baseColor[3] < 1 || this.alphaDiscardMode === i16.Blend || this.alphaDiscardMode === i16.MaskBlend ? _33.Transparent : this.componentParameters.transparent === W16.None ? _33.Opaque : this.componentParameters.transparent === W16.All ? _33.Transparent : _33.OpaqueAndTransparent;
  }
};
var _33;
var W16;
e([s72({ vectorOps: G3 })], F26.prototype, "baseColor", void 0), e([s72()], F26.prototype, "usePBR", void 0), e([s72()], F26.prototype, "hasParametersFromSource", void 0), e([s72({ vectorOps: V })], F26.prototype, "mrrFactors", void 0), e([s72({ vectorOps: V })], F26.prototype, "emissiveFactor", void 0), e([s72({ dispose: true })], F26.prototype, "baseColorTexture", void 0), e([s72({ dispose: true })], F26.prototype, "metallicRoughnessTexture", void 0), e([s72({ dispose: true })], F26.prototype, "emissionTexture", void 0), e([s72({ dispose: true })], F26.prototype, "occlusionTexture", void 0), e([s72({ dispose: true })], F26.prototype, "normalTexture", void 0), e([s72()], F26.prototype, "objectOpacity", void 0), e([i67()], F26.prototype, "commonMaterialParameters", void 0), e([i67()], F26.prototype, "componentParameters", void 0), e([s72()], F26.prototype, "textureAlphaCutoff", void 0), e([s72()], F26.prototype, "alphaDiscardMode", void 0), e([s72()], F26.prototype, "isIntegratedMesh", void 0), e([s72()], F26.prototype, "polygonOffsetEnabled", void 0), e([s72()], F26.prototype, "ellipsoidMode", void 0), e([s72()], F26.prototype, "hasOccludees", void 0), function(e78) {
  e78[e78.Opaque = 0] = "Opaque", e78[e78.Transparent = 1] = "Transparent", e78[e78.OpaqueAndTransparent = 2] = "OpaqueAndTransparent", e78[e78.IntegratedMesh = 3] = "IntegratedMesh";
}(_33 || (_33 = {}));
var E37 = class extends r65 {
  constructor() {
    super(...arguments), this.doubleSided = false, this.cullFace = n25.Back, this.hasSlicePlane = true;
  }
};
e([s72()], E37.prototype, "doubleSided", void 0), e([s72()], E37.prototype, "cullFace", void 0), e([s72()], E37.prototype, "hasSlicePlane", void 0);
var B19 = class extends r65 {
  constructor() {
    super(...arguments), this.externalColor = r12(1, 1, 1, 1), this.externalColorMixMode = n26.Multiply, this.castShadows = W16.All;
  }
  get transparent() {
    return this.externalColor[3] < 1 ? W16.All : W16.None;
  }
  get opaqueOverride() {
    return this.externalColorMixMode === n26.Replace && 1 === this.externalColor[3] ? W16.All : W16.None;
  }
  get visible() {
    return this.externalColor[3] > 0 ? W16.All : W16.None;
  }
  get type() {
    return s39.Uniform;
  }
};
e([s72({ vectorOps: G3 })], B19.prototype, "externalColor", void 0), e([s72()], B19.prototype, "externalColorMixMode", void 0), e([s72()], B19.prototype, "castShadows", void 0), function(e78) {
  e78[e78.All = 0] = "All", e78[e78.Some = 1] = "Some", e78[e78.None = 2] = "None";
}(W16 || (W16 = {}));
var L24 = class extends r65 {
  constructor() {
    super(...arguments), this.texture = null, this.transparent = W16.None, this.opaqueOverride = W16.None, this.castShadows = W16.None;
  }
  get type() {
    return s39.Varying;
  }
};
function V15(e78) {
  return 0 !== e78.overlays.length && null != e78.overlays[O7.INNER].getValidTexture(A9.Highlight);
}
function G20(e78) {
  return 0 !== e78.overlays.length && null != e78.overlays[O7.INNER].getColorTextureNoRasterImage();
}
e([s72()], L24.prototype, "texture", void 0), e([s72()], L24.prototype, "transparent", void 0), e([s72()], L24.prototype, "opaqueOverride", void 0), e([s72()], L24.prototype, "castShadows", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/SimpleIndexManager.js
var e64 = class {
  constructor(e78) {
    this._maxCount = e78, this._nextIndex = 0, this._recycledIndices = [];
  }
  get activeCount() {
    return this._nextIndex - this._recycledIndices.length;
  }
  get availableCount() {
    return this._recycledIndices.length + this._maxCount - this._nextIndex;
  }
  acquire() {
    return this._recycledIndices.length > 0 ? this._recycledIndices.pop() : this.availableCount ? this._nextIndex++ : void 0;
  }
  release(e78) {
    this._recycledIndices.push(e78);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/TextureBackedBuffer.js
var h46 = class {
  constructor(h58, a85 = 1) {
    this._rctx = h58, this._fieldCount = a85, this.textureWidth = 4096, this._dirty = true;
    const d63 = new e23();
    d63.samplingMode = L.NEAREST, d63.wrapMode = D2.CLAMP_TO_EDGE, d63.width = this.textureWidth, d63.height = 1, this._texture = new T8(this._rctx, d63), this._data = new x8(new ArrayBuffer(4 * this.textureWidth));
  }
  dispose() {
    this._texture.dispose(), this._texture = void 0, this._data = void 0;
  }
  setData(t88, e78, i78, s84, r79, h58) {
    const a85 = t88 * this._fieldCount + e78;
    this._dirty = true, this._data.set(a85, 0, i78), this._data.set(a85, 1, s84), this._data.set(a85, 2, r79), this._data.set(a85, 3, h58);
  }
  setDataElement(t88, e78, i78, s84) {
    const r79 = t88 * this._fieldCount + e78;
    this._dirty = true, this._data.set(r79, i78, s84);
  }
  getDataElement(t88, e78, i78) {
    const s84 = t88 * this._fieldCount + e78;
    return this._dirty = true, this._data.get(s84, i78);
  }
  resizeToFit(e78) {
    const i78 = (e78 + 1) * this._fieldCount;
    if (i78 > this._data.count) {
      const e79 = Math.ceil(i78 / this.textureWidth) * this.textureWidth, s84 = new x8(new ArrayBuffer(4 * e79));
      s84.typedBuffer.set(this._data.typedBuffer), this._data = s84;
    }
  }
  updateTexture() {
    if (!this._dirty)
      return;
    const t88 = this._texture.descriptor.width, e78 = this._texture.descriptor.height;
    this._data.count > t88 * e78 && this._texture.resize(t88, this._data.count / t88), this._texture.setData(this._data.typedBuffer), this._dirty = false;
  }
  get texture() {
    return this._texture;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/ManagedTextureBackedBuffer.js
var r66 = 65536;
var i68 = class {
  constructor(i78, a85 = 1) {
    this.textureBuffer = new h46(i78, a85), this._indexManager = new e64(r66);
  }
  dispose() {
    this.textureBuffer.dispose(), this.textureBuffer = void 0;
  }
  get availableCount() {
    return this._indexManager.availableCount;
  }
  get activeCount() {
    return this._indexManager.activeCount;
  }
  acquireIndex() {
    const e78 = this._indexManager.acquire();
    return this.textureBuffer.resizeToFit(e78), e78;
  }
  releaseIndex(e78) {
    this._indexManager.release(e78);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/BufferManager.js
var r67 = class {
  constructor(t88, e78 = 1) {
    this._rctx = t88, this._fieldCount = e78, this._buffers = [];
  }
  garbageCollect() {
    this._buffers = this._buffers.filter((t88) => 0 !== t88.activeCount || (t88.dispose(), false));
  }
  destroy() {
    this._buffers.forEach((t88) => t88.dispose()), this._buffers = [];
  }
  getBuffer(r79) {
    for (const t88 of this._buffers)
      if (t88.availableCount >= r79)
        return t88;
    if (r79 > r66)
      return null;
    const s84 = new i68(this._rctx, this._fieldCount);
    return this._buffers.push(s84), s84;
  }
  updateTextures() {
    for (const t88 of this._buffers)
      t88.textureBuffer.updateTexture();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentObjectCollection.js
var K14 = s3.getLogger("esri.views.3d.webgl-engine.collections.Component.ComponentObjectCollection");
var Q13 = class {
  constructor(e78, t88) {
    this._renderManager = e78, this._viewingMode = t88, this._objects = [new l2(), new l2()], this._renderSubmit = new e61(this), this._renderManager.register(this._renderSubmit), this._hasObjectAndLayerId = has("enable-feature:objectAndLayerId-rendering"), this._componentBufferManager = new r67(e78.rctx, 2 + (this._hasObjectAndLayerId ? 1 : 0));
  }
  destroy() {
    s20(0 === this._objects[c24.Hidden].length && 0 === this._objects[c24.Visible].length, "ObjectCollection should be empty upon disposal"), this._componentBufferManager.destroy();
    const e78 = this._objects.flatMap((e79) => e79.toArray());
    for (const t88 of e78)
      t88 == null ? void 0 : t88.destroy();
  }
  createObject(e78) {
    const t88 = new t35();
    return t88.toMapSpace = e78.toMapSpace, t88.transform = e78.transform, t88.obb = P7(e78.obb), t88.components = new e58(this._componentBufferManager, t14(e78.geometry.componentOffsets)), t88.renderable = this._createRenderable(e78, t88.components), t88.intersectionGeometry = new f47(e78.geometry.positionData, t88.components), this._objects[t88.visible].push(t88), t88;
  }
  destroyObject(e78) {
    const t88 = e78;
    this._objects[t88.visible].removeUnordered(t88), t88.destroy(), this._notifyDirty();
  }
  setObjectVisibility(e78, t88) {
    const o77 = e78;
    t88 !== o77.visible && (this._objects[o77.visible].removeUnordered(o77), this._objects[t88].push(o77), o77.visible = t88, this._notifyDirty());
  }
  preSubmit(e78) {
    const t88 = e78.camera.eye;
    this.visibleObjects.forAll((e79) => e79.renderable.meta.cameraDepthSquared = p3(t88, e79.obb.center));
  }
  getMaterial(e78) {
    return e78.renderable.material;
  }
  updateMaterial(e78, t88) {
    const o77 = e78.renderable.material;
    t88(o77), o77.dirty && this._notifyDirty();
  }
  setAllComponentVisibilities(e78, t88) {
    const o77 = e78;
    o77.components.visibility.reset(t88), o77.components.visibilityDirty(), this._notifyDirty();
  }
  forEachVisibleComponent(e78, t88) {
    return e78.components.visibility.forEachComponent(t88);
  }
  getComponentCount(e78) {
    const t88 = e78, o77 = t88.components.visibility.componentCount();
    return { visible: o77, invisible: t88.components.count - o77 };
  }
  setComponentData(e78, t88) {
    const o77 = e78, n103 = o77.renderable.material, r79 = o77.components, i78 = r79.materialDataBuffer, s84 = r79.materialDataIndices, a85 = new t76(), c75 = i78.textureBuffer, m55 = new Uint8Array(4), l75 = new Uint32Array(m55.buffer);
    let f59 = 0, p70 = 0, h58 = 0, u58 = r79.verticalOffsets, b31 = 1 / 0, C30 = -1 / 0, v44 = false, _42 = false, w33 = 0;
    for (let y41 = 0; y41 < r79.count; y41++) {
      t88(y41, a85), f59 += +(a85.externalColor[3] < 1), p70 += +(a85.externalColorMixMode === n26.Replace && 1 === a85.externalColor[3]), h58 += +a85.castShadows, r23(a85.externalColor, a85.externalColorMixMode, m55), m55[2] = 254 & m55[2] | +a85.castShadows, c75.setData(s84[y41], 0, m55[0], m55[1], m55[2], m55[3]), v44 || (v44 = y41 > 0 && w33 !== l75[0]), w33 = l75[0], _42 || (_42 = 0 !== a85.elevationOffset), _42 && null == u58 && (u58 = new Array(y41).fill(0)), null != u58 && (u58[y41] = a85.elevationOffset), b31 = Math.min(b31, a85.elevationOffset), C30 = Math.max(C30, a85.elevationOffset), C10(a85.elevationOffset, m55), c75.setData(s84[y41], 1, m55[0], m55[1], m55[2], m55[3]);
      const e79 = a85.objectAndLayerIdColor;
      null != e79 && c75.setData(s84[y41], 2, e79[0], e79[1], e79[2], e79[3]), a85.pickable !== i66(r79.pickability, y41) && (r79.pickability = n84(r79.pickability, r79.count, y41, a85.pickable));
    }
    r79.verticalOffsets = _42 ? u58 : null, o77.offsetObb = _42 ? se(o77.obb, b31, C30, this._viewingMode, null != o77.offsetObb ? o77.offsetObb : P7(o77.obb)) : null, v44 || _42 || this._hasObjectAndLayerId ? (n103.componentParameters = new L24(), n103.componentParameters.castShadows = $11(h58, r79.count), n103.componentParameters.transparent = $11(f59, r79.count), n103.componentParameters.opaqueOverride = $11(p70, r79.count), n103.componentParameters.texture = c75, c75.updateTexture()) : (n103.componentParameters = new B19(), n103.componentParameters.castShadows = a85.castShadows ? W16.All : W16.None, n103.componentParameters.externalColor = a85.externalColor, n103.componentParameters.externalColorMixMode = a85.externalColorMixMode), this._notifyDirty();
  }
  getComponentAabb(e78, t88, o77, n103 = false) {
    e78.intersectionGeometry.getComponentAabb(t88, o77);
    const r79 = e78, i78 = r79.components.verticalOffsets;
    if (n103 || null == i78)
      return o77;
    const s84 = i78[t88];
    if (this._viewingMode === l14.Local || 0 === s84)
      return o77[2] += s84, o77[5] += s84, o77;
    const a85 = y8(s84);
    return a85.localOrigin = r79.transform.position, a85.applyToAabb(o77);
  }
  getComponentObb(e78) {
    return e78.obb;
  }
  getObjectTransform(e78) {
    return e78.transform;
  }
  getComponentPositions(e78, t88, o77) {
    return e78.intersectionGeometry.getComponentPositions(t88, o77);
  }
  intersect(e78, t88, o77, n103, s84, a85) {
    const l75 = e78;
    null != s84 && (s84.localOrigin = l75.transform.position);
    const f59 = u5(ee4, l75.transform.rotationScale);
    J(te4, t88, l75.transform.position), J(oe7, o77, l75.transform.position), S4(te4, te4, f59), S4(oe7, oe7, f59);
    const p70 = o13(ee4, f59);
    return l75.intersectionGeometry.intersect(te4, oe7, n103, p70, s84, l75.components.verticalOffsets, a85);
  }
  addEdges(e78, t88, o77, n103) {
    const r79 = e78, { indices: i78, positions: s84 } = r79.intersectionGeometry, a85 = r79.components.offsets;
    return t88.addComponentObject(e78, r79.transform, { center: r79.obb.center, radius: re(r79.obb) }, s84, i78, a85, o77, n103);
  }
  async extractEdgeInformation(e78, t88, o77) {
    const n103 = e78, r79 = n103.components.visibility;
    if (r79.allInvisible())
      return { buffer: m7.createBuffer(0), origin: [0, 0, 0] };
    const { indices: i78, positions: s84 } = n103.intersectionGeometry, a85 = n103.components.offsets, c75 = A6.createBuffer(s84.length / 3);
    t18(c75.position.typedBuffer, s84, c75.position.typedBufferStride, 3), f10(c75.position, c75.position, n103.transform.rotationScale), this._setComponentIndices(c75.componentIndex, i78, a85);
    const m55 = c75.count, f59 = this._computeVisibilityIndices(i78, r79, a85, m55);
    return { origin: t8(n103.transform.position), buffer: await t88.extractComponentsEdgeLocations({ indices: f59, indicesLength: f59.length, skipDeduplicate: true, data: c75, writerSettings: { reducedPrecision: false, variants: 0 } }, o77) };
  }
  _setComponentIndices(e78, t88, o77) {
    let n103 = 0;
    for (let r79 = 0; r79 < o77.length - 1; r79++) {
      const i78 = o77[r79], s84 = o77[r79 + 1];
      for (let o78 = i78; o78 < s84; o78++) {
        const r80 = t88 ? t88[o78] : o78;
        e78.set(r80, n103);
      }
      n103++;
    }
  }
  _computeVisibilityIndices(e78, t88, o77, r79) {
    if (e78 && t88.allVisible())
      return e78;
    let i78 = 0;
    t88.forEachComponentRange((e79, t89) => (i78 += o77[t89] - o77[e79], true));
    const s84 = s2(e78) ? new Array(i78) : 2 === (e78 == null ? void 0 : e78.BYTES_PER_ELEMENT) || r79 <= 65536 ? new Uint16Array(i78) : new Uint32Array(i78);
    let a85 = 0;
    return t88.forEachComponentRange((t89, n103) => {
      const r80 = o77[t89], i79 = o77[n103];
      for (let o78 = r80; o78 < i79; o78++)
        s84[a85++] = e78 ? e78[o78] : o78;
      return true;
    }), s84;
  }
  addComponentHighlight(e78, t88) {
    const o77 = e78.components;
    null == o77.highlightCounts && (o77.highlightCounts = new Uint32Array(o77.count + 1));
    0 === o77.highlightCounts[t88]++ && (o77.highlightsDirty(), this._notifyDirty()), o77.highlightCounts[o77.count]++;
  }
  removeComponentHighlight(e78, t88) {
    const o77 = e78.components;
    if (null == o77.highlightCounts)
      return void K14.warn("Removing non-existing highlight.");
    const n103 = o77.highlightCounts[t88], r79 = o77.highlightCounts[o77.count];
    if (0 !== n103) {
      if (n103 > 1)
        return o77.highlightCounts[t88] = n103 - 1, void (o77.highlightCounts[o77.count] = r79 - 1);
      o77.highlightCounts[t88] = 0, o77.highlightsDirty(), this._notifyDirty(), 1 === r79 ? o77.highlightCounts = null : o77.highlightCounts[o77.count] = r79 - 1;
    } else
      K14.warn("Removing non-existing highlight.");
  }
  clearHighlights(e78) {
    const t88 = e78.components;
    null != t88.highlightCounts && (t88.highlightCounts = null, t88.highlightsDirty(), this._notifyDirty());
  }
  getObjectGPUMemoryUsage(e78) {
    return e78.renderable.meta.gpuMemoryEstimate;
  }
  get visibleObjects() {
    return this._objects[c24.Visible];
  }
  _createRenderable(e78, o77) {
    const n103 = this._renderManager.rctx, r79 = e78.geometry, i78 = r79.vertices.layoutParameters, s84 = c17.createVertex(n103, F6.STATIC_DRAW, r79.vertices.data), a85 = n4(r79.indices, (e79) => c17.createIndex(n103, F6.STATIC_DRAW, e79)), c75 = r16(o35(i78)), m55 = new Uint16Array(r79.vertices.count);
    for (let t88 = 0; t88 < o77.count; t88++) {
      const e79 = o77.offsets[t88], n104 = o77.offsets[t88 + 1], i79 = o77.materialDataIndices[t88];
      if (null != r79.indices)
        for (let t89 = e79; t89 < n104; t89++) {
          m55[r79.indices[t89]] = i79;
        }
      else
        for (let t89 = e79; t89 < n104; t89++)
          m55[t89] = i79;
    }
    const l75 = c17.createVertex(n103, F6.STATIC_DRAW, m55.buffer), f59 = new F26(e78.transform, e78.toMapSpace), p70 = new u8(n103, M20, { data: c75, componentIndices: Z10 }, { data: s84, componentIndices: l75 }, a85), h58 = new s71(p70, E5.TRIANGLES, i78, null != a85), u58 = { cameraDepthSquared: 0.5, gpuMemoryEstimate: s84.byteLength + l75.byteLength + (null != a85 ? a85.byteLength : 0) };
    return new t74(f59, h58, u58);
  }
  _notifyDirty() {
    this._renderManager.notifyDirty();
  }
};
var Z10 = r16(H4().u16(O4.COMPONENTINDEX));
function $11(e78, t88) {
  return e78 === t88 ? W16.All : 0 === e78 ? W16.None : W16.Some;
}
var ee4 = e21();
var te4 = n7();
var oe7 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/AtmosphereCompositingTechnique.js
var p56 = class _p extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.haze ? W4({ blending: l15(R5.ONE, R5.ZERO, R5.ONE_MINUS_SRC_COLOR, R5.ONE), depthTest: { func: I4.ALWAYS }, colorWrite: _7 }) : W4({ blending: s27(R5.SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.ALWAYS }, colorWrite: _7 });
  }
};
p56.shader = new t24(f22, () => import("./AtmosphereCompositing.glsl-K7DFXOTS.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CompositingTechniqueConfiguration.js
var a68;
!function(o77) {
  o77[o77.None = 0] = "None", o77[o77.Alpha = 1] = "Alpha", o77[o77.PremultipliedAlpha = 2] = "PremultipliedAlpha", o77[o77.COUNT = 3] = "COUNT";
}(a68 || (a68 = {}));
var r68 = class extends t26 {
  constructor() {
    super(...arguments), this.alphaMode = a68.None, this.hasOpacityFactor = false;
  }
};
e([r29({ count: a68.COUNT })], r68.prototype, "alphaMode", void 0), e([r29()], r68.prototype, "hasOpacityFactor", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CompositingTechnique.js
var p57 = class _p extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    switch (this.configuration.alphaMode) {
      case a68.None:
        return W4({ colorWrite: _7 });
      case a68.Alpha:
        return W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
      case a68.PremultipliedAlpha:
      case a68.COUNT:
        return W4({ blending: s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
    }
  }
};
p57.shader = new t24(d21, () => import("./Compositing.glsl-TL2NMZFP.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HUDCompositingTechnique.js
var a69 = class _a extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: { r: false, g: true, b: false, a: false } });
  }
};
a69.shader = new t24(i35, () => import("./HUDCompositing.glsl-ERHJZYBR.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OITCompositingTechnique.js
var a70 = class _a extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
  }
};
a70.shader = new t24(c25, () => import("./OITCompositing.glsl-DBATW74S.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OverlayCompositingTechnique.js
var n86 = class _n extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _n.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
  }
};
n86.shader = new t24(m14, () => import("./OverlayCompositing.glsl-MSR3IAXG.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/CompositingHelper.js
var d52 = class {
  constructor(e78, t88) {
    this._rctx = e78, this._techniqueRepository = t88, this._configuration = new r68(), this._atmosphereConfiguration = new s48(), this._passParameters = new i34(), this._atmosphereParameters = new l25(), this._oitParameters = new s40(), this._hudParameters = new t43(), this._overlayParameters = new d22();
  }
  destroy() {
    this._vao = t(this._vao);
  }
  compositeOIT(e78, s84, t88, r79) {
    this._oitParameters.colorTexture = s84, this._oitParameters.alphaTexture = t88, this._oitParameters.frontFaceTexture = r79;
    const i78 = this._rctx, o77 = this._techniqueRepository.acquire(a70);
    i78.bindTechnique(o77, this._oitParameters, e78);
    const a85 = this._ensureVAO();
    i78.bindVAO(a85), i78.drawArrays(E5.TRIANGLE_STRIP, 0, n28(a85, "geometry")), o77.release();
  }
  compositeHUD(e78, s84) {
    this._hudParameters.texture = s84;
    const t88 = this._rctx, r79 = this._techniqueRepository.acquire(a69);
    t88.bindTechnique(r79, this._hudParameters, e78);
    const i78 = this._ensureVAO();
    t88.bindVAO(i78), t88.drawArrays(E5.TRIANGLE_STRIP, 0, n28(i78, "geometry")), r79.release();
  }
  compositeOverlay(e78, s84, t88, r79) {
    this._overlayParameters.texture = s84, this._overlayParameters.opacity = t88, this._overlayParameters.overlayIndex = r79;
    const i78 = this._rctx, o77 = this._techniqueRepository.acquire(n86);
    i78.bindTechnique(o77, this._overlayParameters, e78);
    const a85 = this._ensureVAO();
    i78.bindVAO(a85), i78.drawArrays(E5.TRIANGLE_STRIP, 0, n28(a85, "geometry")), o77.release();
  }
  compositeAtmosphere(e78, s84, t88, r79, o77) {
    const a85 = this._rctx;
    this._atmosphereParameters.texture = s84, this._atmosphereParameters.depthTexture = t88, this._atmosphereParameters.scale = r79, this._atmosphereConfiguration.haze = o77;
    const h58 = this._techniqueRepository.acquire(p56, this._atmosphereConfiguration);
    a85.bindTechnique(h58, this._atmosphereParameters, e78);
    const n103 = this._ensureVAO();
    a85.bindVAO(n103), a85.drawArrays(E5.TRIANGLE_STRIP, 0, n28(n103, "geometry")), h58.release();
  }
  composite(e78, s84, t88 = a68.None, r79 = 1) {
    const i78 = this._rctx;
    this._configuration.alphaMode = t88, this._configuration.hasOpacityFactor = 1 !== r79, this._passParameters.texture = s84, this._passParameters.opacity = r79;
    const o77 = this._techniqueRepository.acquire(p57, this._configuration);
    i78.bindTechnique(o77, this._passParameters, e78);
    const h58 = this._ensureVAO();
    i78.bindVAO(h58), i78.drawArrays(E5.TRIANGLE_STRIP, 0, n28(h58, "geometry")), o77.release();
  }
  _ensureVAO() {
    return null == this._vao && (this._vao = f15(this._rctx)), this._vao;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/depthRangeUtils.js
var w27 = 1e4;
var v38 = 100;
var R19 = 500;
var j26 = 500;
var C27 = 0.1;
function A33(t88, r79, i78) {
  return r20(r79, t88) * (i78[1] - i78[0]) + i78[0];
}
function B20(e78, t88, r79) {
  let i78 = 0;
  if (!t88.some((e79) => (i78 += e79.numGeometries, i78 >= w27)))
    return S25.compute(e78, t88);
  const n103 = a67();
  return r79.forAll((t89) => {
    t89.visible && e60(n103, M21(e78, t89));
  }), n103;
}
function M21(e78, t88) {
  if (!t88.visible)
    return;
  const r79 = a67(), i78 = t88.getSpatialQueryAccelerator();
  return null != i78 ? O27(r79, e78, i78) : T26(r79, e78, t88.objects), r79;
}
function O27(e78, t88, r79) {
  const i78 = t88.eye, n103 = t88.viewForward, s84 = t88.frustum, a85 = (e79) => e79.visible, o77 = r79.objectCount;
  if (o77 < R19)
    t75(E38, t88.near, Math.min(e78.near, t88.far)), r79.forEachInDepthRange(i78, n103, W3.DepthOrder.FRONT_TO_BACK, E38, (r80, i79) => {
      D18(e78, t88, r80), E38.far = e78.near, i79.setRange(E38);
    }, s84, a85), t75(E38, Math.max(e78.far, t88.near), t88.far), r79.forEachInDepthRange(i78, n103, W3.DepthOrder.BACK_TO_FRONT, E38, (r80, i79) => {
      D18(e78, t88, r80), E38.near = e78.far, i79.setRange(E38);
    }, s84, a85);
  else {
    const i79 = Math.max(Math.min(o77, j26), Math.ceil(o77 * C27)), h58 = r79.findClosest(n103, W3.DepthOrder.FRONT_TO_BACK, s84, a85, i79), f59 = r79.findClosest(n103, W3.DepthOrder.BACK_TO_FRONT, s84, a85, i79);
    h58 && f59 && (x32(e78, t88, h58.boundingVolumeWorldSpace.bounds), x32(e78, t88, f59.boundingVolumeWorldSpace.bounds));
  }
}
function T26(e78, t88, r79) {
  K15.clear(), r79.forAll((e79) => {
    e79.visible && 0 !== e79.geometries.length && K15.add(e79);
  }), K15.empty || (K15.sort(t88), t75(E38, t88.near, Math.min(e78.near, t88.far)), K15.forEachInDepthRange(E38, W3.DepthOrder.FRONT_TO_BACK, (r80, i78) => {
    i78 < e78.near && D18(e78, t88, r80);
  }), t75(E38, Math.max(e78.far, t88.near), t88.far), K15.forEachInDepthRange(E38, W3.DepthOrder.BACK_TO_FRONT, (t89, r80, i78) => {
    e78.far = Math.max(e78.far, i78);
  }));
}
function D18(e78, t88, i78) {
  if (!i78.visible)
    return;
  if (!P6(t88.frustum, i78.boundingVolumeWorldSpace.bounds))
    return;
  const n103 = i78.transformation, s84 = k23;
  i78.geometries.forEach((i79) => {
    c5(s84, n103, i79.shaderTransformation);
    const a85 = l11(s84);
    F27(e78, t88, i79.boundingInfo, s84, a85);
  });
}
function F27(e78, t88, r79, i78, n103) {
  if (null == r79)
    return;
  O(W17, r79.center, i78);
  const { eye: a85, viewForward: o77 } = t88, f59 = o77[0] * (W17[0] - a85[0]) + o77[1] * (W17[1] - a85[1]) + o77[2] * (W17[2] - a85[2]);
  if (W17[3] = r79.radius * n103, !(f59 - W17[3] > e78.near && f59 + W17[3] < e78.far) && P6(t88.frustum, W17))
    if (r79.radius > v38 && r79.getChildren())
      for (const s84 of r79.getChildren())
        F27(e78, t88, s84, i78, n103);
    else
      V16.unionDepthRangeWithAABB(e78, t88.viewProjectionMatrix, i78, r79.bbMin, r79.bbMax);
}
function x32(e78, t88, r79) {
  const i78 = t88.eye, n103 = t88.viewForward, s84 = (r79[0] - i78[0]) * n103[0] + (r79[1] - i78[1]) * n103[1] + (r79[2] - i78[2]) * n103[2];
  e78.near = Math.min(e78.near, s84 - r79[3]), e78.far = Math.max(e78.far, s84 + r79[3]);
}
var I27 = class {
  constructor() {
    this._items = new l2({ allocator: (e78) => e78 || { obj: null, distance: 0, near: 0, far: 0 }, deallocator: (e78) => (e78.obj = null, e78.distance = 0, e78.near = 0, e78.far = 0, e78) });
  }
  get length() {
    return this._items.length;
  }
  get empty() {
    return 0 === this._items.length;
  }
  clear() {
    this._items.clear();
  }
  add(e78) {
    this._items.pushNew().obj = e78;
  }
  sort(e78) {
    const t88 = e78.eye, r79 = e78.viewForward;
    this._items.forAll((e79) => {
      const i78 = e79.obj.boundingVolumeWorldSpace.bounds, n103 = (i78[0] - t88[0]) * r79[0] + (i78[1] - t88[1]) * r79[1] + (i78[2] - t88[2]) * r79[2];
      e79.distance = n103, e79.near = n103 - i78[3], e79.far = n103 + i78[3];
    }), this._items.sort((e79, t89) => e79.distance - t89.distance);
  }
  forEachInDepthRange(e78, t88, r79) {
    if (t88 === W3.DepthOrder.FRONT_TO_BACK)
      for (let i78 = 0; i78 < this._items.length; ++i78) {
        const t89 = this._items.data[i78];
        t89.far < e78.near || t89.near > e78.far || r79(t89.obj, t89.near, t89.far);
      }
    else
      for (let i78 = this._items.length - 1; i78 >= 0; --i78) {
        const t89 = this._items.data[i78];
        t89.far < e78.near || t89.near > e78.far || r79(t89.obj, t89.near, t89.far);
      }
  }
};
var P24 = class {
  constructor() {
    this._view = e17(), this._viewProj = e17(), this._frustum = I5(), this._geometries = new Array(), this._near = [], this._far = [], this._nearCandidates = [], this._farCandidates = [], this._looseRange = { near: 0, far: 0 };
  }
  compute(e78, t88) {
    this._reset(), n14(this._view, e78.viewMatrix), c5(this._viewProj, e78.projectionMatrix, this._view), L3(this._frustum, e78.frustum);
    const n103 = this._view, s84 = n103[2], a85 = n103[6], o77 = n103[10], h58 = n103[14];
    t88.forAll((e79) => e79.forEachGeometry((e80) => {
      if (!e80.visible || !e80.castShadow)
        return;
      const t89 = e80.boundingSphere, r79 = s84 * t89[0] + a85 * t89[1] + o77 * t89[2] + h58, i78 = r79 - t89[3], n104 = r79 + t89[3];
      this._geometries.push(e80), this._near.push(-n104), this._far.push(-i78);
    }));
    const f59 = new r64();
    if (0 === this._geometries.length)
      return f59;
    for (let r79 = 0; r79 < this._geometries.length; ++r79)
      this._near[r79] > f59.far && (f59.far = this._near[r79]), this._near[r79] > 2 && this._far[r79] < f59.near && (f59.near = this._far[r79]);
    const l75 = this._looseRange;
    l75.near = Math.max(0.5 * f59.near, 2), l75.far = 2 * f59.far;
    let _42 = 0, u58 = 0;
    for (let r79 = 0; r79 < this._geometries.length; ++r79)
      this._near[r79] < f59.near && (this._near[r79] >= l75.near ? f59.near = this._near[r79] : this._nearCandidates[_42++] = r79), this._far[r79] > f59.far && (this._far[r79] <= l75.far ? f59.far = this._far[r79] : this._farCandidates[u58++] = r79);
    if (0 === this._nearCandidates.length && 0 === this._farCandidates.length)
      return f59;
    this._nearCandidates.sort((e79, t89) => this._near[e79] < this._near[t89] ? -1 : this._near[e79] > this._near[t89] ? 1 : 0), this._farCandidates.sort((e79, t89) => this._far[e79] < this._far[t89] ? 1 : this._far[e79] > this._far[t89] ? -1 : 0);
    for (let r79 = 0; r79 < this._nearCandidates.length; ++r79) {
      const e79 = this._nearCandidates[r79];
      if (this._near[e79] < f59.near) {
        const t89 = this._geometries[e79], r80 = t89.boundingInfo;
        this._includeNearBoundingInfoRec(r80, t89.shaderTransformation, f59);
      }
    }
    for (let r79 = 0; r79 < this._farCandidates.length; ++r79) {
      const e79 = this._farCandidates[r79];
      if (this._far[e79] > f59.far) {
        const t89 = this._geometries[e79], r80 = t89.boundingInfo;
        this._includeFarBoundingInfoRec(r80, t89.shaderTransformation, f59);
      }
    }
    return this._reset(), f59;
  }
  _reset() {
    this._geometries.length = 0, this._near.length = 0, this._far.length = 0, this._nearCandidates.length = 0, this._farCandidates.length = 0;
  }
  _includeNearBoundingInfoRec(e78, t88, r79) {
    if (null == e78)
      return;
    const i78 = e78.center;
    O(W17, i78, t88);
    const n103 = l11(t88), a85 = W17[0], o77 = W17[1], h58 = W17[2], f59 = e78.radius * n103, c75 = this._frustum;
    if (c75[0][0] * a85 + c75[0][1] * o77 + c75[0][2] * h58 + c75[0][3] > f59 || c75[1][0] * a85 + c75[1][1] * o77 + c75[1][2] * h58 + c75[1][3] > f59 || c75[2][0] * a85 + c75[2][1] * o77 + c75[2][2] * h58 + c75[2][3] > f59 || c75[3][0] * a85 + c75[3][1] * o77 + c75[3][2] * h58 + c75[3][3] > f59)
      return;
    const l75 = this._view[2] * a85 + this._view[6] * o77 + this._view[10] * h58 + this._view[14], u58 = l75 + f59;
    if (!(-(l75 - f59) < 2 || -u58 >= r79.near))
      if (-u58 > this._looseRange.near)
        r79.near = -u58;
      else {
        if (f59 > v38) {
          const i79 = e78.getChildren();
          if (void 0 !== i79) {
            for (const e79 of i79)
              this._includeNearBoundingInfoRec(e79, t88, r79);
            return;
          }
        }
        V16.unionDepthRangeWithAABB(r79, this._viewProj, t88, e78.bbMin, e78.bbMax);
      }
  }
  _includeFarBoundingInfoRec(e78, t88, r79) {
    if (null == e78)
      return;
    let i78 = e78.radius;
    const n103 = e78.center;
    O(W17, n103, t88);
    const a85 = l11(t88), o77 = W17[0], h58 = W17[1], f59 = W17[2];
    i78 *= a85;
    const c75 = this._frustum;
    if (c75[0][0] * o77 + c75[0][1] * h58 + c75[0][2] * f59 + c75[0][3] > i78 || c75[1][0] * o77 + c75[1][1] * h58 + c75[1][2] * f59 + c75[1][3] > i78 || c75[2][0] * o77 + c75[2][1] * h58 + c75[2][2] * f59 + c75[2][3] > i78 || c75[3][0] * o77 + c75[3][1] * h58 + c75[3][2] * f59 + c75[3][3] > i78)
      return;
    const l75 = this._view[2] * o77 + this._view[6] * h58 + this._view[10] * f59 + this._view[14] - i78;
    if (!(-l75 <= r79.far))
      if (-l75 < this._looseRange.far)
        r79.far = -l75;
      else {
        if (i78 > v38) {
          const i79 = e78.getChildren();
          if (void 0 !== i79) {
            for (const e79 of i79)
              this._includeFarBoundingInfoRec(e79, t88, r79);
            return;
          }
        }
        V16.unionDepthRangeWithAABB(r79, this._viewProj, t88, e78.bbMin, e78.bbMax);
      }
  }
};
var y35 = class {
  constructor() {
    this._modelViewProj = e17(), this._clipPosition = [n19(), n19(), n19(), n19(), n19(), n19(), n19(), n19()];
  }
  unionDepthRangeWithAABB(e78, t88, i78, n103, s84) {
    const a85 = this._modelViewProj;
    c5(a85, t88, i78);
    let o77 = false;
    for (let r79 = 0; r79 < 8; ++r79) {
      const e79 = this._clipPosition[r79], t89 = 0 === r79 || 3 === r79 || 4 === r79 || 7 === r79 ? n103[0] : s84[0], i79 = 0 === r79 || 1 === r79 || 4 === r79 || 5 === r79 ? n103[1] : s84[1], o78 = r79 < 4 ? n103[2] : s84[2];
      e79[0] = a85[0] * t89 + a85[4] * i79 + a85[8] * o78 + a85[12], e79[1] = a85[1] * t89 + a85[5] * i79 + a85[9] * o78 + a85[13], e79[2] = a85[2] * t89 + a85[6] * i79 + a85[10] * o78 + a85[14], e79[3] = a85[3] * t89 + a85[7] * i79 + a85[11] * o78 + a85[15];
    }
    for (let r79 = 0; r79 < 12; ++r79) {
      const t89 = this._clipPosition[N19[r79][0]], i79 = this._clipPosition[N19[r79][1]], n104 = this._clipPosition[N19[r79][2]], s85 = this._clipTriangle(t89, i79, n104);
      let a86 = true;
      for (let e79 = 0; e79 < s85.length; ++e79) {
        if (s85[e79][3] >= 2) {
          a86 = false;
          break;
        }
      }
      if (!a86) {
        o77 = true;
        for (let t90 = 0; t90 < s85.length; ++t90) {
          const r80 = s85[t90][3];
          Number.isFinite(r80) && (e78.near = Math.min(r80, e78.near), e78.far = Math.max(r80, e78.far));
        }
      }
    }
    return o77;
  }
  _inside(e78, t88) {
    return 0 === t88 ? e78[0] >= -e78[3] : 1 === t88 ? e78[1] >= -e78[3] : 2 === t88 ? e78[0] <= e78[3] : 3 === t88 ? e78[1] <= e78[3] : void s20(false);
  }
  _intersect(e78, t88, r79) {
    let i78 = 0;
    return 0 === r79 ? i78 = (-e78[3] - e78[0]) / (t88[0] - e78[0] + t88[3] - e78[3]) : 1 === r79 ? i78 = (-e78[3] - e78[1]) / (t88[1] - e78[1] + t88[3] - e78[3]) : 2 === r79 ? i78 = (e78[3] - e78[0]) / (t88[0] - e78[0] - t88[3] + e78[3]) : 3 === r79 && (i78 = (e78[3] - e78[1]) / (t88[1] - e78[1] - t88[3] + e78[3])), j3(n19(), e78, t88, i78);
  }
  _clipTriangle(e78, t88, r79) {
    let i78 = [e78, t88, r79];
    for (let n103 = 0; n103 < 4; ++n103) {
      const e79 = i78;
      i78 = [];
      for (let t89 = 0; t89 < e79.length; ++t89) {
        const r80 = e79[t89], s84 = e79[(t89 + 1) % e79.length];
        this._inside(s84, n103) ? (this._inside(r80, n103) || i78.push(this._intersect(r80, s84, n103)), i78.push(s84)) : this._inside(r80, n103) && i78.push(this._intersect(r80, s84, n103));
      }
    }
    return i78;
  }
};
var N19 = [[0, 1, 3], [2, 3, 1], [1, 5, 2], [6, 2, 5], [5, 4, 6], [7, 6, 4], [4, 0, 7], [3, 7, 0], [3, 2, 7], [6, 7, 2], [4, 5, 0], [1, 0, 5]];
var W17 = _5();
var k23 = e17();
var E38 = a67();
var K15 = new I27();
var S25 = new P24();
var V16 = new y35();

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/Magnifier.glsl.js
var c60 = class {
};
var f49 = class extends n29 {
  constructor() {
    super(...arguments), this.textures = new c60();
  }
};
function v39() {
  const e78 = new i20();
  return e78.attributes.add(O4.POSITION, "vec2"), e78.vertex.uniforms.add(new e27("drawPosition", (e79, r79) => x33(e79, r79))), e78.varyings.add("vUV", "vec2"), e78.vertex.code.add(o20`void main(void) {
vUV = position;
gl_Position = vec4(drawPosition.xy + vec2(position - 0.5) * drawPosition.zw, 0.0, 1.0);
}`), e78.fragment.uniforms.add(new s26("textureInput", (e79) => e79.textures.input)), e78.fragment.uniforms.add(new s26("textureMask", (e79) => e79.textures.mask)), e78.fragment.uniforms.add(new s26("textureOverlay", (e79) => e79.textures.overlay)), e78.fragment.uniforms.add(new s29("maskEnabled", (e79) => e79.magnifier.maskEnabled)), e78.fragment.uniforms.add(new s29("overlayEnabled", (e79) => e79.magnifier.overlayEnabled)), e78.fragment.code.add(o20`const float barrelFactor = 1.1;
vec2 barrel(vec2 uv) {
vec2 uvn = uv * 2.0 - 1.0;
if (uvn.x == 0.0 && uvn.y == 0.0) {
return vec2(0.5, 0.5);
}
float theta = atan(uvn.y, uvn.x);
float r = pow(length(uvn), barrelFactor);
return r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;
}
void main() {
float mask = maskEnabled ? texture(textureMask, vUV).a : 1.0;
vec4 inputColor = texture(textureInput, barrel(vUV)) * mask;
vec4 overlayColor = overlayEnabled ? texture(textureOverlay, vUV) : vec4(0);
fragColor = overlayColor + (1.0 - overlayColor.a) * inputColor;
}`), e78;
}
function x33(r79, t88) {
  const a85 = t88.camera.pixelRatio, n103 = r79.magnifier.offset.x * a85, s84 = r79.magnifier.offset.y * a85;
  d6(r79.magnifier.position, p58);
  const i78 = t88.camera.screenToRender(p58, g35), u58 = Math.ceil(a85 * r79.magnifier.size), m55 = t88.camera.fullWidth, d63 = t88.camera.fullHeight;
  return r8(h47, (i78[0] + n103) / m55 * 2 - 1, (i78[1] - s84) / d63 * 2 - 1, u58 / m55 * 2, u58 / d63 * 2);
}
var p58 = i10();
var g35 = s17();
var h47 = n19();

// node_modules/@arcgis/core/views/magnifier/resources.js
async function s73(s84) {
  const r79 = import("./mask-svg-ZOVEIXTB.js"), i78 = import("./overlay-svg-KOKR653V.js"), o77 = t22((await r79).default, { signal: s84 }), e78 = t22((await i78).default, { signal: s84 }), m55 = { mask: await o77, overlay: await e78 };
  return s6(s84), m55;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/MagnifierHelper.js
var M22 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t3(), this._magnifier = null, this._imageSources = null, this._imageLoadTask = null, this._resources = null, this._passParameters = new f49(), this.events = new n9(), this.attributeLocations = /* @__PURE__ */ new Map([[O4.POSITION, 0]]), this._tmpScreenPoint = i10(), this._tmpRenderPoint = s17();
  }
  get updating() {
    return null == this._imageSources && null != this._imageLoadTask && !this._imageLoadTask.task.finished;
  }
  get magnifier() {
    return this._magnifier;
  }
  set magnifier(e78) {
    if (e78 === this._magnifier)
      return;
    this._handles.removeAll(), this._magnifier = e78;
    const s84 = () => {
      this._updateResourceLoading(), this.events.emit("request-render");
    };
    null != this._magnifier && this._handles.add(l6(() => n4(this._magnifier, (e79) => e79.version), s84)), s84();
  }
  get enabled() {
    return null != this._validMagnifier;
  }
  get _validMagnifier() {
    return null != this._magnifier && this._magnifier.visible && null != this._magnifier.position && this._magnifier.size > 0 ? this._magnifier : null;
  }
  get _factor() {
    return null != this._magnifier && this._magnifier.factor || 1;
  }
  destroy() {
    this._magnifier = null, this._handles.destroy(), null != this._imageLoadTask && (this._imageLoadTask.task.abort(), this._imageLoadTask = null), this._disposeResources();
  }
  render(e78, s84) {
    const r79 = this._validMagnifier;
    if (null == r79)
      return;
    const t88 = s84.camera.pixelRatio, i78 = Math.ceil(t88 * r79.size);
    if (this._updateResources(e78, i78), null == this._resources)
      return;
    const o77 = this._passParameters.textures, n103 = Math.ceil(1 / this._factor * i78);
    o77.input.resize(n103, n103), d6(r79.position, this._tmpScreenPoint);
    const l75 = s84.camera.screenToRender(this._tmpScreenPoint, this._tmpRenderPoint), u58 = s84.camera.fullWidth, h58 = s84.camera.fullHeight, p70 = 0.5 * n103, c75 = 0.5 * n103;
    l75[0] = i3(l75[0], p70, u58 - p70 - 1), l75[1] = i3(l75[1], c75, h58 - c75 - 1);
    const _42 = Math.floor(l75[0] - p70), g49 = Math.floor(l75[1] - c75), d63 = this._resources.program;
    d63.bindTexture("textureInput", o77.input), e78.gl.copyTexImage2D(o77.input.descriptor.target, 0, o77.input.descriptor.pixelFormat, _42, g49, n103, n103, 0), this._passParameters.magnifier = r79, e78.useProgram(d63), d63.bindPass(this._passParameters, s84), e78.bindVAO(this._resources.vao), e78.setPipelineState(this._resources.pipelineState), e78.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
  _updateResourceLoading() {
    const e78 = this._validMagnifier;
    if (null == e78)
      return;
    const s84 = e78.maskUrl, t88 = e78.overlayUrl;
    null == this._imageLoadTask || this._imageLoadTask.maskUrl === s84 && this._imageLoadTask.overlayUrl === t88 || (this._imageLoadTask.task.abort(), this._imageLoadTask = null, this._imageSources = null), null == this._imageSources && null == this._imageLoadTask && (this._imageLoadTask = { maskUrl: s84, overlayUrl: t88, task: d5(async (e79) => {
      const r79 = null == s84 || null == t88 ? s73(e79) : null, i78 = null != s84 ? t22(s84, { signal: e79 }) : r79.then((e80) => e80.mask), a85 = null != t88 ? t22(t88, { signal: e79 }) : r79.then((e80) => e80.overlay);
      this._imageSources = { mask: await i78, overlay: await a85 }, this._disposeResources(), this.events.emit("request-render");
    }) }, this._imageLoadTask.task.promise.then(() => this.notifyChange("updating"), () => this.notifyChange("updating")));
  }
  _updateResources(e78, s84) {
    if (!this.enabled)
      return void this._disposeResources();
    if (null != this._resources) {
      if (this._passParameters.textures.size !== s84) {
        const r80 = this._createTextureResources(e78, s84);
        if (null == r80)
          return void this._disposeResources();
        this._disposeTextureResources(this._passParameters.textures), this._passParameters.textures = r80;
      }
      return;
    }
    const r79 = this._createTextureResources(e78, s84);
    null != r79 && (this._resources = { program: this._createProgram(e78), vao: f15(e78, t28, this.attributeLocations, 0, 1), pipelineState: W4({ blending: s27(R5.ONE, R5.ONE_MINUS_SRC_ALPHA), depthTest: null, depthWrite: null, colorWrite: _7 }) }, this._passParameters.textures = r79);
  }
  _disposeResources() {
    null != this._resources && (this._disposeTextureResources(this._passParameters.textures), this._resources.program.dispose(), this._resources.vao.dispose(), this._resources = null);
  }
  _disposeTextureResources(e78) {
    e78.mask.dispose(), e78.overlay.dispose(), e78.input.dispose();
  }
  _createTextureResources(e78, s84) {
    if (null == this._imageSources)
      return null;
    this._imageSources.overlay.width = s84, this._imageSources.overlay.height = s84, this._imageSources.mask.width = s84, this._imageSources.mask.height = s84;
    const r79 = new e23();
    r79.internalFormat = G5.RGBA, r79.wrapMode = D2.CLAMP_TO_EDGE, r79.flipped = true, r79.preMultiplyAlpha = !vt(this._imageSources.overlay.src) || !e78.driverTest.svgPremultipliesAlpha.result;
    const t88 = new T8(e78, r79, this._imageSources.overlay);
    r79.pixelFormat = r79.internalFormat = G5.ALPHA, r79.preMultiplyAlpha = false;
    const i78 = new T8(e78, r79, this._imageSources.mask);
    r79.pixelFormat = r79.internalFormat = G5.RGBA, r79.flipped = false;
    return { input: new T8(e78, r79), mask: i78, overlay: t88, size: s84 };
  }
  _createProgram(e78) {
    return new i19(e78, v39(), this.attributeLocations);
  }
};
e([y()], M22.prototype, "_imageSources", void 0), e([y()], M22.prototype, "_imageLoadTask", void 0), e([y({ readOnly: true })], M22.prototype, "updating", null), M22 = e([a4("esri/views/3d/webgl-engine/lib/MagnifierHelper")], M22);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ObjectAndLayerIdRenderHelper.js
var o65 = class {
  constructor() {
    this.declaredClass = "esri.views.3d.webgl-engine.lib.ObjectAndLayerIdRenderHelper", this.colorZero = new x8(new ArrayBuffer(4)), this._uidToRenderColor = /* @__PURE__ */ new Map(), this._colorToUID = /* @__PURE__ */ new Map(), this._layerUidToGraphicsUidToObjectId = /* @__PURE__ */ new Map(), this._layerUidToId = /* @__PURE__ */ new Map(), this._layerUidToPopupEnabled = /* @__PURE__ */ new Map();
  }
  setUidToObjectAndLayerId(e78, r79, t88, o77, i78, d63 = null, a85 = null, n103 = null) {
    if (!(e78 && r79 && t88 && o77))
      return;
    if (this._layerUidToId.set(o77, t88), this._layerUidToPopupEnabled.set(o77, i78), !i78)
      return;
    let s84 = this._layerUidToGraphicsUidToObjectId.get(o77);
    s84 || (s84 = /* @__PURE__ */ new Map(), this._layerUidToGraphicsUidToObjectId.set(o77, s84)), s84.set(r79, { objectId: e78, attributeNodeId: d63, attributeIndex: a85, subLayerId: n103 });
  }
  getObjectAndLayerIdColor(e78) {
    const t88 = this.getObjectAndLayerIdColorArray(e78);
    return r12(t88.get(0, 1), t88.get(0, 2), t88.get(0, 3), 255);
  }
  getObjectAndLayerIdColorArray(r79) {
    if (!r79.layerUid || !r79.graphicUid)
      return this.colorZero;
    const o77 = this._layerUidToPopupEnabled.get(r79.layerUid);
    if (void 0 === o77)
      return s3.getLogger(this).warn("popupEnabled is undefined for layerUid " + r79.layerUid), this.colorZero;
    if (false === o77)
      return this.colorZero;
    let i78 = this._uidToRenderColor.get(r79.layerUid);
    i78 || (i78 = /* @__PURE__ */ new Map(), this._uidToRenderColor.set(r79.layerUid, i78));
    let d63 = i78.get(r79.graphicUid);
    if (!d63) {
      for (; !d63; ) {
        const e78 = Math.floor(16777214 * Math.random()) + 1;
        this._colorToUID.has(e78) || (d63 = e78);
      }
      if (d63 > 16777215)
        throw new Error("Object ID Overflow");
      i78.set(r79.graphicUid, d63), this._colorToUID.set(d63, r79);
    }
    const a85 = new ArrayBuffer(4);
    new DataView(a85).setUint32(0, d63, false);
    return new x8(a85);
  }
  getColorToObjectAndLayerIdMapping() {
    const r79 = /* @__PURE__ */ new Map();
    for (const [t88, o77] of this._colorToUID.entries()) {
      const i78 = this._layerUidToGraphicsUidToObjectId.get(o77.layerUid);
      let d63 = null;
      i78 ? (d63 = i78.get(o77.graphicUid), d63 || s3.getLogger(this).warn("getColorMapping: no entry found for graphicsId " + o77.graphicUid)) : s3.getLogger(this).warn("getColorMapping: no entry found for layerUid " + o77.layerUid);
      const a85 = this._layerUidToId.get(o77.layerUid);
      a85 || s3.getLogger(this).warn("no layerId found for uid " + o77.layerUid), d63 && a85 && r79.set(t88, d63.attributeNodeId ? { type: "object-and-layer-and-i3s-id", oid: d63.objectId, lid: a85, attrId: d63.attributeNodeId, attrIdx: d63.attributeIndex, subLayerId: d63.subLayerId } : { type: "object-and-layer-id", oid: d63.objectId, lid: a85 });
    }
    return r79;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/RenderPass.js
var i69;
!function(e78) {
  e78[e78.FrontToBack = 0] = "FrontToBack", e78[e78.BackToFront = 1] = "BackToFront";
}(i69 || (i69 = {}));
var a71 = class {
  constructor(t88, r79, a85 = i69.FrontToBack) {
    this._rctx = t88, this._techniqueRepository = r79, this._sorting = a85, this._draws = new l2({ initialSize: 32, allocator: (e78) => e78 || { material: null, geometry: null, geometryRanges: null, bindDrawParams: null, depthSquaredHint: 0, indexType: 0 } }), this._previouslyBoundDraw = /* @__PURE__ */ new Map();
  }
  submitDraw(e78, t88, r79, i78) {
    const a85 = this._draws.pushNew();
    a85.geometry = t88, a85.geometryRanges = r79, a85.material = e78, a85.depthSquaredHint = i78, a85.indexType = (t88.indexed ? t88.vao.indexBuffer.indexType : null) ?? 0;
  }
  prepare(e78, t88) {
    return this._draws.map((r79) => r79.material.prepareTechnique(this._techniqueRepository, e78, t88, r79.geometry.parameters));
  }
  dispatch(e78, r79, i78) {
    const a85 = this._rctx;
    this._previouslyBoundDraw.clear();
    let s84 = null;
    const o77 = this._draws.length;
    for (let p70 = 0; p70 < o77; p70++) {
      const o78 = i78[p70];
      o78 === s84 && o78.configuration.transparencyPassType === o22.NONE || (a85.bindTechnique(o78, e78, r79), s84 = o78);
      const l75 = this._draws.data[p70], d63 = l75.geometry;
      a85.bindVAO(d63.vao), this._previouslyBoundDraw.get(o78) !== l75.material && (o78.program.bindDraw(l75.material, r79, e78), this._previouslyBoundDraw.set(o78, l75.material));
      const c75 = l75.geometryRanges, u58 = c75.length;
      if (0 !== l75.indexType) {
        const e79 = n87.get(l75.indexType);
        for (let t88 = 0; t88 < u58; t88 += 2) {
          const r80 = c75[t88], i79 = c75[t88 + 1];
          a85.drawElements(d63.primitiveType, i79, l75.indexType, r80 * e79);
        }
      } else
        for (let e79 = 0; e79 < u58; e79 += 2) {
          const t88 = c75[e79], r80 = c75[e79 + 1];
          a85.drawArrays(d63.primitiveType, t88, r80);
        }
    }
  }
  prepareSubmit() {
    this._draws.clear();
  }
  finishSubmit() {
    const e78 = this._sorting === i69.FrontToBack ? 1 : -1;
    this._draws.sort((t88, r79) => {
      const i78 = e78 * (t88.depthSquaredHint - r79.depthSquaredHint);
      return 0 !== i78 ? i78 : t88.geometry.vao.byteSize - r79.geometry.vao.byteSize;
    });
  }
  get count() {
    return this._draws.length;
  }
};
var n87 = /* @__PURE__ */ new Map();
n87.set(C6.UNSIGNED_BYTE, 1), n87.set(C6.UNSIGNED_SHORT, 2), n87.set(C6.UNSIGNED_INT, 4);

// node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/RenderPassManager.js
var w28 = class {
  constructor(s84, e78) {
    this.rctx = s84, this.shaderTechniqueRepository = e78, this.canRender = true, this._materialPassParameters = new n47(), this._shadowPassParameters = new h21(), this._highlightPassParameters = new l23(), this._systems = /* @__PURE__ */ new Set(), this._passes = { materialOpaque: new a71(s84, e78), materialTransparent: new a71(s84, e78, i69.BackToFront), materialIntegratedMesh: new a71(s84, e78), shadowMap: new a71(s84, e78), highlight: new a71(s84, e78), highlightIntegratedMesh: new a71(s84, e78), highlightShadowMap: new a71(s84, e78), defaultShadowMap: new a71(s84, e78) };
  }
  destroy() {
    this._context = null, this._systems.clear();
  }
  register(s84) {
    this._systems.add(s84);
  }
  prepareRender(s84) {
    if (0 !== this._systems.size) {
      for (const s85 of Object.values(this._passes))
        s85.prepareSubmit();
      this._systems.forEach((e78) => e78.submit(this._passes, s84.bindParameters));
      for (const s85 of Object.values(this._passes))
        s85.finishSubmit();
      this.shaderTechniqueRepository.frameUpdate();
    }
  }
  prepareTechniques(s84) {
    return 0 === this._systems.size ? null : (this._configure(s84), this._materialPassParameters.output = s84.output, this._invoke(s84, (e78, t88) => e78.prepare(t88, s84.bindParameters)));
  }
  render(s84, e78) {
    this._invoke(s84, (t88, a85) => t88.dispatch(a85, s84.bindParameters, e78));
  }
  _invoke(s84, e78) {
    switch (s84.bindParameters.slot) {
      case E8.OPAQUE_MATERIAL:
        switch (s84.output) {
          case h13.Color:
          case h13.Depth:
          case h13.Normal:
          case h13.ObjectAndLayerIdColor:
            return e78(this._passes.materialOpaque, this._materialPassParameters);
          case h13.Highlight:
            return e78(this._passes.highlight, this._highlightPassParameters);
          case h13.Shadow:
            return e78(this._passes.shadowMap, this._shadowPassParameters);
          case h13.ShadowHighlight:
            return e78(this._passes.highlightShadowMap, this._shadowPassParameters);
          case h13.ShadowExcludeHighlight:
            return e78(this._passes.defaultShadowMap, this._shadowPassParameters);
        }
        break;
      case E8.TRANSPARENT_MATERIAL:
        switch (s84.output) {
          case h13.Color:
          case h13.Alpha:
          case h13.Depth:
          case h13.Normal:
          case h13.ObjectAndLayerIdColor:
            return e78(this._passes.materialTransparent, this._materialPassParameters);
        }
        break;
      case E8.INTEGRATED_MESH:
        switch (s84.output) {
          case h13.Color:
          case h13.Depth:
          case h13.Normal:
          case h13.ObjectAndLayerIdColor:
            return e78(this._passes.materialIntegratedMesh, this._materialPassParameters);
          case h13.Highlight:
            return e78(this._passes.highlightIntegratedMesh, this._highlightPassParameters);
        }
    }
    return null;
  }
  notifyDirty() {
    this._context.requestRender();
  }
  slots() {
    return [E8.OPAQUE_MATERIAL, E8.TRANSPARENT_MATERIAL, E8.INTEGRATED_MESH];
  }
  initializeRenderContext(s84) {
    this._context = s84;
  }
  uninitializeRenderContext() {
  }
  queryDepthRange(s84) {
    const e78 = { near: 1 / 0, far: -1 / 0 };
    return this._systems.forEach((t88) => {
      const a85 = t88.queryShadowCasterDepthRange(s84);
      null != a85 && e60(e78, a85, e78);
    }), e78;
  }
  _configure(s84) {
    const e78 = s84.output === h13.Shadow || s84.output === h13.ShadowHighlight || s84.output === h13.ShadowExcludeHighlight ? this._shadowPassParameters : s84.output === h13.Highlight ? this._highlightPassParameters : this._materialPassParameters;
    this._updateParameters(s84, e78);
  }
  _updateParameters(a85, o77) {
    const n103 = a85.bindParameters.camera, m55 = n103.viewInverseTransposeMatrix;
    o4(f50, m55[3], m55[7], m55[11]), T27.set(f50), r7(o77.transformWorldFromViewTH, T27.high), r7(o77.transformWorldFromViewTL, T27.low), r7(o77.slicePlaneLocalOrigin, f50), a15(o77.transformViewFromCameraRelativeRS, n103.viewMatrix), n14(o77.transformProjFromView, n103.projectionMatrix), o77.identifier === o39.Material && (this._materialPassParameters.transparent = a85.bindParameters.slot === E8.TRANSPARENT_MATERIAL, this._materialPassParameters.integratedMesh = a85.bindParameters.slot === E8.INTEGRATED_MESH, o13(R20, o77.transformViewFromCameraRelativeRS), u5(o77.transformNormalViewFromGlobal, R20));
  }
  get needsHighlight() {
    return this._passes.highlight.count > 0 || this._passes.highlightIntegratedMesh.count > 0;
  }
  get needsTransparentPass() {
    return this._passes.materialTransparent.count > 0;
  }
};
var f50 = n7();
var R20 = e16();
var T27 = new c59();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AnimationTimeStep.js
var e65 = class {
  constructor() {
    this._step = m42, this._dilation = 1, this._firstIdleTime = n5(0);
  }
  frame(e78, _42) {
    _42 ? 0 === this._firstIdleTime && (this._firstIdleTime = n5(performance.now())) : this._firstIdleTime = n5(0);
    if (!has("disable-feature:high-quality-idle")) {
      const t88 = _42 ? performance.now() - this._firstIdleTime : 0;
      if (t88 >= r69 + o66)
        return this._step = n5(1 / 0), void (this._dilation = 1);
      this._dilation = t88 >= r69 ? h48 : 1;
    } else
      this._dilation = 1;
    const n103 = i3(e78 / s74, m42, a72);
    this._step === 1 / 0 ? this._step = n5(n103) : this._step = n5(this._step * l62 + n103 * (1 - l62));
  }
  get value() {
    return this._step;
  }
  get timeDilation() {
    return this._dilation;
  }
  clear() {
    this._step = this._firstIdleTime = n5(0);
  }
};
var s74 = 0.5;
var r69 = n5(12e4);
var o66 = n5(1e4);
var h48 = 10;
var l62 = 0.9;
var _34 = 30;
var m42 = n5(1e3 / 1);
var a72 = n5(1e3 / _34);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightApplyTechnique.js
var n88 = class _n extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _n.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7 });
  }
};
n88.shader = new t24(d23, () => import("./HighlightApply.glsl-ZNUIEM3Z.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightBlurTechnique.js
var a73 = class _a extends e25 {
  initializeProgram(r79) {
    return new i19(r79.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: _7 });
  }
};
a73.shader = new t24(l26, () => import("./HighlightBlur.glsl-QJODBHWK.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightDownsampleTechnique.js
var a74 = class _a extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: _7 });
  }
};
a74.shader = new t24(m15, () => import("./HighlightDownsample.glsl-XYG6YLTG.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightPassParameters.js
var c61 = class extends n29 {
  constructor() {
    super(...arguments), this.color = r39(1, 0, 1, 1), this.haloColor = r39(1, 0, 1, 1), this.haloOpacity = 1, this.haloOpacityOccluded = 0.25, this.fillOpacity = 0.2, this.fillOpacityOccluded = 0.05, this.shadowColor = r12(1, 0, 1, 1), this.shadowOpacity = 0.15, this.occludedShadowOpacity = 0.075;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Highlight.js
var P25 = 32;
var F28 = class {
  constructor(e78, r79) {
    this._techniqueRep = e78, this._rctx = r79, this._viewportToRestore = n19(), this._passParameters = new c61(), this._downsampleDrawParameters = new s41(), this._blurDrawParameters = new a34(), this._grid = { coverageMipmap: null, vao: null, verticalCellCount: 0, horizontalCellCount: 0, cellPixelSize: 0, mipmapLevels: 0, viewportWidth: 0, viewportHeight: 0 };
  }
  _assertResources() {
    if (this._quadVAO)
      return;
    this._quadVAO = f15(this._rctx);
    const e78 = new e23();
    e78.wrapMode = D2.CLAMP_TO_EDGE, this._blur0Fbo = new x11(this._rctx, e78), this._blur1Fbo = new x11(this._rctx, e78), this._blurTechnique = this._techniqueRep.acquire(a73), this._downsampleTechnique = this._techniqueRep.acquire(a74), this._applyTechnique = this._techniqueRep.acquire(n88);
  }
  dispose() {
    if (this._blurTechnique = f(this._blurTechnique), this._downsampleTechnique = f(this._downsampleTechnique), this._applyTechnique = f(this._applyTechnique), this._grid.coverageMipmap)
      for (let e78 = 1; e78 < this._grid.coverageMipmap.length; e78++)
        this._grid.coverageMipmap[e78].dispose();
    this._grid.vao && this._grid.vao.dispose(), this._quadVAO && (this._quadVAO.dispose(), this._quadVAO = null), this._blur0Fbo = t(this._blur0Fbo), this._blur1Fbo = t(this._blur1Fbo);
  }
  setDefaultOptions(e78) {
    this._passParameters = { ...new c61(), ...e78 };
  }
  render(e78, r79, s84) {
    this._passParameters.highlightColorTexture = r79.colorTexture, this._assertResources();
    const a85 = e78.camera;
    a7(this._viewportToRestore, a85.fullViewport);
    const o77 = a85.fullWidth, h58 = a85.fullHeight, l75 = a85.pixelRatio, p70 = Math.ceil(o77 / l75), u58 = Math.ceil(h58 / l75);
    this._blur0Fbo.resize(p70, u58), this._blur1Fbo.resize(p70, u58);
    const m55 = this._rctx;
    m55.bindVAO(this._quadVAO);
    let c75 = null;
    this._gridUpdateResources(r79, P25), this._gridComputeMipmap(e78), this._passParameters.coverageTexture = this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture, c75 = this._grid.vao;
    const _42 = m55.bindTechnique(this._blurTechnique, this._passParameters, e78);
    m55.bindVAO(c75), m55.bindFramebuffer(this._blur0Fbo), m55.setViewport(0, 0, p70, u58), m55.setClearColor(0, 0, 0, 0), m55.clear(_4.COLOR_BUFFER_BIT), this._blurDrawParameters.blurInputTexture = r79.colorTexture, r14(this._blurDrawParameters.blurSize, 1 / p70, 0), _42.bindDraw(this._blurDrawParameters, e78, this._passParameters), m55.drawArrays(this._blurTechnique.primitiveType, 0, n28(c75, "geometry")), m55.bindFramebuffer(this._blur1Fbo), m55.clear(_4.COLOR_BUFFER_BIT), this._blurDrawParameters.blurInputTexture = this._blur0Fbo.colorTexture, r14(this._blurDrawParameters.blurSize, 0, 1 / u58), _42.bindDraw(this._blurDrawParameters, e78, this._passParameters), m55.drawArrays(this._blurTechnique.primitiveType, 0, n28(c75, "geometry")), m55.bindFramebuffer(s84), m55.setViewport(this._viewportToRestore[0], this._viewportToRestore[1], this._viewportToRestore[2], this._viewportToRestore[3]), this._passParameters.blurColorTexture = this._blur1Fbo.colorTexture, m55.bindTechnique(this._applyTechnique, this._passParameters, e78), m55.drawArrays(this._applyTechnique.primitiveType, 0, n28(c75, "geometry")), m55.bindVAO(null);
  }
  _gridUpdateResources(e78, r79) {
    const t88 = this._rctx, i78 = this._grid;
    let s84 = false;
    if (null === i78.coverageMipmap && (i78.coverageMipmap = [e78], s84 = true), i78.viewportWidth === e78.width && i78.viewportHeight === e78.height || (s84 = true, i78.viewportWidth = e78.width, i78.viewportHeight = e78.height), i78.coverageMipmap[0] = e78, i78.cellPixelSize !== r79 && (i78.cellPixelSize = r79, s84 = true), s84) {
      for (let e79 = 1; e79 < i78.coverageMipmap.length; e79++)
        i78.coverageMipmap[e79].dispose();
      i78.mipmapLevels = Math.ceil(Math.log(i78.cellPixelSize) * Math.LOG2E), i78.coverageMipmap.length = i78.mipmapLevels + 1;
      for (let e79 = 0; e79 < i78.mipmapLevels; e79++) {
        const r80 = i78.coverageMipmap[e79], s85 = new e23(Math.ceil(r80.width / 2), Math.ceil(r80.height / 2));
        s85.pixelFormat = G5.RGB, s85.dataType = U4.UNSIGNED_SHORT_5_6_5, s85.wrapMode = D2.CLAMP_TO_EDGE, i78.coverageMipmap[e79 + 1] = new x11(t88, s85);
      }
    }
    const h58 = Math.ceil(e78.height / i78.cellPixelSize), p70 = Math.ceil(e78.width / i78.cellPixelSize);
    if (!i78.vao || i78.verticalCellCount !== h58 || i78.horizontalCellCount !== p70) {
      i78.verticalCellCount = h58, i78.horizontalCellCount = p70;
      const e79 = h58 + 1, r80 = p70 + 1, s85 = 1 / h58, u58 = 1 / p70, m55 = 6, c75 = 4, _42 = new Float32Array(m55 * c75 * e79 * r80);
      let n103 = 0;
      for (let t89 = 0; t89 < e79; t89++)
        for (let e80 = 0; e80 < r80; e80++)
          _42[n103] = (e80 - 0.5) * u58 * 2 - 1, _42[n103 + 1] = (t89 - 0.5) * s85 * 2 - 1, _42[n103 + 2] = e80 * u58, _42[n103 + 3] = t89 * s85, _42[n103 + 4] = (e80 + 0.5) * u58 * 2 - 1, _42[n103 + 5] = (t89 - 0.5) * s85 * 2 - 1, _42[n103 + 6] = e80 * u58, _42[n103 + 7] = t89 * s85, _42[n103 + 8] = (e80 - 0.5) * u58 * 2 - 1, _42[n103 + 9] = (t89 + 0.5) * s85 * 2 - 1, _42[n103 + 10] = e80 * u58, _42[n103 + 11] = t89 * s85, _42[n103 + 12] = (e80 - 0.5) * u58 * 2 - 1, _42[n103 + 13] = (t89 + 0.5) * s85 * 2 - 1, _42[n103 + 14] = e80 * u58, _42[n103 + 15] = t89 * s85, _42[n103 + 16] = (e80 + 0.5) * u58 * 2 - 1, _42[n103 + 17] = (t89 - 0.5) * s85 * 2 - 1, _42[n103 + 18] = e80 * u58, _42[n103 + 19] = t89 * s85, _42[n103 + 20] = (e80 + 0.5) * u58 * 2 - 1, _42[n103 + 21] = (t89 + 0.5) * s85 * 2 - 1, _42[n103 + 22] = e80 * u58, _42[n103 + 23] = t89 * s85, n103 += m55 * c75;
      i78.vao && i78.vao.dispose(), i78.vao = new r30(t88, E7, { geometry: A10 }, { geometry: c17.createVertex(t88, F6.STATIC_DRAW, _42) });
    }
  }
  _gridComputeMipmap(e78) {
    const r79 = this._rctx, i78 = this._grid, s84 = r79.bindTechnique(this._downsampleTechnique, this._passParameters, e78);
    r79.bindVAO(this._quadVAO);
    for (let a85 = 0; a85 < i78.mipmapLevels; a85++) {
      r79.bindFramebuffer(i78.coverageMipmap[a85 + 1]);
      const o77 = i78.coverageMipmap[a85 + 1].width, h58 = i78.coverageMipmap[a85 + 1].height;
      this._downsampleDrawParameters.inputTexture = i78.coverageMipmap[a85].colorTexture, r14(this._downsampleDrawParameters.invFramebufferDim, 1 / o77, 1 / h58), s84.bindDraw(this._downsampleDrawParameters, e78, this._passParameters), r79.setViewport(0, 0, o77, h58), r79.drawArrays(E5.TRIANGLE_STRIP, 0, n28(this._quadVAO, "geometry"));
    }
  }
  get gpuMemoryUsage() {
    let e78 = (null != this._blur0Fbo ? this._blur0Fbo.gpuMemoryUsage : 0) + (null != this._blur1Fbo ? this._blur1Fbo.gpuMemoryUsage : 0);
    if (this._grid.coverageMipmap)
      for (const r79 of this._grid.coverageMipmap)
        e78 += r79.gpuMemoryUsage;
    return e78;
  }
  get test() {
    return { coverage: this._grid.coverageMipmap, blur: [this._blur0Fbo, this._blur1Fbo] };
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderTargetHelper.js
var c62 = { dataType: U4.UNSIGNED_BYTE, internalFormat: G5.RGBA };
var p59 = {};
var u48 = class {
  constructor(e78) {
    this._rctx = e78, this._activeTargets = /* @__PURE__ */ new Set(), this._colorTextures = /* @__PURE__ */ new Map(), this._depthTextures = /* @__PURE__ */ new Map(), this._fbos = /* @__PURE__ */ new Map();
  }
  dispose() {
    this._depthTextures.forEach((e78) => e78.dispose()), this._depthTextures.clear(), this._colorTextures.forEach((e78) => e78.dispose()), this._colorTextures.clear(), this._fbos.forEach((e78) => e78.dispose()), this._fbos.clear(), this._activeTargets.clear();
  }
  disposeTargetResource(e78) {
    const t88 = e78.id;
    this._activeTargets.has(t88) && (this._activeTargets.delete(t88), this._disposeWithFramebuffers(this._depthTextures, t88), this._disposeWithFramebuffers(this._colorTextures, t88));
  }
  _disposeWithFramebuffers(e78, t88) {
    const r79 = e78.get(t88);
    r79 && (this._fbos.forEach((e79, t89) => {
      e79.colorTexture !== r79 && e79.depthStencilAttachment !== r79 || (e79.detachColorTexture(), e79.detachDepthStencilTexture(), e79.dispose(), this._fbos.delete(t89));
    }), r79.dispose(), e78.delete(t88));
  }
  _getDepthTexture(e78, t88, h58) {
    let c75 = this._depthTextures.get(e78.id);
    if (!c75 || c75.descriptor.width === t88 && c75.descriptor.height === h58 || (c75.dispose(), c75 = null), !c75) {
      const p70 = new e23(t88, h58);
      p70.pixelFormat = G5.DEPTH_STENCIL, p70.dataType = U4.UNSIGNED_INT_24_8, p70.samplingMode = L.NEAREST, p70.wrapMode = D2.CLAMP_TO_EDGE, c75 = new T8(this._rctx, p70), this._depthTextures.set(e78.id, c75), this._activeTargets.add(e78.id);
    }
    return c75;
  }
  getAllocatedDepthTexture(e78) {
    return this._depthTextures.get(e78.id);
  }
  getColorTexture(t88, r79, s84) {
    let h58 = this._colorTextures.get(t88.id);
    if (h58 && (h58.descriptor.width === r79 && h58.descriptor.height === s84 || (h58.dispose(), h58 = i())), !h58) {
      const e78 = new e23(r79, s84);
      e78.internalFormat = t88.internalFormat, e78.dataType = t88.dataType, e78.samplingMode = null != t88.samplingMode ? t88.samplingMode : L.LINEAR, e78.wrapMode = D2.CLAMP_TO_EDGE, h58 = new T8(this._rctx, e78), this._colorTextures.set(t88.id, h58), this._activeTargets.add(t88.id);
    }
    return h58;
  }
  getAllocatedColorTexture(e78) {
    return this._colorTextures.get(e78.id);
  }
  registerDepthTarget(e78 = {}) {
    return { id: e5(), ...p59, ...e78 };
  }
  registerColorTarget(e78 = {}) {
    return { id: e5(), ...c62, ...e78 };
  }
  getFramebuffer(e78, t88, r79, s84) {
    const i78 = this._getKey(r79, s84);
    let o77 = this._fbos.get(i78);
    const a85 = this.getColorTexture(r79, e78, t88), d63 = s84 ? this._getDepthTexture(s84, e78, t88) : void 0;
    if (!o77)
      return o77 = new x11(this._rctx, a85, d63), this._fbos.set(i78, o77), o77;
    return (o77.width !== e78 || o77.height !== t88 || o77.colorTexture !== a85 || o77.depthStencilAttachment !== d63) && (o77.detachColorTexture(), o77.detachDepthStencilTexture(), o77.resize(e78, t88), o77.attachColorTexture(a85), o77.attachDepthStencil(d63)), o77;
  }
  _getKey(e78, t88) {
    return `${e78.id}_${t88 ? t88.id : "X"}_${e78.name}${t88 ? "_" + t88.name : ""}`;
  }
  get gpuMemoryUsage() {
    let e78 = 0;
    const t88 = /* @__PURE__ */ new Set(), r79 = (r80) => {
      t88.has(r80) || (t88.add(r80), e78 += r80.gpuMemoryUsage);
    };
    return this._colorTextures.forEach(r79), this._depthTextures.forEach(r79), e78;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/OffscreenRendering.js
var n89 = class {
  constructor(t88, r79) {
    this._rctx = t88, this._compositingHelper = r79, this._mainColorTarget = 0, this.width = 4, this.height = 4, this._background = { type: "color", color: [0, 0, 0, 1] }, this._renderTargetHelper = new u48(t88);
    const a85 = this._renderTargetHelper;
    this._mainColorTargets = [a85.registerColorTarget({ name: "mainColorTarget0" }), a85.registerColorTarget({ name: "mainColorTarget1" })], this.frontFaceTarget = a85.registerColorTarget({ name: "frontFaceTarget" }), this.colorFloatTarget = a85.registerColorTarget({ name: "colorFloatTarget", dataType: U4.HALF_FLOAT, internalFormat: P5.RGBA16F, samplingMode: L.NEAREST }), this.alphaFloatTarget = a85.registerColorTarget({ name: "alphaFloatTarget", dataType: U4.HALF_FLOAT, internalFormat: P5.R16F, samplingMode: L.NEAREST }), this.mainDepth = a85.registerDepthTarget({ name: "mainDepth" }), this.linearDepth = a85.registerColorTarget({ name: "linearDepth", samplingMode: L.NEAREST }), this.terrainLinearDepth = a85.registerColorTarget({ name: "terrainLinearDepth" }), this.geometryLinearDepth = a85.registerColorTarget({ name: "geometryLinearDepth" }), this.normal = a85.registerColorTarget({ name: "normal" }), this.highlight = a85.registerColorTarget({ name: "highlight", internalFormat: P5.RGBA4, dataType: U4.UNSIGNED_SHORT_4_4_4_4 }), this.hudVisibility = a85.registerColorTarget({ name: "hudVisibility", internalFormat: P5.RGBA4, dataType: U4.UNSIGNED_SHORT_4_4_4_4 }), this.tmpColor = a85.registerColorTarget({ name: "tmpColor" }), this.tmpDepth = a85.registerDepthTarget({ name: "tmpDepth" }), this.hudColor = a85.registerColorTarget({ name: "hudColor" });
  }
  dispose() {
    this._renderTargetHelper.dispose();
  }
  set background(e78) {
    this._background = e78;
  }
  get background() {
    return this._background;
  }
  get currentColorTarget() {
    return this._mainColorTargets[this._mainColorTarget];
  }
  get previousColorTarget() {
    return this._mainColorTargets[1 - this._mainColorTarget];
  }
  get framebuffer() {
    return this.getFramebuffer(this.currentColorTarget, this.mainDepth);
  }
  getFramebuffer(e78, t88) {
    return this._renderTargetHelper.getFramebuffer(this.width, this.height, e78, t88);
  }
  get colorTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.currentColorTarget);
  }
  get depthTexture() {
    return this._renderTargetHelper.getAllocatedDepthTexture(this.mainDepth);
  }
  get linearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.linearDepth);
  }
  get terrainLinearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.terrainLinearDepth);
  }
  get geometryLinearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.geometryLinearDepth);
  }
  get lastFrameColorTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.previousColorTarget);
  }
  get normalTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.normal);
  }
  get highlightTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.highlight);
  }
  get hudVisibilityTexture() {
    return this._getColorTexture(this.hudVisibility);
  }
  get tmpColorTexture() {
    return this._getColorTexture(this.tmpColor);
  }
  get hudColorTexture() {
    return this._getColorTexture(this.hudColor);
  }
  get mainColorTexture() {
    return this._getColorTexture(this.currentColorTarget);
  }
  setupRenderTarget(e78) {
    e78 ? this._mainColorTarget = this._mainColorTarget ? 0 : 1 : (this._mainColorTarget = 0, this.disposeTarget(this._mainColorTargets[1]));
  }
  initializeFrame(e78) {
    const t88 = this._rctx;
    this.width = e78.fullWidth, this.height = e78.fullHeight, R8(this, t88.parameters.maxTextureSize), this.bindTarget(this.currentColorTarget, this.mainDepth), t88.setClearStencil(0);
    const r79 = this._background.color;
    t88.setClearColor(r79[0] * r79[3], r79[1] * r79[3], r79[2] * r79[3], r79[3]), t88.clearSafe(_4.COLOR_BUFFER_BIT | _4.DEPTH_BUFFER_BIT | _4.STENCIL_BUFFER_BIT);
  }
  composite(e78) {
    null != this.colorTexture && this._compositingHelper.composite(e78, this.colorTexture, a68.None);
  }
  renderTmpAndCompositeToMain(e78, t88, r79, i78 = false) {
    this.renderToTargets(e78, this.tmpColor, i78 ? this.tmpDepth : this.mainDepth, l63), this._compositingHelper.composite(t88, this._getColorTexture(this.tmpColor), r79);
  }
  compositeAtmosphereToMain(e78, t88, r79, i78) {
    this.bindTarget(this.currentColorTarget), this._compositingHelper.compositeAtmosphere(e78, this._renderTargetHelper.getColorTexture(this.tmpColor, this.width, this.height), r79, i78, t88), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  renderHUDVisibility(e78, t88 = false) {
    this.renderToTargets(e78, this.hudVisibility, t88 ? this.tmpDepth : this.mainDepth, g36);
  }
  compositeTransparentTerrainOntoHUDVisibility(e78) {
    this.renderToTargets(() => this._compositingHelper.compositeHUD(e78, this._getColorTexture(this.tmpColor)), this.hudVisibility, this.tmpDepth);
  }
  renderOITPass(e78, r79, i78) {
    let o77, s84;
    switch (r79) {
      case o22.Color:
        o77 = this.colorFloatTarget, s84 = [0, 0, 0, 0];
        break;
      case o22.Alpha:
        o77 = this.alphaFloatTarget, s84 = [1, 1, 1, 1];
        break;
      case o22.FrontFace:
        o77 = this.frontFaceTarget, s84 = [0, 0, 0, 0];
        break;
      case o22.NONE:
      case o22.COUNT:
        return;
    }
    i78 ? this.renderToTargets(e78, o77, this.tmpDepth, s84, true, true) : this.renderToTargets(e78, o77, this.mainDepth, s84, false);
  }
  compositeTransparentTerrainOntoMain(e78) {
    this.bindFramebuffer(), this._compositingHelper.composite(e78, this._getColorTexture(this.tmpColor), a68.PremultipliedAlpha);
  }
  compositeOccludedOntoMain(e78, t88) {
    this.bindFramebuffer(), this._compositingHelper.composite(e78, this._getColorTexture(this.tmpColor), a68.PremultipliedAlpha, t88);
  }
  compositeTransparentOntoOpaque(e78, t88) {
    t88 ? (this.bindTarget(this.hudColor, this.tmpDepth), this._rctx.setClearColor(0, 0, 0, 1e-13), this._rctx.clearSafe(_4.COLOR_BUFFER_BIT)) : this.bindFramebuffer(), this._compositingHelper.compositeOIT(e78, this._getColorTexture(this.colorFloatTarget), this._getColorTexture(this.alphaFloatTarget), this._getColorTexture(this.frontFaceTarget));
  }
  bindFramebuffer() {
    this._rctx.bindFramebuffer(this.framebuffer);
  }
  renderDepthDetached(e78) {
    this.bindTarget(this.currentColorTarget), e78(), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  disposeTarget(e78) {
    this._renderTargetHelper.disposeTargetResource(e78);
  }
  renderToFBO(e78, t88, r79 = false, i78 = false) {
    const o77 = this._rctx;
    let s84 = 0;
    if (t88) {
      const e79 = 1e-13, r80 = Math.max(e79, t88[3]);
      o77.setClearColor(t88[0], t88[1], t88[2], r80), s84 |= _4.COLOR_BUFFER_BIT;
    }
    r79 && (s84 |= _4.DEPTH_BUFFER_BIT), false === i78 ? i78 = 0 : (true === i78 && (i78 = 255), s84 |= _4.STENCIL_BUFFER_BIT), s84 && o77.clearSafe(s84, i78), e78(), o77.gl.flush(), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  renderToTargets(e78, t88, r79, i78, o77 = false, s84 = false) {
    const a85 = this.bindTarget(t88, r79);
    return this.renderToFBO(e78, i78, o77, s84), a85;
  }
  bindTarget(e78, t88) {
    const r79 = this._renderTargetHelper.getFramebuffer(this.width, this.height, e78, t88);
    return this._rctx.bindFramebuffer(r79), r79;
  }
  _getColorTexture(e78) {
    return this._renderTargetHelper.getColorTexture(e78, this.width, this.height);
  }
  get gpuMemoryUsage() {
    let e78 = 0;
    return this._renderTargetHelper && (e78 += this._renderTargetHelper.gpuMemoryUsage), e78;
  }
};
var l63 = [0, 0, 0, 0];
var g36 = [0, 1, 0, 1];

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderPluginManager.js
var d53 = class extends m {
  constructor(e78) {
    super({}), this._context = e78, this._renderPlugins = new l2(), this._slots = [];
    for (let r79 = 0; r79 < E8.MAX_SLOTS; ++r79)
      this._slots[r79] = [];
  }
  normalizeCtorArgs() {
    return {};
  }
  add(e78, r79, t88) {
    const o77 = () => {
      if (t88 == null ? void 0 : t88.aborted)
        throw r79.uninitializeRenderContext(), c();
      this._renderPlugins.push(r79);
      for (const t89 of e78)
        this._slots[t89].push(r79);
      this._context.requestRender();
    }, i78 = r79.initializeRenderContext(this._context, t88);
    if (T(i78))
      return i78.then(o77);
    o77(), this.notifyChange("_renderPlugins");
  }
  remove(e78) {
    if (null != this._renderPlugins.removeUnordered(e78)) {
      for (let r79 = 0; r79 < this._slots.length; ++r79)
        this._slots[r79] = this._slots[r79].filter((r80) => r80 !== e78);
      e78.uninitializeRenderContext(), this._context.requestRender(), this.notifyChange("_renderPlugins");
    }
  }
  prepareRender() {
    this._renderPlugins.forAll((e78) => {
      e78.prepareRender && e78.prepareRender(this._context.renderContext);
    });
  }
  updateAnimation(e78) {
    let r79 = false;
    return this._renderPlugins.forAll((t88) => {
      t88.updateAnimation && (r79 = t88.updateAnimation(e78) || r79);
    }), r79;
  }
  prepareSlots(e78) {
    for (const r79 of e78)
      this._context.renderContext.bindParameters.slot = r79, this._slots[r79].filter((e79) => {
        e79.canRender && (p60(e79) && e79.prepareTechnique(this._context.renderContext), h49(e79) && e79.prepareTechniques(this._context.renderContext));
      });
  }
  render() {
    const e78 = this._slots[this._context.renderContext.bindParameters.slot], r79 = new Array();
    e78.filter((e79) => {
      if (!e79.canRender)
        return false;
      if (p60(e79)) {
        const t88 = e79.prepareTechnique(this._context.renderContext);
        return null != t88 && (r79.push(t88), true);
      }
      if (h49(e79)) {
        const t88 = e79.prepareTechniques(this._context.renderContext);
        return null != t88 && (r79.push(t88), true);
      }
      return r79.push(null), true;
    }).forEach((e79, t88) => e79.render(this._context.renderContext, r79[t88]));
  }
  queryDepthRange(e78) {
    const r79 = c63;
    return r79.near = 1 / 0, r79.far = -1 / 0, this._renderPlugins.forAll((t88) => {
      if (t88.queryDepthRange) {
        const n103 = t88.queryDepthRange(e78);
        n103 && e60(r79, n103, r79);
      }
    }), r79;
  }
  get updating() {
    return this._renderPlugins.some((e78) => e78.running);
  }
  get needsTransparentPass() {
    return this._renderPlugins.some((e78) => e78.needsTransparentPass);
  }
  get needsHighlight() {
    return this._renderPlugins.some((e78) => e78.needsHighlight);
  }
  get needsLinearDepth() {
    return this._renderPlugins.some((e78) => e78.needsLinearDepth);
  }
  get needsLaserlineWithContrastControl() {
    const e78 = this._slots[E8.LASERLINES_CONTRAST_CONTROL];
    return !!e78 && e78.length > 0;
  }
  get renderOccludedFlags() {
    return this._renderPlugins.reduce((e78, r79) => e78 | r79.renderOccludedFlags, o21.None);
  }
};
function p60(e78) {
  return "prepareTechnique" in e78;
}
function h49(e78) {
  return "prepareTechniques" in e78;
}
e([y()], d53.prototype, "_renderPlugins", void 0), e([y({ readOnly: true })], d53.prototype, "updating", null), d53 = e([a4("esri.views.3d.webgl-engine.lib.RenderPluginManager")], d53);
var c63 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowCastVisualizeTechnique.js
var m43 = class _m extends e25 {
  constructor(e78, r79) {
    super(e78, r79, () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _m.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: c15, colorWrite: _7, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
m43.shader = new t24(f23, () => import("./ShadowCastVisualize.glsl-6E3MWK73.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowCastRenderer.js
var c64 = 4e4;
var p61 = 5e4;
var m44 = 1 / 512;
var b25 = class extends m {
  constructor(e78, t88, s84, i78) {
    super({}), this._techniqueRepository = e78, this._rctx = t88, this._data = s84, this._requestRender = i78, this._passParameters = new p16(this._data), this._techniqueConfig = new r41(), this._enabled = false, this._vao = f15(t88), this._techniqueConfig.visualization = t44.Gradient;
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._stop(), this._vao = t(this._vao), this._techniqueRepository.release(this._technique), this._technique = null;
  }
  get _visualizeShadowCastTechnique() {
    return this._technique = this._techniqueRepository.releaseAndAcquire(m43, this._techniqueConfig, this._technique), this._technique;
  }
  render(e78) {
    if (!this._showVisualization)
      return;
    this._passParameters.sampleScale = 1 / this._data.computedSamples;
    const t88 = this._visualizeShadowCastTechnique;
    this._rctx.bindVAO(this._vao), this._rctx.bindTechnique(t88, this._passParameters, e78), this._rctx.drawArrays(t88.primitiveType, 0, n28(this._vao, "geometry"));
  }
  setOptions(e78) {
    void 0 !== e78.enabled && this._setEnabled(e78.enabled), void 0 !== e78.color && this._setColor(e78.color), void 0 !== e78.threshold && (this._threshold = e78.threshold), void 0 !== e78.visualization && (this._visualization = e78.visualization), void 0 !== e78.bandSize && (this._bandSize = e78.bandSize), void 0 !== e78.bandsEnabled && (this._bandsEnabled = e78.bandsEnabled);
  }
  get opacityFromElevation() {
    return this._passParameters.opacityFromElevation;
  }
  set opacityFromElevation(e78) {
    this._passParameters.opacityFromElevation !== e78 && (this._passParameters.opacityFromElevation = e78, this.notifyChange("opacityFromElevation"));
  }
  get _showVisualization() {
    return this._enabled && this._data.computedSamples > 0 && this.opacityFromElevation > m44;
  }
  get _threshold() {
    return this._passParameters.threshold;
  }
  set _threshold(e78) {
    this._threshold !== e78 && (this._passParameters.threshold = e78, this._requestRenderIfRunning());
  }
  get _visualization() {
    return this._techniqueConfig.visualization;
  }
  set _visualization(e78) {
    e78 !== this._visualization && (this._techniqueConfig.visualization = e78, this._techniqueRepository.release(this._technique), this._technique = null, this._requestRenderIfRunning());
  }
  get _bandSize() {
    return this._passParameters.bandSize;
  }
  set _bandSize(e78) {
    e78 !== this._bandSize && (this._passParameters.bandSize = e78, this._requestRenderIfRunning());
  }
  get _bandsEnabled() {
    return this._techniqueConfig.bandsEnabled;
  }
  set _bandsEnabled(e78) {
    e78 !== this._bandsEnabled && (this._techniqueConfig.bandsEnabled = e78, this._techniqueRepository.release(this._technique), this._technique = null, this._requestRenderIfRunning());
  }
  _setColor(e78) {
    const t88 = this._passParameters.color;
    D(e78, t88) || (a7(this._passParameters.color, e78), this._requestRenderIfRunning());
  }
  _setEnabled(e78) {
    e78 !== this._enabled && (e78 ? this._start() : this._stop());
  }
  _requestRenderIfRunning() {
    this._enabled && this._requestRender();
  }
  _start() {
    this._enabled = true, this._requestRender();
  }
  _stop() {
    this._enabled = false, this._requestRender();
  }
};
e([y()], b25.prototype, "opacityFromElevation", null), b25 = e([a4("esri.views.3d.webgl-engine.lib.ShadowCastRenderer")], b25);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowConfiguration.js
var s75 = class extends t26 {
  constructor() {
    super(...arguments), this.receiveShadows = true;
  }
};
e([r29()], s75.prototype, "receiveShadows", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowCastAccumulateTechnique.js
var d54 = class _d extends e25 {
  constructor(e78) {
    super(e78, new s75(), () => this.destroy());
  }
  initializeProgram(e78) {
    return new i19(e78.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.ONE, R5.ONE, R5.ONE, R5.ONE), colorWrite: _7, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
d54.shader = new t24(x13, () => import("./ShadowCastAccumulate.glsl-RFW5NB4M.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowAccumulator.js
var M23 = class extends m {
  constructor(e78, t88, i78, r79, o77, a85) {
    super({}), this._rctx = e78, this._stage = i78, this._prepareForShadowMapPass = r79, this._renderToShadowMap = o77, this._requestRender = a85, this._progress = 0, this._sampleCount = 0, this._passParameters = new w14(), this._cachedLightDirections = [], this._depthRange = f48, this._previewing = false, this._handles = new t3(), this._cameraForcedForScreenshot = false, this._bindParameters = new o31(new J4(e78, i78.viewingMode), null, null), this._bindParameters.shadowMap.enabled = true, this._vao = f15(e78), this._accumulationRenderer = new b25(t88, e78, this, a85);
    const _42 = this._stage.view.resourceController.scheduler;
    this._handles.add([_42.registerTask(I3.SHADOW_ACCUMULATOR, this), l6(() => i78.renderView, (e79) => {
      this._handles.remove(L25), null != e79 && this._handles.add(e79.events.on("force-camera-for-screenshot", () => this._cameraForcedForScreenshot = true), L25);
    }, w3), l6(() => this._previewing, () => this._requestRenderIfEnabled(), U3)]);
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._disable(), this._handles.destroy(), this._accumulationRenderer = t(this._accumulationRenderer), this._bindParameters.shadowMap.dispose(), this._fbo = t(this._fbo), this._vao = t(this._vao), this._accumulationTechniqueCached = f(this._accumulationTechniqueCached), this._cachedLightDirections.length = 0, this._sampleCount = 0;
  }
  get computedSamples() {
    return this._progress;
  }
  get shadowCastTexture() {
    var _a;
    return (_a = this._fbo) == null ? void 0 : _a.colorTexture;
  }
  get isAccumulating() {
    return this._isPreviewing || this._isRefining;
  }
  get _accumulationTechnique() {
    if (null == this._accumulationTechniqueCached) {
      const e78 = { rctx: this._rctx, viewingMode: this._stage.viewingMode };
      this._accumulationTechniqueCached = new d54(e78);
    }
    return this._accumulationTechniqueCached;
  }
  get _isRefining() {
    return this._isActive && !this._isDoneAccumulating && !this._previewing;
  }
  get _isPreviewing() {
    return this._isActive && this._previewing;
  }
  get _isActive() {
    return null != this._fbo && this._sampleCount > 0;
  }
  get canAccumulate() {
    return null !== this._passParameters.linearDepthTexture && this._depthRange !== f48 && this._opacityFromElevation > m44;
  }
  get _isDoneAccumulating() {
    return this._progress >= this._sampleCount;
  }
  get _lightDirections() {
    return this._cachedLightDirections;
  }
  set _lightDirections(e78) {
    const t88 = this._cachedLightDirections;
    if (s(t88, e78, G2))
      return;
    const s84 = Math.min(u17, e78.length);
    t88.length = s84, this._sampleCount = s84;
    for (let i78 = 0; i78 < s84; ++i78)
      t88[i78] = r7(t88[i78] ?? n7(), e78[i78]);
    this._invalidate();
  }
  get _opacityFromElevation() {
    return this._accumulationRenderer.opacityFromElevation;
  }
  set _opacityFromElevation(e78) {
    this._accumulationRenderer.opacityFromElevation = e78;
  }
  get running() {
    return this._isRefining && this.canAccumulate && this._progress > 0;
  }
  runTask(e78) {
    for (this._prepareForShadowMapPass(this._bindParameters); !e78.done && !this._isDoneAccumulating; )
      this._accumulateShadow(), e78.madeProgress();
    this._requestRender();
  }
  renderAccumulation(e78, t88, i78, s84) {
    if (this._depthRange = t88, this._updateCamera(i78), this._bindParameters.contentCamera = s84, this._passParameters.linearDepthTexture = e78, this._passParameters.origin = this._bindParameters.camera.center, this.notifyChange("canAccumulate"), !this.isAccumulating || !this.canAccumulate)
      return;
    (this._previewing || 0 === this._progress || this._cameraForcedForScreenshot) && this._clear();
    const r79 = this._cameraForcedForScreenshot ? this._sampleCount : Math.min(U23, this._sampleCount - this._progress);
    for (let o77 = 0; o77 < r79; ++o77)
      this._accumulateShadow();
    this._cameraForcedForScreenshot = false, this._requestRender();
  }
  render(e78) {
    this._accumulationRenderer.render(e78);
  }
  setOptions(e78) {
    if (void 0 !== e78.enabled) {
      const t88 = null != this._fbo;
      e78.enabled !== t88 && (e78.enabled ? this._enable() : this._disable());
    }
    void 0 !== e78.previewing && (this._previewing = e78.previewing), void 0 !== e78.lightDirections && (this._lightDirections = e78.lightDirections), this._accumulationRenderer.setOptions(e78);
  }
  readAccumulatedShadow(e78, t88) {
    return !this._isActive || !this._fbo || this._progress < 1 || e78 < 0 || e78 >= this._fbo.width || t88 < 0 || t88 >= this._fbo.height ? 0 : (this._fbo.readPixels(e78, t88, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, k24), k24[0] / this._progress);
  }
  _enable() {
    this._progress = 0;
    const e78 = new e23();
    e78.wrapMode = D2.CLAMP_TO_EDGE, this._fbo = new x11(this._rctx, e78);
  }
  _disable() {
    this._fbo = t(this._fbo);
  }
  _invalidate() {
    this._progress = 0, this._requestRenderIfEnabled();
  }
  _clear() {
    this._rctx.bindFramebuffer(this._fbo), this._rctx.setClearColor(0, 0, 0, 0), this._rctx.clearSafe(_4.COLOR_BUFFER_BIT), this._progress = 0;
  }
  _accumulateShadow() {
    this._renderToShadowMap(this._bindParameters, this._sampleLightDirection(), this._depthRange);
    const e78 = this._accumulationTechnique;
    this._rctx.bindFramebuffer(this._fbo), this._rctx.bindTechnique(e78, this._passParameters, this._bindParameters), this._rctx.bindVAO(this._vao), this._rctx.drawArrays(e78.primitiveType, 0, n28(this._vao, "geometry"));
  }
  _sampleLightDirection() {
    return this._progress++, this._lightDirections[this._progress * O28 % this._lightDirections.length];
  }
  _updateCamera(e78) {
    !e78.equals(this._bindParameters.camera) && this._fbo && (this._bindParameters.camera.copyFrom(e78), this._fbo.resize(e78.fullWidth, e78.fullHeight), this._opacityFromElevation = 1 - k(c64, p61, e78.relativeElevation));
  }
  _requestRenderIfEnabled() {
    this._fbo && this._requestRender();
  }
  get test() {
    const e78 = this;
    return { lightDirections: this._lightDirections, get isDone() {
      return e78._isDoneAccumulating;
    }, get isActive() {
      return e78._isActive;
    } };
  }
};
e([y()], M23.prototype, "_progress", void 0), e([y()], M23.prototype, "_sampleCount", void 0), e([y()], M23.prototype, "_fbo", void 0), e([y()], M23.prototype, "_depthRange", void 0), e([y()], M23.prototype, "_previewing", void 0), e([y()], M23.prototype, "_accumulationRenderer", void 0), e([y()], M23.prototype, "_isRefining", null), e([y()], M23.prototype, "_isActive", null), e([y()], M23.prototype, "canAccumulate", null), e([y()], M23.prototype, "_isDoneAccumulating", null), e([y()], M23.prototype, "_opacityFromElevation", null), e([y()], M23.prototype, "running", null), M23 = e([a4("esri.views.3d.webgl-engine.lib.ShadowAccumulator")], M23);
var U23 = 6;
var L25 = "renderView";
var O28 = 104729;
var k24 = new Uint8Array(4);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowHighlightTechnique.js
var p62 = class extends v9 {
  constructor() {
    super(...arguments), this.shadowColor = r12(1, 0, 1, 1), this.shadowOpacity = 0.2, this.occludedShadowOpacity = 0.1, this.opacityElevation = 1, this.dayNightTerminator = 1;
  }
};
var u49 = class _u extends e25 {
  constructor(r79) {
    super(r79, new s75(), () => this.destroy());
  }
  initializeProgram(r79) {
    return new i19(r79.rctx, _u.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W4({ blending: l15(R5.SRC_ALPHA, R5.ONE, R5.ONE_MINUS_SRC_ALPHA, R5.ONE_MINUS_SRC_ALPHA), colorWrite: _7, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
u49.shader = new t24(j9, () => import("./ShadowHighlight.glsl-TSFP4ZEA.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowHighlight.js
var u50 = 1953125e-9;
var l64 = 4e4;
var g37 = 5e4;
var w29 = class {
  constructor(t88, e78) {
    this._rctx = t88, this._viewingMode = e78, this._maxOpacity = 1, this._passParameters = new p62(), this._drawParameters = new c20(), this._vao = f15(this._rctx);
  }
  get _technique() {
    return null == this._techniqueCached && (this._techniqueCached = new u49({ rctx: this._rctx, viewingMode: this._viewingMode })), this._techniqueCached;
  }
  render(t88, e78) {
    if (!t88.shadowMap.enabled || !t88.linearDepthTexture || !this.isVisible)
      return;
    const s84 = this._technique;
    this._drawParameters.origin = t88.camera.center, this._rctx.bindFramebuffer(e78), this._rctx.bindTechnique(s84, this._passParameters, t88).bindDraw(this._drawParameters, t88, this._passParameters), this._rctx.bindVAO(this._vao), this._rctx.drawArrays(s84.primitiveType, 0, n28(this._vao, "geometry"));
  }
  get gpuMemoryUsage() {
    var _a;
    return ((_a = this._vao) == null ? void 0 : _a.memoryEstimate) ?? 0;
  }
  setDefaultOptions(t88) {
    this._passParameters = { ...this._passParameters, ...t88 }, this._updateMaxOpacity();
  }
  updateParameters(s84, a85) {
    this._passParameters.opacityElevation = 1 - k(l64, g37, s84.relativeElevation);
    const o77 = this._viewingMode === l14.Global ? z2(y36, s84.center) : o4(y36, 0, 0, 1), m55 = P3(o77, a85);
    this._passParameters.dayNightTerminator = k(0, 1, i3(30 * m55, 0, 1));
  }
  dispose() {
    this._vao = t(this._vao), this._techniqueCached = f(this._techniqueCached);
  }
  get isVisible() {
    const { opacityElevation: t88, dayNightTerminator: e78 } = this._passParameters;
    return this._maxOpacity * t88 * e78 >= u50;
  }
  _updateMaxOpacity() {
    const t88 = Math.max(this._passParameters.shadowOpacity, this._passParameters.occludedShadowOpacity);
    this._maxOpacity = t88 * this._passParameters.shadowColor[3];
  }
};
var y36 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/SliceHelper.js
var t77 = W6();
var n90 = class {
  constructor() {
    this._plane = W6();
  }
  get isEnabled() {
    return !ps(this.plane, t77);
  }
  get plane() {
    return this._plane;
  }
  set plane(e78) {
    Z2(e78 || t77, this._plane);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BlendWeightsTechnique.js
var l65 = class _l extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: _7 });
  }
};
l65.shader = new t24(d24, () => import("./BlendWeights.glsl-P22RVCJY.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BlurTechnique.js
var l66 = class _l extends e25 {
  initializeProgram(r79) {
    return new i19(r79.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: _7 });
  }
};
l66.shader = new t24(f24, () => import("./Blur.glsl-ML6RVTOT.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/EdgeDetectTechnique.js
var l67 = class _l extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W4({ colorWrite: _7 });
  }
};
l67.shader = new t24(d25, () => import("./EdgeDetect.glsl-JDEKEYQF.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/SmaaRenderPass.js
var A34 = class extends m {
  constructor(e78, r79) {
    super({}), this._rctx = e78, this._techniqueRep = r79, this._passParameters = new t45(), this._isEnabled = false;
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._abortController = e3(this._abortController), this.disable();
  }
  _loadResources(e78) {
    if (null != this._abortController)
      return false;
    if (null != this._passParameters.searchTexture)
      return true;
    this._abortController = new AbortController();
    const r79 = this._abortController.signal;
    return import("./SmaaRenderPassData-34GEBTVN.js").then((e79) => this._loadTextures(e79, r79)).then(() => e78()).finally(() => this._abortController = null), false;
  }
  _loadTextures(e78, r79) {
    return s6(r79), Promise.all([this._loadTextureFromBase64(e78.areaTexture, L.LINEAR, G5.RGB), this._loadTextureFromBase64(e78.searchTexure, L.NEAREST, G5.LUMINANCE)]).then(([e79, s84]) => {
      a5(r79) ? (e79.dispose(), s84.dispose(), s6(r79)) : (this._passParameters.areaTexture = e79, this._passParameters.searchTexture = s84);
    });
  }
  get updating() {
    return null != this._abortController;
  }
  enable(e78) {
    if (this._isEnabled)
      return true;
    if (!this._edgeDetectTechnique || !this._blendWeightsTechnique || !this._blurTechnique) {
      const e79 = new t26();
      this._edgeDetectTechnique = this._techniqueRep.releaseAndAcquire(l67, e79, this._edgeDetectTechnique), this._blendWeightsTechnique = this._techniqueRep.releaseAndAcquire(l65, e79, this._blendWeightsTechnique), this._blurTechnique = this._techniqueRep.releaseAndAcquire(l66, e79, this._blurTechnique);
    }
    if (!this._loadResources(e78))
      return false;
    this._vao = w9(this._rctx);
    const r79 = new e23(4, 4);
    r79.pixelFormat = G5.RG, r79.internalFormat = P5.RG8, r79.wrapMode = D2.CLAMP_TO_EDGE, this._passParameters.edges = new x11(this._rctx, r79);
    const s84 = new e23(4, 4);
    return s84.pixelFormat = G5.RGBA, s84.wrapMode = D2.CLAMP_TO_EDGE, this._passParameters.blend = new x11(this._rctx, s84), this._isEnabled = true, true;
  }
  disable() {
    this._isEnabled && (this._vao = t(this._vao), this._passParameters.areaTexture = t(this._passParameters.areaTexture), this._passParameters.searchTexture = t(this._passParameters.searchTexture), this._passParameters.blend = t(this._passParameters.blend), this._passParameters.edges = t(this._passParameters.edges), this._isEnabled = false);
  }
  get _validPassParameters() {
    return this._isEnabled ? this._passParameters : null;
  }
  render(e78) {
    const r79 = this._validPassParameters;
    if (null == r79)
      return;
    r79.colorTexture = e78;
    const s84 = this._rctx, t88 = s84.getBoundFramebufferObject(), i78 = e78.descriptor.width, a85 = e78.descriptor.height;
    s84.bindVAO(this._vao), s84.setViewport(0, 0, i78, a85), r79.edges.resize(i78, a85), s84.bindFramebuffer(r79.edges), s84.setClearColor(0, 0, 0, 1), s84.clear(_4.COLOR_BUFFER_BIT), s84.bindTechnique(this._edgeDetectTechnique, r79, null), s84.drawArrays(E5.TRIANGLES, 0, 3), r79.blend.resize(i78, a85), s84.bindFramebuffer(r79.blend), s84.setClearColor(0, 0, 1, 1), s84.clear(_4.COLOR_BUFFER_BIT), s84.bindTechnique(this._blendWeightsTechnique, r79, null), s84.drawArrays(E5.TRIANGLES, 0, 3), s84.bindFramebuffer(t88), s84.setClearColor(0, 1, 0, 1), s84.clear(_4.COLOR_BUFFER_BIT), s84.bindTechnique(this._blurTechnique, r79, null), s84.drawArrays(E5.TRIANGLES, 0, 3);
  }
  _loadTextureFromBase64(e78, r79, s84) {
    return t22(e78).then((e79) => {
      const t88 = new e23();
      return t88.pixelFormat = s84, t88.wrapMode = D2.CLAMP_TO_EDGE, t88.width = e79.width, t88.height = e79.height, t88.samplingMode = r79, new T8(this._rctx, t88, e79);
    });
  }
};
e([y()], A34.prototype, "_abortController", void 0), e([y({ readOnly: true })], A34.prototype, "updating", null), A34 = e([a4("esri.views.3d.webgl-engine.lib.SmaaRenderPass")], A34);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/localOriginHelper.js
function n91(n103, o77) {
  const t88 = -n103[0], c75 = -n103[1], f59 = -n103[2], i78 = o77[3], s84 = o77[7], u58 = o77[11], e78 = o77[15];
  o77[0] += i78 * t88, o77[1] += i78 * c75, o77[2] += i78 * f59, o77[4] += s84 * t88, o77[5] += s84 * c75, o77[6] += s84 * f59, o77[8] += u58 * t88, o77[9] += u58 * c75, o77[10] += u58 * f59, o77[12] += e78 * t88, o77[13] += e78 * c75, o77[14] += e78 * f59;
}
function o67(n103, o77) {
  const t88 = n103[0], c75 = n103[1], f59 = n103[2];
  o77[12] += t88 * o77[0] + c75 * o77[4] + f59 * o77[8], o77[13] += t88 * o77[1] + c75 * o77[5] + f59 * o77[9], o77[14] += t88 * o77[2] + c75 * o77[6] + f59 * o77[10], o77[14] += t88 * o77[3] + c75 * o77[7] + f59 * o77[11];
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/LocalOriginManager.js
var e66 = class {
  constructor(i78) {
    this._factory = i78, this._originData = /* @__PURE__ */ new Map();
  }
  acquire(i78) {
    return this.register(this._factory.getOrigin(i78));
  }
  register(i78) {
    const t88 = this._originData.get(i78.id) || new s76(i78);
    return t88.refCount++, this._originData.has(t88.origin.id) || this._originData.set(t88.origin.id, t88), t88;
  }
  release(i78) {
    i78.refCount--, 0 === i78.refCount && this._originData.delete(i78.origin.id);
  }
  updateViewMatrices(t88) {
    this._originData.forEach((e78) => {
      n14(e78.viewMatrix, t88), o67(e78.origin.vec3, e78.viewMatrix);
    });
  }
};
var s76 = class {
  constructor(i78) {
    this.origin = i78, this.refCount = 0, this.viewMatrix = e17();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderParameters.js
var a75 = class extends F9 {
  constructor(s84, o77) {
    super(), this.distanceFalloffFactor = s84, this.transparency = o77, this.transformNormalViewFromGlobal = e16();
  }
};
var e67 = class extends W5 {
  constructor() {
    super(...arguments), this.transformNormalViewFromGlobal = e16(), this.slicePlaneLocalOrigin = n7(), this.transformNormalGlobalFromModel = e16();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderTechnique.js
var u51 = class _u extends e25 {
  initializeProgram(e78) {
    return new i19(e78.rctx, _u.shader.get().build(this.configuration), o11);
  }
  initializePipeline(e78) {
    return e78.blendMinMax ? W4({ blending: l15(R5.ONE, R5.ONE, R5.ZERO, R5.ONE, T3.ADD, e78.blendMinMax.MAX), depthTest: { func: I4.LEQUAL }, colorWrite: _7 }) : W4({ depthTest: { func: I4.LEQUAL }, depthWrite: a25, colorWrite: _7 });
  }
};
u51.shader = new t24(L7, () => import("./EdgeShader.glsl-V2MPW23I.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderTechniqueConfiguration.js
var s77 = class extends s30 {
  constructor() {
    super(...arguments), this.mode = x14.SOLID, this.hasSlicePlane = false, this.silhouette = false, this.legacy = false, this.antialiasing = false, this.doublePrecisionRequiresObfuscation = false, this.hasMultipassTerrain = false, this.cullAboveGround = false, this.spherical = false;
  }
};
e([r29({ count: x14.COUNT })], s77.prototype, "mode", void 0), e([r29()], s77.prototype, "hasSlicePlane", void 0), e([r29()], s77.prototype, "silhouette", void 0), e([r29()], s77.prototype, "legacy", void 0), e([r29()], s77.prototype, "antialiasing", void 0), e([r29()], s77.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r29()], s77.prototype, "hasMultipassTerrain", void 0), e([r29()], s77.prototype, "cullAboveGround", void 0), e([r29()], s77.prototype, "spherical", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeRenderer.js
var m45 = 8;
var g38 = 128;
var f51 = { type: "uber", hasSlicePlane: false, strokesTexture: null, legacy: true, spherical: true };
var T28 = { solid: x14.SOLID, sketch: x14.SKETCH, uber: x14.MIXED };
var b26 = class _b {
  constructor(e78, t88, i78) {
    this._rctx = e78, this._shaderTechniqueRepository = t88, this._configuration = new s77(), this.refCount = 0, this._renderables = /* @__PURE__ */ new Set(), this._sortedRenderables = { [A7.TRANSPARENT]: { [A7.TRANSPARENT]: new l2(), [A7.OPAQUE]: new l2() }, [A7.OPAQUE]: { [A7.TRANSPARENT]: new l2(), [A7.OPAQUE]: new l2() } }, this._renderablesDirty = false, this._drawParameters = new e67(), this._settings = { ...f51, ...i78 }, this.key = _b.getKey(this._settings.type, this._settings.hasSlicePlane, this._settings.legacy);
    const s84 = this._settings.strokesTexture.variants;
    this.writerSettings = { variants: s84, reducedPrecision: t27.TESTS_DISABLE_OPTIMIZATIONS }, this._configuration.legacy = this._settings.legacy, this._configuration.mode = T28[this._settings.type], this._configuration.silhouette = false, this._configuration.antialiasing = !!this._rctx.capabilities.blendMinMax, this._configuration.hasSlicePlane = this._settings.hasSlicePlane, this._configuration.doublePrecisionRequiresObfuscation = e78.driverTest.doublePrecisionRequiresObfuscation.result, this._configuration.spherical = i78.spherical;
  }
  dispose() {
    this._technique = f(this._technique);
  }
  addRenderable(e78) {
    this._renderables.add(e78), this._renderablesDirty = true;
  }
  removeRenderable(e78) {
    this._renderables.delete(e78), this._renderablesDirty = true;
  }
  setRenderablesDirty() {
    this._renderablesDirty = true;
  }
  forEachRenderable(e78, r79) {
    if (this._renderablesDirty && this._sortRenderables(), r79 !== A7.INVISIBLE) {
      const t88 = this._sortedRenderables[r79];
      t88[A7.TRANSPARENT].forAll(e78), t88[A7.OPAQUE].forAll(e78);
    }
  }
  updateTechnique(e78, r79) {
    return this._configuration.hasMultipassTerrain = !!e78.multipassTerrain.enabled, this._configuration.cullAboveGround = !!e78.multipassTerrain.cullAboveGround, this._configuration.silhouette = r79, this._technique = this._shaderTechniqueRepository.releaseAndAcquire(u51, this._configuration, this._technique), this._technique;
  }
  bindRegularEdges(e78, r79) {
    return this._lastOriginId = null, this._rctx.bindTechnique(this.updateTechnique(r79, false), e78, r79);
  }
  bindSilhouetteEdges(e78, r79) {
    return this._lastOriginId = null, this._rctx.bindTechnique(this.updateTechnique(r79, true), e78, r79);
  }
  renderRegularEdges(e78, r79, t88, i78, s84) {
    this._render(e78, r79, r79.regular.vao, t88, i78, s84);
  }
  renderSilhouetteEdges(e78, r79, t88, i78, s84) {
    this._render(e78, r79, r79.silhouette.vao, t88, i78, s84);
  }
  _render(e78, r79, t88, i78, s84, n103) {
    n103 > 0 && (this._bindDraw(e78, r79, i78, s84), this._rctx.bindVAO(t88), this._rctx.capabilities.instancing.drawArraysInstanced(E5.TRIANGLE_FAN, 0, 4, n103));
  }
  _bindDraw(e78, r79, s84, a85) {
    if (this._drawParameters.componentDataTexture = r79.components.buffer.textureBuffer.texture, this._drawParameters.strokesTexture = this._settings.strokesTexture, "origin" in r79.transform)
      this._lastOriginId !== r79.transform.origin.origin.id && (e78.setUniformMatrix4fv("localView", r79.transform.origin.viewMatrix), this._lastOriginId = r79.transform.origin.origin.id), e78.setUniformMatrix4fv("model", r79.transform.modelMatrix), this._drawParameters.slicePlaneLocalOrigin = r79.transform.origin.origin.vec3;
    else {
      const e79 = new c59(r79.transform.position), s85 = o13(R21, u5(R21, r79.transform.rotationScale));
      this._drawParameters.transformWorldFromModelTL = e79.low, this._drawParameters.transformWorldFromModelTH = e79.high, this._drawParameters.transformWorldFromModelRS = r79.transform.rotationScale, this._drawParameters.transformNormalGlobalFromModel = s85;
      const d63 = a85.camera.viewInverseTransposeMatrix;
      o4(this._drawParameters.slicePlaneLocalOrigin, d63[3], d63[7], d63[11]);
    }
    e78.bindDraw(this._drawParameters, a85, s84);
  }
  _sortRenderables() {
    this._renderablesDirty = false, this._sortedRenderables[A7.TRANSPARENT][A7.TRANSPARENT].clear(), this._sortedRenderables[A7.TRANSPARENT][A7.OPAQUE].clear(), this._sortedRenderables[A7.OPAQUE][A7.TRANSPARENT].clear(), this._sortedRenderables[A7.OPAQUE][A7.OPAQUE].clear(), this._renderables.forEach((e79) => {
      e79.objectTransparency !== A7.INVISIBLE && e79.edgeTransparency !== A7.INVISIBLE && this._sortedRenderables[e79.objectTransparency][e79.edgeTransparency].push(e79);
    });
    const e78 = (e79, r79) => "origin" in e79.transform ? "origin" in r79.transform ? e79.transform.origin.origin.id < r79.transform.origin.origin.id ? -1 : e79.transform.origin.origin.id > r79.transform.origin.origin.id ? 1 : 0 : 1 : 0;
    this._sortedRenderables[A7.TRANSPARENT][A7.TRANSPARENT].sort(e78), this._sortedRenderables[A7.TRANSPARENT][A7.OPAQUE].sort(e78), this._sortedRenderables[A7.OPAQUE][A7.TRANSPARENT].sort(e78), this._sortedRenderables[A7.OPAQUE][A7.OPAQUE].sort(e78);
  }
  static getKey(e78, r79, t88) {
    return `edges-t:${e78}:${r79}:${t88}`;
  }
};
var R21 = e21();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/strokes.js
function n92(e78) {
  const n103 = 4, u58 = a76.resolution, c75 = u58 / 2, h58 = new Uint8Array(n103 * u58 * u58), p70 = n103 * u58 * c75, m55 = a76.amplitude, f59 = 2 * m55, d63 = n103 * u58, S27 = Math.log2(u58) + 1, E43 = a76.strokes.length;
  let g49 = (S27 - 1) * E43 * d63;
  for (const { distance: s84, pressure: r79 } of a76.strokes) {
    let e79 = s84, u59 = r79, c76 = g49;
    for (let s85 = 0; s85 < S27; s85++) {
      0 !== s85 && (e79 = o68(e79, i70.DISTANCE), u59 = o68(u59, i70.PRESSURE));
      for (let s86 = 0; s86 < a76.resolution; s86++) {
        const r80 = 0.5 + (e79 ? e79[s86 % e79.length] / f59 : 0), o77 = u59 ? u59[s86 % u59.length] : 1;
        o14(r80, h58, c76), o14(o77, h58, c76 + p70), c76 += n103;
      }
      c76 -= d63 * (E43 + 1);
    }
    g49 += d63;
  }
  const R25 = new e23();
  R25.width = R25.height = u58;
  const w33 = new T8(e78, R25, h58);
  return new l68(u58, f59, m55, E43, w33);
}
function o68(t88, e78) {
  if (!t88)
    return null;
  const s84 = t88.length / 2, r79 = u52 * s84, n103 = new Array(s84);
  let o77 = 0;
  const l75 = e78 === i70.PRESSURE;
  for (let i78 = 0; i78 < t88.length; i78 += 2) {
    const e79 = (t88[i78] + t88[i78 + 1]) / 2;
    n103[o77++] = l75 ? Math.min(r79, 1 - (1 - e79) * c65) : Math.min(r79, e79 * c65);
  }
  return n103;
}
var i70;
!function(t88) {
  t88[t88.DISTANCE = 0] = "DISTANCE", t88[t88.PRESSURE = 1] = "PRESSURE";
}(i70 || (i70 = {}));
var u52 = 0.1;
var c65 = 0.5;
var l68 = class {
  constructor(t88, e78, s84, r79, n103) {
    this.resolution = t88, this.normalizationScale = e78, this.amplitude = s84, this.variants = r79, this.texture = n103;
  }
  dispose() {
    this.texture = t(this.texture);
  }
};
var a76 = { amplitude: 8, resolution: 256, strokes: [{ distance: [-1.59027, -1.59426, -1.59674, -1.59766, -1.59702, -1.59479, -1.59095, -1.5855, -1.57843, -1.56973, -1.55942, -1.5475, -1.53398, -1.5189, -1.50226, -1.4841, -1.46446, -1.44337, -1.42088, -1.39703, -1.37188, -1.34547, -1.31786, -1.28912, -1.2593, -1.22847, -1.19668, -1.16402, -1.13053, -1.09629, -1.06137, -1.02582, -0.98972, -0.95313, -0.91611, -0.87872, -0.84102, -0.80306, -0.76488, -0.72654, -0.68807, -0.64952, -0.61092, -0.57232, -0.53375, -0.49527, -0.45692, -0.41874, -0.38078, -0.34309, -0.3057, -0.26867, -0.23204, -0.19585, -0.16015, -0.12497, -0.09036, -0.05634, -0.02296, 977e-5, 0.04183, 0.07321, 0.10389, 0.13386, 0.16313, 0.19169, 0.21956, 0.24672, 0.27321, 0.299, 0.32413, 0.34858, 0.37237, 0.3955, 0.41798, 0.43981, 0.461, 0.48154, 0.50145, 0.52073, 0.53939, 0.55744, 0.57488, 0.5917, 0.6079, 0.62347, 0.63837, 0.65259, 0.66609, 0.67885, 0.69083, 0.70201, 0.71235, 0.72183, 0.73042, 0.73812, 0.7449, 0.75076, 0.7557, 0.75973, 0.76284, 0.76507, 0.76642, 0.76692, 0.76659, 0.76545, 0.76352, 0.76083, 0.7574, 0.75324, 0.74837, 0.74279, 0.73652, 0.72959, 0.72199, 0.71377, 0.70493, 0.69553, 0.68558, 0.67515, 0.66426, 0.65298, 0.64135, 0.62944, 0.6173, 0.60499, 0.59257, 0.58008, 0.56759, 0.55513, 0.54275, 0.5305, 0.51842, 0.50654, 0.4949, 0.48353, 0.47246, 0.4617, 0.45128, 0.44121, 0.43149, 0.42213, 0.41313, 0.40448, 0.39617, 0.38818, 0.3805, 0.37309, 0.36594, 0.35902, 0.35229, 0.34572, 0.33927, 0.33292, 0.32663, 0.32035, 0.31407, 0.30774, 0.30135, 0.29486, 0.28824, 0.28148, 0.27454, 0.26739, 0.26002, 0.25241, 0.24454, 0.23639, 0.22796, 0.21922, 0.21016, 0.20076, 0.19098, 0.18082, 0.17023, 0.1592, 0.14768, 0.13566, 0.1231, 0.10996, 0.09624, 0.08188, 0.06688, 0.05121, 0.03485, 0.01778, 0, -0.0185, -0.03771, -0.05763, -0.07824, -0.09952, -0.12144, -0.14396, -0.16706, -0.19069, -0.21481, -0.23938, -0.26436, -0.28971, -0.31539, -0.34136, -0.36759, -0.39404, -0.42067, -0.44746, -0.47437, -0.50136, -0.52839, -0.55544, -0.58248, -0.60948, -0.63642, -0.66329, -0.6901, -0.71684, -0.74352, -0.77015, -0.79675, -0.82332, -0.84988, -0.87644, -0.90301, -0.92958, -0.95615, -0.98272, -1.00926, -1.03575, -1.06217, -1.08847, -1.11463, -1.1406, -1.16633, -1.19178, -1.2169, -1.24164, -1.26595, -1.28979, -1.31312, -1.3359, -1.35809, -1.37963, -1.4005, -1.42064, -1.44, -1.45853, -1.47616, -1.49285, -1.50853, -1.52313, -1.53659, -1.54886, -1.55986, -1.56955, -1.57788, -1.5848], pressure: [-0.01365, -206e-5, 0.01025, 0.02327, 0.03696, 0.05129, 0.06619, 0.08163, 0.09755, 0.11393, 0.1307, 0.14784, 0.16531, 0.18308, 0.20111, 0.21938, 0.23786, 0.25651, 0.2753, 0.29419, 0.31315, 0.33215, 0.35115, 0.37015, 0.38913, 0.40806, 0.42694, 0.44576, 0.46449, 0.48313, 0.50167, 0.5201, 0.53839, 0.55653, 0.57448, 0.59222, 0.60971, 0.62692, 0.6438, 0.66033, 0.67648, 0.69221, 0.70753, 0.72242, 0.73688, 0.75093, 0.76456, 0.77779, 0.79063, 0.80309, 0.81517, 0.82686, 0.83817, 0.84911, 0.85967, 0.86987, 0.87972, 0.88924, 0.89845, 0.90734, 0.91594, 0.92425, 0.93229, 0.94005, 0.94754, 0.95475, 0.96166, 0.96826, 0.97451, 0.9804, 0.98588, 0.99092, 0.99549, 0.99957, 0.99685, 0.99381, 0.99131, 0.98936, 0.98796, 0.98711, 0.98681, 0.98706, 0.98787, 0.98923, 0.99113, 0.99357, 0.99654, 1, 0.99607, 0.99171, 0.98695, 0.98181, 0.97634, 0.97057, 0.96452, 0.95824, 0.95175, 0.94506, 0.93818, 0.93113, 0.92389, 0.91647, 0.90887, 0.90109, 0.89314, 0.88501, 0.87672, 0.86831, 0.85978, 0.85119, 0.84256, 0.83393, 0.82533, 0.8168, 0.80836, 0.80002, 0.79181, 0.78374, 0.77582, 0.7681, 0.76059, 0.75331, 0.74629, 0.73955, 0.73311, 0.72697, 0.72116, 0.71568, 0.71054, 0.70572, 0.70121, 0.697, 0.69304, 0.68931, 0.68576, 0.68236, 0.67905, 0.67582, 0.67262, 0.66941, 0.66619, 0.66291, 0.65957, 0.65613, 0.65259, 0.64892, 0.6451, 0.6411, 0.6369, 0.63248, 0.62783, 0.62295, 0.61783, 0.61247, 0.60688, 0.60104, 0.59498, 0.58868, 0.58216, 0.57542, 0.56845, 0.56125, 0.5538, 0.5461, 0.53813, 0.52986, 0.52129, 0.51239, 0.50316, 0.49359, 0.4837, 0.47349, 0.46299, 0.45223, 0.44124, 0.43005, 0.41869, 0.40719, 0.39557, 0.38386, 0.37207, 0.36023, 0.34836, 0.33648, 0.32464, 0.31287, 0.30119, 0.28963, 0.27822, 0.26698, 0.25594, 0.2451, 0.23448, 0.22409, 0.21391, 0.20394, 0.19415, 0.18452, 0.17503, 0.16565, 0.15636, 0.14713, 0.13794, 0.1288, 0.11968, 0.11058, 0.10151, 0.09247, 0.08346, 0.07447, 0.06552, 0.05659, 0.0477, 0.03885, 0.03007, 0.02137, 0.01278, 433e-5, -393e-5, -0.012, -0.01983, -0.02738, -0.03463, -0.04155, -0.0481, -0.05429, -0.0601, -0.06553, -0.07057, -0.07524, -0.07954, -0.08347, -0.08703, -0.09022, -0.09303, -0.09544, -0.09744, -0.09898, -0.10004, -0.10059, -0.1006, -0.10005, -0.09892, -0.0972, -0.09487, -0.09192, -0.08833, -0.08409, -0.07918, -0.07357, -0.06724, -0.06019, -0.0524, -0.04386, -0.03455, -0.02448] }, { distance: [-3.46259, -3.47131, -3.47668, -3.47863, -3.47712, -3.4721, -3.46352, -3.45138, -3.43566, -3.41635, -3.39347, -3.36704, -3.33709, -3.30368, -3.26684, -3.22667, -3.18322, -3.1366, -3.08689, -3.0342, -2.97865, -2.92036, -2.85946, -2.79607, -2.73034, -2.66241, -2.59242, -2.52052, -2.44686, -2.37159, -2.29485, -2.2168, -2.13757, -2.05731, -1.97616, -1.89426, -1.81174, -1.72875, -1.64543, -1.56191, -1.47833, -1.39483, -1.3115, -1.22847, -1.14581, -1.06361, -0.98193, -0.90083, -0.82036, -0.74054, -0.66141, -0.583, -0.50532, -0.4284, -0.35228, -0.277, -0.20261, -0.12916, -0.05672, 0.01463, 0.08485, 0.15384, 0.22153, 0.28784, 0.35269, 0.41602, 0.47776, 0.53787, 0.59629, 0.653, 0.70799, 0.76123, 0.81274, 0.86253, 0.9106, 0.95698, 1.0017, 1.04477, 1.0862, 1.126, 1.16415, 1.20065, 1.23546, 1.26857, 1.29994, 1.32953, 1.35731, 1.38321, 1.40719, 1.42921, 1.44922, 1.46719, 1.48309, 1.49691, 1.50862, 1.51825, 1.52581, 1.53133, 1.53486, 1.53644, 1.53616, 1.53409, 1.53031, 1.52493, 1.51803, 1.50972, 1.50009, 1.48924, 1.47725, 1.46421, 1.45019, 1.43527, 1.4195, 1.40295, 1.38568, 1.36778, 1.34929, 1.3303, 1.31087, 1.29108, 1.27099, 1.25066, 1.23018, 1.2096, 1.18898, 1.16838, 1.14785, 1.12745, 1.10721, 1.08719, 1.06741, 1.04791, 1.02871, 1.00986, 0.99136, 0.97324, 0.95551, 0.93819, 0.92127, 0.90476, 0.88866, 0.87296, 0.85767, 0.84277, 0.82823, 0.81406, 0.80022, 0.7867, 0.77346, 0.76049, 0.74774, 0.73519, 0.72278, 0.71049, 0.69827, 0.68606, 0.67381, 0.66145, 0.64893, 0.63618, 0.62313, 0.60973, 0.5959, 0.5816, 0.56675, 0.5513, 0.53516, 0.51826, 0.50053, 0.4819, 0.46231, 0.44169, 0.42002, 0.39725, 0.37336, 0.34834, 0.32219, 0.2949, 0.2665, 0.23698, 0.20638, 0.17469, 0.14193, 0.10809, 0.07316, 0.03714, 0, -0.03827, -0.07772, -0.11836, -0.16022, -0.20332, -0.24768, -0.29332, -0.34024, -0.38844, -0.43788, -0.48854, -0.54036, -0.59329, -0.64724, -0.70211, -0.75782, -0.81425, -0.87128, -0.92881, -0.98674, -1.04498, -1.10346, -1.1621, -1.22086, -1.27969, -1.33854, -1.3974, -1.45625, -1.51511, -1.57396, -1.63283, -1.69173, -1.75067, -1.80968, -1.86875, -1.9279, -1.98712, -2.04639, -2.10568, -2.16495, -2.22416, -2.28322, -2.34208, -2.40063, -2.4588, -2.51647, -2.57354, -2.62989, -2.68543, -2.74002, -2.79357, -2.84597, -2.89711, -2.94689, -2.99521, -3.04195, -3.087, -3.13023, -3.17152, -3.21075, -3.24779, -3.28252, -3.3148, -3.34451, -3.37154, -3.39577, -3.41709, -3.43539, -3.45059], pressure: [0.87183, 0.87151, 0.87129, 0.87118, 0.87117, 0.87128, 0.87149, 0.87182, 0.87225, 0.8728, 0.87347, 0.87424, 0.87513, 0.87613, 0.87723, 0.87845, 0.87978, 0.88122, 0.88276, 0.88441, 0.88616, 0.88801, 0.88996, 0.892, 0.89414, 0.89637, 0.89868, 0.90108, 0.90356, 0.90611, 0.90874, 0.91144, 0.91421, 0.91704, 0.91993, 0.92287, 0.92587, 0.92892, 0.93201, 0.93514, 0.93831, 0.94151, 0.94474, 0.94799, 0.95126, 0.95456, 0.95786, 0.96118, 0.9645, 0.96783, 0.97116, 0.97448, 0.9778, 0.98111, 0.98441, 0.9877, 0.99096, 0.99421, 0.99742, 0.99938, 0.99622, 0.9931, 0.99001, 0.98697, 0.98397, 0.98101, 0.97811, 0.97526, 0.97246, 0.96972, 0.96703, 0.96441, 0.96185, 0.95935, 0.95691, 0.95455, 0.95225, 0.95002, 0.94786, 0.94577, 0.94376, 0.94182, 0.93995, 0.93817, 0.93646, 0.93483, 0.93328, 0.93181, 0.93042, 0.92911, 0.92788, 0.92673, 0.92566, 0.92467, 0.92376, 0.92293, 0.92217, 0.92149, 0.92088, 0.92034, 0.91987, 0.91947, 0.91913, 0.91886, 0.91864, 0.91849, 0.91838, 0.91833, 0.91834, 0.91839, 0.91849, 0.91863, 0.91883, 0.91907, 0.91935, 0.91968, 0.92005, 0.92046, 0.92092, 0.92142, 0.92195, 0.92253, 0.92314, 0.9238, 0.92449, 0.92521, 0.92598, 0.92677, 0.9276, 0.92847, 0.92936, 0.93029, 0.93125, 0.93224, 0.93325, 0.9343, 0.93537, 0.93646, 0.93758, 0.93872, 0.93988, 0.94106, 0.94225, 0.94346, 0.94469, 0.94593, 0.94718, 0.94844, 0.94971, 0.95098, 0.95226, 0.95354, 0.95482, 0.9561, 0.95738, 0.95867, 0.95995, 0.96122, 0.9625, 0.96377, 0.96504, 0.9663, 0.96757, 0.96883, 0.97009, 0.97135, 0.97261, 0.97387, 0.97513, 0.9764, 0.97767, 0.97895, 0.98023, 0.98153, 0.98284, 0.98416, 0.98549, 0.98684, 0.98821, 0.9896, 0.99101, 0.99244, 0.99389, 0.99537, 0.99688, 0.99842, 1, 0.99839, 0.99675, 0.99508, 0.99336, 0.99161, 0.98982, 0.98799, 0.98613, 0.98422, 0.98228, 0.98029, 0.97827, 0.97622, 0.97414, 0.97202, 0.96987, 0.9677, 0.96551, 0.9633, 0.96107, 0.95882, 0.95656, 0.9543, 0.95202, 0.94975, 0.94747, 0.94519, 0.94292, 0.94065, 0.93838, 0.93613, 0.93388, 0.93164, 0.92941, 0.9272, 0.92499, 0.9228, 0.92062, 0.91846, 0.91631, 0.91418, 0.91207, 0.90998, 0.90792, 0.90588, 0.90387, 0.90189, 0.89995, 0.89804, 0.89617, 0.89434, 0.89256, 0.89083, 0.88914, 0.88752, 0.88595, 0.88443, 0.88299, 0.88161, 0.8803, 0.87907, 0.87791, 0.87683, 0.87584, 0.87494, 0.87412, 0.8734, 0.87278, 0.87225] }, { distance: [0.39335, 0.43437, 0.47737, 0.52234, 0.56923, 0.61801, 0.66864, 0.72109, 0.7753, 0.83123, 0.88882, 0.94801, 1.00875, 1.07097, 1.13461, 1.1996, 1.26586, 1.33333, 1.40193, 1.47158, 1.54221, 1.61373, 1.68607, 1.75913, 1.83284, 1.90711, 1.98186, 2.05699, 2.13243, 2.20809, 2.28387, 2.35971, 2.4355, 2.51117, 2.58663, 2.66179, 2.73658, 2.81092, 2.88473, 2.95792, 3.03043, 3.10217, 3.17308, 3.24309, 3.31211, 3.3801, 3.44697, 3.51267, 3.57712, 3.64028, 3.70208, 3.76247, 3.8214, 3.87881, 3.93467, 3.98892, 4.04152, 4.09244, 4.14164, 4.18908, 4.23474, 4.27859, 4.32061, 4.36077, 4.39905, 4.43544, 4.46992, 4.50249, 4.53314, 4.56185, 4.58864, 4.61349, 4.63642, 4.65745, 4.67657, 4.69381, 4.7092, 4.72274, 4.73447, 4.74441, 4.75259, 4.75903, 4.76376, 4.76682, 4.76822, 4.768, 4.76618, 4.76279, 4.75786, 4.75142, 4.74348, 4.73409, 4.72326, 4.71102, 4.69739, 4.68241, 4.6661, 4.64849, 4.6296, 4.60948, 4.58816, 4.56567, 4.54204, 4.51732, 4.49154, 4.46473, 4.43694, 4.4082, 4.37854, 4.348, 4.31662, 4.28443, 4.25145, 4.21773, 4.1833, 4.14819, 4.11243, 4.07606, 4.03912, 4.00162, 3.96361, 3.92512, 3.88618, 3.84683, 3.80708, 3.76697, 3.72653, 3.68579, 3.64478, 3.60351, 3.56202, 3.52033, 3.47845, 3.43642, 3.39425, 3.35196, 3.30957, 3.2671, 3.22455, 3.18196, 3.13933, 3.09668, 3.05402, 3.01136, 2.96873, 2.92613, 2.88357, 2.84108, 2.79865, 2.75631, 2.71407, 2.67195, 2.62994, 2.58807, 2.54634, 2.50477, 2.46338, 2.42216, 2.38114, 2.34032, 2.29971, 2.25933, 2.21916, 2.17923, 2.13954, 2.10008, 2.06087, 2.02189, 1.98316, 1.94468, 1.90644, 1.86845, 1.83069, 1.79316, 1.75586, 1.71877, 1.68189, 1.6452, 1.60868, 1.57232, 1.53611, 1.50004, 1.46407, 1.4282, 1.39241, 1.35668, 1.321, 1.28535, 1.24972, 1.2141, 1.17849, 1.14286, 1.10723, 1.07158, 1.03593, 1.00028, 0.96464, 0.92902, 0.89344, 0.85793, 0.8225, 0.78719, 0.75203, 0.71705, 0.68231, 0.64784, 0.61369, 0.57991, 0.54656, 0.51368, 0.48134, 0.44959, 0.41849, 0.3881, 0.35848, 0.32967, 0.30174, 0.27474, 0.24872, 0.22373, 0.19982, 0.17702, 0.15539, 0.13497, 0.11579, 0.09791, 0.08137, 0.06621, 0.05248, 0.04022, 0.02948, 0.02029, 0.01271, 677e-5, 252e-5, 0, -76e-5, 27e-5, 314e-5, 788e-5, 0.01451, 0.02307, 0.03357, 0.04604, 0.0605, 0.07697, 0.09546, 0.11599, 0.13858, 0.16322, 0.18992, 0.21869, 0.24952, 0.28241, 0.31735, 0.35434], pressure: [0.95248, 0.95236, 0.95228, 0.95223, 0.95222, 0.95224, 0.95231, 0.95241, 0.95256, 0.95274, 0.95296, 0.95322, 0.95352, 0.95385, 0.95423, 0.95465, 0.9551, 0.9556, 0.95613, 0.9567, 0.95731, 0.95796, 0.95864, 0.95936, 0.96012, 0.96091, 0.96173, 0.96259, 0.96348, 0.9644, 0.96535, 0.96633, 0.96734, 0.96838, 0.96944, 0.97053, 0.97164, 0.97277, 0.97393, 0.9751, 0.97629, 0.9775, 0.97873, 0.97997, 0.98122, 0.98249, 0.98376, 0.98505, 0.98634, 0.98763, 0.98893, 0.99023, 0.99154, 0.99284, 0.99414, 0.99544, 0.99673, 0.99802, 0.9993, 0.99942, 0.99816, 0.99691, 0.99568, 0.99445, 0.99324, 0.99205, 0.99087, 0.98972, 0.98858, 0.98746, 0.98636, 0.98528, 0.98423, 0.9832, 0.98219, 0.98121, 0.98025, 0.97931, 0.9784, 0.97752, 0.97666, 0.97582, 0.97501, 0.97423, 0.97347, 0.97274, 0.97203, 0.97135, 0.9707, 0.97007, 0.96948, 0.9689, 0.96836, 0.96784, 0.96735, 0.96689, 0.96646, 0.96605, 0.96567, 0.96533, 0.965, 0.96471, 0.96445, 0.96421, 0.964, 0.96382, 0.96367, 0.96355, 0.96346, 0.96339, 0.96335, 0.96334, 0.96336, 0.9634, 0.96348, 0.96358, 0.9637, 0.96385, 0.96403, 0.96423, 0.96446, 0.96471, 0.96499, 0.96529, 0.96561, 0.96595, 0.96631, 0.96669, 0.96709, 0.96751, 0.96795, 0.9684, 0.96887, 0.96935, 0.96984, 0.97035, 0.97087, 0.9714, 0.97194, 0.97249, 0.97304, 0.97361, 0.97418, 0.97476, 0.97534, 0.97592, 0.97651, 0.97711, 0.9777, 0.9783, 0.9789, 0.9795, 0.9801, 0.9807, 0.9813, 0.9819, 0.9825, 0.98309, 0.98369, 0.98428, 0.98486, 0.98545, 0.98603, 0.98661, 0.98718, 0.98775, 0.98832, 0.98888, 0.98944, 0.99, 0.99056, 0.99112, 0.99167, 0.99223, 0.99279, 0.99335, 0.99392, 0.99449, 0.99507, 0.99565, 0.99624, 0.99684, 0.99745, 0.99807, 0.9987, 0.99934, 1, 0.99933, 0.99866, 0.99797, 0.99727, 0.99656, 0.99583, 0.9951, 0.99435, 0.99359, 0.99283, 0.99205, 0.99126, 0.99046, 0.98966, 0.98885, 0.98803, 0.9872, 0.98637, 0.98554, 0.9847, 0.98387, 0.98303, 0.98219, 0.98134, 0.9805, 0.97967, 0.97883, 0.978, 0.97717, 0.97634, 0.97552, 0.97471, 0.97389, 0.97309, 0.97229, 0.9715, 0.97071, 0.96993, 0.96915, 0.96838, 0.96762, 0.96687, 0.96612, 0.96539, 0.96466, 0.96395, 0.96324, 0.96255, 0.96187, 0.9612, 0.96055, 0.95991, 0.95929, 0.95869, 0.95811, 0.95754, 0.957, 0.95648, 0.95599, 0.95552, 0.95508, 0.95467, 0.95428, 0.95393, 0.9536, 0.95331, 0.95305, 0.95283, 0.95264] }, { distance: [2.85606, 2.86149, 2.86432, 2.8645, 2.862, 2.85686, 2.84912, 2.83886, 2.82618, 2.81117, 2.79393, 2.77456, 2.75314, 2.72975, 2.70447, 2.67734, 2.64844, 2.61784, 2.58564, 2.55196, 2.5169, 2.48057, 2.44305, 2.40438, 2.36462, 2.32383, 2.28208, 2.23943, 2.19591, 2.15153, 2.10628, 2.06016, 2.01321, 1.96548, 1.91702, 1.86793, 1.8183, 1.76829, 1.71803, 1.66767, 1.61737, 1.56726, 1.51746, 1.46803, 1.41902, 1.37044, 1.32228, 1.27452, 1.22716, 1.18023, 1.13376, 1.08781, 1.04244, 0.99769, 0.95357, 0.91003, 0.86701, 0.82447, 0.78238, 0.74069, 0.69938, 0.65836, 0.61758, 0.57699, 0.53656, 0.49627, 0.45611, 0.41611, 0.37632, 0.33683, 0.29776, 0.25924, 0.22141, 0.18441, 0.14839, 0.11346, 0.07972, 0.04727, 0.01619, -0.01348, -0.0417, -0.0684, -0.09351, -0.11698, -0.13875, -0.1588, -0.17713, -0.19381, -0.20889, -0.22242, -0.23444, -0.24501, -0.25421, -0.26216, -0.26897, -0.27473, -0.27951, -0.28336, -0.28631, -0.28836, -0.28948, -0.28963, -0.28873, -0.28673, -0.28355, -0.27916, -0.27354, -0.26673, -0.25878, -0.2498, -0.23992, -0.22929, -0.21802, -0.20623, -0.19398, -0.18134, -0.16836, -0.1551, -0.14163, -0.12809, -0.11461, -0.1013, -0.08826, -0.07557, -0.06335, -0.0517, -0.04077, -0.03065, -0.02143, -0.01321, -606e-5, 0, 496e-5, 888e-5, 0.01181, 0.01385, 0.01511, 0.0157, 0.01574, 0.01533, 0.01458, 0.01358, 0.0124, 0.01112, 979e-5, 851e-5, 738e-5, 65e-4, 6e-3, 596e-5, 646e-5, 754e-5, 924e-5, 0.01161, 0.01471, 0.01858, 0.02323, 0.02865, 0.03481, 0.04169, 0.0493, 0.05765, 0.06677, 0.07671, 0.08754, 0.09934, 0.11222, 0.12628, 0.14159, 0.15823, 0.17624, 0.19561, 0.21632, 0.23828, 0.26142, 0.28563, 0.31083, 0.33696, 0.36397, 0.39185, 0.42057, 0.4501, 0.48036, 0.51125, 0.54264, 0.5744, 0.60646, 0.63871, 0.67105, 0.70337, 0.73556, 0.76751, 0.79918, 0.83048, 0.86139, 0.8919, 0.92202, 0.95184, 0.98144, 1.01094, 1.04045, 1.0701, 1.10002, 1.13029, 1.16103, 1.1923, 1.22416, 1.25664, 1.28979, 1.32364, 1.35824, 1.39363, 1.42985, 1.4669, 1.50475, 1.54332, 1.58252, 1.62227, 1.6625, 1.70312, 1.744, 1.78501, 1.82598, 1.8668, 1.90734, 1.94754, 1.98732, 2.02666, 2.06555, 2.10402, 2.1421, 2.17985, 2.2173, 2.25448, 2.29139, 2.328, 2.36424, 2.4, 2.43515, 2.46955, 2.50309, 2.53565, 2.56717, 2.59761, 2.62692, 2.65505, 2.68191, 2.7074, 2.73138, 2.75375, 2.7744, 2.79324, 2.81017, 2.82504, 2.83772, 2.8481], pressure: [0.22758, 0.23641, 0.24578, 0.25568, 0.26609, 0.27699, 0.28835, 0.30016, 0.31237, 0.32495, 0.33789, 0.35113, 0.36466, 0.37843, 0.39241, 0.40658, 0.4209, 0.43535, 0.44989, 0.4645, 0.47916, 0.49385, 0.50853, 0.5232, 0.53784, 0.55243, 0.56696, 0.58141, 0.59578, 0.61004, 0.62419, 0.63821, 0.65209, 0.6658, 0.67934, 0.69268, 0.70582, 0.71873, 0.73139, 0.7438, 0.75594, 0.76779, 0.77935, 0.79061, 0.80156, 0.81221, 0.82254, 0.83258, 0.84231, 0.85176, 0.86091, 0.86978, 0.87837, 0.88669, 0.89473, 0.9025, 0.91, 0.91725, 0.92425, 0.931, 0.93752, 0.9438, 0.94985, 0.95566, 0.96124, 0.96658, 0.97168, 0.97652, 0.98109, 0.98539, 0.98939, 0.99309, 0.99646, 0.99949, 0.99783, 0.99552, 0.99361, 0.99209, 0.99098, 0.99029, 0.99003, 0.99019, 0.99079, 0.99181, 0.99324, 0.9951, 0.99735, 1, 0.99698, 0.99361, 0.98992, 0.98592, 0.98163, 0.97709, 0.97231, 0.96731, 0.96212, 0.95676, 0.95122, 0.94554, 0.93973, 0.93378, 0.92773, 0.92157, 0.91532, 0.90899, 0.90258, 0.89612, 0.88961, 0.88308, 0.87653, 0.87, 0.8635, 0.85705, 0.85068, 0.8444, 0.83823, 0.83219, 0.82628, 0.82052, 0.81493, 0.80952, 0.8043, 0.79929, 0.7945, 0.78994, 0.78561, 0.78151, 0.77765, 0.77402, 0.77062, 0.76742, 0.76443, 0.76161, 0.75896, 0.75645, 0.75406, 0.75175, 0.74951, 0.7473, 0.74511, 0.74289, 0.74064, 0.73833, 0.73592, 0.73341, 0.73078, 0.728, 0.72507, 0.72197, 0.71869, 0.71522, 0.71156, 0.70769, 0.70363, 0.69936, 0.69489, 0.69021, 0.68533, 0.68023, 0.67492, 0.66939, 0.66363, 0.65765, 0.65145, 0.64501, 0.63833, 0.63143, 0.62428, 0.61691, 0.60931, 0.60148, 0.59344, 0.58521, 0.57679, 0.5682, 0.55948, 0.55063, 0.54167, 0.53264, 0.52354, 0.51439, 0.50522, 0.49603, 0.48686, 0.47773, 0.46865, 0.45964, 0.45072, 0.44192, 0.43324, 0.42469, 0.41629, 0.40804, 0.39994, 0.392, 0.3842, 0.37655, 0.36903, 0.36164, 0.35437, 0.3472, 0.34012, 0.33312, 0.3262, 0.31933, 0.31251, 0.30574, 0.299, 0.2923, 0.28563, 0.27899, 0.27239, 0.26583, 0.25933, 0.25288, 0.24652, 0.24025, 0.2341, 0.22808, 0.22221, 0.21653, 0.21104, 0.20576, 0.20072, 0.19592, 0.19138, 0.18712, 0.18313, 0.17943, 0.17602, 0.17292, 0.17013, 0.16766, 0.16551, 0.16369, 0.16222, 0.1611, 0.16036, 0.16001, 0.16007, 0.16055, 0.16148, 0.16286, 0.16471, 0.16705, 0.16988, 0.17321, 0.17706, 0.18144, 0.18636, 0.19182, 0.19785, 0.20443, 0.21158, 0.2193] }, { distance: [-2.31317, -2.3191, -2.32189, -2.32154, -2.31811, -2.31174, -2.30254, -2.29062, -2.27609, -2.25904, -2.23954, -2.21767, -2.19355, -2.16732, -2.13907, -2.10885, -2.07672, -2.04268, -2.00677, -1.96911, -1.92985, -1.88914, -1.84713, -1.80397, -1.75979, -1.71467, -1.66864, -1.62171, -1.57395, -1.52546, -1.47625, -1.42628, -1.3755, -1.32384, -1.27131, -1.218, -1.16408, -1.10972, -1.05508, -1.00031, -0.94551, -0.89077, -0.83615, -0.7817, -0.72757, -0.6739, -0.62076, -0.56821, -0.51625, -0.46484, -0.41397, -0.36366, -0.314, -0.26506, -0.21689, -0.16957, -0.12316, -0.07766, -0.03301, 0.01085, 0.05399, 0.09643, 0.13827, 0.17967, 0.22079, 0.26176, 0.30265, 0.34342, 0.38397, 0.42414, 0.46381, 0.50285, 0.54115, 0.57863, 0.61524, 0.65093, 0.6856, 0.71914, 0.75153, 0.78275, 0.81283, 0.84182, 0.86972, 0.89651, 0.92208, 0.94634, 0.96919, 0.99052, 1.01025, 1.02835, 1.04484, 1.05976, 1.07309, 1.08479, 1.09492, 1.1036, 1.11096, 1.11714, 1.12224, 1.12627, 1.12916, 1.13083, 1.13125, 1.13036, 1.12816, 1.12466, 1.11992, 1.11397, 1.10677, 1.09827, 1.08849, 1.07746, 1.06527, 1.05203, 1.03786, 1.02283, 1.00695, 0.99025, 0.97279, 0.9546, 0.93573, 0.9163, 0.8965, 0.8765, 0.85647, 0.83652, 0.81687, 0.79775, 0.77939, 0.76199, 0.74568, 0.73049, 0.71635, 0.70316, 0.69082, 0.67925, 0.66834, 0.65804, 0.64831, 0.63911, 0.63032, 0.62184, 0.61363, 0.60564, 0.59788, 0.59036, 0.58308, 0.57597, 0.5689, 0.56177, 0.55447, 0.5469, 0.53896, 0.53062, 0.5219, 0.51283, 0.5034, 0.49355, 0.48335, 0.47287, 0.46223, 0.45154, 0.44085, 0.43012, 0.41923, 0.40805, 0.39648, 0.38441, 0.37176, 0.35849, 0.34458, 0.32999, 0.31461, 0.29833, 0.28109, 0.26288, 0.2437, 0.22361, 0.20265, 0.18082, 0.15807, 0.13434, 0.1096, 0.0838, 0.0569, 0.02894, 0, -0.0298, -0.0604, -0.09173, -0.12364, -0.15594, -0.18843, -0.22092, -0.25331, -0.28559, -0.31781, -0.35006, -0.38244, -0.41502, -0.44785, -0.48098, -0.5144, -0.54811, -0.58218, -0.61666, -0.65153, -0.68677, -0.72232, -0.75807, -0.79397, -0.83002, -0.86628, -0.90281, -0.93968, -0.97693, -1.01465, -1.05282, -1.09139, -1.13031, -1.16956, -1.20917, -1.24905, -1.28907, -1.32908, -1.36891, -1.40844, -1.44765, -1.48658, -1.52527, -1.56376, -1.60206, -1.64016, -1.67801, -1.71552, -1.75264, -1.78936, -1.8257, -1.86161, -1.89702, -1.93182, -1.96584, -1.99894, -2.03102, -2.06203, -2.0919, -2.12056, -2.14794, -2.17397, -2.19852, -2.22138, -2.24235, -2.26129, -2.27805, -2.29243, -2.30422], pressure: [0.9681, 0.97424, 0.98046, 0.98674, 0.99309, 0.9995, 0.99404, 0.98754, 0.981, 0.97444, 0.96785, 0.96124, 0.95462, 0.94801, 0.94139, 0.93479, 0.92822, 0.92167, 0.91515, 0.90868, 0.90225, 0.89589, 0.88959, 0.88336, 0.87722, 0.87115, 0.86519, 0.85932, 0.85356, 0.84792, 0.84239, 0.83699, 0.83173, 0.8266, 0.82162, 0.81679, 0.81211, 0.80759, 0.80324, 0.79906, 0.79505, 0.79121, 0.78756, 0.78409, 0.78081, 0.77771, 0.77481, 0.77211, 0.76959, 0.76728, 0.76516, 0.76324, 0.76153, 0.76001, 0.75869, 0.75757, 0.75665, 0.75593, 0.7554, 0.75507, 0.75493, 0.75498, 0.75523, 0.75565, 0.75627, 0.75706, 0.75803, 0.75917, 0.76049, 0.76197, 0.76361, 0.76541, 0.76737, 0.76947, 0.77172, 0.77409, 0.7766, 0.77923, 0.78198, 0.78484, 0.7878, 0.79086, 0.79401, 0.79724, 0.80055, 0.80394, 0.8074, 0.81092, 0.8145, 0.81813, 0.82182, 0.82556, 0.82934, 0.83317, 0.83703, 0.84093, 0.84487, 0.84884, 0.85284, 0.85687, 0.86094, 0.86503, 0.86915, 0.87329, 0.87746, 0.88166, 0.88587, 0.89011, 0.89436, 0.89863, 0.90291, 0.9072, 0.91149, 0.91579, 0.92009, 0.92438, 0.92867, 0.93295, 0.9372, 0.94144, 0.94566, 0.94985, 0.954, 0.95812, 0.96219, 0.96623, 0.97021, 0.97415, 0.97802, 0.98184, 0.9856, 0.9893, 0.99293, 0.9965, 1, 0.99657, 0.9932, 0.98991, 0.98668, 0.98352, 0.98042, 0.97738, 0.9744, 0.97148, 0.9686, 0.96577, 0.96298, 0.96023, 0.95751, 0.95482, 0.95214, 0.94949, 0.94684, 0.9442, 0.94156, 0.93892, 0.93627, 0.93361, 0.93094, 0.92825, 0.92555, 0.92284, 0.9201, 0.91735, 0.91458, 0.91179, 0.90899, 0.90616, 0.90332, 0.90047, 0.8976, 0.89472, 0.89183, 0.88893, 0.88603, 0.88314, 0.88024, 0.87735, 0.87448, 0.87162, 0.86878, 0.86597, 0.86319, 0.86044, 0.85774, 0.85508, 0.85247, 0.84993, 0.84744, 0.84503, 0.84269, 0.84042, 0.83825, 0.83616, 0.83417, 0.83227, 0.83048, 0.8288, 0.82724, 0.82578, 0.82445, 0.82324, 0.82215, 0.82119, 0.82037, 0.81967, 0.81911, 0.81868, 0.81839, 0.81824, 0.81823, 0.81835, 0.81862, 0.81903, 0.81957, 0.82026, 0.82109, 0.82206, 0.82317, 0.82443, 0.82583, 0.82737, 0.82906, 0.83089, 0.83287, 0.83499, 0.83726, 0.83968, 0.84223, 0.84494, 0.84778, 0.85077, 0.8539, 0.85717, 0.86058, 0.86412, 0.86781, 0.87163, 0.87559, 0.87968, 0.88391, 0.88826, 0.89275, 0.89737, 0.90211, 0.90698, 0.91198, 0.91709, 0.92233, 0.92768, 0.93315, 0.93873, 0.94441, 0.95019, 0.95607, 0.96205] }, { distance: [4.72925, 4.81721, 4.9037, 4.98859, 5.07177, 5.15311, 5.23249, 5.3098, 5.38491, 5.45772, 5.52811, 5.59598, 5.66122, 5.72375, 5.78346, 5.84028, 5.8941, 5.94486, 5.99248, 6.03689, 6.07803, 6.11584, 6.15028, 6.18128, 6.20882, 6.23285, 6.25336, 6.27031, 6.28369, 6.29348, 6.29969, 6.3023, 6.30133, 6.29678, 6.28867, 6.27703, 6.26187, 6.24324, 6.22116, 6.19567, 6.16683, 6.13468, 6.09928, 6.06068, 6.01896, 5.97417, 5.92639, 5.87569, 5.82217, 5.76589, 5.70696, 5.64545, 5.58147, 5.5151, 5.44644, 5.37559, 5.30265, 5.2277, 5.15085, 5.0722, 4.99184, 4.90987, 4.82639, 4.74151, 4.65533, 4.56794, 4.47945, 4.38996, 4.29959, 4.20843, 4.11658, 4.02416, 3.93125, 3.83796, 3.74437, 3.65057, 3.55666, 3.46272, 3.36884, 3.27509, 3.18155, 3.08831, 2.99545, 2.90303, 2.81114, 2.71984, 2.62922, 2.53933, 2.45026, 2.36207, 2.27484, 2.18862, 2.10349, 2.01951, 1.93675, 1.85528, 1.77515, 1.69644, 1.61919, 1.54348, 1.46935, 1.39685, 1.32605, 1.25698, 1.18967, 1.12417, 1.06049, 0.99863, 0.93862, 0.88044, 0.82408, 0.76953, 0.71676, 0.66574, 0.61644, 0.56882, 0.52282, 0.47841, 0.43553, 0.39413, 0.35414, 0.31551, 0.27817, 0.24206, 0.20712, 0.17328, 0.14048, 0.10866, 0.07776, 0.04772, 0.01848, -999e-5, -0.03776, -0.06487, -0.09134, -0.11721, -0.14251, -0.16725, -0.19144, -0.21509, -0.2382, -0.26076, -0.28275, -0.30416, -0.32496, -0.34511, -0.36459, -0.38334, -0.40134, -0.41852, -0.43485, -0.45026, -0.46471, -0.47815, -0.49052, -0.50179, -0.51189, -0.52081, -0.52849, -0.5349, -0.54003, -0.54383, -0.54627, -0.54734, -0.54702, -0.54528, -0.54211, -0.53752, -0.53149, -0.52403, -0.51515, -0.50487, -0.4932, -0.48015, -0.46575, -0.45001, -0.43297, -0.41463, -0.39503, -0.37419, -0.35213, -0.32887, -0.30443, -0.27885, -0.25214, -0.22432, -0.19541, -0.16544, -0.13442, -0.10235, -0.06926, -0.03514, 0, 0.03616, 0.07336, 0.11159, 0.15088, 0.19125, 0.23272, 0.27531, 0.31906, 0.36401, 0.41019, 0.45764, 0.5064, 0.55651, 0.60802, 0.66096, 0.71538, 0.77129, 0.82874, 0.88776, 0.94836, 1.01056, 1.07438, 1.13982, 1.20687, 1.27554, 1.34581, 1.41766, 1.49107, 1.56599, 1.64239, 1.72025, 1.79951, 1.88013, 1.96209, 2.04532, 2.12979, 2.21546, 2.30226, 2.39017, 2.47911, 2.56905, 2.65991, 2.75164, 2.84416, 2.93742, 3.03133, 3.12582, 3.2208, 3.31619, 3.41191, 3.50785, 3.60393, 3.70006, 3.79612, 3.89202, 3.98765, 4.08291, 4.17767, 4.27182, 4.36525, 4.45783, 4.54944, 4.63995], pressure: [0.30942, 0.30838, 0.30765, 0.30724, 0.30715, 0.30738, 0.30795, 0.30884, 0.31007, 0.31164, 0.31354, 0.31578, 0.31837, 0.32129, 0.32455, 0.32815, 0.33209, 0.33636, 0.34097, 0.34591, 0.35117, 0.35675, 0.36265, 0.36887, 0.37539, 0.38221, 0.38933, 0.39674, 0.40442, 0.41238, 0.4206, 0.42907, 0.43779, 0.44675, 0.45593, 0.46533, 0.47493, 0.48473, 0.49471, 0.50486, 0.51517, 0.52563, 0.53623, 0.54694, 0.55777, 0.5687, 0.57971, 0.59079, 0.60194, 0.61313, 0.62435, 0.6356, 0.64686, 0.65811, 0.66935, 0.68056, 0.69174, 0.70286, 0.71391, 0.72489, 0.73579, 0.74659, 0.75728, 0.76785, 0.7783, 0.7886, 0.79876, 0.80877, 0.81861, 0.82827, 0.83776, 0.84706, 0.85617, 0.86507, 0.87378, 0.88227, 0.89056, 0.89863, 0.90649, 0.91412, 0.92153, 0.92872, 0.93568, 0.94241, 0.94892, 0.95519, 0.96122, 0.96702, 0.97258, 0.97791, 0.98299, 0.98783, 0.99242, 0.99677, 0.99911, 0.99525, 0.99164, 0.98827, 0.98515, 0.98228, 0.97966, 0.97728, 0.97514, 0.97324, 0.97159, 0.97017, 0.96898, 0.96801, 0.96727, 0.96674, 0.96641, 0.96629, 0.96635, 0.96661, 0.96703, 0.96762, 0.96838, 0.96928, 0.97032, 0.97149, 0.97279, 0.9742, 0.97572, 0.97734, 0.97905, 0.98085, 0.98273, 0.98468, 0.98669, 0.98877, 0.99091, 0.99311, 0.99535, 0.99765, 1, 0.9976, 0.99516, 0.99267, 0.99014, 0.98755, 0.98491, 0.98222, 0.97947, 0.97666, 0.97378, 0.97083, 0.96781, 0.96471, 0.96153, 0.95826, 0.9549, 0.95144, 0.94787, 0.9442, 0.94042, 0.93651, 0.93249, 0.92834, 0.92407, 0.91966, 0.91512, 0.91045, 0.90564, 0.90069, 0.8956, 0.89037, 0.885, 0.87949, 0.87384, 0.86806, 0.86214, 0.85608, 0.84988, 0.84356, 0.83711, 0.83053, 0.82383, 0.81702, 0.81009, 0.80306, 0.79594, 0.78872, 0.78141, 0.77403, 0.76657, 0.75905, 0.75148, 0.74385, 0.73619, 0.72849, 0.72076, 0.71302, 0.70526, 0.69749, 0.68972, 0.68195, 0.67419, 0.66644, 0.65871, 0.65099, 0.64329, 0.63561, 0.62795, 0.62032, 0.61271, 0.60512, 0.59755, 0.59001, 0.58248, 0.57497, 0.56749, 0.56002, 0.55256, 0.54512, 0.5377, 0.5303, 0.52291, 0.51554, 0.50819, 0.50087, 0.49358, 0.48632, 0.4791, 0.47192, 0.4648, 0.45773, 0.45072, 0.44378, 0.43692, 0.43015, 0.42346, 0.41687, 0.41039, 0.40403, 0.39779, 0.39168, 0.38571, 0.37989, 0.37423, 0.36873, 0.36342, 0.35828, 0.35335, 0.34862, 0.34409, 0.3398, 0.33573, 0.3319, 0.32831, 0.32498, 0.32192, 0.31912, 0.3166, 0.31436, 0.31242, 0.31077] }] };

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/util.js
function e68(t88) {
  let e78 = null;
  for (const r79 of t88) {
    const t89 = r79.type;
    if (c66(r79)) {
      if (null == e78)
        e78 = t89;
      else if (e78 !== t89)
        return "uber";
    }
  }
  return null != e78 ? e78 : "uber";
}
function r70(e78) {
  let r79 = A7.INVISIBLE;
  for (const { material: n103 } of e78)
    if (o69(n103)) {
      if (n103.color[3] * n103.opacity < 1)
        return A7.TRANSPARENT;
      r79 = A7.OPAQUE;
    }
  return r79;
}
function n93(e78) {
  let r79 = A7.INVISIBLE;
  for (const { material: n103 } of e78)
    if (o69(n103)) {
      switch (n103.objectTransparency) {
        case A7.TRANSPARENT:
        case A7.INVISIBLE:
          return A7.TRANSPARENT;
        case A7.OPAQUE:
          if (n103.opacity < 1)
            return A7.TRANSPARENT;
      }
      r79 = A7.OPAQUE;
    }
  return r79;
}
function o69(t88) {
  return t88.size * t88.color[3] * t88.opacity > 0;
}
function c66(t88) {
  return t88.size * t88.color[3] > 0;
}
function f52(t88, e78, r79, n103) {
  for (let o77 = 0; o77 < t88.length; o77++) {
    const c75 = t88[o77].index, f59 = e78[o77], i78 = e78[o77 + 1];
    if (n103)
      for (let t89 = f59; t89 < i78; t89++) {
        const e79 = n103[t89];
        r79.set(e79, c75);
      }
    else
      for (let t89 = f59; t89 < i78; t89++)
        r79.set(t89, c75);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeView.js
var te5 = class extends m {
  constructor(e78) {
    super(e78), this._updatingHandles = new c8(), this._perObjectData = /* @__PURE__ */ new Map(), this._perObjectDataEvictionCache = /* @__PURE__ */ new Set(), this._renderers = /* @__PURE__ */ new Map(), this._gpuMemoryUsage = 0, this._workerAbort = new AbortController(), this._tmpModelPosition = n7(), this._localOrigins = new e66(new f18(e78.renderSR));
  }
  initialize() {
    this._worker = new a32(this.schedule), this._componentColorManager = new r67(this.rctx, 3);
    const e78 = e15.createBuffer(4);
    for (let t88 = 0; t88 < 4; t88++)
      e78.sideness.set(t88, 0, 0 === t88 || 3 === t88 ? 0 : 1), e78.sideness.set(t88, 1, 0 === t88 || 1 === t88 ? 0 : 1);
    this._verticesBufferObject = c17.createVertex(this.rctx, F6.STATIC_DRAW, e78.buffer);
  }
  destroy() {
    this.destroyed || (this._perObjectData.forEach((e78) => this._discardObjectEntry(e78)), this._perObjectData.clear(), this._strokesTexture = t(this._strokesTexture), this._componentColorManager = l(this._componentColorManager), this._workerAbort.abort(), this._worker.destroy(), this._verticesBufferObject = t(this._verticesBufferObject), this._renderers.clear(), this._updatingHandles.destroy(), this._set("schedule", fe4));
  }
  get updating() {
    return this._updatingHandles.updating;
  }
  get usedMemory() {
    return this._gpuMemoryUsage;
  }
  shouldRender() {
    return this._renderers.size > 0;
  }
  async addComponentObject(e78, t88, r79, s84, n103, o77, i78, a85) {
    if (this.hasObject(e78))
      return this.getObjectMemoryUsage(e78);
    let c75;
    const l75 = new ne7(new Promise((e79) => c75 = e79), r79.center, r79.radius);
    this._perObjectData.set(e78, l75);
    const d63 = await this._updatingHandles.addPromise(this._addComponentGeometry(t88, l75, s84, n103, o77, i78, a85));
    return this.setNeedsRender(), c75(), d63;
  }
  async addOrUpdateObject3D(e78, t88, r79, s84) {
    if (this.destroyed)
      return void s3.getLogger(this).warn("Attempt to add an object to a destroyed instance");
    const o77 = this._perObjectData.get(e78);
    let i78;
    (o77 == null ? void 0 : o77.renderables.length) > 0 && this._perObjectDataEvictionCache.add(o77);
    const a85 = e78.boundingVolumeWorldSpace.bounds, c75 = new ne7(new Promise((e79) => i78 = e79), z6(a85), k5(a85));
    this._perObjectData.set(e78, c75);
    const l75 = new Array();
    if (r79.mergeGeometries && e78.geometries.length > 1 && se7(e78))
      l75.push(this._addObjectMergedGeometries(e78, c75, t88, r79, s84));
    else
      for (let n103 = 0; n103 < e78.geometries.length; n103++) {
        const o78 = e78.geometries[n103];
        o78.material.supportsEdges && l75.push(this._addGeometry(e78, c75, o78, t88[0], r79, s84));
      }
    await this._updatingHandles.addPromise(Promise.all(l75)), this._perObjectDataEvictionCache.delete(c75), this._discardObjectEntry(o77), this.setNeedsRender(), i78();
  }
  _discardObjectEntry(e78) {
    e78 && (e78.renderables.length && (e78.renderables.forEach((e79) => this._removeRenderable(e79)), this.setNeedsRender()), e78.loaded = null);
  }
  hasObject(e78) {
    return this._perObjectData.has(e78);
  }
  async updateAllComponentOpacities(e78, t88) {
    const r79 = await this._updatingHandles.addPromise(this._getObjectEntry(e78));
    if (null == r79)
      return;
    const s84 = t88 instanceof Array ? (e79) => t88[e79] : () => t88;
    r79.renderables.forEach((e79) => {
      const t89 = e79.components.meta.length;
      for (let r80 = 0; r80 < t89; r80++) {
        const t90 = s84(r80), n103 = e79.components.meta[r80], o77 = n103.index;
        n103.material.opacity = t90, e79.components.buffer.textureBuffer.setDataElement(o77, 1, 3, 255 * t90);
      }
      this._updateTransparency(e79);
    }), this.setNeedsRender();
  }
  async getObjectMemoryUsage(e78) {
    const t88 = await this._getObjectEntry(e78);
    return null != t88 ? t88.renderables.reduce((e79, t89) => e79 + t89.statistics.gpuMemoryUsage, 0) : 0;
  }
  async updateAllComponentMaterials(e78, t88, r79, s84) {
    const n103 = e78 instanceof V5, o77 = !!r79.hasSlicePlane, i78 = e68(t88), a85 = b26.getKey(i78, o77, n103), c75 = await this._updatingHandles.addPromise(this._getObjectEntry(e78));
    null != c75 && (c75.renderables.forEach((e79) => {
      if (a85 !== e79.rendererKey) {
        const t89 = this._renderers.get(e79.rendererKey), r80 = this._acquireRenderer(i78, o77, n103);
        t89.removeRenderable(e79), --t89.refCount, e79.rendererKey = a85, r80.addRenderable(e79);
      }
      for (let r80 = 0; r80 < t88.length; r80++)
        e79.components.meta[r80].material = t88[r80];
      s84 && this._updateComponentBuffer(e79.components), this._updateTransparency(e79);
    }), this.setNeedsRender());
  }
  async updateAllVerticalOffsets(e78, t88) {
    const r79 = await this._updatingHandles.addPromise(this._getObjectEntry(e78));
    null != r79 && (r79.renderables.forEach((e79) => {
      const r80 = e79.components.meta;
      for (let s84 = 0; s84 < r80.length; s84++)
        e79.components.meta[s84].verticalOffset = (t88 == null ? void 0 : t88[s84]) ?? 0;
      this._updateComponentBuffer(e79.components);
    }), this.setNeedsRender());
  }
  async updateObjectVisibility(e78, t88) {
    const r79 = await this._updatingHandles.addPromise(this._getObjectEntry(e78));
    null != r79 && (r79.renderables.forEach((e79) => e79.visible = t88), this.setNeedsRender());
  }
  removeObject(e78) {
    const t88 = this._perObjectData.get(e78);
    t88 && (this._perObjectData.delete(e78), this._discardObjectEntry(t88));
  }
  async _getObjectEntry(e78) {
    const t88 = this._perObjectData.get(e78);
    if (!t88)
      throw new Error("no object");
    return await t88.loaded, null == t88.loaded ? null : t88;
  }
  render(e78, t88) {
    if (null == this._componentColorManager)
      return;
    this._localOrigins.updateViewMatrices(e78.camera.viewMatrix);
    const r79 = e78.camera.viewInverseTransposeMatrix, s84 = n7(), n103 = new c59();
    let o77 = 0, i78 = 0;
    if (this._renderers.forEach((r80) => {
      if (0 === r80.refCount)
        this._renderers.delete(r80.key), r80.dispose();
      else {
        let s85 = true, n104 = true;
        r80.forEachRenderable((t89) => {
          t89.visible && (o77 += t89.statistics.averageEdgeLength, i78++, s85 && t89.regular && (r80.updateTechnique(e78, false), s85 = false), n104 && t89.silhouette && (r80.updateTechnique(e78, true), n104 = false));
        }, t88);
      }
    }), this._componentColorManager.garbageCollect(), this._componentColorManager.updateTextures(), 0 === i78)
      return;
    const a85 = new a75(40 * o77 / i78, t88);
    o4(s84, r79[3], r79[7], r79[11]), n103.set(s84), r7(a85.transformWorldFromViewTH, n103.high), r7(a85.transformWorldFromViewTL, n103.low), a15(a85.transformViewFromCameraRelativeRS, e78.camera.viewMatrix), o13(pe5, a85.transformViewFromCameraRelativeRS), u5(a85.transformNormalViewFromGlobal, pe5), a85.transformProjFromView = e78.camera.projectionMatrix, this._updateObjectCameraDistances(e78), this._renderers.forEach((t89) => {
      this._renderRegularEdges(t89, e78, a85), this._renderSilhouetteEdges(t89, e78, a85);
    });
  }
  _updateTransparency(e78) {
    const t88 = r70(e78.components.meta), r79 = n93(e78.components.meta);
    t88 === e78.edgeTransparency && r79 === e78.objectTransparency || (e78.edgeTransparency = t88, e78.objectTransparency = r79, this._renderers.get(e78.rendererKey).setRenderablesDirty());
  }
  _computeModelTransformWithLocalOrigin(e78, t88, r79) {
    e78.getCombinedShaderTransformation(t88, r79);
    const s84 = null != t88.localOrigin ? this._localOrigins.register(t88.localOrigin) : this._localOrigins.acquire(o4(this._tmpModelPosition, r79[12], r79[13], r79[14]));
    return t88.localOrigin = s84.origin, n91(s84.origin.vec3, r79), s84;
  }
  _updateComponentBuffer(e78) {
    const { meta: t88, buffer: r79 } = e78, s84 = new Uint8Array(4);
    for (let n103 = 0; n103 < t88.length; n103++) {
      const e79 = t88[n103].material, i78 = t88[n103].index, a85 = i3(Math.round(e79.size * m45), 0, 255), c75 = i3(e79.extensionLength, -g38, 255 - g38) + g38, l75 = "solid" === e79.type ? u4.SOLID : u4.SKETCH, d63 = 255 * e79.opacity, u58 = e79.color, h58 = 255 * u58[0], m55 = 255 * u58[1], g49 = 255 * u58[2], p70 = 255 * u58[3];
      r79.textureBuffer.setData(i78, 0, h58, m55, g49, p70), r79.textureBuffer.setData(i78, 1, a85, c75, l75, d63), C10(t88[n103].verticalOffset, s84), r79.textureBuffer.setData(i78, 2, s84[0], s84[1], s84[2], s84[3]);
    }
  }
  _createComponentBuffers(e78) {
    if (null == this._componentColorManager)
      return null;
    const t88 = new Array(), r79 = this._componentColorManager.getBuffer(e78.length);
    for (let n103 = 0; n103 < e78.length; n103++) {
      const s85 = e78[n103], o77 = r79.acquireIndex();
      t88.push({ index: o77, verticalOffset: 0, material: s85 });
    }
    const s84 = new oe8(r79, t88);
    return this._updateComponentBuffer(s84), s84;
  }
  _extractEdges(e78, t88, r79, s84, n103, o77 = n103.length) {
    return this._worker.process({ data: t88, indices: n103, indicesLength: o77, writerSettings: e78, skipDeduplicate: r79 }, this._workerAbort.signal, s84);
  }
  _createRenderable(e78, t88, r79, s84, n103) {
    const o77 = (t89) => null != this._verticesBufferObject ? new ie8(new r30(this.rctx, o11, { vertices: T4, instances: t89 === F14.REGULAR ? d8.glLayout : w6.glLayout }, { vertices: this._verticesBufferObject, instances: c17.createVertex(this.rctx, F6.STATIC_DRAW, t89 === F14.REGULAR ? e78.regular.instancesData.buffer : e78.silhouette.instancesData.buffer) }), t89 === F14.REGULAR ? e78.regular.lodInfo : e78.silhouette.lodInfo) : null, i78 = e78.regular.lodInfo.lengths.length > 0 ? o77(F14.REGULAR) : null, a85 = e78.silhouette.lodInfo.lengths.length > 0 ? o77(F14.SILHOUETTE) : null, c75 = ((i78 == null ? void 0 : i78.vao.memoryEstimate) ?? 0) + ((a85 == null ? void 0 : a85.vao.memoryEstimate) ?? 0);
    return new ce8(i78, a85, { gpuMemoryUsage: c75, externalMemoryUsage: n103, averageEdgeLength: e78.averageEdgeLength }, r79, r70(t88.meta), n93(t88.meta), t88, s84);
  }
  async _addGeometry(e78, t88, r79, s84, n103, o77) {
    const i78 = r79.vertexAttributes.get(O4.POSITION), a85 = r79.indices.get(O4.POSITION), c75 = e17(), l75 = this._computeModelTransformWithLocalOrigin(e78, r79, c75), d63 = new ge4(i78, a85, c75, l75);
    return this._addPositionData(t88, d63, r79.edgeIndicesLength, s84, n103, o77);
  }
  async _addPositionData(e78, t88, r79, s84, n103, o77 = false) {
    if (null == e78.loaded)
      return;
    const i78 = this._createComponentBuffers([s84]);
    if (null == i78 || r79 <= 0)
      return;
    const a85 = this._acquireRenderer(s84.type, !!n103.hasSlicePlane, true), { modelTransform: c75, origin: l75 } = t88, d63 = t88.indices, u58 = t88.position, h58 = u58.data.length / u58.size, m55 = A6.createBuffer(h58);
    for (let f59 = 0; f59 < h58; f59++)
      m55.position.set(f59, 0, u58.data[f59 * u58.size]), m55.position.set(f59, 1, u58.data[f59 * u58.size + 1]), m55.position.set(f59, 2, u58.data[f59 * u58.size + 2]);
    f52(i78.meta, [0, m55.componentIndex.count], m55.componentIndex);
    const g49 = await this._updatingHandles.addPromise(this._extractEdges(a85.writerSettings, m55, false, o77, d63, r79));
    if (null == e78.loaded)
      return;
    const p70 = this._createRenderable(g49, i78, new ae7(c75, l75), a85.key, false);
    e78.renderables.push(p70), a85.addRenderable(p70), this._gpuMemoryUsage += p70.statistics.gpuMemoryUsage;
  }
  async _addComponentGeometry(e78, t88, r79, s84, n103, o77, i78) {
    if (null == t88.loaded)
      return 0;
    const a85 = this._createComponentBuffers(o77);
    if (null == a85)
      return 0;
    const c75 = e68(o77), l75 = this._acquireRenderer(c75, i78.hasSlicePlane || false, false), d63 = A6.createBuffer(r79.length / 3);
    t18(d63.position.typedBuffer, r79, d63.position.typedBufferStride, 3), f52(a85.meta, n103, d63.componentIndex, s84);
    const u58 = true, h58 = l75.writerSettings, m55 = await this._updatingHandles.addPromise(this._extractEdges(h58, d63, u58, false, s84));
    if (null == t88.loaded)
      return 0;
    const g49 = this._createRenderable(m55, a85, e78, l75.key, true);
    return t88.renderables.push(g49), l75.addRenderable(g49), g49.statistics.gpuMemoryUsage;
  }
  async _addObjectMergedGeometries(e78, t88, r79, s84, n103) {
    const o77 = /* @__PURE__ */ new Map();
    let i78 = 0, a85 = null, c75 = 0;
    for (let g49 = 0; g49 < e78.geometries.length; g49++) {
      const t89 = e78.geometries[g49];
      if (!t89.material.supportsEdges)
        continue;
      !a85 && t89.localOrigin && (a85 = t89);
      const r80 = t89.vertexAttributes.get(O4.POSITION);
      c75 += r80.data.length / r80.size, i78 += t89.edgeIndicesLength;
    }
    const l75 = c75 >= 65536 ? Uint32Array : Uint16Array, d63 = i78 ? new l75(i78) : null, u58 = [];
    let h58 = 0;
    for (let g49 = 0; g49 < e78.geometries.length; g49++) {
      const t89 = e78.geometries[g49];
      if (!t89.material.supportsEdges)
        continue;
      const r80 = t89.vertexAttributes.get(O4.POSITION), s85 = t89.indices.get(O4.POSITION);
      let n104 = o77.get(r80.data);
      if (null == n104) {
        n104 = u58.length / 3;
        for (let e79 = 0; e79 < r80.data.length; e79 += r80.size)
          u58.push(r80.data[e79]), u58.push(r80.data[e79 + 1]), u58.push(r80.data[e79 + 2]);
        o77.set(r80.data, n104);
      }
      if (s85)
        for (let e79 = 0; e79 < t89.edgeIndicesLength; e79++)
          d63[h58++] = n104 + s85[e79];
    }
    const m55 = a85 || e78.geometries[0], p70 = e17(), f59 = this._computeModelTransformWithLocalOrigin(e78, m55, p70);
    for (let g49 = 0; g49 < e78.geometries.length; g49++)
      e78.geometries[g49].localOrigin = f59.origin;
    const _42 = new ge4({ data: u58, size: 3 }, d63, p70, f59);
    await this._updatingHandles.addPromise(this._addPositionData(t88, _42, d63.length, r79[0], s84, n103));
  }
  _acquireRenderer(e78, t88, r79) {
    const s84 = b26.getKey(e78, t88, r79);
    let n103 = this._renderers.get(s84);
    return null == this._strokesTexture && (this._strokesTexture = n92(this.rctx)), n103 || (n103 = new b26(this.rctx, this.techniqueRepository, { type: e78, hasSlicePlane: t88, strokesTexture: this._strokesTexture, legacy: r79, spherical: this.viewingMode === l14.Global }), this._renderers.set(s84, n103)), ++n103.refCount, n103;
  }
  _removeRenderable(e78) {
    re7(e78.regular), re7(e78.silhouette);
    const t88 = this._renderers.get(e78.rendererKey);
    if (t88) {
      t88.removeRenderable(e78), --t88.refCount, "origin" in e78.transform && this._localOrigins.release(e78.transform.origin), this._gpuMemoryUsage -= e78.statistics.externalMemoryUsage ? 0 : e78.statistics.gpuMemoryUsage;
      for (const t89 of e78.components.meta)
        e78.components.buffer.releaseIndex(t89.index);
    }
  }
  _updateObjectCameraDistances(e78) {
    const t88 = e78.camera.eye, r79 = e78.camera.viewForward, s84 = n7(), n103 = (e79) => {
      J(s84, e79.center, t88);
      const n104 = P3(s84, r79), o77 = e79.radius, i78 = n104 < -o77 ? 1 / 0 : n104 < o77 ? 0 : n104 - o77;
      e79.renderables.forEach((e80) => e80.distanceToCamera = i78);
    };
    this._perObjectData.forEach(n103), this._perObjectDataEvictionCache.forEach(n103);
  }
  _renderRegularEdges(e78, t88, r79) {
    const s84 = e78.bindRegularEdges(r79, t88), n103 = r79.transparency, o77 = t88.camera.perScreenPixelRatio;
    e78.forEachRenderable((n104) => {
      if (!de5(n104) || !n104.visible)
        return;
      const i78 = me5(n104.regular.lod.lengths, n104.distanceToCamera, o77);
      e78.renderRegularEdges(s84, n104, r79, t88, i78);
    }, n103);
  }
  _renderSilhouetteEdges(e78, t88, r79) {
    const s84 = e78.bindSilhouetteEdges(r79, t88), n103 = r79.transparency, o77 = t88.camera.perScreenPixelRatio;
    e78.forEachRenderable((n104) => {
      if (!he7(n104) || !n104.visible)
        return;
      const i78 = me5(n104.silhouette.lod.lengths, n104.distanceToCamera, o77);
      e78.renderSilhouetteEdges(s84, n104, r79, t88, i78);
    }, n103);
  }
  get test() {
    return { hasRenderedPrimitives: (e78) => {
      let t88 = false;
      const r79 = e78.perScreenPixelRatio, s84 = (e79, s85) => e79.forEachRenderable((e80) => {
        e80.visible && !t88 && (de5(e80) && (t88 = me5(e80.regular.lod.lengths, e80.distanceToCamera, r79) > 0), !t88 && he7(e80) && (t88 = me5(e80.silhouette.lod.lengths, e80.distanceToCamera, r79) > 0));
      }, s85);
      return this._renderers.forEach((e79) => {
        t88 || (s84(e79, A7.OPAQUE), s84(e79, A7.TRANSPARENT));
      }), t88;
    } };
  }
};
function re7(e78) {
  null != e78 && (e78.vao.vertexBuffers.instances.dispose(), e78.vao.disposeVAOOnly(), e78.vao = null);
}
function se7(e78) {
  let t88 = null, s84 = null;
  for (let n103 = 0; n103 < e78.geometries.length; n103++) {
    const o77 = e78.geometries[n103];
    if (o77.material.supportsEdges) {
      if (t88) {
        if (!s(t88, o77.transformation))
          return false;
      } else
        t88 = o77.transformation;
      if (s84 || null == o77.localOrigin) {
        if (s84 && null != s84.localOrigin && null != o77.localOrigin && s84.localOrigin.id !== o77.localOrigin.id)
          return false;
      } else
        s84 = o77;
    }
  }
  return true;
}
e([y({ constructOnly: true })], te5.prototype, "rctx", void 0), e([y({ constructOnly: true })], te5.prototype, "renderSR", void 0), e([y({ constructOnly: true })], te5.prototype, "viewingMode", void 0), e([y({ constructOnly: true })], te5.prototype, "techniqueRepository", void 0), e([y({ constructOnly: true })], te5.prototype, "setNeedsRender", void 0), e([y({ constructOnly: true })], te5.prototype, "schedule", void 0), e([y({ readOnly: true })], te5.prototype, "_updatingHandles", void 0), e([y({ readOnly: true })], te5.prototype, "updating", null), te5 = e([a4("esri.views.3d.webgl-engine.lib.edgeRendering.EdgeView")], te5);
var ne7 = class {
  constructor(e78, t88, r79) {
    this.center = t88, this.radius = r79, this.renderables = new Array(), this.loaded = e78, this.loaded.then(() => {
      null != this.loaded && (this.loaded = true);
    });
  }
};
var oe8 = class {
  constructor(e78, t88) {
    this.buffer = e78, this.meta = t88;
  }
};
var ie8 = class {
  constructor(e78, t88) {
    this.vao = e78, this.lod = t88;
  }
};
var ae7 = class {
  constructor(e78, t88) {
    this.modelMatrix = e78, this.origin = t88;
  }
};
var ce8 = class {
  constructor(e78, t88, r79, s84, n103, o77, i78, a85) {
    this.regular = e78, this.silhouette = t88, this.statistics = r79, this.transform = s84, this.edgeTransparency = n103, this.objectTransparency = o77, this.components = i78, this.rendererKey = a85, this.distanceToCamera = 0, this.visible = true;
  }
};
function de5(e78) {
  return null != e78.regular;
}
function he7(e78) {
  return null != e78.silhouette;
}
function me5(e78, t88, r79) {
  const n103 = t88 * r79, o77 = x(e78, n103, true);
  return -1 === o77 ? n103 < e78[0] ? e78.length : 0 : e78.length - o77;
}
var ge4 = class {
  constructor(e78, t88, r79, s84) {
    this.position = e78, this.indices = t88, this.modelTransform = r79, this.origin = s84;
  }
};
var pe5 = e16();
var fe4 = () => Promise.reject();

// node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js
function n94(n103) {
  return window.WebGL2RenderingContext && n103 instanceof window.WebGL2RenderingContext;
}

// node_modules/@arcgis/core/views/webgl/capabilities/DisjointTimerQuery.js
var t78 = class {
  constructor(e78, t88, E43, T31, r79, _42, i78, u58, s84) {
    this.createQuery = e78, this.deleteQuery = t88, this.resultAvailable = E43, this.getResult = T31, this.disjoint = r79, this.beginTimeElapsed = _42, this.endTimeElapsed = i78, this.createTimestamp = u58, this.timestampBits = s84;
  }
};
var E39 = false;
function T29(T31, r79) {
  if (r79.disjointTimerQuery)
    return null;
  let _42 = T31.getExtension("EXT_disjoint_timer_query_webgl2");
  return _42 && n94(T31) ? new t78(() => T31.createQuery(), (e78) => {
    T31.deleteQuery(e78), E39 = false;
  }, (e78) => T31.getQueryParameter(e78, T31.QUERY_RESULT_AVAILABLE), (e78) => T31.getQueryParameter(e78, T31.QUERY_RESULT), () => T31.getParameter(_42.GPU_DISJOINT_EXT), (e78) => {
    E39 || (E39 = true, T31.beginQuery(_42.TIME_ELAPSED_EXT, e78));
  }, () => {
    T31.endQuery(_42.TIME_ELAPSED_EXT), E39 = false;
  }, (e78) => _42.queryCounterEXT(e78, _42.TIMESTAMP_EXT), () => T31.getQuery(_42.TIMESTAMP_EXT, _42.QUERY_COUNTER_BITS_EXT)) : (_42 = T31.getExtension("EXT_disjoint_timer_query"), _42 ? new t78(() => _42.createQueryEXT(), (e78) => {
    _42.deleteQueryEXT(e78), E39 = false;
  }, (e78) => _42.getQueryObjectEXT(e78, _42.QUERY_RESULT_AVAILABLE_EXT), (e78) => _42.getQueryObjectEXT(e78, _42.QUERY_RESULT_EXT), () => T31.getParameter(_42.GPU_DISJOINT_EXT), (e78) => {
    E39 || (E39 = true, _42.beginQueryEXT(_42.TIME_ELAPSED_EXT, e78));
  }, () => {
    _42.endQueryEXT(_42.TIME_ELAPSED_EXT), E39 = false;
  }, (e78) => _42.queryCounterEXT(e78, _42.TIMESTAMP_EXT), () => _42.getQueryEXT(_42.TIMESTAMP_EXT, _42.QUERY_COUNTER_BITS_EXT)) : null);
}

// node_modules/@arcgis/core/views/webgl/TimerPool.js
function e69(t88, e78) {
  const u58 = t88.capabilities.disjointTimerQuery;
  return null == u58 ? null : new r71(u58, e78);
}
var r71 = class {
  constructor(t88, e78) {
    this._timer = t88, this._queryPool = new Array(), this._queryResults = /* @__PURE__ */ new Map(), this._currentQuery = null, e78.forEach((t89) => {
      const e79 = this._timer.createQuery(), r79 = this._timer.createQuery();
      this._queryPool.push(e79, r79), this._queryResults.set(t89, null);
    });
  }
  start() {
    E39 || (this._currentQuery = this._queryPool.pop(), null != this._currentQuery && (this._timer.disjoint(), this._timer.beginTimeElapsed(this._currentQuery)));
  }
  stop(t88) {
    if (this._timer.disjoint() || null == this._currentQuery || !this._queryResults.has(t88))
      return this.abort(), null;
    this._timer.endTimeElapsed();
    const e78 = this._queryResults.get(t88);
    if (null == e78)
      return this._queryResults.set(t88, this._currentQuery), this._currentQuery = null, null;
    if (!this._timer.resultAvailable(e78))
      return this._queryPool.unshift(this._currentQuery), this._currentQuery = null, null;
    const r79 = this._timer.getResult(e78) / 1e6;
    return this._queryPool.unshift(e78), this._queryResults.set(t88, this._currentQuery), this._currentQuery = null, r79;
  }
  abort() {
    null != this._currentQuery && (this._timer.deleteQuery(this._currentQuery), this._queryPool.unshift(this._timer.createQuery()), this._currentQuery = null);
  }
  dispose() {
    null != this._currentQuery && this._timer.deleteQuery(this._currentQuery), this._queryPool.forEach((t88) => {
      this._timer.deleteQuery(t88);
    }), this._queryResults.forEach((t88) => {
      null != t88 && this._timer.deleteQuery(t88);
    });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/statistics/RendererPerformanceInfo.js
var a77;
!function(e78) {
  e78.OVERLAY = "overlay", e78.PREPARE = "prepare", e78.SHADOW_MAP = "shadow map", e78.LINEAR_DEPTH = "linear depth", e78.ACCUMULATED_SHADOWS = "accumulated shadows", e78.NORMALS = "normals", e78.OBJECT_AND_LAYER_ID_COLOR = "object/layer id color", e78.SSAO = "SSAO", e78.OPAQUE = "opaque", e78.OPAQUE_EDGES = "opaque edges", e78.VOXEL = "voxel", e78.TRANSPARENT = "transparent", e78.TRANSPARENT_EDGES = "transparent edges", e78.HUD_VISIBILITY = "HUD visibility", e78.TRANSPARENT_TERRAIN = "transparent terrain", e78.ENVIRONMENT = "environment", e78.LASER_LINE = "laser line", e78.OCCLUDED = "occluded", e78.ANTIALIASING = "antialiasing", e78.HIGHLIGHTS = "highlights", e78.HUD = "HUD", e78.HUD_OCCLUDED = "HUD occluded", e78.FINISH = "finish";
}(a77 || (a77 = {}));
var s78 = "Total";
var m46 = class {
  constructor(e78) {
    this._rctx = e78, this._startTimeStampCPU = n5(0), this._lastTimeStampCPU = n5(0), this._totalCPUTime = new s5(s78), this._cpuTimeSamplers = new Map(Object.values(a77).map((e79) => [e79, new s5(e79)])), this._enableGPUTimer = 0, this._totalGPUTime = new s5("GPU"), this._gpuTimeSamplers = new Map(Object.values(a77).map((e79) => [e79, new s5(e79)])), this._totalTime = n5(0), this._totalFrameCount = 0;
  }
  get totalCPUTimeSampler() {
    return this._totalCPUTime;
  }
  get cpuTimeSamplers() {
    return Array.from(this._cpuTimeSamplers.values());
  }
  get totalGPUTimeSampler() {
    return this._totalGPUTime;
  }
  get gpuTimeSamplers() {
    return Array.from(this._gpuTimeSamplers.values());
  }
  get gpuSamplingEnabled() {
    return null != this._gpuTimerPool;
  }
  get totalTime() {
    return this._totalTime;
  }
  get totalFrameCount() {
    return this._totalFrameCount;
  }
  get elapsedTime() {
    return n5(performance.now() - this._startTimeStampCPU);
  }
  enableGPUPerformanceInfo() {
    if (null == this._gpuTimerPool) {
      const e78 = [...Object.values(a77), s78];
      this._gpuTimerPool = e69(this._rctx, e78);
    }
    return null == this._gpuTimerPool ? { hasGPUTimerSupport: false, remove: () => {
    } } : (++this._enableGPUTimer, { hasGPUTimerSupport: true, remove: h2(() => {
      --this._enableGPUTimer, 0 === this._enableGPUTimer && (this._gpuTimerPool = t(this._gpuTimerPool));
    }) });
  }
  startFrame() {
    this._startTimeStampCPU = this._lastTimeStampCPU = n5(performance.now()), null != this._gpuTimerPool && this._gpuTimerPool.start();
  }
  advance(e78) {
    const t88 = n5(performance.now());
    if (this._cpuTimeSamplers.get(e78).record(t88 - this._lastTimeStampCPU), this._lastTimeStampCPU = t88, null != this._gpuTimerPool) {
      const t89 = this._gpuTimerPool.stop(e78);
      this._gpuTimeSamplers.get(e78).record(t89), this._gpuTimerPool.start();
    }
  }
  finishFrame() {
    if (null != this._gpuTimerPool) {
      const e79 = this._gpuTimerPool.stop(a77.FINISH);
      this._gpuTimeSamplers.get(a77.FINISH).record(e79);
    }
    const e78 = n5(performance.now() - this._startTimeStampCPU);
    this._totalTime = n5(this._totalTime + e78), this._totalCPUTime.record(e78), null != this._gpuTimerPool && this._totalGPUTime.record(this.gpuTimeSamplers.reduce((e79, t88) => e79 + (t88.last || 0), 0)), ++this._totalFrameCount;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Renderer.js
var oe9 = class extends m {
  get _bindParameters() {
    return this._renderContext.bindParameters;
  }
  updateRenderFeature(e78 = null, r79 = !has("disable-feature:high-quality-idle")) {
    this._renderStateFeatures = t42(r79, e78), this.notifyChange("_renderStateFeatures"), this._requestRender();
  }
  isFeatureEnabled(e78, r79 = this._state) {
    var _a;
    return ((_a = this._renderStateFeatures) == null ? void 0 : _a.get(r79, e78)) ?? false;
  }
  setFeatureEnabled(e78, r79, t88) {
    var _a;
    (_a = this._renderStateFeatures) == null ? void 0 : _a.set(r79, e78, t88), this.notifyChange("_renderStateFeatures"), this._requestRender();
  }
  get _antialiasing() {
    return this._antialiasingEnabled || this.isFeatureEnabled(o38.Antialiasing);
  }
  get _highQualityTransparency() {
    return this._highQualityTransparencyEnabled || this.isFeatureEnabled(o38.HighQualityTransparency);
  }
  get hasReflections() {
    return this.hasWater && (this._ssrEnabled || this.isFeatureEnabled(o38.WaterReflection));
  }
  get hasWater() {
    return this._hasWater || this._hasOverlayWater;
  }
  constructor(e78, r79, t88, i78, a85, n103, h58, p70) {
    super({}), this._stage = e78, this._materialRepository = r79, this._techniqueRepository = i78, this._rctx = a85, this._compositingHelper = n103, this._magnifierHelper = h58, this._requestRender = p70, this._materialRenderers = new l2(), this._needsTransparentPass = false, this._hasHUDElements = false, this._hasHighlights = false, this._hasWater = false, this._hasOverlayWater = false, this._renderOverlay = (e79) => {
    }, this._isRendering = false, this._fallbackDepthStencilTexture = null, this._sliceHelper = new n90(), this._state = I2.IDLE, this._renderStateFeatures = null, this._antialiasingEnabled = true, this._highQualityTransparencyEnabled = true, this._terrainRenderingEnabled = true, this._terrainTransparency = ne6.Opaque, this._ssrEnabled = false, this._ssaoEnabled = false, this._hasAnimations = false, this._animationTimestep = new e65(), this._handles = new t3(), this._renderHiddenTransparentEdges = () => {
    }, this._oitUsed = false, this.updateRenderFeature(e78.view.qualityProfile), this._smaaPass = new A34(this._rctx, i78), p70(), this._offscreen = new n89(this._rctx, this._compositingHelper), this.performanceInfo = new m46(this._rctx), this._shadowMap = new J4(this._rctx, e78.viewingMode), this._ssaoHelper = new w10(e78.view, i78, this._rctx, p70), this._highlight = new F28(i78, this._rctx), this._shadowHighlight = new w29(this._rctx, e78.viewingMode), this._shadowAccumulator = new M23(this._rctx, i78, e78, (e79) => {
      const r80 = this.shadowsEnabled;
      this._shadowMap.enabled = true, this._prepare(e79.camera, e79.contentCamera), this._renderPlugins.prepareRender(), this._shadowMap.enabled = r80;
    }, (e79, r80, t89) => {
      e79.shadowMap.start(e79.camera, r80, t89, true, this._stage.view.qualitySettings.maximumPixelRatio), this._renderShadowCascades(h13.Shadow, e79.shadowMap), e79.camera.setGLViewport(this._rctx), this._prepare(e79.camera, e79.contentCamera);
    }, p70), this._renderContext = new n41(this._rctx, this._offscreen, this._shadowMap, this._ssaoHelper, this._sliceHelper), this._renderPlugins = new d53({ renderContext: this._renderContext, techniqueRepository: i78, textureRepository: t88, materialRepository: this._materialRepository, requestRender: p70, controller: e78 }), this.renderPassManager = new w28(this._rctx, this._techniqueRepository), this._renderPlugins.add(this.renderPassManager.slots(), this.renderPassManager), this._handles.add([l6(() => this._stage.view.state.camera, () => p70(), w3), l6(() => t27.EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES, (e79) => {
      this._renderHiddenTransparentEdges = e79 ? () => this._renderEdges(A7.TRANSPARENT) : () => {
      }, p70();
    }, h3), l6(() => this._ssaoEnabled || this.isFeatureEnabled(o38.SSAO), (e79) => this._ssaoHelper.enabled = e79, w3)]);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._handles.destroy(), this._smaaPass.dispose(), this._gpuTimerHandle = o(this._gpuTimerHandle), this._materialRenderers.forAll((e78) => e78.dispose()), this._materialRenderers.clear(), this._offscreen.dispose(), this._fallbackDepthStencilTexture = t(this._fallbackDepthStencilTexture), this._shadowMap.dispose(), this._ssaoHelper.destroy(), this._highlight.dispose(), this._shadowHighlight.dispose(), this._shadowAccumulator.dispose(), this._edgeView = l(this._edgeView), this.renderPassManager.destroy(), o17.prune();
  }
  disposeOffscreenBuffers() {
    this._offscreen.dispose(), this._shadowMap.disposeOffscreenBuffers(), this._smaaPass.disable(), this._ssaoHelper.disposeOffscreenBuffers();
  }
  get updating() {
    return this._antialiasing && this._smaaPass.updating || null != this._edgeView && this._edgeView.updating || this._shadowAccumulator.running || this._renderPlugins.updating || !this.isCameraFinal;
  }
  ensureEdgeView() {
    if (null == this._edgeView) {
      const e78 = this._stage.view.resourceController;
      this._edgeView = new te5({ rctx: this._rctx, renderSR: this._stage.view.renderSpatialReference, viewingMode: this._stage.viewingMode, techniqueRepository: this._techniqueRepository, setNeedsRender: () => this._requestRender(), schedule: ue5(e78) }), this._handles.add(l6(() => n4(this._edgeView, (e79) => e79.updating), () => this._requestRender(), U3)), this._requestRender();
    }
    return this._edgeView;
  }
  get edgeView() {
    return this._edgeView;
  }
  get isCameraFinal() {
    return C3(this._bindParameters.ssr.reprojectionMatrix, o12);
  }
  set _reprojectionMatrix(e78) {
    h(this._bindParameters.ssr.reprojectionMatrix, e78) && this.notifyChange("isCameraFinal");
  }
  get shadowsEnabled() {
    var _a;
    return !!((_a = this._shadowMap) == null ? void 0 : _a.enabled);
  }
  setParameters(e78) {
    var _a, _b;
    const { _shadowMap: r79, _bindParameters: t88 } = this;
    if (void 0 !== ((_a = e78.qualitySettings) == null ? void 0 : _a.reflections) && this._ssrEnabled !== e78.qualitySettings.reflections && (this._ssrEnabled = e78.qualitySettings.reflections, this._requestRender()), void 0 !== ((_b = e78.qualitySettings) == null ? void 0 : _b.ambientOcclusion) && this._ssaoEnabled !== e78.qualitySettings.ambientOcclusion && (this._ssaoEnabled = e78.qualitySettings.ambientOcclusion, this._requestRender()), void 0 !== e78.shadowMap && this._shadowMap.enabled !== e78.shadowMap && (this._shadowMap.enabled = e78.shadowMap, this._requestRender()), void 0 !== e78.shadowMapMaxCascades && r79.maxCascades !== e78.shadowMapMaxCascades && (r79.maxCascades = e78.shadowMapMaxCascades, this._requestRender()), null != e78.environment) {
      null != e78.environment.weather && (this._bindParameters.weather = e78.environment.weather, this._bindParameters.weatherVisible = !!e78.weatherVisible);
      const r80 = "virtual" !== e78.environment.lighting.type;
      t88.enableFillLights !== r80 && (t88.enableFillLights = r80, this._requestRender());
    }
    e78.background && this._offscreen.background !== e78.background && (this._offscreen.background = e78.background, this._requestRender()), void 0 !== e78.antialiasingEnabled && this._antialiasingEnabled !== e78.antialiasingEnabled && (this._antialiasingEnabled = e78.antialiasingEnabled, this._requestRender()), void 0 !== e78.highQualityTransparency && this._highQualityTransparencyEnabled !== e78.highQualityTransparency && (this._highQualityTransparencyEnabled = e78.highQualityTransparency, this._requestRender()), void 0 !== e78.defaultHighlightOptions && (this._highlight.setDefaultOptions(e78.defaultHighlightOptions), this._shadowHighlight.setDefaultOptions(e78.defaultHighlightOptions), this._requestRender()), void 0 !== e78.overlays && this._bindParameters.overlays !== e78.overlays && (this._bindParameters.overlays = e78.overlays, this._requestRender()), void 0 !== e78.hasOverlayWater && this._hasOverlayWater !== e78.hasOverlayWater && (this._hasOverlayWater = e78.hasOverlayWater, this._requestRender()), void 0 !== e78.renderOverlay && this._renderOverlay !== e78.renderOverlay && (this._renderOverlay = e78.renderOverlay, this._requestRender()), void 0 !== e78.slicePlane && this._sliceHelper.plane !== e78.slicePlane && (this._sliceHelper.plane = e78.slicePlane, this._requestRender()), void 0 !== e78.terrainRenderingEnabled && this._terrainRenderingEnabled !== e78.terrainRenderingEnabled && (this._terrainRenderingEnabled = e78.terrainRenderingEnabled, this._requestRender()), void 0 !== e78.terrainTransparency && this._terrainTransparency !== e78.terrainTransparency && (this._terrainTransparency = e78.terrainTransparency, this._requestRender()), void 0 !== e78.shadowCastOptions && this._shadowAccumulator.setOptions(e78.shadowCastOptions);
  }
  get hasSlicePlane() {
    return !!this._sliceHelper.plane;
  }
  get renderPlugins() {
    return this._renderPlugins;
  }
  get _hasOITSupport() {
    return this._rctx.driverTest.floatBufferBlend.result;
  }
  get _oitEnabled() {
    return this._highQualityTransparency && this._hasOITSupport;
  }
  modify(e78, r79) {
    this._isRendering && console.warn("Renderer.modify called while rendering");
    const { adds: t88, removes: s84, updates: i78 } = e78;
    if (0 === t88.length && 0 === s84.length && 0 === i78.length)
      return;
    const a85 = r36(e78);
    let n103 = false;
    a85.forEach((t89, s85) => {
      if (r79.done)
        return;
      let i79 = this._materialRenderers.find((e79) => e79.material === s85);
      null == i79 && t89.adds.length > 0 && (i79 = new E14(this._rctx, this._materialRepository, s85), this._materialRenderers.push(i79)), i79 && (i79.modify(t89), i79.isEmpty && (n103 = true)), t89.removes.forEach((r80) => e78.removes.removeUnordered(r80)), t89.adds.forEach((r80) => e78.adds.removeUnordered(r80)), t89.updates.forEach((r80) => e78.updates.removeUnordered(r80)), r79.madeProgress();
    }), n103 && this._materialRenderers.filterInPlace((e79) => !e79.isEmpty || (e79.dispose(), false)), this._hasHighlights = this._materialRenderers.some((e79) => e79.hasHighlights), this._bindParameters.hasOccludees = this._materialRenderers.some((e79) => e79.hasOccludees), this._hasWater = this._materialRenderers.some((e79) => e79.hasWater), this._hasHUDElements = this._materialRenderers.some((e79) => e79.requiresSlot(E8.LINE_CALLOUTS_HUD_DEPTH, h13.Color) || e79.requiresSlot(E8.HUD_MATERIAL, h13.Color) || e79.requiresSlot(E8.LABEL_MATERIAL, h13.Color)), this._requestRender();
  }
  updateAnimation(e78) {
    const r79 = this._hasAnimations;
    return this._hasAnimations = false, this._materialRenderers.forAll((r80) => this._hasAnimations = r80.updateAnimation(e78) || this._hasAnimations), this._hasAnimations = this._renderPlugins.updateAnimation(e78) || this._hasAnimations, this._hasAnimations !== r79 && (this._gpuTimerHandle = r79 ? o(this._gpuTimerHandle) : this.performanceInfo.enableGPUPerformanceInfo()), this._hasAnimations;
  }
  get animationTimestep() {
    return this._animationTimestep.value;
  }
  get animationTimeDilation() {
    return this._animationTimestep.timeDilation;
  }
  resetAnimation() {
    this._animationTimestep.clear();
  }
  render(e78, r79, t88, s84, i78) {
    this._isRendering = true, this._oitUsed = false, this.performanceInfo.startFrame();
    const { camera: a85, contentCamera: n103, mode: h58, alignPixelEnabled: o77 } = t88;
    this._state = h58, this._renderOverlay(i78), this.performanceInfo.advance(a77.OVERLAY), this._renderContext.time = i78, this._bindParameters.transparencyPassType = o22.NONE, this._bindParameters.alignPixelEnabled = o77;
    const d63 = this._offscreen;
    d63.setupRenderTarget(this.hasReflections);
    const l75 = W6(this._sliceHelper.plane);
    s84 === s22.OFF && (this._sliceHelper.plane = null), this._rctx.bindFramebuffer(e78), a85.setGLViewport(this._rctx), this._prepare(a85, n103), this._renderPlugins.prepareRender(), this.performanceInfo.advance(a77.PREPARE);
    const _42 = this._computeDepthRange(a85);
    this._renderShadowMap(e78, a85, this._bindParameters.lighting.mainLight.direction, _42), this.performanceInfo.advance(a77.SHADOW_MAP), d63.initializeFrame(a85), this._ensureBindParameters(a85, n103);
    const p70 = this._terrainRenderingEnabled && (this._terrainTransparency === ne6.Semitransparent || this._terrainTransparency === ne6.TransparentWithDraped), c75 = this._highQualityTransparency && p70, m55 = this._needsTransparentPass || this._renderPlugins.needsTransparentPass;
    this._prepareShaders(c75, m55), this._renderLinearDepth(), this.performanceInfo.advance(a77.LINEAR_DEPTH), this._accumulateShadows(_42, a85, n103), this.performanceInfo.advance(a77.ACCUMULATED_SHADOWS), this._renderNormal(), this.performanceInfo.advance(a77.NORMALS), this._ensureBindParametersSSR(i78), this._renderSSAO(i78), this.performanceInfo.advance(a77.SSAO), this._renderContext.output = h13.Color, d63.bindFramebuffer(), this._renderOpaqueGeometry(), this.performanceInfo.advance(a77.OPAQUE), this._renderTerrainLinearDepth(c75), this._setMultipassTerrain(c75), this._renderEdges(A7.OPAQUE), this.performanceInfo.advance(a77.OPAQUE_EDGES), this._offscreen.bindTarget(this._offscreen.currentColorTarget, this._offscreen.mainDepth), this._renderSlot(E8.VOXEL), this.performanceInfo.advance(a77.VOXEL), this._renderHiddenTransparentEdges(), m55 && (this._oitEnabled ? this._renderOITPass(de6.Geometry) : this._renderTransparentGeometry()), this.performanceInfo.advance(a77.TRANSPARENT), this._renderGeometryLinearDepth(c75);
    const u58 = this._renderHUDVisibility(c75);
    c75 || this._renderInternalSlot(E8.LINE_CALLOUTS), this.performanceInfo.advance(a77.HUD_VISIBILITY), this._renderObjectAndLayerIdColor(r79), this.performanceInfo.advance(a77.OBJECT_AND_LAYER_ID_COLOR), this._renderEdges(A7.TRANSPARENT, c75), this.performanceInfo.advance(a77.TRANSPARENT_EDGES), this._renderTransparentTerrain(), p70 && u58 && (c75 ? this._renderLineCallouts(c22.Occluded) : d63.compositeTransparentTerrainOntoHUDVisibility(this._bindParameters), this._renderHUD(c22.Occluded, d63.framebuffer), this.performanceInfo.advance(a77.HUD_OCCLUDED)), this.performanceInfo.advance(a77.TRANSPARENT_TERRAIN), this._setTerrainCulling(false), p70 && (d63.compositeTransparentTerrainOntoMain(this._bindParameters), c75 && (this._renderEdges(A7.OPAQUE), this.performanceInfo.advance(a77.OPAQUE_EDGES), m55 && (this._oitEnabled ? this._renderOITPass(de6.Geometry) : this._renderTransparentGeometry()), this.performanceInfo.advance(a77.TRANSPARENT), this._renderEdges(A7.TRANSPARENT), this.performanceInfo.advance(a77.TRANSPARENT_EDGES))), c75 && this._renderLineCallouts(c22.NotOccluded), this._setMultipassEnabled(false), this._shadowAccumulator.render(this._bindParameters), d63.renderToTargets(() => {
      this._renderInternalSlot(E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), this._renderSlot(E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT), this._renderSlot(E8.LASERLINES);
    }, d63.currentColorTarget, d63.mainDepth), this.performanceInfo.advance(a77.ENVIRONMENT), this._renderPlugins.needsLaserlineWithContrastControl && d63.renderTmpAndCompositeToMain(() => this._renderSlot(E8.LASERLINES_CONTRAST_CONTROL), this._bindParameters, a68.PremultipliedAlpha), this.performanceInfo.advance(a77.LASER_LINE), this._renderOccluded(), this.performanceInfo.advance(a77.OCCLUDED);
    const f59 = s84 === s22.ON && this._magnifierHelper.enabled, T31 = f59 && null == e78 ? this._offscreen.getFramebuffer(this._offscreen.tmpColor, this._offscreen.tmpDepth) : e78;
    this._rctx.bindFramebuffer(T31);
    const g49 = this._offscreen.colorTexture;
    this._renderAntiAliasing(g49) || null == g49 || this._compositingHelper.composite(this._bindParameters, g49, a68.None), this.performanceInfo.advance(a77.ANTIALIASING), this._renderHUD(c22.NotOccluded, T31), this.performanceInfo.advance(a77.HUD), this._renderHighlights(T31, this._bindParameters), this.performanceInfo.advance(a77.HIGHLIGHTS), f59 && this._magnifierHelper.render(this._rctx, this._bindParameters), T31 !== e78 && (this._rctx.bindFramebuffer(e78), this._compositingHelper.composite(this._bindParameters, this._offscreen.tmpColorTexture, a68.None)), this._disposeOITBuffers(), this._renderContext.lastFrameCamera.copyFrom(this._bindParameters.camera), this._sliceHelper.plane = l75, this._isRendering = false, this.onPostRender && this.onPostRender(), this.performanceInfo.finishFrame();
  }
  _prepareShaders(e78, r79) {
    this._renderContext.output = h13.Color, this._prepareOpaqueGeometrySlots(), this._setMultipassTerrain(e78), this._prepareSlots(E8.TRANSPARENT_TERRAIN), this._setMultipassTerrain(false), e78 || this._prepareInternalSlots(this._materialRenderers, E8.LINE_CALLOUTS), r79 && this._prepareTransparencySlots(), this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), this._prepareSlots(E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT, E8.LASERLINES), this._rctx.gl.flush();
  }
  _renderObjectAndLayerIdColor(e78) {
    if (null != e78 && has("enable-feature:objectAndLayerId-rendering")) {
      const r79 = this._renderContext.output;
      this._rctx.bindFramebuffer(e78), this._offscreen.renderToFBO(() => this._renderGeometryAndTransparentTerrainPass(h13.ObjectAndLayerIdColor), [0, 0, 0, 0], true, true), this._rctx.bindFramebuffer(e78), this._offscreen.renderToFBO(() => {
        this._bindParameters.renderTransparentlyOccludedHUD = c22.NotOccluded, this._renderInternalSlot(E8.HUD_MATERIAL);
      }, void 0, true, true), this._renderContext.output = r79;
    }
  }
  finish(e78) {
    this._hasAnimations || this._animationTimestep.clear();
    const r79 = this.performanceInfo.gpuSamplingEnabled, t88 = e78 === O5.BACKGROUND;
    if (t88 || r79) {
      const e79 = t88 ? this.performanceInfo.elapsedTime : 0, s84 = r79 ? this.performanceInfo.totalGPUTimeSampler.last : this._rctx.gl.getError(), i78 = Math.max(e79, s84);
      this._animationTimestep.frame(i78, t88);
    }
  }
  readDepthPixels(e78, r79, t88) {
    const s84 = this._offscreen.bindTarget(this._offscreen.linearDepth, this._offscreen.tmpDepth);
    if (!this._needsLinearDepth) {
      this._ensureBindParameters(e78, e78), this._bindParameters.camera.setGLViewport(this._rctx), this._rctx.setClearColor(0, 0, 0, 0);
      const r80 = _4.COLOR_BUFFER_BIT | _4.DEPTH_BUFFER_BIT | _4.STENCIL_BUFFER_BIT;
      this._rctx.clearSafe(r80), this._renderGeometryAndTransparentTerrainPass(h13.Depth);
    }
    s84.readPixels(r79[0], r79[1], r79[2], r79[3], G5.RGBA, U4.UNSIGNED_BYTE, t88);
  }
  readHUDVisibility(e78, r79, t88, s84, i78) {
    this._offscreen.bindTarget(this._offscreen.hudVisibility).readPixels(e78, r79, t88, s84, G5.RGBA, U4.UNSIGNED_BYTE, i78);
  }
  readAccumulatedShadow(e78) {
    return this._shadowAccumulator.readAccumulatedShadow(e78[0], e78[1]);
  }
  _setMultipassTerrain(e78) {
    this._setMultipassEnabled(e78), this._setTerrainCulling(e78);
  }
  _setMultipassEnabled(e78) {
    this._bindParameters.multipassTerrain.enabled = this._bindParameters.multipassGeometry.enabled = e78;
  }
  _setTerrainCulling(e78) {
    this._bindParameters.multipassTerrain.cullAboveGround = e78;
  }
  _prepareSlots(...e78) {
    this._renderPlugins.prepareSlots(e78);
  }
  _renderSlot(e78) {
    this._bindParameters.slot = e78, this._renderPlugins.render();
  }
  _renderEdges(e78, r79 = false) {
    const t88 = this._edgeView;
    null != t88 && t88.shouldRender() && this._offscreen.renderTmpAndCompositeToMain(() => t88.render(this._bindParameters, e78), this._bindParameters, a68.Alpha, r79);
  }
  _renderShadowMap(e78, r79, t88, s84) {
    const i78 = this._shadowMap;
    i78.enabled && (i78.start(r79, t88, s84, this.isFeatureEnabled(o38.HighResolutionShadows), this._stage.view.qualitySettings.maximumPixelRatio), this._shadowHighlight.updateParameters(r79, t88), this._needsShadowHighlight ? (this._renderShadowCascades(h13.ShadowHighlight, this._shadowMap, (e79) => i78.takeCascadeSnapshotTo(e79, X4.Highlight)), i78.clear(), this._renderShadowCascades(h13.ShadowExcludeHighlight, this._shadowMap, (e79) => {
      i78.takeCascadeSnapshotTo(e79, X4.Default), this._renderGeometryAndTransparentTerrainPass(h13.ShadowHighlight);
    })) : this._renderShadowCascades(h13.Shadow), i78.finish(e78), r79.setGLViewport(this._rctx));
  }
  _renderShadowCascades(e78, r79 = this._shadowMap, t88 = (e79) => {
  }) {
    for (const s84 of r79.cascades)
      s84.camera.setGLViewport(this._rctx), this._prepare(s84.camera, s84.camera), this._renderGeometryAndTransparentTerrainPass(e78), t88(s84);
  }
  get _needsLinearDepth() {
    return this._ssaoHelper.active || this._renderPlugins.needsLinearDepth || this.hasReflections || this._needsShadowHighlight || this._needsShadowCast;
  }
  _renderLinearDepth() {
    this._needsLinearDepth ? this._offscreen.renderToTargets(() => this._renderGeometryAndTransparentTerrainPass(h13.Depth), this._offscreen.linearDepth, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true) : this._offscreen.disposeTarget(this._offscreen.linearDepth), this._bindParameters.linearDepthTexture = this._offscreen.linearDepthTexture;
  }
  _renderTerrainLinearDepth(e78) {
    if (e78) {
      const e79 = this._renderContext.output;
      this._renderContext.output = h13.Depth, this._offscreen.renderToTargets(() => this._renderTransparentTerrain(), this._offscreen.terrainLinearDepth, this._offscreen.tmpDepth, [-1e10, -1e10, -1e10, 1], true, true), this._renderContext.output = e79;
    } else
      this._offscreen.disposeTarget(this._offscreen.terrainLinearDepth);
    this._bindParameters.multipassTerrain.linearDepthTexture = this._offscreen.terrainLinearDepthTexture;
  }
  _renderGeometryLinearDepth(e78) {
    if (e78) {
      const e79 = this._renderContext.output;
      this._offscreen.renderToTargets(() => this._renderGeometryPass(h13.Depth), this._offscreen.geometryLinearDepth, this._offscreen.tmpDepth, [1, 1, 1, 1], true, true), this._renderContext.output = e79;
    } else
      this._offscreen.disposeTarget(this._offscreen.geometryLinearDepth);
    this._bindParameters.multipassGeometry.linearDepthTexture = this._offscreen.geometryLinearDepthTexture;
  }
  get _needsNormal() {
    return this._ssaoHelper.active;
  }
  _renderNormal() {
    this._needsNormal ? this._offscreen.renderToTargets(() => {
      this._renderGeometryAndTransparentTerrainPass(h13.Normal);
    }, this._offscreen.normal, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true) : this._offscreen.disposeTarget(this._offscreen.normal);
  }
  get _needsDepthRange() {
    return this._shadowMap.enabled || this._needsShadowCast;
  }
  _computeDepthRange(e78) {
    if (!this._needsDepthRange)
      return f48;
    const r79 = B20(e78, this._materialRenderers, this._stage.layers);
    return e60(r79, this.renderPlugins.queryDepthRange(e78)), r79.near = Math.max(e78.near, r79.near), r79.far = Math.min(e78.far, r79.far), r79;
  }
  _renderGeometryAndTransparentTerrainPass(e78) {
    this._renderContext.output = e78, this._prepareSlots(E8.TRANSPARENT_TERRAIN), this._renderGeometryPass(e78), this._renderTransparentTerrain();
  }
  _renderGeometryPass(e78) {
    this._renderContext.output = e78, this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._renderOpaqueGeometry(), this._renderTransparentGeometry();
  }
  _renderSSAO(e78) {
    this._ssaoHelper.render(this._bindParameters, e78, this._offscreen.linearDepthTexture, this._offscreen.normalTexture);
  }
  _prepareOpaqueGeometrySlots() {
    this._prepareSlots(E8.INTEGRATED_MESH, E8.OPAQUE_TERRAIN, E8.OPAQUE_MATERIAL, E8.POSTPROCESSING_ENVIRONMENT_OPAQUE), this._prepareInternalSlots(this._materialRenderers, E8.OPAQUE_MATERIAL);
  }
  _renderOpaqueGeometry() {
    this._renderSlot(E8.INTEGRATED_MESH), this._renderSlot(E8.OPAQUE_TERRAIN), this._renderInternalSlot(E8.OPAQUE_MATERIAL), this._renderSlot(E8.OPAQUE_MATERIAL), this._renderSlot(E8.POSTPROCESSING_ENVIRONMENT_OPAQUE);
  }
  _renderTransparentGeometry() {
    this._renderInternalSlot(E8.TRANSPARENT_MATERIAL), this._renderSlot(E8.TRANSPARENT_MATERIAL);
  }
  _renderTransparentTerrain() {
    this._renderSlot(E8.TRANSPARENT_TERRAIN);
  }
  _renderHUDVisibility(e78) {
    let r79 = false;
    return this._renderContext.offscreenRenderingHelper && this._renderContext.offscreenRenderingHelper.renderHUDVisibility(() => {
      this._bindParameters.hudVisibilityTexture = this._renderContext.offscreenRenderingHelper.hudVisibilityTexture, r79 = this._renderInternalSlot(E8.OCCLUSION_PIXELS);
    }, e78), r79;
  }
  _renderLineCallouts(e78) {
    this._bindParameters.renderTransparentlyOccludedHUD = e78, e78 === c22.Occluded ? this._offscreen.renderToTargets(() => this._renderInternalSlot(E8.LINE_CALLOUTS), this._offscreen.currentColorTarget, this._offscreen.tmpDepth, void 0, true, true) : this._renderInternalSlot(E8.LINE_CALLOUTS);
  }
  _renderHUD(e78, r79) {
    this._hasHUDElements && (this._oitEnabled ? (this._renderOITPass(de6.HUD, e78), this._rctx.bindFramebuffer(r79), this._compositingHelper.composite(this._bindParameters, this._offscreen.hudColorTexture, a68.PremultipliedAlpha)) : e78 === c22.Occluded ? this._offscreen.renderToTargets(() => this._renderHUDElements(c22.Occluded), this._offscreen.currentColorTarget, this._offscreen.tmpDepth, void 0, true, true) : this._renderHUDElements(e78));
  }
  _renderHUDElements(e78) {
    this._bindParameters.renderTransparentlyOccludedHUD = e78, this._prepareInternalSlots(this._materialRenderers, E8.LINE_CALLOUTS_HUD_DEPTH, E8.HUD_MATERIAL, E8.LABEL_MATERIAL), this._renderInternalSlot(E8.LINE_CALLOUTS_HUD_DEPTH), this._renderInternalSlot(E8.HUD_MATERIAL), this._renderInternalSlot(E8.LABEL_MATERIAL);
  }
  get _needsHighlight() {
    return this._hasHighlights || this._renderPlugins.needsHighlight;
  }
  get _needsShadowHighlight() {
    return this._shadowMap.enabled && this._shadowHighlight.isVisible && this._needsHighlight;
  }
  _renderHighlights(e78, r79) {
    if (!this._needsHighlight)
      return void this._offscreen.disposeTarget(this._offscreen.highlight);
    const t88 = this._highlight, s84 = this._offscreen.renderToTargets(() => {
      this._renderGeometryAndTransparentTerrainPass(h13.Highlight), this._rctx.clearSafe(_4.DEPTH_BUFFER_BIT), this._renderHUDElements(c22.Both);
    }, this._offscreen.highlight, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true);
    this._bindParameters.highlightColorTexture = s84.colorTexture, this._needsShadowHighlight && this._shadowHighlight.render(r79, e78), t88.render(this._bindParameters, s84, e78);
  }
  get _needsShadowCast() {
    return this._shadowAccumulator.isAccumulating;
  }
  _accumulateShadows(e78, r79, t88) {
    this._needsShadowCast && null != this._offscreen.linearDepthTexture && this._shadowAccumulator.renderAccumulation(this._offscreen.linearDepthTexture, e78, r79, t88);
  }
  _prepareTransparencySlots() {
    this._renderContext.output = h13.Alpha, this._bindParameters.transparencyPassType = o22.Alpha, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._renderContext.output = h13.Color, this._bindParameters.transparencyPassType = o22.Color, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._bindParameters.transparencyPassType = o22.FrontFace, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._bindParameters.transparencyPassType = o22.NONE;
  }
  _renderOITPass(e78, r79 = c22.Both) {
    const t88 = e78 === de6.HUD, s84 = t88 ? () => this._renderHUDElements(r79) : () => this._renderTransparentGeometry(), i78 = (e79) => {
      this._bindParameters.transparencyPassType = e79, this._offscreen.renderOITPass(s84, e79, t88);
    }, a85 = this._renderContext.output;
    this._renderContext.output = h13.Alpha, i78(o22.Alpha), this._renderContext.output = h13.Color, i78(o22.Color), i78(o22.FrontFace), this._offscreen.compositeTransparentOntoOpaque(this._bindParameters, t88), this._bindParameters.transparencyPassType = o22.NONE, this._renderContext.output = a85, this._oitUsed = true;
  }
  _disposeOITBuffers() {
    this._oitUsed || (this._offscreen.disposeTarget(this._offscreen.alphaFloatTarget), this._offscreen.disposeTarget(this._offscreen.colorFloatTarget), this._offscreen.disposeTarget(this._offscreen.frontFaceTarget));
  }
  _renderOccluded() {
    let e78 = 0;
    _e3.clear(), this._materialRenderers.forAll((r80) => {
      r80.material && r80.material.isVisible() && r80.material.renderOccluded === o21.OccludeAndTransparentStencil && (e78 |= r80.material.renderOccluded, _e3.push(r80));
    });
    const r79 = this._offscreen, t88 = (t89, s85, i79, a85, n103) => {
      0 != (e78 & s85) && (r79.renderToTargets(i79, r79.tmpColor, r79.mainDepth, [0, 0, 0, 0], a85, n103), r79.compositeOccludedOntoMain(this._bindParameters, t89));
    };
    0 !== _e3.length && (this._prepareInternalSlots(_e3, E8.OCCLUDER_MATERIAL, E8.TRANSPARENT_OCCLUDER_MATERIAL), this._renderInternalSlot(E8.OCCLUDER_MATERIAL, _e3), t88(0.5, o21.OccludeAndTransparentStencil, () => this._renderInternalSlot(E8.TRANSPARENT_OCCLUDER_MATERIAL, _e3), false, false)), _e3.clear(), this._materialRenderers.forAll((r80) => {
      r80.material && r80.material.isVisible() && (r80.material.renderOccluded === o21.OccludeAndTransparent || r80.material.renderOccluded === o21.Transparent || r80.material.renderOccluded === o21.Opaque) && (e78 |= r80.material.renderOccluded, _e3.push(r80));
    });
    const s84 = this._renderPlugins.renderOccludedFlags;
    if (e78 |= s84, !e78)
      return;
    const i78 = (e79) => {
      this._renderContext.renderOccludedMask = e79, this._prepareInternalSlots(_e3, E8.OPAQUE_MATERIAL, E8.TRANSPARENT_MATERIAL, E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), s84 > o21.Occlude && this._renderSlot(E8.OCCLUDED_TERRAIN), this._renderInternalSlot(E8.OPAQUE_MATERIAL, _e3), this._renderInternalSlot(E8.TRANSPARENT_MATERIAL, _e3), this._renderInternalSlot(E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL, _e3), this._renderContext.resetRenderOccludedMask();
    };
    this._renderContext.output = h13.Color, t88(0.5, o21.OccludeAndTransparent, () => i78(o21.OccludeAndTransparent), true, a19.OutlineVisualElementMask), t88(0.5, o21.Transparent, () => i78(o21.Transparent), true, a19.OutlineVisualElementMask), t88(1, o21.Opaque, () => i78(o21.Opaque), true, a19.OutlineVisualElementMask), _e3.clear();
  }
  _renderAntiAliasing(e78) {
    if (this._antialiasing) {
      if (this._smaaPass.enable(() => this._requestRender()) && null != e78)
        return this._smaaPass.render(e78), true;
    } else
      this._smaaPass.disable();
    return false;
  }
  _prepare(e78, r79) {
    this._needsTransparentPass = this._materialRenderers.some((e79) => e79.requiresSlot(E8.TRANSPARENT_MATERIAL, h13.Color)), this._bindParameters.camera = e78, this._bindParameters.contentCamera = r79;
  }
  _ensureBindParameters(e78, r79) {
    this._bindParameters.camera = e78, this._bindParameters.contentCamera = r79;
    const t88 = this._renderContext.offscreenRenderingHelper;
    this._bindParameters.hudVisibilityTexture = t88.hudVisibilityTexture, this._bindParameters.mainColorTexture = t88.mainColorTexture, this._bindParameters.highlightDepthTexture = t88.depthTexture ?? this._getFallbackDepthTexture();
  }
  _ensureBindParametersSSR(e78) {
    if (this._bindParameters.ssr.enabled = this.hasReflections, this._bindParameters.ssr.enabled) {
      null == this._ssrEnableTime && (this._ssrEnableTime = e78), this._renderContext.lastFrameCamera.equals(this._bindParameters.camera) ? this._reprojectionMatrix = o12 : (h6(ce9, this._bindParameters.camera.viewMatrix), h6(pe6, this._bindParameters.camera.projectionMatrix), c5(me6, ce9, pe6), c5(me6, this._renderContext.lastFrameCamera.viewMatrix, me6), c5(me6, this._renderContext.lastFrameCamera.projectionMatrix, me6), this._reprojectionMatrix = me6), this._bindParameters.ssr.lastFrameColorTexture = this._offscreen.lastFrameColorTexture;
      const r79 = this._stage.view.qualitySettings.fadeDuration;
      this._bindParameters.ssr.fadeFactor = r79 > 0 ? Math.min(r79, e78 - this._ssrEnableTime) / r79 : 1, this._bindParameters.ssr.fadeFactor < 1 && this._requestRender();
    } else
      this._reprojectionMatrix = o12, this._bindParameters.ssr.lastFrameColorTexture = null, this._ssrEnableTime = null;
  }
  _prepareInternalSlots(e78, ...r79) {
    for (const t88 of r79)
      this._bindParameters.slot = t88, e78.forAll((e79) => {
        e79.material.shouldRender(this._renderContext) && e79.prepareTechnique(this._renderContext);
      });
  }
  _renderInternalSlot(e78, r79 = this._materialRenderers) {
    let t88 = false;
    return this._bindParameters.slot = e78, r79.forAll((e79) => {
      if (e79.material.shouldRender(this._renderContext)) {
        const r80 = e79.prepareTechnique(this._renderContext);
        null != r80 && (e79.render(this._renderContext, r80), t88 = true);
      }
    }), t88;
  }
  _getFallbackDepthTexture() {
    return this._fallbackDepthStencilTexture || (this._fallbackDepthStencilTexture = g9(this._rctx)), this._fallbackDepthStencilTexture;
  }
  get gpuMemoryUsage() {
    var _a, _b, _c, _d, _e4;
    return { offscreen: ((_a = this._offscreen) == null ? void 0 : _a.gpuMemoryUsage) ?? 0, highlights: (((_b = this._highlight) == null ? void 0 : _b.gpuMemoryUsage) ?? 0) + (((_c = this._shadowHighlight) == null ? void 0 : _c.gpuMemoryUsage) ?? 0), shadows: ((_d = this._shadowMap) == null ? void 0 : _d.gpuMemoryUsage) ?? 0, ssao: ((_e4 = this._ssaoHelper) == null ? void 0 : _e4.gpuMemoryUsage) ?? 0 };
  }
  get test() {
    const e78 = this;
    return { offscreen: this._offscreen, shadowMap: this._shadowMap, ssao: this._ssaoHelper, highlight: this._highlight, lighting: this._bindParameters.lighting, materialRenderers: this._materialRenderers, shadowAccumulator: this._shadowAccumulator, weatherIsFading: this._bindParameters.cloudsFade.isFading, resetRenderStateFeatures: () => {
      e78._renderStateFeatures = t42();
    }, getFramebufferTexture: (r79) => {
      switch (r79) {
        case le7.Color:
          return e78._offscreen.colorTexture;
        case le7.LinearDepth:
          return e78._offscreen.linearDepthTexture;
        case le7.Normals:
          return e78._offscreen.normalTexture;
        case le7.ShadowMap:
          return e78._shadowMap.depthTexture;
        case le7.HudVisibility:
          return e78._offscreen.hudVisibilityTexture;
        case le7.Highlight:
          return e78._offscreen.highlightTexture;
      }
    } };
  }
};
var de6;
var le7;
e([y()], oe9.prototype, "_renderPlugins", void 0), e([y()], oe9.prototype, "_shadowAccumulator", void 0), e([y()], oe9.prototype, "_state", void 0), e([y()], oe9.prototype, "_renderStateFeatures", void 0), e([y()], oe9.prototype, "_antialiasingEnabled", void 0), e([y({ readOnly: true })], oe9.prototype, "_antialiasing", null), e([y()], oe9.prototype, "_ssaoEnabled", void 0), e([y()], oe9.prototype, "_smaaPass", void 0), e([y({ autoDestroy: true })], oe9.prototype, "_edgeView", void 0), e([y()], oe9.prototype, "updating", null), e([y()], oe9.prototype, "isCameraFinal", null), oe9 = e([a4("esri.views.3d.webgl-engine.lib.Renderer")], oe9), function(e78) {
  e78[e78.Geometry = 0] = "Geometry", e78[e78.HUD = 1] = "HUD";
}(de6 || (de6 = {})), function(e78) {
  e78[e78.Color = 0] = "Color", e78[e78.LinearDepth = 1] = "LinearDepth", e78[e78.Normals = 2] = "Normals", e78[e78.ShadowMap = 3] = "ShadowMap", e78[e78.HudVisibility = 4] = "HudVisibility", e78[e78.Highlight = 5] = "Highlight";
}(le7 || (le7 = {}));
var _e3 = new l2();
var pe6 = e17();
var ce9 = e17();
var me6 = e17();
function ue5(e78) {
  return (r79) => e78.immediate.schedule(r79);
}

// node_modules/@arcgis/core/views/webgl/AppleAmdDriverHelper.js
var n95 = class _n {
  constructor(e78) {
    this._rctx = e78, this._indexBuffer = this._createIndexbuffer(), this._program = this._createHelperProgram();
  }
  static getShaderSources() {
    return { vertex: "#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }", fragment: "#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }" };
  }
  _createHelperProgram() {
    const e78 = _n.getShaderSources();
    return this._rctx.programCache.acquire(e78.vertex, e78.fragment, /* @__PURE__ */ new Map([]));
  }
  _createIndexbuffer() {
    return c17.createIndex(this._rctx, F6.STATIC_DRAW, new Uint32Array([0]));
  }
  resetIndicesType() {
    this._program.compiled && this._indexBuffer && (this._rctx.bindVAO(null), this._rctx.useProgram(this._program), this._rctx.bindBuffer(this._indexBuffer, A5.ELEMENT_ARRAY_BUFFER), this._rctx.drawElements(E5.POINTS, 1, C6.UNSIGNED_INT, 0));
  }
  dispose() {
    this._program.dispose(), this._indexBuffer.dispose();
  }
};

// node_modules/@arcgis/core/views/webgl/ContextState.js
var h50 = class {
  constructor() {
    this.blend = false, this.blendColor = { r: 0, g: 0, b: 0, a: 0 }, this.blendFunction = { srcRGB: R5.ONE, dstRGB: R5.ZERO, srcAlpha: R5.ONE, dstAlpha: R5.ZERO }, this.blendEquation = { mode: T3.ADD, modeAlpha: T3.ADD }, this.colorMask = { r: true, g: true, b: true, a: true }, this.faceCulling = false, this.cullFace = N2.BACK, this.frontFace = S6.CCW, this.scissorTest = false, this.scissorRect = { x: 0, y: 0, width: 0, height: 0 }, this.depthTest = false, this.depthFunction = I4.LESS, this.clearDepth = 1, this.depthWrite = true, this.depthRange = { zNear: 0, zFar: 1 }, this.viewport = null, this.stencilTest = false, this.polygonOffsetFill = false, this.polygonOffset = [0, 0], this.stencilFunction = { face: N2.FRONT_AND_BACK, func: I4.ALWAYS, ref: 0, mask: 1 }, this.clearStencil = 0, this.stencilWriteMask = 1, this.stencilOperation = { face: N2.FRONT_AND_BACK, fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.KEEP }, this.clearColor = { r: 0, g: 0, b: 0, a: 0 }, this.program = null, this.vertexBuffer = null, this.indexBuffer = null, this.uniformBuffer = null, this.pixelPackBuffer = null, this.pixelUnpackBuffer = null, this.copyReadBuffer = null, this.copyWriteBuffer = null, this.uniformBufferBindingPoints = new Array(), this.readFramebuffer = null, this.drawFramebuffer = null, this.renderbuffer = null, this.activeTexture = 0, this.textureUnitMap = new Array(), this.vertexArrayObject = null;
  }
};

// node_modules/@arcgis/core/views/support/AllocationTracer.js
var t79 = class {
  constructor(t88) {
    this._allocations = /* @__PURE__ */ new Map(), t88 ? Error.stackTraceLimit = 1 / 0 : (this.add = () => {
    }, this.remove = () => {
    });
  }
  add(t88) {
    this._allocations.set(t88, new Error().stack);
  }
  remove(t88) {
    this._allocations.delete(t88);
  }
  get information() {
    let t88 = "";
    if (this._allocations.size > 0) {
      t88 += `${this._allocations.size} live object allocations:
`;
      const s84 = /* @__PURE__ */ new Map();
      this._allocations.forEach((t89) => {
        s84.set(t89, (s84.get(t89) ?? 0) + 1);
      }), s84.forEach((s85, o77) => {
        const i78 = o77.split("\n");
        i78.shift(), i78.shift(), t88 += `${s85}: ${i78.shift()}
`, i78.forEach((s86) => t88 += `   ${s86}
`);
      });
    }
    return t88;
  }
};

// node_modules/@arcgis/core/views/webgl/InstanceCounter.js
var e70 = { RECORD_ALLOCATIONS: false };
var s79 = class {
  constructor() {
    for (this._current = new Array(), this._max = new Array(), this._allocations = new t79(e70.RECORD_ALLOCATIONS); this._current.length < V3.COUNT; )
      this._current.push(0), this._max.push(0);
  }
  resetMax() {
    for (this._max.length = 0; this._max.length < this._current.length; )
      this._max.push(0);
  }
  increment(t88, r79) {
    const e78 = ++this._current[t88];
    this._max[t88] = Math.max(e78, this._max[t88]), this._allocations.add(r79);
  }
  decrement(t88, r79) {
    --this._current[t88], this._allocations.remove(r79);
  }
  get max() {
    return this._max;
  }
  get current() {
    return this._current;
  }
  get total() {
    return this.current.reduce((t88, r79) => t88 + r79, 0);
  }
  get resourceInformation() {
    let t88 = "";
    if (this.total > 0) {
      t88 += "Live objects:\n";
      for (let e78 = 0; e78 < V3.COUNT; ++e78) {
        const s84 = this._current[e78];
        s84 > 0 && (t88 += `${V3[e78]}: ${s84}
`);
      }
    }
    return t88 += this._allocations.information, t88;
  }
};

// node_modules/@arcgis/core/views/webgl/Parameters.js
var t80 = class {
  constructor(t88, r79, a85) {
    const i78 = r79.textureFilterAnisotropic, m55 = a85.maxAnisotropy ?? 1 / 0;
    this.versionString = t88.getParameter(t88.VERSION), this.maxVertexTextureImageUnits = t88.getParameter(t88.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this.maxVertexAttributes = t88.getParameter(t88.MAX_VERTEX_ATTRIBS), this.maxMaxAnisotropy = i78 ? Math.min(t88.getParameter(i78.MAX_TEXTURE_MAX_ANISOTROPY), m55) : 1, this.maxTextureImageUnits = t88.getParameter(t88.MAX_TEXTURE_IMAGE_UNITS), this.maxTextureSize = t88.getParameter(t88.MAX_TEXTURE_SIZE), this.maxRenderbufferSize = t88.getParameter(t88.MAX_RENDERBUFFER_SIZE), this.maxViewportDims = t88.getParameter(t88.MAX_VIEWPORT_DIMS), n94(t88) ? (this.maxUniformBufferBindings = t88.getParameter(t88.MAX_UNIFORM_BUFFER_BINDINGS), this.maxVertexUniformBlocks = t88.getParameter(t88.MAX_VERTEX_UNIFORM_BLOCKS), this.maxFragmentUniformBlocks = t88.getParameter(t88.MAX_FRAGMENT_UNIFORM_BLOCKS), this.maxUniformBlockSize = t88.getParameter(t88.MAX_UNIFORM_BLOCK_SIZE), this.uniformBufferOffsetAlignment = t88.getParameter(t88.UNIFORM_BUFFER_OFFSET_ALIGNMENT), this.maxArrayTextureLayers = t88.getParameter(t88.MAX_ARRAY_TEXTURE_LAYERS), this.maxSamples = t88.getParameter(t88.MAX_SAMPLES)) : (this.maxUniformBufferBindings = 0, this.maxVertexUniformBlocks = 0, this.maxFragmentUniformBlocks = 0, this.maxUniformBlockSize = 0, this.uniformBufferOffsetAlignment = 1, this.maxArrayTextureLayers = 1, this.maxSamples = 1);
  }
};

// node_modules/@arcgis/core/views/webgl/reservedWordsGLSL3.js
var e71 = ["layout", "centroid", "smooth", "case", "mat2x2", "mat2x3", "mat2x4", "mat3x2", "mat3x3", "mat3x4", "mat4x2", "mat4x3", "mat4x4", "uint", "uvec2", "uvec3", "uvec4", "samplerCubeShadow", "sampler2DArray", "sampler2DArrayShadow", "isampler2D", "isampler3D", "isamplerCube", "isampler2DArray", "usampler2D", "usampler3D", "usamplerCube", "usampler2DArray", "coherent", "restrict", "readonly", "writeonly", "resource", "atomic_uint", "noperspective", "patch", "sample", "subroutine", "common", "partition", "active", "filter", "image1D", "image2D", "image3D", "imageCube", "iimage1D", "iimage2D", "iimage3D", "iimageCube", "uimage1D", "uimage2D", "uimage3D", "uimageCube", "image1DArray", "image2DArray", "iimage1DArray", "iimage2DArray", "uimage1DArray", "uimage2DArray", "image1DShadow", "image2DShadow", "image1DArrayShadow", "image2DArrayShadow", "imageBuffer", "iimageBuffer", "uimageBuffer", "sampler1DArray", "sampler1DArrayShadow", "isampler1D", "isampler1DArray", "usampler1D", "usampler1DArray", "isampler2DRect", "usampler2DRect", "samplerBuffer", "isamplerBuffer", "usamplerBuffer", "sampler2DMS", "isampler2DMS", "usampler2DMS", "sampler2DMSArray", "isampler2DMSArray", "usampler2DMSArray", "trunc", "round", "roundEven", "isnan", "isinf", "floatBitsToInt", "floatBitsToUint", "intBitsToFloat", "uintBitsToFloat", "packSnorm2x16", "unpackSnorm2x16", "packUnorm2x16", "unpackUnorm2x16", "packHalf2x16", "unpackHalf2x16", "outerProduct", "transpose", "determinant", "inverse", "texture", "textureSize", "textureProj", "textureLod", "textureOffset", "texelFetch", "texelFetchOffset", "textureProjOffset", "textureLodOffset", "textureProjLod", "textureProjLodOffset", "textureGrad", "textureGradOffset", "textureProjGrad", "textureProjGradOffset"];

// node_modules/@arcgis/core/views/webgl/testUtils.js
var e72 = { enableCache: false };

// node_modules/@arcgis/core/chunks/builtins.js
var r72;
var t81 = { exports: {} };
t81.exports, void 0 !== (r72 = ["precision", "highp", "mediump", "lowp", "attribute", "const", "uniform", "varying", "break", "continue", "do", "for", "while", "if", "else", "in", "out", "inout", "float", "int", "void", "bool", "true", "false", "discard", "return", "mat2", "mat3", "mat4", "vec2", "vec3", "vec4", "ivec2", "ivec3", "ivec4", "bvec2", "bvec3", "bvec4", "sampler1D", "sampler2D", "sampler3D", "samplerCube", "sampler1DShadow", "sampler2DShadow", "struct", "asm", "class", "union", "enum", "typedef", "template", "this", "packed", "goto", "switch", "default", "inline", "noinline", "volatile", "public", "static", "extern", "external", "interface", "long", "short", "double", "half", "fixed", "unsigned", "input", "output", "hvec2", "hvec3", "hvec4", "dvec2", "dvec3", "dvec4", "fvec2", "fvec3", "fvec4", "sampler2DRect", "sampler3DRect", "sampler2DRectShadow", "sizeof", "cast", "namespace", "using"]) && (t81.exports = r72);
var o70 = t11(t81.exports);
var l69;
var a78 = { exports: {} };
a78.exports, l69 = a78, function(e78) {
  var r79 = ["<<=", ">>=", "++", "--", "<<", ">>", "<=", ">=", "==", "!=", "&&", "||", "+=", "-=", "*=", "/=", "%=", "&=", "^^", "^=", "|=", "(", ")", "[", "]", ".", "!", "~", "*", "/", "%", "+", "-", "<", ">", "&", "^", "|", "?", ":", "=", ",", ";", "{", "}"];
  void 0 !== r79 && (l69.exports = r79);
}();
var g39 = t11(a78.exports);
var i71 = { exports: {} };
i71.exports, function(e78) {
  !function(r79) {
    var t88 = function() {
      return ["abs", "acos", "all", "any", "asin", "atan", "ceil", "clamp", "cos", "cross", "dFdx", "dFdy", "degrees", "distance", "dot", "equal", "exp", "exp2", "faceforward", "floor", "fract", "gl_BackColor", "gl_BackLightModelProduct", "gl_BackLightProduct", "gl_BackMaterial", "gl_BackSecondaryColor", "gl_ClipPlane", "gl_ClipVertex", "gl_Color", "gl_DepthRange", "gl_DepthRangeParameters", "gl_EyePlaneQ", "gl_EyePlaneR", "gl_EyePlaneS", "gl_EyePlaneT", "gl_Fog", "gl_FogCoord", "gl_FogFragCoord", "gl_FogParameters", "gl_FragColor", "gl_FragCoord", "gl_FragData", "gl_FragDepth", "gl_FragDepthEXT", "gl_FrontColor", "gl_FrontFacing", "gl_FrontLightModelProduct", "gl_FrontLightProduct", "gl_FrontMaterial", "gl_FrontSecondaryColor", "gl_LightModel", "gl_LightModelParameters", "gl_LightModelProducts", "gl_LightProducts", "gl_LightSource", "gl_LightSourceParameters", "gl_MaterialParameters", "gl_MaxClipPlanes", "gl_MaxCombinedTextureImageUnits", "gl_MaxDrawBuffers", "gl_MaxFragmentUniformComponents", "gl_MaxLights", "gl_MaxTextureCoords", "gl_MaxTextureImageUnits", "gl_MaxTextureUnits", "gl_MaxVaryingFloats", "gl_MaxVertexAttribs", "gl_MaxVertexTextureImageUnits", "gl_MaxVertexUniformComponents", "gl_ModelViewMatrix", "gl_ModelViewMatrixInverse", "gl_ModelViewMatrixInverseTranspose", "gl_ModelViewMatrixTranspose", "gl_ModelViewProjectionMatrix", "gl_ModelViewProjectionMatrixInverse", "gl_ModelViewProjectionMatrixInverseTranspose", "gl_ModelViewProjectionMatrixTranspose", "gl_MultiTexCoord0", "gl_MultiTexCoord1", "gl_MultiTexCoord2", "gl_MultiTexCoord3", "gl_MultiTexCoord4", "gl_MultiTexCoord5", "gl_MultiTexCoord6", "gl_MultiTexCoord7", "gl_Normal", "gl_NormalMatrix", "gl_NormalScale", "gl_ObjectPlaneQ", "gl_ObjectPlaneR", "gl_ObjectPlaneS", "gl_ObjectPlaneT", "gl_Point", "gl_PointCoord", "gl_PointParameters", "gl_PointSize", "gl_Position", "gl_ProjectionMatrix", "gl_ProjectionMatrixInverse", "gl_ProjectionMatrixInverseTranspose", "gl_ProjectionMatrixTranspose", "gl_SecondaryColor", "gl_TexCoord", "gl_TextureEnvColor", "gl_TextureMatrix", "gl_TextureMatrixInverse", "gl_TextureMatrixInverseTranspose", "gl_TextureMatrixTranspose", "gl_Vertex", "greaterThan", "greaterThanEqual", "inversesqrt", "length", "lessThan", "lessThanEqual", "log", "log2", "matrixCompMult", "max", "min", "mix", "mod", "normalize", "not", "notEqual", "pow", "radians", "reflect", "refract", "sign", "sin", "smoothstep", "sqrt", "step", "tan", "texture2D", "texture2DLod", "texture2DProj", "texture2DProjLod", "textureCube", "textureCubeLod", "texture2DLodEXT", "texture2DProjLodEXT", "textureCubeLodEXT", "texture2DGradEXT", "texture2DProjGradEXT", "textureCubeGradEXT", "textureSize", "texelFetch"];
    }();
    void 0 !== t88 && (e78.exports = t88);
  }();
}(i71);
var n96 = t11(i71.exports);

// node_modules/@arcgis/core/views/webgl/ShaderTranspiler.js
var i72 = 999;
var s80 = 9999;
var c67 = 0;
var u53 = 1;
var p63 = 2;
var d55 = 3;
var f53 = 4;
var l70 = 5;
var h51 = 6;
var y37 = 7;
var w30 = 8;
var g40 = 9;
var m47 = 10;
var k25 = 11;
var b27 = ["block-comment", "line-comment", "preprocessor", "operator", "integer", "float", "ident", "builtin", "keyword", "whitespace", "eof", "integer"];
function E40() {
  var t88, e78, a85, E43 = 0, _42 = 0, v44 = i72, j29 = [], A39 = [], x36 = 1, D21 = 0, R25 = 0, T31 = false, G22 = false, S27 = "";
  return function(t89) {
    return A39 = [], null !== t89 ? F30(t89.replace ? t89.replace(/\r\n/g, "\n") : t89) : L28();
  };
  function X15(t89) {
    t89.length && A39.push({ type: b27[v44], data: t89, position: R25, line: x36, column: D21 });
  }
  function F30(e79) {
    var r79;
    for (E43 = 0, a85 = (S27 += e79).length; t88 = S27[E43], E43 < a85; ) {
      switch (r79 = E43, v44) {
        case c67:
          E43 = V17();
          break;
        case u53:
          E43 = P29();
          break;
        case p63:
          E43 = M26();
          break;
        case d55:
          E43 = O29();
          break;
        case f53:
          E43 = $12();
          break;
        case k25:
          E43 = W18();
          break;
        case l70:
          E43 = z21();
          break;
        case s80:
          E43 = I29();
          break;
        case g40:
          E43 = H26();
          break;
        case i72:
          E43 = C30();
      }
      if (r79 !== E43)
        if ("\n" === S27[r79])
          D21 = 0, ++x36;
        else
          ++D21;
    }
    return _42 += E43, S27 = S27.slice(E43), A39;
  }
  function L28(t89) {
    return j29.length && X15(j29.join("")), v44 = m47, X15("(eof)"), A39;
  }
  function C30() {
    return j29 = j29.length ? [] : j29, "/" === e78 && "*" === t88 ? (R25 = _42 + E43 - 1, v44 = c67, e78 = t88, E43 + 1) : "/" === e78 && "/" === t88 ? (R25 = _42 + E43 - 1, v44 = u53, e78 = t88, E43 + 1) : "#" === t88 ? (v44 = p63, R25 = _42 + E43, E43) : /\s/.test(t88) ? (v44 = g40, R25 = _42 + E43, E43) : (T31 = /\d/.test(t88), G22 = /[^\w_]/.test(t88), R25 = _42 + E43, v44 = T31 ? f53 : G22 ? d55 : s80, E43);
  }
  function H26() {
    return /[^\s]/g.test(t88) ? (X15(j29.join("")), v44 = i72, E43) : (j29.push(t88), e78 = t88, E43 + 1);
  }
  function M26() {
    return "\r" !== t88 && "\n" !== t88 || "\\" === e78 ? (j29.push(t88), e78 = t88, E43 + 1) : (X15(j29.join("")), v44 = i72, E43);
  }
  function P29() {
    return M26();
  }
  function V17() {
    return "/" === t88 && "*" === e78 ? (j29.push(t88), X15(j29.join("")), v44 = i72, E43 + 1) : (j29.push(t88), e78 = t88, E43 + 1);
  }
  function O29() {
    if ("." === e78 && /\d/.test(t88))
      return v44 = l70, E43;
    if ("/" === e78 && "*" === t88)
      return v44 = c67, E43;
    if ("/" === e78 && "/" === t88)
      return v44 = u53, E43;
    if ("." === t88 && j29.length) {
      for (; N21(j29); )
        ;
      return v44 = l70, E43;
    }
    if (";" === t88 || ")" === t88 || "(" === t88) {
      if (j29.length)
        for (; N21(j29); )
          ;
      return X15(t88), v44 = i72, E43 + 1;
    }
    var a86 = 2 === j29.length && "=" !== t88;
    if (/[\w_\d\s]/.test(t88) || a86) {
      for (; N21(j29); )
        ;
      return v44 = i72, E43;
    }
    return j29.push(t88), e78 = t88, E43 + 1;
  }
  function N21(t89) {
    for (var e79, a86, n103 = 0; ; ) {
      if (e79 = g39.indexOf(t89.slice(0, t89.length + n103).join("")), a86 = g39[e79], -1 === e79) {
        if (n103-- + t89.length > 0)
          continue;
        a86 = t89.slice(0, 1).join("");
      }
      return X15(a86), R25 += a86.length, (j29 = j29.slice(a86.length)).length;
    }
  }
  function W18() {
    return /[^a-fA-F0-9]/.test(t88) ? (X15(j29.join("")), v44 = i72, E43) : (j29.push(t88), e78 = t88, E43 + 1);
  }
  function $12() {
    return "." === t88 || /[eE]/.test(t88) ? (j29.push(t88), v44 = l70, e78 = t88, E43 + 1) : "x" === t88 && 1 === j29.length && "0" === j29[0] ? (v44 = k25, j29.push(t88), e78 = t88, E43 + 1) : /[^\d]/.test(t88) ? (X15(j29.join("")), v44 = i72, E43) : (j29.push(t88), e78 = t88, E43 + 1);
  }
  function z21() {
    return "f" === t88 && (j29.push(t88), e78 = t88, E43 += 1), /[eE]/.test(t88) || "-" === t88 && /[eE]/.test(e78) ? (j29.push(t88), e78 = t88, E43 + 1) : /[^\d]/.test(t88) ? (X15(j29.join("")), v44 = i72, E43) : (j29.push(t88), e78 = t88, E43 + 1);
  }
  function I29() {
    if (/[^\d\w_]/.test(t88)) {
      var a86 = j29.join("");
      return v44 = o70.indexOf(a86) > -1 ? w30 : n96.indexOf(a86) > -1 ? y37 : h51, X15(j29.join("")), v44 = i72, E43;
    }
    return j29.push(t88), e78 = t88, E43 + 1;
  }
}
function _35(t88) {
  var e78 = E40(), a85 = [];
  return a85 = (a85 = a85.concat(e78(t88))).concat(e78(null));
}
function v40(t88) {
  return _35(t88);
}
function j27(t88) {
  return t88.map((t89) => "eof" !== t89.type ? t89.data : "").join("");
}
var A35 = ["GL_OES_standard_derivatives", "GL_EXT_frag_depth", "GL_EXT_draw_buffers", "GL_EXT_shader_texture_lod"];
function x34(t88, e78 = "100", a85 = "300 es") {
  const r79 = /^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;
  for (const n103 of t88)
    if ("preprocessor" === n103.type) {
      const t89 = r79.exec(n103.data);
      if (t89) {
        const r80 = t89[1].replaceAll(/\s\s+/g, " ");
        if (r80 === a85)
          return r80;
        if (r80 === e78)
          return n103.data = "#version " + a85, e78;
        throw new Error("unknown glsl version: " + r80);
      }
    }
  return t88.splice(0, 0, { type: "preprocessor", data: "#version " + a85 }, { type: "whitespace", data: "\n" }), null;
}
function D19(t88, e78) {
  for (let a85 = e78 - 1; a85 >= 0; a85--) {
    const e79 = t88[a85];
    if ("whitespace" !== e79.type && "block-comment" !== e79.type) {
      if ("keyword" !== e79.type)
        break;
      if ("attribute" === e79.data || "in" === e79.data)
        return true;
    }
  }
  return false;
}
function R22(t88, e78, a85, r79) {
  r79 = r79 || a85;
  for (const n103 of t88)
    if ("ident" === n103.type && n103.data === a85) {
      r79 in e78 ? e78[r79]++ : e78[r79] = 0;
      return R22(t88, e78, r79 + "_" + e78[r79], r79);
    }
  return a85;
}
function T30(t88, e78, a85 = "afterVersion") {
  function r79(t89, e79) {
    for (let a86 = e79; a86 < t89.length; a86++) {
      const e80 = t89[a86];
      if ("operator" === e80.type && ";" === e80.data)
        return a86;
    }
    return null;
  }
  function n103(t89) {
    let e79 = -1, n104 = 0, o78 = -1;
    for (let i79 = 0; i79 < t89.length; i79++) {
      const s85 = t89[i79];
      if ("preprocessor" === s85.type && (/\#(if|ifdef|ifndef)\s+.+/.test(s85.data) ? ++n104 : /\#endif\s*.*/.test(s85.data) && --n104), "afterVersion" !== a85 && "afterPrecision" !== a85 || "preprocessor" === s85.type && /^#version/.test(s85.data) && (o78 = Math.max(o78, i79)), "afterPrecision" === a85 && "keyword" === s85.type && "precision" === s85.data) {
        const e80 = r79(t89, i79);
        if (null === e80)
          throw new Error("precision statement not followed by any semicolons!");
        o78 = Math.max(o78, e80);
      }
      e79 < o78 && 0 === n104 && (e79 = i79);
    }
    return e79 + 1;
  }
  const o77 = { data: "\n", type: "whitespace" }, i78 = (e79) => e79 < t88.length && /[^\r\n]$/.test(t88[e79].data);
  let s84 = n103(t88);
  i78(s84 - 1) && t88.splice(s84++, 0, o77);
  for (const c75 of e78)
    t88.splice(s84++, 0, c75);
  i78(s84 - 1) && i78(s84) && t88.splice(s84, 0, o77);
}
function G21(t88, e78, a85, r79 = "lowp") {
  T30(t88, [{ type: "keyword", data: "out" }, { type: "whitespace", data: " " }, { type: "keyword", data: r79 }, { type: "whitespace", data: " " }, { type: "keyword", data: a85 }, { type: "whitespace", data: " " }, { type: "ident", data: e78 }, { type: "operator", data: ";" }], "afterPrecision");
}
function S26(t88, e78, a85, r79, n103 = "lowp") {
  T30(t88, [{ type: "keyword", data: "layout" }, { type: "operator", data: "(" }, { type: "keyword", data: "location" }, { type: "whitespace", data: " " }, { type: "operator", data: "=" }, { type: "whitespace", data: " " }, { type: "integer", data: r79.toString() }, { type: "operator", data: ")" }, { type: "whitespace", data: " " }, { type: "keyword", data: "out" }, { type: "whitespace", data: " " }, { type: "keyword", data: n103 }, { type: "whitespace", data: " " }, { type: "keyword", data: a85 }, { type: "whitespace", data: " " }, { type: "ident", data: e78 }, { type: "operator", data: ";" }], "afterPrecision");
}
function X14(t88, e78) {
  let a85, r79, n103 = -1;
  for (let o77 = e78; o77 < t88.length; o77++) {
    const e79 = t88[o77];
    if ("operator" === e79.type && ("[" === e79.data && (a85 = o77), "]" === e79.data)) {
      r79 = o77;
      break;
    }
    "integer" === e79.type && (n103 = parseInt(e79.data, 10));
  }
  return a85 && r79 && t88.splice(a85, r79 - a85 + 1), n103;
}
function F29(a85, r79) {
  if (a85.startsWith("#version 300"))
    return a85;
  const n103 = C28(a85);
  if (null != n103)
    return n103;
  const o77 = v40(a85);
  if ("300 es" === x34(o77, "100", "300 es"))
    return a85;
  let i78 = null, s84 = null;
  const c75 = {}, u58 = {};
  for (let p70 = 0; p70 < o77.length; ++p70) {
    const a86 = o77[p70];
    switch (a86.type) {
      case "keyword":
        r79 === H5.VERTEX_SHADER && "attribute" === a86.data ? a86.data = "in" : "varying" === a86.data && (a86.data = r79 === H5.VERTEX_SHADER ? "out" : "in");
        break;
      case "builtin":
        if (/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(a86.data.trim()) && (a86.data = a86.data.replaceAll(/(2D|Cube|EXT)/g, "")), r79 === H5.FRAGMENT_SHADER && "gl_FragColor" === a86.data && (i78 || (i78 = R22(o77, c75, "fragColor"), G21(o77, i78, "vec4")), a86.data = i78), r79 === H5.FRAGMENT_SHADER && "gl_FragData" === a86.data) {
          const t88 = X14(o77, p70 + 1), e78 = R22(o77, c75, "fragData");
          S26(o77, e78, "vec4", t88, "mediump"), a86.data = e78;
        } else
          r79 === H5.FRAGMENT_SHADER && "gl_FragDepthEXT" === a86.data && (s84 || (s84 = R22(o77, c75, "gl_FragDepth")), a86.data = s84);
        break;
      case "ident":
        if (e71.includes(a86.data)) {
          if (r79 === H5.VERTEX_SHADER && D19(o77, p70))
            throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");
          a86.data in u58 || (u58[a86.data] = R22(o77, c75, a86.data)), a86.data = u58[a86.data];
        }
    }
  }
  for (let t88 = o77.length - 1; t88 >= 0; --t88) {
    const e78 = o77[t88];
    if ("preprocessor" === e78.type) {
      const a86 = e78.data.match(/\#extension\s+(.*)\:/);
      if (a86 && a86[1] && A35.includes(a86[1].trim())) {
        const e79 = o77[t88 + 1];
        o77.splice(t88, e79 && "whitespace" === e79.type ? 2 : 1);
      }
      const r80 = e78.data.match(/\#ifdef\s+(.*)/);
      r80 && r80[1] && A35.includes(r80[1].trim()) && (e78.data = "#if 1");
      const n104 = e78.data.match(/\#ifndef\s+(.*)/);
      n104 && n104[1] && A35.includes(n104[1].trim()) && (e78.data = "#if 0");
    }
  }
  return H25(a85, j27(o77));
}
var L26 = /* @__PURE__ */ new Map();
function C28(t88) {
  return e72.enableCache ? L26.get(t88) : null;
}
function H25(t88, e78) {
  return e72.enableCache && L26.set(t88, e78), e78;
}

// node_modules/@arcgis/core/views/webgl/Program.js
var s81 = 4294967295;
var m48 = class {
  constructor(t88, m55, h58, f59, c75 = /* @__PURE__ */ new Map()) {
    this._context = t88, this._locations = f59, this._uniformBlockBindings = c75, this._refCount = 1, this._compiled = false, this._nameToUniformLocation = {}, this._nameToUniform1 = {}, this._nameToUniform1v = /* @__PURE__ */ new Map(), this._nameToUniform2 = /* @__PURE__ */ new Map(), this._nameToUniform3 = /* @__PURE__ */ new Map(), this._nameToUniform4 = /* @__PURE__ */ new Map(), this._nameToUniformMatrix3 = /* @__PURE__ */ new Map(), this._nameToUniformMatrix4 = /* @__PURE__ */ new Map(), t88 || console.error("RenderingContext isn't initialized!"), 0 === m55.length && console.error("Shaders source should not be empty!"), this._context.type === n27.WEBGL2 && (m55 = F29(m55, H5.VERTEX_SHADER), h58 = F29(h58, H5.FRAGMENT_SHADER)), this._vShader = a79(this._context, H5.VERTEX_SHADER, m55), this._fShader = a79(this._context, H5.FRAGMENT_SHADER, h58), this._vShader && this._fShader || console.error("Error loading shaders!"), this._context.instanceCounter.increment(V3.Shader, this), c13() && (this.vertexShader = m55, this.fragmentShader = h58);
    const _42 = this._context.gl, l75 = _42.createProgram();
    if (_42.attachShader(l75, this._vShader), _42.attachShader(l75, this._fShader), this._locations.forEach((t89, o77) => _42.bindAttribLocation(l75, t89, o77)), _42.linkProgram(l75), c13() && !_42.getProgramParameter(l75, _42.LINK_STATUS) && console.error(`Could not link shader
validated: ${_42.getProgramParameter(l75, _42.VALIDATE_STATUS)}, gl error ${_42.getError()}, vertex: ${_42.getShaderParameter(this._vShader, _42.COMPILE_STATUS)}, fragment: ${_42.getShaderParameter(this._fShader, _42.COMPILE_STATUS)}, info log: ${_42.getProgramInfoLog(l75)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`), this._context.type === n27.WEBGL2) {
      const t89 = _42;
      for (const [o77, i78] of this._uniformBlockBindings) {
        const e78 = t89.getUniformBlockIndex(l75, o77);
        e78 < s81 && t89.uniformBlockBinding(l75, e78, i78);
      }
    }
    this._glName = l75, this._context.instanceCounter.increment(V3.Program, this);
  }
  get glName() {
    return this._glName;
  }
  get hasGLName() {
    return null != this._glName;
  }
  get compiled() {
    if (this._compiled)
      return true;
    const t88 = this._context.gl.getExtension("KHR_parallel_shader_compile");
    return null == t88 || null == this.glName ? (this._compiled = true, true) : (this._compiled = !!this._context.gl.getProgramParameter(this.glName, t88.COMPLETION_STATUS_KHR), this._compiled);
  }
  dispose() {
    if (--this._refCount > 0)
      return;
    const t88 = this._context.gl;
    this._vShader && (t88.deleteShader(this._vShader), this._vShader = null, this._context.instanceCounter.decrement(V3.Shader, this)), this._fShader && (t88.deleteShader(this._fShader), this._fShader = null), this._glName && (t88.deleteProgram(this._glName), this._glName = null, this._context.instanceCounter.decrement(V3.Program, this));
  }
  ref() {
    ++this._refCount;
  }
  _getUniformLocation(t88) {
    return void 0 === this._nameToUniformLocation[t88] && null != this.glName && (++_36.numUniforms, this._nameToUniformLocation[t88] = this._context.gl.getUniformLocation(this.glName, t88)), this._nameToUniformLocation[t88];
  }
  hasUniform(t88) {
    return null !== this._getUniformLocation(t88);
  }
  setUniform1i(t88, o77) {
    const i78 = this._nameToUniform1[t88];
    void 0 !== i78 && o77 === i78 || (this._context.gl.uniform1i(this._getUniformLocation(t88), o77), this._nameToUniform1[t88] = o77);
  }
  setUniform1iv(t88, o77) {
    c68(this._nameToUniform1v, t88, o77) && this._context.gl.uniform1iv(this._getUniformLocation(t88), o77);
  }
  setUniform2iv(t88, o77) {
    c68(this._nameToUniform2, t88, o77) && this._context.gl.uniform2iv(this._getUniformLocation(t88), o77);
  }
  setUniform3iv(t88, o77) {
    c68(this._nameToUniform3, t88, o77) && this._context.gl.uniform3iv(this._getUniformLocation(t88), o77);
  }
  setUniform4iv(t88, o77) {
    c68(this._nameToUniform4, t88, o77) && this._context.gl.uniform4iv(this._getUniformLocation(t88), o77);
  }
  setUniform1f(t88, o77) {
    const i78 = this._nameToUniform1[t88];
    void 0 !== i78 && o77 === i78 || (this._context.gl.uniform1f(this._getUniformLocation(t88), o77), this._nameToUniform1[t88] = o77);
  }
  setUniform1fv(t88, o77) {
    c68(this._nameToUniform1v, t88, o77) && this._context.gl.uniform1fv(this._getUniformLocation(t88), o77);
  }
  setUniform2f(t88, o77, i78) {
    const e78 = this._nameToUniform2.get(t88);
    void 0 === e78 ? (this._context.gl.uniform2f(this._getUniformLocation(t88), o77, i78), this._nameToUniform2.set(t88, [o77, i78])) : o77 === e78[0] && i78 === e78[1] || (this._context.gl.uniform2f(this._getUniformLocation(t88), o77, i78), e78[0] = o77, e78[1] = i78);
  }
  setUniform2fv(t88, o77) {
    c68(this._nameToUniform2, t88, o77) && this._context.gl.uniform2fv(this._getUniformLocation(t88), o77);
  }
  setUniform3f(t88, o77, i78, e78) {
    const n103 = this._nameToUniform3.get(t88);
    void 0 === n103 ? (this._context.gl.uniform3f(this._getUniformLocation(t88), o77, i78, e78), this._nameToUniform3.set(t88, [o77, i78, e78])) : o77 === n103[0] && i78 === n103[1] && e78 === n103[2] || (this._context.gl.uniform3f(this._getUniformLocation(t88), o77, i78, e78), n103[0] = o77, n103[1] = i78, n103[2] = e78);
  }
  setUniform3fv(t88, o77) {
    c68(this._nameToUniform3, t88, o77) && this._context.gl.uniform3fv(this._getUniformLocation(t88), o77);
  }
  setUniform4f(t88, o77, i78, e78, n103) {
    const r79 = this._nameToUniform4.get(t88);
    void 0 === r79 ? (this._context.gl.uniform4f(this._getUniformLocation(t88), o77, i78, e78, n103), this._nameToUniform4.set(t88, [o77, i78, e78, n103])) : void 0 !== r79 && o77 === r79[0] && i78 === r79[1] && e78 === r79[2] && n103 === r79[3] || (this._context.gl.uniform4f(this._getUniformLocation(t88), o77, i78, e78, n103), r79[0] = o77, r79[1] = i78, r79[2] = e78, r79[3] = n103);
  }
  setUniform4fv(t88, o77) {
    c68(this._nameToUniform4, t88, o77) && this._context.gl.uniform4fv(this._getUniformLocation(t88), o77);
  }
  setUniformMatrix3fv(t88, o77, i78 = false) {
    c68(this._nameToUniformMatrix3, t88, o77) && this._context.gl.uniformMatrix3fv(this._getUniformLocation(t88), i78, o77);
  }
  setUniformMatrix4fv(t88, o77, i78 = false) {
    c68(this._nameToUniformMatrix4, t88, o77) && this._context.gl.uniformMatrix4fv(this._getUniformLocation(t88), i78, o77);
  }
  stop() {
  }
};
function a79(t88, i78, n103) {
  const r79 = t88.gl, s84 = r79.createShader(i78);
  return r79.shaderSource(s84, n103), r79.compileShader(s84), c13() && !r79.getShaderParameter(s84, r79.COMPILE_STATUS) && (console.error("Compile error in ".concat(i78 === H5.VERTEX_SHADER ? "vertex" : "fragment", " shader")), console.error(r79.getShaderInfoLog(s84)), console.error(h52(n103))), _36.enabled && (_36.compiledLOC += n103.match(/\n/g).length + 1), s84;
}
function h52(t88) {
  let o77 = 2;
  return t88.replaceAll("\n", () => "\n" + f54(o77++) + ":");
}
function f54(t88) {
  return t88 >= 1e3 ? t88.toString() : ("  " + t88).slice(-3);
}
function c68(o77, i78, e78) {
  const n103 = o77.get(i78);
  return n103 ? h(n103, e78) : (o77.set(i78, Array.from(e78)), true);
}
var _36 = { compiledLOC: 0, numUniforms: 0, enabled: false };

// node_modules/@arcgis/core/views/webgl/ProgramCache.js
var e73 = class {
  constructor(r79) {
    this._rctx = r79, this._store = new t21();
  }
  dispose() {
    this._store.forEach((t88) => t88.forEach((t89) => t89.dispose())), this._store.clear();
  }
  acquire(t88, e78, s84, o77) {
    const c75 = this._store.get(t88, e78);
    if (null != c75)
      return c75.ref(), c75;
    const h58 = new m48(this._rctx, t88, e78, s84, o77);
    return h58.ref(), this._store.set(t88, e78, h58), h58;
  }
  get test() {
    let t88 = 0;
    return this._store.forEach((r79) => r79.forEach((r80) => t88 += r80.hasGLName ? 2 : 1)), { cachedWebGLObjects: t88 };
  }
};

// node_modules/@arcgis/core/views/webgl/WebGLDriverTestModule.js
var t82 = class {
  constructor() {
    this._result = false;
  }
  dispose() {
    this._program = t(this._program);
  }
  get result() {
    return null != this._program && (this._result = this._test(this._program), this.dispose()), this._result;
  }
};

// node_modules/@arcgis/core/views/webgl/testAppleAmdDrawArrays.js
var h53 = class extends t82 {
  constructor(r79) {
    super(), this._rctx = r79, this._helperProgram = null, this._rctx.type === n27.WEBGL2 && has("mac") && has("chrome") && (this._program = this._prepareProgram(), this._helperProgram = this._prepareHelperProgram());
  }
  dispose() {
    var _a;
    super.dispose(), (_a = this._helperProgram) == null ? void 0 : _a.dispose(), this._helperProgram = null;
  }
  _test(r79) {
    const e78 = this._rctx;
    e78.resetState();
    const o77 = new e23(1);
    o77.wrapMode = D2.CLAMP_TO_EDGE, o77.samplingMode = L.NEAREST;
    const d63 = new x11(e78, o77), h58 = c17.createIndex(this._rctx, F6.STATIC_DRAW, new Uint8Array([0]));
    e78.bindFramebuffer(d63), e78.setViewport(0, 0, 1, 1), e78.useProgram(this._helperProgram), e78.bindBuffer(h58, A5.ELEMENT_ARRAY_BUFFER), e78.drawElements(E5.POINTS, 1, C6.UNSIGNED_BYTE, 0), e78.useProgram(r79), e78.bindVAO(null), e78.drawArrays(E5.TRIANGLES, 0, 258);
    const _42 = new Uint8Array(4);
    return d63.readPixels(0, 0, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, _42), d63.dispose(), h58.dispose(), 255 === _42[0];
  }
  _prepareProgram() {
    const e78 = 85, t88 = `#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${o20.float(e78)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `, o77 = `#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${o20.float(e78)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;
    return this._rctx.programCache.acquire(t88, o77, /* @__PURE__ */ new Map([]));
  }
  _prepareHelperProgram() {
    const r79 = n95.getShaderSources();
    return this._rctx.programCache.acquire(r79.vertex, r79.fragment, /* @__PURE__ */ new Map([]));
  }
};

// node_modules/@arcgis/core/views/webgl/testDoublePrecisionArithmetic.js
var d56 = class extends t82 {
  constructor(e78) {
    super(), this._rctx = e78, this._program = A36(this._rctx, false), this._obfuscated = A36(this._rctx, true);
  }
  dispose() {
    super.dispose(), this._obfuscated = t(this._obfuscated);
  }
  _test(e78) {
    if (has("force-double-precision-obfuscation"))
      return true;
    if (null == this._obfuscated)
      return false;
    const n103 = this._runProgram(e78), o77 = this._runProgram(this._obfuscated);
    return 0 !== n103 && (0 === o77 || n103 / o77 > 5);
  }
  _runProgram(n103) {
    const _42 = this._rctx;
    _42.resetState();
    const d63 = new e23(1);
    d63.wrapMode = D2.CLAMP_TO_EDGE, d63.samplingMode = L.NEAREST;
    const A39 = new x11(_42, d63), b31 = c17.createVertex(_42, F6.STATIC_DRAW, new Uint16Array([0, 0, 1, 0, 0, 1, 1, 1])), g49 = new u8(_42, /* @__PURE__ */ new Map([["position", 0]]), { geometry: [new t13("position", 2, C6.UNSIGNED_SHORT, 0, 4)] }, { geometry: b31 }), B21 = r5(5633261287538229e-9, 2626832878767164e-9, 1.4349880495278358e6), F30 = r5(563327146742708e-8, 2.6268736381334523e6, 1434963231608387e-9), w33 = new Float32Array(6);
    t23(B21, w33, 3);
    const E43 = new Float32Array(6);
    t23(F30, E43, 3), _42.useProgram(n103), n103.setUniform3f("u_highA", w33[0], w33[2], w33[4]), n103.setUniform3f("u_lowA", w33[1], w33[3], w33[5]), n103.setUniform3f("u_highB", E43[0], E43[2], E43[4]), n103.setUniform3f("u_lowB", E43[1], E43[3], E43[5]), _42.bindFramebuffer(A39), _42.setViewport(0, 0, 1, 1), _42.bindVAO(g49), _42.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
    const O29 = new Uint8Array(4);
    A39.readPixels(0, 0, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, O29), g49.dispose(), A39.dispose();
    const I29 = (B21[2] - F30[2]) / 25, U24 = r20(O29);
    return Math.abs(I29 - U24);
  }
};
function A36(e78, n103) {
  const o77 = `

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${n103 ? "#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION" : ""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `, t88 = "\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ";
  return e78.programCache.acquire(o77, t88, /* @__PURE__ */ new Map([["position", 0]]));
}

// node_modules/@arcgis/core/views/webgl/testFloatBufferBlend.js
var g41 = class extends t82 {
  constructor(e78) {
    var _a, _b, _c, _d, _e4;
    if (super(), this._rctx = e78, !e78.gl)
      return;
    if (e78.type === n27.WEBGL1)
      return void (this._result = !(!((_a = e78.capabilities.textureFloat) == null ? void 0 : _a.textureFloat) || !((_b = e78.capabilities.colorBufferFloat) == null ? void 0 : _b.textureFloat)));
    if (!(((_c = e78.capabilities.textureFloat) == null ? void 0 : _c.textureFloat) && ((_d = e78.capabilities.colorBufferFloat) == null ? void 0 : _d.textureFloat) && ((_e4 = e78.capabilities.colorBufferFloat) == null ? void 0 : _e4.floatBlend)))
      return;
    const t88 = "\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ", o77 = "\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";
    this._program = e78.programCache.acquire(t88, o77, /* @__PURE__ */ new Map([["a_pos", 0]]));
  }
  _test(r79) {
    const d63 = this._rctx, g49 = new e23(1);
    g49.wrapMode = D2.CLAMP_TO_EDGE, g49.dataType = U4.FLOAT, g49.internalFormat = P5.RGBA32F, g49.samplingMode = L.NEAREST;
    const _42 = new x11(d63, g49), x36 = c17.createVertex(d63, F6.STATIC_DRAW, new Uint16Array([0, 0, 1, 0, 0, 1, 1, 1])), F30 = new u8(d63, /* @__PURE__ */ new Map([["a_pos", 0]]), { geometry: [new t13("a_pos", 2, C6.UNSIGNED_SHORT, 0, 4)] }, { geometry: x36 });
    d63.useProgram(r79);
    const w33 = d63.getBoundFramebufferObject(), { x: j29, y: T31, width: A39, height: h58 } = d63.getViewport();
    d63.bindFramebuffer(_42), d63.setViewport(0, 0, 1, 1), d63.bindVAO(F30), d63.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
    const y41 = W4({ blending: s28 });
    d63.setPipelineState(y41), d63.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
    const E43 = d63.gl.getError();
    return d63.setViewport(j29, T31, A39, h58), d63.bindFramebuffer(w33), F30.dispose(), _42.dispose(), 1282 !== E43 || (console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."), false);
  }
};

// node_modules/@arcgis/core/views/webgl/testSamplerPrecision.js
var g42 = class extends t82 {
  constructor(e78) {
    super(), this._rctx = e78;
    const r79 = "\n      precision highp float;\n      attribute vec2 a_pos;\n      uniform highp sampler2D u_texture;\n      varying vec4 v_color;\n\n      float getBit(in float bitset, in int bitIndex) {\n        float offset = pow(2.0, float(bitIndex));\n        return mod(floor(bitset / offset), 2.0);\n      }\n\n      void main() {\n        vec4 value = texture2D(u_texture, vec2(0.0));\n        float bit = getBit(value.x * 255.0, 1);\n\n        v_color = bit * vec4(1.0);\n        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n      }\n      ", t88 = "\n      precision highp float;\n      varying vec4 v_color;\n\n      void main() {\n        gl_FragColor = v_color;\n      }\n      ";
    this._program = e78.programCache.acquire(r79, t88, /* @__PURE__ */ new Map([["a_pos", 0]]));
  }
  _test(d63) {
    const g49 = this._rctx, b31 = new e23(1);
    b31.wrapMode = D2.CLAMP_TO_EDGE, b31.samplingMode = L.NEAREST;
    const w33 = new x11(g49, b31), v44 = new Uint8Array(4), _42 = c17.createVertex(g49, F6.STATIC_DRAW, new Uint16Array([0, 0, 1, 0, 0, 1, 1, 1])), h58 = new u8(g49, /* @__PURE__ */ new Map([["a_position", 0]]), { geometry: [new t13("a_position", 2, C6.SHORT, 0, 4)] }, { geometry: _42 });
    g49.useProgram(d63);
    const x36 = new T8(g49, b31, new Uint8Array([2, 255, 0, 0]));
    d63.setUniform1i("u_texture", 0), g49.bindTexture(x36, 0);
    const y41 = g49.getBoundFramebufferObject();
    g49.bindFramebuffer(w33), g49.useProgram(d63);
    const { x: A39, y: j29, width: T31, height: D21 } = g49.getViewport();
    g49.setViewport(0, 0, 1, 1), g49.bindVAO(h58), g49.drawArrays(E5.TRIANGLE_STRIP, 0, 4), g49.setViewport(A39, j29, T31, D21), w33.readPixels(0, 0, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, v44), h58.dispose(), w33.dispose();
    const E43 = 255 !== v44[0] || 255 !== v44[1] || 255 !== v44[2] || 255 !== v44[3];
    return E43 && s3.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${v44[0]}.${v44[1]}.${v44[2]}.${v44[3]}]`), g49.bindFramebuffer(y41), E43;
  }
};

// node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js
var r73 = { geometry: [new t13("a_pos", 2, C6.BYTE, 0, 2)] };
var t83 = { geometry: [new t13("a_pos", 2, C6.BYTE, 0, 4), new t13("a_tex", 2, C6.BYTE, 2, 4)] };
var m49 = { geometry: [new t13("a_pos", 2, C6.UNSIGNED_SHORT, 0, 4)] };

// node_modules/@arcgis/core/views/webgl/testSVGPremultipliedAlpha.js
var f55 = class extends t82 {
  constructor(e78) {
    super(), this._rctx = e78;
    const r79 = "\n    precision highp float;\n\n    attribute vec2 a_pos;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = a_pos;\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ", t88 = "\n    precision highp float;\n\n    varying vec2 v_uv;\n\n    uniform sampler2D u_texture;\n\n    void main() {\n      gl_FragColor = texture2D(u_texture, v_uv);\n    }\n    ";
    this._program = e78.programCache.acquire(r79, t88, /* @__PURE__ */ new Map([["a_pos", 0]]));
  }
  dispose() {
    super.dispose();
  }
  _test(g49) {
    const f59 = this._rctx;
    if (!f59.gl)
      return g49.dispose(), true;
    const l75 = new e23(1);
    l75.wrapMode = D2.CLAMP_TO_EDGE, l75.samplingMode = L.NEAREST;
    const w33 = new x11(f59, l75), v44 = c17.createVertex(f59, F6.STATIC_DRAW, new Uint16Array([0, 0, 1, 0, 0, 1, 1, 1])), x36 = new u8(f59, /* @__PURE__ */ new Map([["a_pos", 0]]), m49, { geometry: v44 }), h58 = new e23();
    h58.samplingMode = L.LINEAR, h58.wrapMode = D2.CLAMP_TO_EDGE;
    const b31 = new T8(f59, h58, _37);
    f59.useProgram(g49), f59.bindTexture(b31, 0), g49.setUniform1i("u_texture", 0);
    const A39 = f59.getBoundFramebufferObject(), { x: E43, y: T31, width: j29, height: C30 } = f59.getViewport();
    f59.bindFramebuffer(w33), f59.setViewport(0, 0, 1, 1), f59.setClearColor(0, 0, 0, 0), f59.setBlendingEnabled(false), f59.clearSafe(_4.COLOR_BUFFER_BIT), f59.bindVAO(x36), f59.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
    const y41 = new Uint8Array(4);
    return w33.readPixels(0, 0, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, y41), x36.dispose(), w33.dispose(), b31.dispose(), f59.setViewport(E43, T31, j29, C30), f59.bindFramebuffer(A39), 255 !== y41[0];
  }
};
var _37 = new Image();
_37.src = "data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A", _37.width = 5, _37.height = 5, _37.decode();

// node_modules/@arcgis/core/views/webgl/WebGLDriverTest.js
var o71 = class {
  constructor(o77) {
    this.rctx = o77, this.floatBufferBlend = new g41(o77), this.svgPremultipliesAlpha = new f55(o77), this.doublePrecisionRequiresObfuscation = new d56(o77), this.ignoresSamplerPrecision = new g42(o77), this.drawArraysRequiresIndicesTypeReset = new h53(o77);
  }
  dispose() {
    this.ignoresSamplerPrecision.dispose(), this.doublePrecisionRequiresObfuscation.dispose(), this.svgPremultipliesAlpha.dispose(), this.floatBufferBlend.dispose(), this.drawArraysRequiresIndicesTypeReset.dispose();
  }
};

// node_modules/@arcgis/core/views/webgl/capabilities/DrawBuffers.js
function A37(A39, _42) {
  if (_42.disjointTimerQuery)
    return null;
  if (n94(A39))
    return { drawBuffers: A39.drawBuffers.bind(A39), MAX_DRAW_BUFFERS: A39.MAX_DRAW_BUFFERS, MAX_COLOR_ATTACHMENTS: A39.MAX_COLOR_ATTACHMENTS };
  if (_42.drawBuffers)
    return null;
  const e78 = A39.getExtension("WEBGL_draw_buffers");
  return e78 ? { drawBuffers: e78.drawBuffersWEBGL.bind(e78), MAX_DRAW_BUFFERS: e78.MAX_DRAW_BUFFERS_WEBGL, MAX_COLOR_ATTACHMENTS: e78.MAX_COLOR_ATTACHMENTS_WEBGL } : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities/Instancing.js
function r74(r79) {
  if (n94(r79))
    return r79;
  const t88 = r79.getExtension("ANGLE_instanced_arrays");
  return t88 ? { drawArraysInstanced: t88.drawArraysInstancedANGLE.bind(t88), drawElementsInstanced: t88.drawElementsInstancedANGLE.bind(t88), vertexAttribDivisor: t88.vertexAttribDivisorANGLE.bind(t88) } : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities/load.js
function _38(t88, _42) {
  if (_42.compressedTextureETC)
    return null;
  const e78 = t88.getExtension("WEBGL_compressed_texture_etc");
  return e78 ? { COMPRESSED_R11_EAC: e78.COMPRESSED_R11_EAC, COMPRESSED_SIGNED_R11_EAC: e78.COMPRESSED_SIGNED_R11_EAC, COMPRESSED_RG11_EAC: e78.COMPRESSED_RG11_EAC, COMPRESSED_SIGNED_RG11_EAC: e78.COMPRESSED_SIGNED_RG11_EAC, COMPRESSED_RGB8_ETC2: e78.COMPRESSED_RGB8_ETC2, COMPRESSED_SRGB8_ETC2: e78.COMPRESSED_SRGB8_ETC2, COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: e78.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: e78.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, COMPRESSED_RGBA8_ETC2_EAC: e78.COMPRESSED_RGBA8_ETC2_EAC, COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: e78.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC } : null;
}
function e74(t88, _42) {
  if (_42.compressedTextureS3TC)
    return null;
  const e78 = t88.getExtension("WEBGL_compressed_texture_s3tc");
  return e78 ? { COMPRESSED_RGB_S3TC_DXT1: e78.COMPRESSED_RGB_S3TC_DXT1_EXT, COMPRESSED_RGBA_S3TC_DXT1: e78.COMPRESSED_RGBA_S3TC_DXT1_EXT, COMPRESSED_RGBA_S3TC_DXT3: e78.COMPRESSED_RGBA_S3TC_DXT3_EXT, COMPRESSED_RGBA_S3TC_DXT5: e78.COMPRESSED_RGBA_S3TC_DXT5_EXT } : null;
}
function E41(_42, e78) {
  if (n94(_42))
    return { MIN: _42.MIN, MAX: _42.MAX };
  if (e78.blendMinMax)
    return null;
  {
    const t88 = _42.getExtension("EXT_blend_minmax");
    return t88 ? { MIN: t88.MIN_EXT, MAX: t88.MAX_EXT } : null;
  }
}
function n97(t88, _42) {
  if (_42.textureFilterAnisotropic)
    return null;
  const e78 = t88.getExtension("EXT_texture_filter_anisotropic") || t88.getExtension("MOZ_EXT_texture_filter_anisotropic") || t88.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
  return e78 ? { MAX_TEXTURE_MAX_ANISOTROPY: e78.MAX_TEXTURE_MAX_ANISOTROPY_EXT, TEXTURE_MAX_ANISOTROPY: e78.TEXTURE_MAX_ANISOTROPY_EXT } : null;
}
function R23(_42, e78) {
  if (n94(_42))
    return { textureFloat: true, textureFloatLinear: !e78.textureFloatLinear && !!_42.getExtension("OES_texture_float_linear"), textureHalfFloat: true, textureHalfFloatLinear: true, HALF_FLOAT: _42.HALF_FLOAT, R16F: _42.R16F, RG16F: _42.RG16F, RGBA16F: _42.RGBA16F, R32F: _42.R32F, RG32F: _42.RG32F, RGBA32F: _42.RGBA32F, R11F_G11F_B10F: _42.R11F_G11F_B10F, RGB16F: _42.RGB16F };
  if (_42 instanceof WebGLRenderingContext) {
    const t88 = !e78.textureHalfFloat && _42.getExtension("OES_texture_half_float");
    return { textureFloat: !e78.textureFloat && !!_42.getExtension("OES_texture_float"), textureFloatLinear: !e78.textureFloatLinear && !!_42.getExtension("OES_texture_float_linear"), textureHalfFloat: !!t88, textureHalfFloatLinear: !e78.textureHalfFloatLinear && !!_42.getExtension("OES_texture_half_float_linear"), HALF_FLOAT: t88 ? t88.HALF_FLOAT_OES : void 0 };
  }
  return null;
}
function r75(_42, e78) {
  if (n94(_42)) {
    const t88 = !e78.colorBufferHalfFloat && _42.getExtension("EXT_color_buffer_half_float") || !e78.colorBufferFloat && _42.getExtension("EXT_color_buffer_float"), E43 = !e78.colorBufferFloat && _42.getExtension("EXT_color_buffer_float"), n103 = !e78.floatBlend && !e78.colorBufferFloat && _42.getExtension("EXT_float_blend");
    return t88 || E43 || n103 ? { textureFloat: !!E43, textureHalfFloat: !!t88, floatBlend: !!n103, R16F: _42.R16F, RG16F: _42.RG16F, RGBA16F: _42.RGBA16F, R32F: _42.R32F, RG32F: _42.RG32F, RGBA32F: _42.RGBA32F, R11F_G11F_B10F: _42.R11F_G11F_B10F, RGB16F: _42.RGB16F } : null;
  }
  if (_42 instanceof WebGLRenderingContext) {
    const t88 = !e78.colorBufferHalfFloat && _42.getExtension("EXT_color_buffer_half_float"), E43 = !e78.colorBufferFloat && _42.getExtension("WEBGL_color_buffer_float"), n103 = !e78.floatBlend && !e78.colorBufferFloat && _42.getExtension("EXT_float_blend");
    return t88 || E43 || n103 ? { textureFloat: !!E43, textureHalfFloat: !!t88, floatBlend: !!n103, RGBA16F: t88 ? t88.RGBA16F_EXT : void 0, RGB16F: t88 ? t88.RGB16F_EXT : void 0, RGBA32F: E43 ? E43.RGBA32F_EXT : void 0 } : null;
  }
  return null;
}
function o72(_42, e78, E43, n103, R25) {
  if (n103 && n94(_42))
    return true;
  if (e78[E43])
    return false;
  for (const t88 of R25)
    if (_42.getExtension(t88))
      return true;
  return false;
}
function l71(_42, e78) {
  if (!n94(_42))
    return null;
  if (e78.textureNorm16)
    return null;
  const E43 = _42.getExtension("EXT_texture_norm16");
  return E43 ? { R16: E43.R16_EXT, RG16: E43.RG16_EXT, RGB16: E43.RGB16_EXT, RGBA16: E43.RGBA16_EXT, R16_SNORM: E43.R16_SNORM_EXT, RG16_SNORM: E43.RG16_SNORM_EXT, RGB16_SNORM: E43.RGB16_SNORM_EXT, RGBA16_SNORM: E43.RGBA16_SNORM_EXT } : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities/LoseContext.js
function e75(e78, t88) {
  const n103 = t88.loseContext && e78.getExtension("WEBGL_lose_context");
  return n103 ? { loseRenderingContext: () => n103.loseContext() } : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities/VertexArrayObjects.js
function r76(r79, t88) {
  if (n94(r79))
    return { createVertexArray: r79.createVertexArray.bind(r79), deleteVertexArray: r79.deleteVertexArray.bind(r79), bindVertexArray: r79.bindVertexArray.bind(r79) };
  if (t88.vao)
    return null;
  const n103 = r79.getExtension("OES_vertex_array_object") || r79.getExtension("MOZ_OES_vertex_array_object") || r79.getExtension("WEBKIT_OES_vertex_array_object");
  return n103 ? { createVertexArray: n103.createVertexArrayOES.bind(n103), deleteVertexArray: n103.deleteVertexArrayOES.bind(n103), bindVertexArray: n103.bindVertexArrayOES.bind(n103) } : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities/Capabilities.js
var d57 = class {
  constructor(t88, e78) {
    this._gl = t88, this._instancing = null, this._vertexArrayObject = null, this._compressedTextureETC = null, this._compressedTextureS3TC = null, this._textureFilterAnisotropic = null, this._textureFloat = null, this._colorBufferFloat = null, this._minMaxBlending = null, this._loseContext = null, this._drawBuffers = null, this._textureNorm16 = null, this._depthTexture = null, this._textureFloatLinear = null, this._disabledExtensions = e78.disabledExtensions || {}, this._debugWebGLExtensions = e78.debugWebGLExtensions || {};
  }
  get drawBuffers() {
    return this._drawBuffers || (this._drawBuffers = A37(this._gl, this._disabledExtensions)), this._drawBuffers;
  }
  get instancing() {
    return this._instancing || (this._instancing = r74(this._gl)), this._instancing;
  }
  get vao() {
    return this._vertexArrayObject || (this._vertexArrayObject = r76(this._gl, this._disabledExtensions)), this._vertexArrayObject;
  }
  get compressedTextureETC() {
    return this._compressedTextureETC || (this._compressedTextureETC = _38(this._gl, this._disabledExtensions)), this._compressedTextureETC;
  }
  get compressedTextureS3TC() {
    return this._compressedTextureS3TC || (this._compressedTextureS3TC = e74(this._gl, this._disabledExtensions)), this._compressedTextureS3TC;
  }
  get textureFilterAnisotropic() {
    return this._textureFilterAnisotropic || (this._textureFilterAnisotropic = n97(this._gl, this._disabledExtensions)), this._textureFilterAnisotropic;
  }
  get disjointTimerQuery() {
    return this._disjointTimerQuery || (this._disjointTimerQuery = T29(this._gl, this._disabledExtensions)), this._disjointTimerQuery;
  }
  get textureFloat() {
    return this._textureFloat || (this._textureFloat = R23(this._gl, this._disabledExtensions)), this._textureFloat;
  }
  get colorBufferFloat() {
    return this._colorBufferFloat || (this._colorBufferFloat = r75(this._gl, this._disabledExtensions)), this._colorBufferFloat;
  }
  get blendMinMax() {
    return this._minMaxBlending || (this._minMaxBlending = E41(this._gl, this._disabledExtensions)), this._minMaxBlending;
  }
  get depthTexture() {
    return null === this._depthTexture && (this._depthTexture = o72(this._gl, this._disabledExtensions, "depthTexture", true, ["WEBGL_depth_texture", "MOZ_WEBGL_depth_texture", "WEBKIT_WEBGL_depth_texture"])), this._depthTexture;
  }
  get loseContext() {
    return this._loseContext || (this._loseContext = e75(this._gl, this._debugWebGLExtensions)), this._loseContext;
  }
  get textureNorm16() {
    return this._textureNorm16 || (this._textureNorm16 = l71(this._gl, this._disabledExtensions)), this._textureNorm16;
  }
  get textureFloatLinear() {
    return null === this._textureFloatLinear && (this._textureFloatLinear = o72(this._gl, this._disabledExtensions, "textureFloatLinear", false, ["OES_texture_float_linear"])), this._textureFloatLinear;
  }
  enable(t88) {
    return this[t88];
  }
};

// node_modules/@arcgis/core/views/webgl/RenderingContext.js
var P26 = class {
  constructor(t88, e78) {
    this.gl = t88, this.instanceCounter = new s79(), this.programCache = new e73(this), this._state = new h50(), this._numOfDrawCalls = 0, this._numOfTriangles = 0, this.type = n94(t88) ? n27.WEBGL2 : n27.WEBGL1, this._loadExtensions(), this.configure(e78);
  }
  get gl2() {
    return this.type === n27.WEBGL1 ? null : this.gl;
  }
  configure(e78) {
    this._capabilities = new d57(this.gl, e78), this._parameters = new t80(this.gl, this._capabilities, e78), T8.TEXTURE_UNIT_FOR_UPDATES = this._parameters.maxTextureImageUnits - 1;
    const s84 = this.gl.getParameter(this.gl.VIEWPORT);
    this._state = new h50(), this._state.viewport = { x: s84[0], y: s84[1], width: s84[2], height: s84[3] }, this._stateTracker = new M7({ setBlending: (t88) => {
      if (t88) {
        this.setBlendingEnabled(true), this.setBlendEquationSeparate(t88.opRgb, t88.opAlpha), this.setBlendFunctionSeparate(t88.srcRgb, t88.dstRgb, t88.srcAlpha, t88.dstAlpha);
        const e79 = t88.color;
        this.setBlendColor(e79.r, e79.g, e79.b, e79.a);
      } else
        this.setBlendingEnabled(false);
    }, setCulling: (t88) => {
      t88 ? (this.setFaceCullingEnabled(true), this.setCullFace(t88.face), this.setFrontFace(t88.mode)) : this.setFaceCullingEnabled(false);
    }, setPolygonOffset: (t88) => {
      t88 ? (this.setPolygonOffsetFillEnabled(true), this.setPolygonOffset(t88.factor, t88.units)) : this.setPolygonOffsetFillEnabled(false);
    }, setDepthTest: (t88) => {
      t88 ? (this.setDepthTestEnabled(true), this.setDepthFunction(t88.func)) : this.setDepthTestEnabled(false);
    }, setStencilTest: (t88) => {
      if (t88) {
        this.setStencilTestEnabled(true);
        const e79 = t88.function;
        this.setStencilFunction(e79.func, e79.ref, e79.mask);
        const s85 = t88.operation;
        this.setStencilOp(s85.fail, s85.zFail, s85.zPass);
      } else
        this.setStencilTestEnabled(false);
    }, setDepthWrite: (t88) => {
      t88 ? (this.setDepthWriteEnabled(true), this.setDepthRange(t88.zNear, t88.zFar)) : this.setDepthWriteEnabled(false);
    }, setColorWrite: (t88) => {
      t88 ? this.setColorMask(t88.r, t88.g, t88.b, t88.a) : this.setColorMask(false, false, false, false);
    }, setStencilWrite: (t88) => {
      t88 ? this.setStencilWriteMask(t88.mask) : this.setStencilWriteMask(0);
    } }), this.enforceState(), t(this._driverTest), this._driverTest = new o71(this);
  }
  dispose() {
    t(this._driverTest), this.programCache.dispose(), this.bindVAO(null), this.unbindBuffer(A5.ARRAY_BUFFER), this.unbindBuffer(A5.ELEMENT_ARRAY_BUFFER), this.type === n27.WEBGL2 && (this.unbindBuffer(A5.UNIFORM_BUFFER), this._state.uniformBufferBindingPoints.length = 0, this.unbindBuffer(A5.PIXEL_PACK_BUFFER), this.unbindBuffer(A5.PIXEL_UNPACK_BUFFER), this.unbindBuffer(A5.COPY_READ_BUFFER), this.unbindBuffer(A5.COPY_WRITE_BUFFER)), this._state.textureUnitMap.length = 0, a22() && console.log(this.instanceCounter.resourceInformation);
  }
  get driverTest() {
    return this._driverTest;
  }
  get contextAttributes() {
    return this.gl.getContextAttributes();
  }
  get parameters() {
    return this._parameters;
  }
  setPipelineState(t88) {
    this._stateTracker.setPipeline(t88);
  }
  setBlendingEnabled(t88) {
    this._state.blend !== t88 && (true === t88 ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND), this._state.blend = t88, this._stateTracker.invalidateBlending());
  }
  externalProgramUpdate() {
    var _a;
    (_a = this._state.program) == null ? void 0 : _a.stop(), this._state.program = null;
  }
  externalTextureUnitUpdate(t88, e78) {
    for (let s84 = 0; s84 < t88.length; ++s84)
      this._state.textureUnitMap[t88[s84]] = null;
    e78 >= 0 && (this._state.activeTexture = e78);
  }
  externalVertexArrayObjectUpdate() {
    const t88 = this.capabilities.vao;
    t88 && (t88.bindVertexArray(null), this._state.vertexArrayObject = null), this._state.vertexBuffer = null, this._state.indexBuffer = null;
  }
  externalVertexBufferUpdate() {
    this._state.vertexBuffer = null;
  }
  externalIndexBufferUpdate() {
    this._state.indexBuffer = null;
  }
  setBlendColor(t88, e78, s84, i78) {
    t88 === this._state.blendColor.r && e78 === this._state.blendColor.g && s84 === this._state.blendColor.b && i78 === this._state.blendColor.a || (this.gl.blendColor(t88, e78, s84, i78), this._state.blendColor.r = t88, this._state.blendColor.g = e78, this._state.blendColor.b = s84, this._state.blendColor.a = i78, this._stateTracker.invalidateBlending());
  }
  setBlendFunction(t88, e78) {
    t88 === this._state.blendFunction.srcRGB && e78 === this._state.blendFunction.dstRGB || (this.gl.blendFunc(t88, e78), this._state.blendFunction.srcRGB = t88, this._state.blendFunction.srcAlpha = t88, this._state.blendFunction.dstRGB = e78, this._state.blendFunction.dstAlpha = e78, this._stateTracker.invalidateBlending());
  }
  setBlendFunctionSeparate(t88, e78, s84, i78) {
    this._state.blendFunction.srcRGB === t88 && this._state.blendFunction.srcAlpha === s84 && this._state.blendFunction.dstRGB === e78 && this._state.blendFunction.dstAlpha === i78 || (this.gl.blendFuncSeparate(t88, e78, s84, i78), this._state.blendFunction.srcRGB = t88, this._state.blendFunction.srcAlpha = s84, this._state.blendFunction.dstRGB = e78, this._state.blendFunction.dstAlpha = i78, this._stateTracker.invalidateBlending());
  }
  setBlendEquation(t88) {
    this._state.blendEquation.mode !== t88 && (this.gl.blendEquation(t88), this._state.blendEquation.mode = t88, this._state.blendEquation.modeAlpha = t88, this._stateTracker.invalidateBlending());
  }
  setBlendEquationSeparate(t88, e78) {
    this._state.blendEquation.mode === t88 && this._state.blendEquation.modeAlpha === e78 || (this.gl.blendEquationSeparate(t88, e78), this._state.blendEquation.mode = t88, this._state.blendEquation.modeAlpha = e78, this._stateTracker.invalidateBlending());
  }
  setColorMask(t88, e78, s84, i78) {
    this._state.colorMask.r === t88 && this._state.colorMask.g === e78 && this._state.colorMask.b === s84 && this._state.colorMask.a === i78 || (this.gl.colorMask(t88, e78, s84, i78), this._state.colorMask.r = t88, this._state.colorMask.g = e78, this._state.colorMask.b = s84, this._state.colorMask.a = i78, this._stateTracker.invalidateColorWrite());
  }
  setClearColor(t88, e78, s84, i78) {
    this._state.clearColor.r === t88 && this._state.clearColor.g === e78 && this._state.clearColor.b === s84 && this._state.clearColor.a === i78 || (this.gl.clearColor(t88, e78, s84, i78), this._state.clearColor.r = t88, this._state.clearColor.g = e78, this._state.clearColor.b = s84, this._state.clearColor.a = i78);
  }
  setFaceCullingEnabled(t88) {
    this._state.faceCulling !== t88 && (true === t88 ? this.gl.enable(this.gl.CULL_FACE) : this.gl.disable(this.gl.CULL_FACE), this._state.faceCulling = t88, this._stateTracker.invalidateCulling());
  }
  setPolygonOffsetFillEnabled(t88) {
    this._state.polygonOffsetFill !== t88 && (true === t88 ? this.gl.enable(this.gl.POLYGON_OFFSET_FILL) : this.gl.disable(this.gl.POLYGON_OFFSET_FILL), this._state.polygonOffsetFill = t88, this._stateTracker.invalidatePolygonOffset());
  }
  setPolygonOffset(t88, e78) {
    this._state.polygonOffset[0] === t88 && this._state.polygonOffset[1] === e78 || (this._state.polygonOffset[0] = t88, this._state.polygonOffset[1] = e78, this.gl.polygonOffset(t88, e78), this._stateTracker.invalidatePolygonOffset());
  }
  setCullFace(t88) {
    this._state.cullFace !== t88 && (this.gl.cullFace(t88), this._state.cullFace = t88, this._stateTracker.invalidateCulling());
  }
  setFrontFace(t88) {
    this._state.frontFace !== t88 && (this.gl.frontFace(t88), this._state.frontFace = t88, this._stateTracker.invalidateCulling());
  }
  setScissorTestEnabled(t88) {
    this._state.scissorTest !== t88 && (true === t88 ? this.gl.enable(this.gl.SCISSOR_TEST) : this.gl.disable(this.gl.SCISSOR_TEST), this._state.scissorTest = t88);
  }
  setScissorRect(t88, e78, s84, i78) {
    this._state.scissorRect.x === t88 && this._state.scissorRect.y === e78 && this._state.scissorRect.width === s84 && this._state.scissorRect.height === i78 || (this.gl.scissor(t88, e78, s84, i78), this._state.scissorRect.x = t88, this._state.scissorRect.y = e78, this._state.scissorRect.width = s84, this._state.scissorRect.height = i78);
  }
  setDepthTestEnabled(t88) {
    this._state.depthTest !== t88 && (true === t88 ? this.gl.enable(this.gl.DEPTH_TEST) : this.gl.disable(this.gl.DEPTH_TEST), this._state.depthTest = t88, this._stateTracker.invalidateDepthTest());
  }
  setClearDepth(t88) {
    this._state.clearDepth !== t88 && (this.gl.clearDepth(t88), this._state.clearDepth = t88);
  }
  setDepthFunction(t88) {
    this._state.depthFunction !== t88 && (this.gl.depthFunc(t88), this._state.depthFunction = t88, this._stateTracker.invalidateDepthTest());
  }
  setDepthWriteEnabled(t88) {
    this._state.depthWrite !== t88 && (this.gl.depthMask(t88), this._state.depthWrite = t88, this._stateTracker.invalidateDepthWrite());
  }
  setDepthRange(t88, e78) {
    this._state.depthRange.zNear === t88 && this._state.depthRange.zFar === e78 || (this.gl.depthRange(t88, e78), this._state.depthRange.zNear = t88, this._state.depthRange.zFar = e78, this._stateTracker.invalidateDepthWrite());
  }
  setStencilTestEnabled(t88) {
    this._state.stencilTest !== t88 && (true === t88 ? this.gl.enable(this.gl.STENCIL_TEST) : this.gl.disable(this.gl.STENCIL_TEST), this._state.stencilTest = t88, this._stateTracker.invalidateStencilTest());
  }
  setClearStencil(t88) {
    t88 !== this._state.clearStencil && (this.gl.clearStencil(t88), this._state.clearStencil = t88);
  }
  setStencilFunction(t88, e78, s84) {
    this._state.stencilFunction.func === t88 && this._state.stencilFunction.ref === e78 && this._state.stencilFunction.mask === s84 || (this.gl.stencilFunc(t88, e78, s84), this._state.stencilFunction.face = N2.FRONT_AND_BACK, this._state.stencilFunction.func = t88, this._state.stencilFunction.ref = e78, this._state.stencilFunction.mask = s84, this._stateTracker.invalidateStencilTest());
  }
  setStencilFunctionSeparate(t88, e78, s84, i78) {
    this._state.stencilFunction.face === t88 && this._state.stencilFunction.func === e78 && this._state.stencilFunction.ref === s84 && this._state.stencilFunction.mask === i78 || (this.gl.stencilFuncSeparate(t88, e78, s84, i78), this._state.stencilFunction.face = t88, this._state.stencilFunction.func = e78, this._state.stencilFunction.ref = s84, this._state.stencilFunction.mask = i78, this._stateTracker.invalidateStencilTest());
  }
  setStencilWriteMask(t88) {
    this._state.stencilWriteMask !== t88 && (this.gl.stencilMask(t88), this._state.stencilWriteMask = t88, this._stateTracker.invalidateStencilWrite());
  }
  setStencilOp(t88, e78, s84) {
    this._state.stencilOperation.face === N2.FRONT_AND_BACK && this._state.stencilOperation.fail === t88 && this._state.stencilOperation.zFail === e78 && this._state.stencilOperation.zPass === s84 || (this.gl.stencilOp(t88, e78, s84), this._state.stencilOperation.face = N2.FRONT_AND_BACK, this._state.stencilOperation.fail = t88, this._state.stencilOperation.zFail = e78, this._state.stencilOperation.zPass = s84, this._stateTracker.invalidateStencilTest());
  }
  setStencilOpSeparate(t88, e78, s84, i78) {
    this._state.stencilOperation.face === t88 && this._state.stencilOperation.fail === e78 && this._state.stencilOperation.zFail === s84 && this._state.stencilOperation.zPass === i78 || (this.gl.stencilOpSeparate(t88, e78, s84, i78), this._state.stencilOperation.face = t88, this._state.stencilOperation.fail = e78, this._state.stencilOperation.zFail = s84, this._state.stencilOperation.zPass = i78, this._stateTracker.invalidateStencilTest());
  }
  setActiveTexture(t88, e78 = false) {
    const s84 = this._state.activeTexture;
    return t88 >= 0 && (e78 || t88 !== this._state.activeTexture) && (this.gl.activeTexture(Y3 + t88), this._state.activeTexture = t88), s84;
  }
  clear(t88) {
    t88 && this.gl.clear(t88);
  }
  clearSafe(t88, e78 = 255) {
    t88 && (t88 & _4.COLOR_BUFFER_BIT && this.setColorMask(true, true, true, true), t88 & _4.DEPTH_BUFFER_BIT && this.setDepthWriteEnabled(true), t88 & _4.STENCIL_BUFFER_BIT && this.setStencilWriteMask(e78), this.gl.clear(t88));
  }
  drawArrays(t88, e78, s84) {
    if (a22() && (this._numOfDrawCalls++, this._numOfTriangles += N20(t88, s84)), this.gl.drawArrays(t88, e78, s84), a22()) {
      const t89 = a23(this);
      t89 && console.error("drawArrays:", t89);
    }
  }
  drawElements(t88, e78, s84, a85) {
    if (a22() && (this._numOfDrawCalls++, this._numOfTriangles += N20(t88, e78)), this.gl.drawElements(t88, e78, s84, a85), a22()) {
      const i78 = a23(this);
      if (i78) {
        const r79 = this.getBoundVAO(), n103 = r79 == null ? void 0 : r79.indexBuffer, l75 = r79 == null ? void 0 : r79.vertexBuffers, h58 = { indexBuffer: n103, vertexBuffers: l75 }, f59 = { mode: t88, count: e78, type: s84, offset: a85 }, o77 = (n103 == null ? void 0 : n103.size) ?? 0, u58 = a85 + e78, c75 = o77 < u58 ? `. Buffer is too small. Attempted to draw index ${u58} of ${o77}` : "";
        console.error(`drawElements: ${i78}${c75}`, { args: f59, vao: h58 });
      }
    }
  }
  logInfo() {
    a22() && console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`);
  }
  resetInfo() {
    a22() && (this._numOfDrawCalls = 0, this._numOfTriangles = 0);
  }
  get capabilities() {
    return this._capabilities;
  }
  setViewport(t88, e78, s84, i78) {
    s84 = Math.max(Math.round(s84), 1), i78 = Math.max(Math.round(i78), 1);
    const a85 = this._state.viewport;
    a85.x === t88 && a85.y === e78 && a85.width === s84 && a85.height === i78 || (a85.x = t88, a85.y = e78, a85.width = s84, a85.height = i78, this.gl.viewport(t88, e78, s84, i78));
  }
  getViewport() {
    const t88 = this._state.viewport;
    return { x: t88.x, y: t88.y, width: t88.width, height: t88.height };
  }
  useProgram(t88) {
    var _a;
    this._state.program !== t88 && ((_a = this._state.program) == null ? void 0 : _a.stop(), this._state.program = t88, this.gl.useProgram((t88 == null ? void 0 : t88.glName) ?? null));
  }
  bindTexture(t88, e78, s84 = false) {
    (e78 >= this.parameters.maxTextureImageUnits || e78 < 0) && console.error("Input texture unit is out of range of available units!");
    const i78 = this._state.textureUnitMap[e78];
    return null == t88 || null == t88.glName ? (null != i78 && (this.setActiveTexture(e78, s84), this.gl.bindTexture(i78.descriptor.target, null)), this._state.textureUnitMap[e78] = null, i78) : s84 || i78 !== t88 ? (this.setActiveTexture(e78, s84), this.gl.bindTexture(t88.descriptor.target, t88.glName), t88.applyChanges(), this._state.textureUnitMap[e78] = t88, i78) : (t88.isDirty && (this.setActiveTexture(e78, s84), t88.applyChanges()), i78);
  }
  unbindTexture(t88) {
    if (null != t88)
      for (let e78 = 0; e78 < this.parameters.maxTextureImageUnits; e78++)
        this._state.textureUnitMap[e78] === t88 && (this.bindTexture(null, e78), this._state.textureUnitMap[e78] = null);
  }
  bindFramebuffer(t88, e78 = false) {
    if (e78 || this._state.readFramebuffer !== t88 || this._state.drawFramebuffer !== t88) {
      if (null == t88)
        return this.gl.bindFramebuffer(n21.FRAMEBUFFER, null), this._state.readFramebuffer = null, void (this._state.drawFramebuffer = null);
      t88.initializeAndBind(n21.FRAMEBUFFER), this._state.readFramebuffer = t88, this._state.drawFramebuffer = t88;
    }
  }
  bindFramebufferSeparate(t88, e78, s84 = false) {
    const i78 = e78 === n21.READ_FRAMEBUFFER, a85 = i78 ? this._state.readFramebuffer : this._state.drawFramebuffer;
    (s84 || a85 !== t88) && (null == t88 ? this.gl.bindFramebuffer(e78, null) : t88.initializeAndBind(e78), i78 ? this._state.readFramebuffer = t88 ?? null : this._state.drawFramebuffer = t88 ?? null);
  }
  blitFramebuffer(t88, e78, s84 = 0, i78 = 0, a85 = t88.width, r79 = t88.height, n103 = 0, l75 = 0, h58 = e78.width, c75 = e78.height, _42 = _4.COLOR_BUFFER_BIT, d63 = L.NEAREST) {
    this.bindFramebufferSeparate(t88, n21.READ_FRAMEBUFFER), this.bindFramebufferSeparate(e78, n21.DRAW_FRAMEBUFFER);
    this.gl.blitFramebuffer(s84, i78, a85, r79, n103, l75, h58, c75, _42, d63);
  }
  bindBuffer(t88, e78) {
    if (t88)
      switch (e78 ?? (e78 = t88.bufferType), e78) {
        case A5.ARRAY_BUFFER:
          this._state.vertexBuffer = v41(this.gl, t88, e78, this._state.vertexBuffer);
          break;
        case A5.ELEMENT_ARRAY_BUFFER:
          this._state.indexBuffer = v41(this.gl, t88, e78, this._state.indexBuffer);
          break;
        case A5.UNIFORM_BUFFER:
          this._state.uniformBuffer = v41(this.gl, t88, e78, this._state.uniformBuffer);
          break;
        case A5.PIXEL_PACK_BUFFER:
          this._state.pixelPackBuffer = v41(this.gl, t88, e78, this._state.pixelPackBuffer);
          break;
        case A5.PIXEL_UNPACK_BUFFER:
          this._state.pixelUnpackBuffer = v41(this.gl, t88, e78, this._state.pixelUnpackBuffer);
          break;
        case A5.COPY_READ_BUFFER:
          this._state.copyReadBuffer = v41(this.gl, t88, e78, this._state.copyReadBuffer);
          break;
        case A5.COPY_WRITE_BUFFER:
          this._state.copyWriteBuffer = v41(this.gl, t88, e78, this._state.copyWriteBuffer);
      }
  }
  bindRenderbuffer(t88) {
    const e78 = this.gl;
    t88 || (e78.bindRenderbuffer(e78.RENDERBUFFER, null), this._state.renderbuffer = null), this._state.renderbuffer !== t88 && (e78.bindRenderbuffer(e78.RENDERBUFFER, t88.glName), this._state.renderbuffer = t88);
  }
  _getBufferBinding(t88, e78) {
    if (e78 >= this.parameters.maxUniformBufferBindings || e78 < 0)
      return console.error("Uniform buffer binding point is out of range!"), null;
    const s84 = this._state.uniformBufferBindingPoints;
    let i78 = s84[e78];
    return null == i78 && (i78 = { buffer: null, offset: 0, size: 0 }, s84[e78] = i78), i78;
  }
  bindBufferBase(t88, e78, s84) {
    const i78 = this._getBufferBinding(t88, e78);
    if (null == i78)
      return;
    if (i78.buffer === s84 && 0 === i78.offset && 0 === i78.size)
      return;
    this.gl.bindBufferBase(t88, e78, s84 ? s84.glName : null), i78.buffer = s84, i78.offset = 0, i78.size = 0;
  }
  bindBufferRange(t88, e78, s84, i78, a85) {
    const r79 = this._getBufferBinding(t88, e78);
    if (null == r79)
      return;
    if (r79.buffer === s84 && r79.offset === i78 && r79.size === a85)
      return;
    if (i78 % this._parameters.uniformBufferOffsetAlignment != 0)
      return void console.error("Uniform buffer binding offset is not a multiple of the context offset alignment");
    this.gl.bindBufferRange(t88, e78, s84.glName, i78, a85), r79.buffer = s84, r79.offset = i78, r79.size = a85;
  }
  bindUBO(t88, e78, s84, a85) {
    null != e78 ? (a22() && (a85 ?? e78.byteLength) > this._parameters.maxUniformBlockSize && console.error("Attempting to bind more data than the maximum uniform block size"), e78.initialize(), void 0 !== s84 && void 0 !== a85 ? this.bindBufferRange(A5.UNIFORM_BUFFER, t88, e78.buffer, s84, a85) : this.bindBufferBase(A5.UNIFORM_BUFFER, t88, e78.buffer)) : this.bindBufferBase(A5.UNIFORM_BUFFER, t88, null);
  }
  unbindUBO(t88) {
    for (let e78 = 0, s84 = this._state.uniformBufferBindingPoints.length; e78 < s84; e78++) {
      const s85 = this._state.uniformBufferBindingPoints[e78];
      null != s85 && s85.buffer === t88.buffer && this.bindBufferBase(A5.UNIFORM_BUFFER, e78, null);
    }
  }
  unbindBuffer(t88) {
    switch (t88) {
      case A5.ARRAY_BUFFER:
        this._state.vertexBuffer = v41(this.gl, null, t88, this._state.vertexBuffer);
        break;
      case A5.ELEMENT_ARRAY_BUFFER:
        this._state.indexBuffer = v41(this.gl, null, t88, this._state.indexBuffer);
        break;
      case A5.UNIFORM_BUFFER:
        this._state.uniformBuffer = v41(this.gl, null, t88, this._state.uniformBuffer);
        break;
      case A5.PIXEL_PACK_BUFFER:
        this._state.pixelPackBuffer = v41(this.gl, null, t88, this._state.pixelPackBuffer);
        break;
      case A5.PIXEL_UNPACK_BUFFER:
        this._state.pixelUnpackBuffer = v41(this.gl, null, t88, this._state.pixelUnpackBuffer);
        break;
      case A5.COPY_READ_BUFFER:
        this._state.copyReadBuffer = v41(this.gl, null, t88, this._state.copyReadBuffer);
        break;
      case A5.COPY_WRITE_BUFFER:
        this._state.copyWriteBuffer = v41(this.gl, null, t88, this._state.copyWriteBuffer);
    }
  }
  bindVAO(t88 = null) {
    null != t88 ? this._state.vertexArrayObject !== t88 && (t88.bind(), this._state.vertexArrayObject = t88) : this._state.vertexArrayObject && (this._state.vertexArrayObject.unbind(), this._state.vertexArrayObject = null);
  }
  async clientWaitAsync(t88 = n5(10)) {
    const i78 = this.gl, a85 = i78.fenceSync(i12.SYNC_GPU_COMMANDS_COMPLETE, 0);
    if (!a85)
      throw new Error("Client wait failed, could not create sync object");
    let r79;
    this.instanceCounter.increment(V3.Sync, a85), i78.flush();
    do {
      await g(t88), r79 = i78.clientWaitSync(a85, 0, 0);
    } while (r79 === e14.TIMEOUT_EXPIRED);
    if (this.instanceCounter.decrement(V3.Sync, a85), i78.deleteSync(a85), r79 === e14.WAIT_FAILED)
      throw new Error("Client wait failed");
  }
  getBoundFramebufferObject(t88 = n21.FRAMEBUFFER) {
    return t88 === n21.READ_FRAMEBUFFER ? this._state.readFramebuffer : this._state.drawFramebuffer;
  }
  getBoundVAO() {
    return this._state.vertexArrayObject;
  }
  resetState() {
    this.useProgram(null), this.bindVAO(null), this.bindFramebuffer(null, true), this.unbindBuffer(A5.ARRAY_BUFFER), this.unbindBuffer(A5.ELEMENT_ARRAY_BUFFER), this.type === n27.WEBGL2 && (this.unbindBuffer(A5.UNIFORM_BUFFER), this._state.uniformBufferBindingPoints.length = 0, this.unbindBuffer(A5.PIXEL_PACK_BUFFER), this.unbindBuffer(A5.PIXEL_UNPACK_BUFFER), this.unbindBuffer(A5.COPY_READ_BUFFER), this.unbindBuffer(A5.COPY_WRITE_BUFFER));
    for (let t88 = 0; t88 < this.parameters.maxTextureImageUnits; ++t88)
      this.bindTexture(null, t88);
    this.setBlendingEnabled(false), this.setBlendFunction(R5.ONE, R5.ZERO), this.setBlendEquation(T3.ADD), this.setBlendColor(0, 0, 0, 0), this.setFaceCullingEnabled(false), this.setCullFace(N2.BACK), this.setFrontFace(S6.CCW), this.setPolygonOffsetFillEnabled(false), this.setPolygonOffset(0, 0), this.setScissorTestEnabled(false), this.setScissorRect(0, 0, this.gl.canvas.width, this.gl.canvas.height), this.setDepthTestEnabled(false), this.setDepthFunction(I4.LESS), this.setDepthRange(0, 1), this.setStencilTestEnabled(false), this.setStencilFunction(I4.ALWAYS, 0, 0), this.setStencilOp(O3.KEEP, O3.KEEP, O3.KEEP), this.setClearColor(0, 0, 0, 0), this.setClearDepth(1), this.setClearStencil(0), this.setColorMask(true, true, true, true), this.setStencilWriteMask(4294967295), this.setDepthWriteEnabled(true), this.setViewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);
  }
  enforceState() {
    var _a, _b, _c;
    const t88 = this.capabilities.vao;
    t88 && t88.bindVertexArray(null);
    const { gl: e78, gl2: s84 } = this;
    for (let a85 = 0; a85 < this.parameters.maxVertexAttributes; a85++)
      e78.disableVertexAttribArray(a85);
    if (this._state.vertexBuffer ? e78.bindBuffer(this._state.vertexBuffer.bufferType, this._state.vertexBuffer.glName) : e78.bindBuffer(A5.ARRAY_BUFFER, null), this._state.indexBuffer ? e78.bindBuffer(this._state.indexBuffer.bufferType, this._state.indexBuffer.glName) : e78.bindBuffer(A5.ELEMENT_ARRAY_BUFFER, null), null != s84) {
      this._state.uniformBuffer ? s84.bindBuffer(this._state.uniformBuffer.bufferType, this._state.uniformBuffer.glName) : s84.bindBuffer(A5.UNIFORM_BUFFER, null);
      for (let t89 = 0; t89 < this._parameters.maxUniformBufferBindings; t89++) {
        const e79 = this._state.uniformBufferBindingPoints[t89];
        if (null != e79) {
          const { buffer: i79, offset: a85, size: r79 } = e79;
          null !== i79 ? 0 === a85 && 0 === r79 ? s84.bindBufferBase(A5.UNIFORM_BUFFER, t89, i79.glName) : s84.bindBufferRange(A5.UNIFORM_BUFFER, t89, i79.glName, a85, r79) : s84.bindBufferBase(A5.UNIFORM_BUFFER, t89, null);
        }
      }
      this._state.pixelPackBuffer ? s84.bindBuffer(this._state.pixelPackBuffer.bufferType, this._state.pixelPackBuffer.glName) : s84.bindBuffer(A5.PIXEL_PACK_BUFFER, null), this._state.pixelUnpackBuffer ? s84.bindBuffer(this._state.pixelUnpackBuffer.bufferType, this._state.pixelUnpackBuffer.glName) : s84.bindBuffer(A5.PIXEL_UNPACK_BUFFER, null), this._state.copyReadBuffer ? s84.bindBuffer(this._state.copyReadBuffer.bufferType, this._state.copyReadBuffer.glName) : s84.bindBuffer(A5.COPY_READ_BUFFER, null), this._state.copyWriteBuffer ? s84.bindBuffer(this._state.copyWriteBuffer.bufferType, this._state.copyWriteBuffer.glName) : s84.bindBuffer(A5.COPY_WRITE_BUFFER, null), s84.bindFramebuffer(n21.READ_FRAMEBUFFER, null), s84.readBuffer(s84.BACK), this._state.readFramebuffer && (s84.bindFramebuffer(n21.READ_FRAMEBUFFER, this._state.readFramebuffer.glName), s84.readBuffer(X2.COLOR_ATTACHMENT0)), s84.bindFramebuffer(n21.DRAW_FRAMEBUFFER, ((_a = this._state.drawFramebuffer) == null ? void 0 : _a.glName) ?? null);
    } else
      this._state.readFramebuffer = this._state.drawFramebuffer, e78.bindFramebuffer(n21.FRAMEBUFFER, ((_b = this._state.drawFramebuffer) == null ? void 0 : _b.glName) ?? null);
    if (t88 && this._state.vertexArrayObject) {
      const t89 = this._state.vertexArrayObject;
      this._state.vertexArrayObject && (this._state.vertexArrayObject.unbind(), this._state.vertexArrayObject = null), this.bindVAO(t89);
    }
    e78.useProgram(((_c = this._state.program) == null ? void 0 : _c.glName) ?? null), e78.blendColor(this._state.blendColor.r, this._state.blendColor.g, this._state.blendColor.b, this._state.blendColor.a), e78.bindRenderbuffer(e78.RENDERBUFFER, this._state.renderbuffer ? this._state.renderbuffer.glName : null), true === this._state.blend ? e78.enable(this.gl.BLEND) : e78.disable(this.gl.BLEND), e78.blendEquationSeparate(this._state.blendEquation.mode, this._state.blendEquation.modeAlpha), e78.blendFuncSeparate(this._state.blendFunction.srcRGB, this._state.blendFunction.dstRGB, this._state.blendFunction.srcAlpha, this._state.blendFunction.dstAlpha), e78.clearColor(this._state.clearColor.r, this._state.clearColor.g, this._state.clearColor.b, this._state.clearColor.a), e78.clearDepth(this._state.clearDepth), e78.clearStencil(this._state.clearStencil), e78.colorMask(this._state.colorMask.r, this._state.colorMask.g, this._state.colorMask.b, this._state.colorMask.a), e78.cullFace(this._state.cullFace), e78.depthFunc(this._state.depthFunction), e78.depthRange(this._state.depthRange.zNear, this._state.depthRange.zFar), true === this._state.depthTest ? e78.enable(e78.DEPTH_TEST) : e78.disable(e78.DEPTH_TEST), e78.depthMask(this._state.depthWrite), e78.frontFace(this._state.frontFace), e78.lineWidth(1), true === this._state.faceCulling ? e78.enable(e78.CULL_FACE) : e78.disable(e78.CULL_FACE), e78.polygonOffset(this._state.polygonOffset[0], this._state.polygonOffset[1]), true === this._state.polygonOffsetFill ? e78.enable(e78.POLYGON_OFFSET_FILL) : e78.disable(e78.POLYGON_OFFSET_FILL), e78.scissor(this._state.scissorRect.x, this._state.scissorRect.y, this._state.scissorRect.width, this._state.scissorRect.height), true === this._state.scissorTest ? e78.enable(e78.SCISSOR_TEST) : e78.disable(e78.SCISSOR_TEST), e78.stencilFunc(this._state.stencilFunction.func, this._state.stencilFunction.ref, this._state.stencilFunction.mask), e78.stencilOpSeparate(this._state.stencilOperation.face, this._state.stencilOperation.fail, this._state.stencilOperation.zFail, this._state.stencilOperation.zPass), true === this._state.stencilTest ? e78.enable(e78.STENCIL_TEST) : e78.disable(e78.STENCIL_TEST), e78.stencilMask(this._state.stencilWriteMask);
    for (let a85 = 0; a85 < this.parameters.maxTextureImageUnits; a85++) {
      e78.activeTexture(Y3 + a85), e78.bindTexture(M4.TEXTURE_2D, null), e78.bindTexture(M4.TEXTURE_CUBE_MAP, null), this.type === n27.WEBGL2 && (e78.bindTexture(M4.TEXTURE_3D, null), e78.bindTexture(M4.TEXTURE_2D_ARRAY, null));
      const t89 = this._state.textureUnitMap[a85];
      null != t89 && e78.bindTexture(t89.descriptor.target, t89.glName);
    }
    e78.activeTexture(Y3 + this._state.activeTexture);
    const i78 = this._state.viewport;
    e78.viewport(i78.x, i78.y, i78.width, i78.height), this.resetInfo();
  }
  _loadExtensions() {
    this.type === n27.WEBGL1 && this.gl.getExtension("OES_element_index_uint"), this.gl.getExtension("KHR_parallel_shader_compile");
  }
};
function v41(t88, e78, s84, i78) {
  return e78 ? i78 !== e78 && t88.bindBuffer(s84, e78.glName) : t88.bindBuffer(s84, null), e78;
}
function N20(t88, e78) {
  switch (t88) {
    case E5.POINTS:
      return 2 * e78;
    case E5.TRIANGLES:
      return e78 / 3;
    case E5.TRIANGLE_STRIP:
    case E5.TRIANGLE_FAN:
      return e78 - 2;
    default:
      return 0;
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderingContext.js
var s82 = class extends P26 {
  constructor(e78, r79, s84) {
    super(e78, r79), this.newCache = s84, this._refCount = 1, this._appleAmdDriverHelper = null;
  }
  destroy() {
    --this._refCount > 0 || this.dispose();
  }
  ref() {
    ++this._refCount;
  }
  dispose() {
    var _a;
    super.dispose(), (_a = this._appleAmdDriverHelper) == null ? void 0 : _a.dispose();
  }
  bindTechnique(e78, r79, s84, t88) {
    return this.useProgram(e78.program), e78.bindPipelineState(this, s84 == null ? void 0 : s84.slot, !!t88), e78.program.bindPass(r79, s84), e78.program;
  }
  get appleAmdDriverHelper() {
    return this.driverTest.drawArraysRequiresIndicesTypeReset.result ? (this._appleAmdDriverHelper = this._appleAmdDriverHelper ?? new n95(this), this._appleAmdDriverHelper) : null;
  }
  get test() {
    return this.programCache.test;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureRepository.js
var m50 = class extends m {
  constructor(e78, t88, s84) {
    super({}), this._stage = e78, this._techniqueRepository = t88, this._rctx = s84, this._textures = /* @__PURE__ */ new Map(), this._loadingCount = 0, this._frameUpdates = /* @__PURE__ */ new Map(), this.events = new n9(), this._frameTask = e78.view.resourceController.scheduler.registerTask(I3.TEXTURE_UNLOAD);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._frameTask.remove(), this._stage.forEachOfType(e22.Texture, (e78) => e78.unload());
  }
  get updating() {
    return this._loadingCount > 0 || this._frameTask.updating;
  }
  get textureTechnique() {
    return null == this._textureTechnique && (this._textureTechnique = this._techniqueRepository.acquire(m10, new r37())), this._textureTechnique;
  }
  acquire(e78) {
    const t88 = this._textures.get(e78);
    return t88 ? (t88.ref(), t88.loadingPromise ?? t88) : this._createNewRef(e78);
  }
  update() {
    let e78 = false;
    this._frameUpdates.forEach((t88) => {
      const r79 = t88.texture.frameUpdate(t88.previousToken);
      r79 >= 0 && r79 !== t88.previousToken && (t88.previousToken = r79, e78 = true);
    }), e78 && this.events.emit("changed", O5.BACKGROUND);
  }
  _createNewRef(e78) {
    const t88 = this._stage.getObject(e78);
    if (null == t88)
      return s20(void 0 !== t88), null;
    const r79 = t88.events.on("unloaded", () => {
      r79.remove(), this._onTextureUnloaded(e78);
    }), n103 = new _39(e78, () => {
      this._frameTask.schedule(() => {
        n103.isUnreferenced && t88.unload();
      });
    });
    return this._textures.set(e78, n103), n103.ref(), null != t88.glTexture ? (this._updateGLTexture(n103, t88.glTexture), t88.requiresFrameUpdates && this._frameUpdates.set(e78, { texture: t88, previousToken: -1 }), n103) : (this._loadingCount++, n103.loadingPromise = this._stage.schedule(() => {
      const r80 = t88.load(this._rctx), u58 = (r81) => (this._loadingCount--, n103.loadingPromise = null, this._updateGLTexture(n103, r81), t88.requiresFrameUpdates && this._frameUpdates.set(e78, { texture: t88, previousToken: -1 }), n103), a85 = (e79) => (this._loadingCount--, n103.loadingPromise = null, d2(e79) || s3.getLogger(this).error(e79), null);
      return T(r80) ? r80.then(u58, a85) : u58(r80);
    }), n103.loadingPromise);
  }
  _updateGLTexture(e78, t88) {
    e78.glTexture = t88, this.events.emit("changed", O5.UPDATE);
  }
  _onTextureUnloaded(e78) {
    this._textures.delete(e78), this._frameUpdates.delete(e78);
  }
};
e([y()], m50.prototype, "_loadingCount", void 0), e([y()], m50.prototype, "_frameTask", void 0), e([y()], m50.prototype, "updating", null), m50 = e([a4("esri.views.3d.webgl-engine.lib.TextureRepository")], m50);
var _39 = class {
  constructor(e78, t88) {
    this.id = e78, this._release = t88, this._refCount = 0;
  }
  get isUnreferenced() {
    return 0 === this._refCount;
  }
  ref() {
    ++this._refCount;
  }
  release() {
    --this._refCount, this._refCount > 0 || (0 !== this._refCount ? (s3.getLogger("esri.views.3d.webgl-engine.lib.TextureRepository.RefCountedTextureImpl").error("Cannot dereference texture that has no references!"), this._refCount = 0) : this._release());
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/markerTextureRepository.js
function o73(o77, t88) {
  return new t32((e78) => f17(e78, o77), (r79) => r79, t88);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/WaterTextureRepository.js
var c69 = class extends m {
  constructor() {
    super(...arguments), this._passParameters = new g43(), this._loading = 0;
  }
  get passParameters() {
    return this._passParameters;
  }
  destroy() {
    this._passParameters.waveNormal = t(this._passParameters.waveNormal), this._passParameters.wavePertubation = t(this._passParameters.wavePertubation);
  }
  get updating() {
    return this._loading > 0;
  }
  ensureResources(e78) {
    if (this._loading > 0)
      return N3.LOADING;
    if (null != this._passParameters.waveNormal && null != this._passParameters.wavePertubation)
      return N3.LOADED;
    const t88 = new e23();
    return t88.samplingMode = L.LINEAR_MIPMAP_LINEAR, t88.hasMipmap = true, t88.maxAnisotropy = 8, ++this._loading, t22(a10("esri/images/materials/water/normals.jpg")).then((r79) => this._passParameters.waveNormal = new T8(e78, { ...t88, width: r79.width, height: r79.height }, r79)).catch((e79) => s3.getLogger(this).error("Failed to load water material normal texture.", e79)).finally(() => --this._loading), ++this._loading, t22(a10("esri/images/materials/water/perturbation.jpg")).then((r79) => this._passParameters.wavePertubation = new T8(e78, { ...t88, width: r79.width, height: r79.height }, r79)).catch((e79) => s3.getLogger(this).error("Failed to load water material pertubation texture.", e79)).finally(() => --this._loading), N3.LOADING;
  }
};
e([y()], c69.prototype, "_loading", void 0), e([y({ type: Boolean, readOnly: true })], c69.prototype, "updating", null), c69 = e([a4("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")], c69);
var g43 = class extends n29 {
};

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/contextCache.js
var n98 = /* @__PURE__ */ new Map();
function t84() {
  return n98;
}

// node_modules/@arcgis/core/views/support/screenshotUtils.js
var h54 = 2048;
var i73 = 1.5;
var e76 = 8;
function o74(h58, i78) {
  const { format: e78, quality: o77, rotation: n103, disableDecorations: a85 } = h58 || {}, r79 = b28(h58, i78.padding), l75 = p64(h58, { width: i78.width - r79.left - r79.right, height: i78.height - r79.top - r79.bottom }), { width: g49, height: f59 } = m51(h58, l75), d63 = j28(e78), u58 = R24[d63];
  return { format: d63, quality: i3(null != o77 ? o77 : u58, 0, 100), area: l75, width: g49, height: f59, rotation: n103, disableDecorations: !!a85, ignoreBackground: !(!h58 || !h58.ignoreBackground), ignorePadding: !(!h58 || !h58.ignorePadding) };
}
function n99(t88, h58) {
  const i78 = o74(t88, h58), e78 = i78.area, n103 = i78.width / e78.width, a85 = b28(i78, h58.padding), r79 = a85.left + a85.right, l75 = a85.top + a85.bottom, g49 = h58.width - r79, f59 = h58.height - l75, d63 = Math.floor(g49 * n103 + r79), u58 = Math.floor(f59 * n103 + l75), c75 = t88 && t88.layers ? t88.layers : [], s84 = i78.ignoreBackground, w33 = i78.ignorePadding;
  return { framebufferWidth: d63, framebufferHeight: u58, region: { x: Math.floor(e78.x * n103) + a85.left, y: Math.floor(e78.y * n103) + a85.top, width: i78.width, height: i78.height }, format: i78.format, quality: i78.quality, rotation: i78.rotation, pixelRatio: n103, layers: c75, disableDecorations: i78.disableDecorations, ignoreBackground: s84, ignorePadding: w33, objectAndLayerIdColor: false };
}
function a80(t88, h58, i78) {
  const { ctx: e78, canvas: o77 } = l72(t88, i78), n103 = e78.getImageData(0, 0, t88.width, t88.height), a85 = u54(o77, h58);
  return g44(o77), { dataUrl: a85, data: n103 };
}
function r77(t88, h58) {
  const { ctx: i78, canvas: e78 } = l72(t88, h58), o77 = i78.getImageData(0, 0, t88.width, t88.height);
  return g44(e78), o77;
}
function l72(t88, h58) {
  const i78 = f56();
  h58.premultipliedAlpha && q20(t88), i78.width = t88.width, i78.height = t88.height;
  const e78 = i78.getContext("2d", { willReadFrequently: true });
  return e78.putImageData(t88, 0, 0), h58.flipY && D20(e78), { ctx: e78, canvas: i78 };
}
function g44(t88) {
  t88.width = 0, t88.height = 0;
}
function f56() {
  return null == d58 && (d58 = document.createElement("canvas")), d58;
}
var d58 = null;
function u54(t88, h58) {
  const i78 = v42[h58.format], e78 = h58.quality / 100;
  return t88.toDataURL(i78, e78);
}
function w31(t88, h58, i78, e78 = 0, o77 = 0, n103 = t88.width - e78, a85 = t88.height - o77, r79 = false) {
  const { data: l75 } = t88, { width: g49, height: f59, data: d63 } = h58, u58 = n103 / g49, c75 = a85 / f59, s84 = Math.ceil(u58 / 2), w33 = Math.ceil(c75 / 2), M26 = t88.width;
  for (let m55 = 0; m55 < f59; m55++)
    for (let t89 = 0; t89 < g49; t89++) {
      const h59 = 4 * (t89 + (r79 ? f59 - m55 - 1 : m55) * g49);
      let n104 = 0, a86 = 0, p70 = 0, y41 = 0, x36 = 0, b31 = 0;
      const j29 = (m55 + 0.5) * c75;
      for (let r80 = Math.floor(m55 * c75); r80 < (m55 + 1) * c75; r80++) {
        const h60 = Math.abs(j29 - (r80 + 0.5)) / w33, g50 = (t89 + 0.5) * u58, f60 = h60 * h60;
        for (let d64 = Math.floor(t89 * u58); d64 < (t89 + 1) * u58; d64++) {
          const t90 = Math.abs(g50 - (d64 + 0.5)) / s84, h61 = Math.sqrt(f60 + t90 * t90);
          if (h61 >= 1)
            continue;
          let u59 = 2 * h61 * h61 * h61 - 3 * h61 * h61 + 1;
          const c76 = 4 * (e78 + d64 + (o77 + r80) * M26);
          b31 += u59 * l75[c76 + 3], a86 += u59, !i78 && l75[c76 + 3] < 255 && (u59 = u59 * l75[c76 + 3] / 255), p70 += u59 * l75[c76], y41 += u59 * l75[c76 + 1], x36 += u59 * l75[c76 + 2], n104 += u59;
        }
      }
      d63[h59] = p70 / n104, d63[h59 + 1] = y41 / n104, d63[h59 + 2] = x36 / n104, d63[h59 + 3] = b31 / a86;
    }
  return h58;
}
function M24(t88, o77, n103) {
  if (!o77)
    return t88;
  const { framebufferWidth: a85, framebufferHeight: r79, pixelRatio: l75, region: g49 } = t88, f59 = b28(t88, n103), d63 = f59.left + f59.right, u58 = f59.top + f59.bottom, c75 = a85 - d63, s84 = r79 - u58, w33 = Math.min(e76, Math.min((h54 - d63) / c75, (h54 - u58) / s84));
  return w33 < i73 ? t88 : { ...t88, framebufferWidth: Math.round(c75 * w33) + d63, framebufferHeight: Math.round(s84 * w33) + u58, pixelRatio: l75 * w33, resample: { region: { x: Math.round((g49.x - f59.left) * w33) + f59.left, y: Math.round((g49.y - f59.top) * w33) + f59.top, width: Math.round(g49.width * w33), height: Math.round(g49.height * w33) }, width: a85, height: r79 } };
}
function m51(t88, h58) {
  if (!t88)
    return h58;
  const i78 = t88.width, e78 = t88.height;
  if (null != i78 && null != e78)
    return { width: Math.floor(i78), height: Math.floor(e78) };
  if (null == i78 && null == e78)
    return h58;
  const o77 = h58.width / h58.height;
  return null == e78 ? { width: Math.floor(i78), height: Math.floor(i78 / o77) } : { width: Math.floor(e78 * o77), height: Math.floor(e78) };
}
function p64(t88, h58) {
  const i78 = { x: 0, y: 0, width: h58.width, height: h58.height };
  if (t88 && t88.area) {
    null != t88.area.x && (i78.x = Math.floor(t88.area.x)), null != t88.area.y && (i78.y = Math.floor(t88.area.y));
    const e78 = null != t88.area.width ? Math.floor(t88.area.width) : null, o77 = null != t88.area.height ? Math.floor(t88.area.height) : null;
    if (i78.width = h58.width - i78.x, i78.height = h58.height - i78.y, null != e78 && null != o77)
      i78.width = Math.min(i78.width, e78), i78.height = Math.min(i78.height, o77);
    else if (null == e78 && null != o77) {
      const t89 = Math.min(i78.width, e78);
      i78.height = t89 / i78.width * i78.height, i78.width = t89;
    } else if (null != e78 && null == o77) {
      const t89 = Math.min(i78.height, o77);
      i78.width = t89 / i78.height * i78.width, i78.height = t89;
    }
  }
  return y38(x35(i78, t88), h58);
}
function y38(t88, h58) {
  const i78 = Math.floor(Math.max(t88.x, 0)), e78 = Math.floor(Math.max(t88.y, 0)), o77 = { x: i78, y: e78, width: Math.floor(Math.min(t88.width, h58.width - i78)), height: Math.floor(Math.min(t88.height, h58.height - e78)) }, n103 = o77.width / o77.height, a85 = t88.width / t88.height;
  if (a85 === n103)
    return o77;
  if (a85 > n103) {
    const t89 = Math.floor(o77.width / a85), h59 = o77.height - t89;
    return { x: o77.x, y: Math.floor(o77.y + h59 / 2), width: o77.width, height: t89 };
  }
  const r79 = Math.floor(o77.height * a85), l75 = o77.width - r79;
  return { x: Math.floor(o77.x + l75 / 2), y: o77.y, width: r79, height: o77.height };
}
function x35(t88, h58) {
  if (!h58 || null == h58.width || null == h58.height)
    return t88;
  const i78 = h58.width / h58.height, e78 = t88.width / t88.height;
  if (e78 === i78)
    return t88;
  if (e78 < i78) {
    const h59 = Math.floor(t88.height * i78);
    return t88.x -= (h59 - t88.width) / 2, t88.width = h59, t88;
  }
  const o77 = Math.floor(t88.width / i78);
  return t88.y -= (o77 - t88.height) / 2, t88.height = o77, t88;
}
function b28(t88, h58) {
  return !h58 || t88 && t88.ignorePadding ? k26 : h58;
}
function j28(t88) {
  switch (t88) {
    case "png":
    case "jpg":
    case "jpeg":
      return t88;
    default:
      return P27;
  }
}
function D20(t88) {
  t88.save(), t88.globalCompositeOperation = "copy", t88.scale(1, -1), t88.translate(0, -t88.canvas.height), t88.drawImage(t88.canvas, 0, 0), t88.restore();
}
function q20(t88) {
  const h58 = t88.data, i78 = h58.length;
  for (let e78 = 0; e78 < i78; e78 += 4) {
    const t89 = h58[e78 + 3];
    if (255 !== t89 && t89 > 0) {
      const i79 = 255 / t89;
      h58[e78] = h58[e78] * i79, h58[e78 + 1] = h58[e78 + 1] * i79, h58[e78 + 2] = h58[e78 + 2] * i79;
    }
  }
}
var v42 = { png: "image/png", jpg: "image/jpeg", jpeg: "image/jpeg" };
var I28 = 98;
var P27 = "png";
var R24 = { png: 100, jpg: I28, jpeg: I28 };
var k26 = { top: 0, right: 0, bottom: 0, left: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/ScreenshotManager.js
var p65 = class {
  constructor(e78, t88) {
    this.parameters = e78, this.frameHasDecorations = t88;
  }
};
var g45 = class {
  constructor(e78, t88, r79, s84) {
    this._rctx = e78, this._renderFunctions = t88, this._forceCameraHook = r79, this._disposeOffscreenBuffers = s84, this.supersample = true, this._screenshotQueue = new Array();
  }
  destroy() {
    this._rctx = null;
  }
  async takeScreenshot(e78) {
    await this._renderFunctions.prepareOverlay(), this._renderFunctions.requestRenderScene(O5.BACKGROUND);
    const r79 = C();
    return this._screenshotQueue.push({ settings: e78, resolver: r79 }), r79.promise;
  }
  update(e78, t88) {
    for (const r79 of this._screenshotQueue) {
      if (null == this._rctx) {
        r79.resolver.reject();
        continue;
      }
      const s84 = { ...r79.settings, pixelRatio: r79.settings.pixelRatio * e78.parameters.camera.pixelRatio }, i78 = this._renderScreenshot(e78, s84, t88);
      r79.resolver(i78);
    }
    this._screenshotQueue.length = 0;
  }
  _renderScreenshotOverlay(e78, t88, r79) {
    e78.width = t88.width, e78.height = t88.height;
    const s84 = e78.getContext("2d"), i78 = r79.pixelRatio;
    return s84.save(), s84.translate(0, t88.height), s84.scale(1, -1), r79.region && s84.translate(-r79.region.x, -r79.region.y), s84.scale(i78, i78), t88 = this._renderFunctions.renderOverlay(e78, t88), s84.restore(), t88;
  }
  _readbackScreenshot(e78, t88) {
    return e78.resample ? this._readbackScreenshotResampled({ ...e78, resample: e78.resample }, t88) : this._readbackScreenshotImmediate(e78, t88);
  }
  _readbackScreenshotResampled(e78, t88) {
    const { framebufferWidth: r79, framebufferHeight: s84, region: i78, resample: n103 } = e78, c75 = this._ensureScreenshotEncodeCanvas();
    let l75 = e20(r79, s84, c75);
    this._rctx.gl.readPixels(0, 0, r79, s84, G5.RGBA, C6.UNSIGNED_BYTE, new Uint8Array(l75.data.buffer)), t88(), l75 = this._renderScreenshotOverlay(c75, l75, { ...e78, region: void 0 });
    const d63 = e20(i78.width, i78.height, c75);
    return w31(l75, d63, true, n103.region.x, s84 - (n103.region.y + n103.region.height), n103.region.width, n103.region.height);
  }
  _readbackScreenshotImmediate(e78, t88) {
    const { framebufferHeight: r79, region: s84 } = e78, i78 = this._ensureScreenshotEncodeCanvas(), n103 = e20(s84.width, s84.height, i78);
    return this._rctx.gl.readPixels(s84.x, r79 - (s84.y + s84.height), s84.width, s84.height, G5.RGBA, C6.UNSIGNED_BYTE, new Uint8Array(n103.data.buffer)), t88(), this._renderScreenshotOverlay(i78, n103, e78);
  }
  _renderScreenshot(t88, s84, o77) {
    let a85 = null;
    const h58 = t88.parameters.camera, u58 = { width: s84.framebufferWidth, height: s84.framebufferHeight };
    R8(u58, Math.min(this._rctx.parameters.maxTextureSize, this._rctx.parameters.maxRenderbufferSize));
    let p70 = false;
    const g49 = s84.disableDecorations && t88.frameHasDecorations, _42 = u58.width !== h58.fullWidth || u58.height !== h58.fullHeight, b31 = s84.ignorePadding && h58.pixelRatio !== s84.pixelRatio, x36 = _42 || g49 || b31 || s84.objectAndLayerIdColor, w33 = s84.objectAndLayerIdColor ? new x11(this._rctx, new e23(u58.width, u58.height), new i21(B2.DEPTH_STENCIL, u58.width, u58.height)) : null;
    if (x36) {
      const e78 = h58.clone();
      if (s84.ignorePadding) {
        const t90 = t12(e78.padding);
        for (let r79 = 0; r79 < 4; r79++)
          t90[r79] = Math.round(t90[r79] / e78.pixelRatio * s84.pixelRatio);
        e78.padding = t90;
      }
      e78.fullWidth = u58.width, e78.fullHeight = u58.height, e78.pixelRatio = s84.pixelRatio;
      const t89 = h58.fovX - e78.fovX, l75 = h58.fovY - e78.fovY;
      t89 < 0 && t89 < l75 ? e78.fovX = h58.fovX : l75 < 0 && l75 < t89 && (e78.fovY = h58.fovY);
      const g50 = { camera: e78, contentCamera: e78, mode: I2.IDLE, alignPixelEnabled: true, contentPixelRatio: e78.pixelRatio };
      this._forceCameraHook(g50), p70 = true, a85 = new x11(this._rctx, new e23(u58.width, u58.height), new i21(B2.DEPTH_STENCIL, u58.width, u58.height));
      const _43 = s84.disableDecorations ? s22.OFF : s22.ON;
      this._renderFunctions.renderScene(a85, w33, g50, _43, o77), this._disposeOffscreenBuffers();
    }
    const v44 = () => {
      this._rctx.bindFramebuffer(null), t(a85);
    }, S27 = this._readbackScreenshot(s84, v44);
    v44();
    let R25 = null;
    if (s84.objectAndLayerIdColor) {
      const t89 = () => {
        this._rctx.bindFramebuffer(null), t(w33);
      };
      this._rctx.bindFramebuffer(w33), R25 = this._readbackScreenshot(s84, t89), this._rctx.bindFramebuffer(null), t89();
    }
    if (x36 && !this._rctx.contextAttributes.alpha)
      for (let e78 = 3; e78 < S27.data.length; e78 += 4)
        S27.data[e78] = 255;
    if (R25 && !this._rctx.contextAttributes.alpha)
      for (let e78 = 3; e78 < R25.data.length; e78 += 4)
        R25.data[e78] = 255;
    return p70 && this._forceCameraHook(t88.parameters), [S27, R25];
  }
  _ensureScreenshotEncodeCanvas() {
    return this._screenshotEncodeCanvas || (this._screenshotEncodeCanvas = document.createElement("canvas")), this._screenshotEncodeCanvas;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/testUtils.js
var o75 = { enabled: false, disposeContextCache: () => {
  const o77 = t84();
  o77.forEach((e78) => e78.dispose()), o77.clear();
} };

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/RenderView.js
var M25 = class extends m {
  constructor(e78) {
    super({}), this.events = new n9(), this.waterTextureRepository = new c69(), this._magnifierHelper = new M22(), this.objectAndLayerIdRenderHelper = has("enable-feature:objectAndLayerId-rendering") ? new o65() : null, this._needsUpdate = true, this._needsRender = true, this._idleSuspend = true, this._needsWaterReflectionUpdate = false, this._lastAnimationUpdate = 0, this._container = e78.container, this._viewingMode = e78.viewingMode, this._initializeContext(e78), this.addHandles([l6(() => {
      var _a;
      return (_a = this.waterTextureRepository) == null ? void 0 : _a.updating;
    }, () => this.requestRender(), h3), l6(() => e78.view.qualityProfile, (e79) => {
      var _a;
      return (_a = this.renderer) == null ? void 0 : _a.updateRenderFeature(e79);
    }, w3), this._magnifierHelper.events.on("request-render", () => this.requestRender())]);
    const { memoryController: t88 } = e78.view.resourceController;
    this.stippleTextureRepository = a31(this._rctx, t88), this.markerTextureRepository = o73(this._rctx, t88), this._shaderTechniqueRepository = new r34({ rctx: this._rctx, viewingMode: e78.viewingMode, stippleTextureRepository: this.stippleTextureRepository, waterTextureRepository: this.waterTextureRepository, markerTextureRepository: this.markerTextureRepository }), this._textureRepository = new m50(e78, this._shaderTechniqueRepository, this._rctx), this.addHandles(this._textureRepository.events.on("changed", (e79) => this.requestRender(e79))), this._materialRepository = new s33(this._textureRepository, this._shaderTechniqueRepository, () => this.requestRender(), () => this.requestRender()), this._compositingHelper = new d52(this._rctx, this._shaderTechniqueRepository), this.renderer = new oe9(e78, this._materialRepository, this._textureRepository, this._shaderTechniqueRepository, this._rctx, this._compositingHelper, this._magnifierHelper, (e79) => this.requestRender(e79));
    const i78 = { renderScene: (e79, t89, r79, i79, s84) => this.renderer.render(e79, t89, r79, i79, s84), requestRenderScene: (e79) => this.requestRender(e79), prepareOverlay: () => e78.options.screenshot.prepareOverlay(), renderOverlay: (t89, r79) => e78.options.screenshot.renderOverlay(t89, r79) };
    this._screenshotManager = new g45(this._rctx, i78, (e79) => this.events.emit("force-camera-for-screenshot", e79), () => this.renderer.disposeOffscreenBuffers()), this._registerFrameTask(e78);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._container.contains(this._canvas) && this._container.removeChild(this._canvas), this._frameTask = o(this._frameTask), this._shaderTechniqueRepository = l(this._shaderTechniqueRepository);
  }
  requestRender(e78 = O5.UPDATE) {
    this._needsRender = true, e78 === O5.UPDATE && (this._needsUpdate = true);
  }
  get updating() {
    return this._needsUpdate || this._needsWaterReflectionUpdate || this.renderer.updating || this._textureRepository.updating || this.waterTextureRepository.updating || this._magnifierHelper.updating;
  }
  get textureRepository() {
    return this._textureRepository;
  }
  get compositingHelper() {
    return this._compositingHelper;
  }
  set magnifier(e78) {
    this._magnifierHelper.magnifier = e78;
  }
  setIdleSuspend(e78) {
    this._idleSuspend !== e78 && (this._idleSuspend = e78, this.requestRender());
  }
  get renderingContext() {
    return this._rctx;
  }
  get capabilities() {
    return this._rctx.capabilities;
  }
  get canvas() {
    return this._canvas;
  }
  takeScreenshot(e78) {
    return this._screenshotManager.takeScreenshot(e78).then((e79) => e79[0]);
  }
  takeScreenshotWithOID(e78) {
    return e78.objectAndLayerIdColor = true, this._screenshotManager.takeScreenshot(e78);
  }
  getAlpha() {
    return !!this._rctx.contextAttributes.alpha;
  }
  getMinimalDepthForArea(e78, t88, r79, i78, s84, o77 = s84) {
    const n103 = i78.constrainWindowSize(t88, r79, s84 * i78.pixelRatio, o77 * i78.pixelRatio), a85 = this._ensureDepthBuffer(n103);
    this.renderer.readDepthPixels(i78, n103, a85);
    let p70 = Number.MAX_VALUE;
    for (let h58 = 0; h58 < n103[2] * n103[3]; h58++) {
      const e79 = A33(4 * h58, a85, i78.nearFar);
      p70 > e79 && e79 !== i78.nearFar[0] && e79 !== i78.nearFar[1] && (p70 = e79);
    }
    if (null != e78) {
      const s85 = e78.pickDepth(t88 * i78.pixelRatio, r79 * i78.pixelRatio, i78);
      null != s85 && p70 > s85 && s85 !== i78.nearFar[0] && s85 !== i78.nearFar[1] && (p70 = s85);
    }
    return p70 === Number.MAX_VALUE ? void 0 : p70;
  }
  _ensureDepthBuffer(e78) {
    const t88 = 4 * e78[2] * e78[3];
    return (null == this._tmpDepthBuffer || this._tmpDepthBuffer.byteLength < t88) && (this._tmpDepthBuffer = new Uint8Array(t88)), this._tmpDepthBuffer;
  }
  async reloadShaders() {
    e52(), await this._shaderTechniqueRepository.reloadAll(), this.requestRender();
  }
  _registerFrameTask(e78) {
    const t88 = e78.view.state;
    let r79 = false, i78 = O5.BACKGROUND, s84 = false;
    const o77 = { preRender: ({ time: s85 }) => {
      r79 = this.updating, i78 = this._needsUpdate ? O5.UPDATE : O5.BACKGROUND, e78.commitSyncLayers();
      const o78 = n5(s85 - this._lastAnimationUpdate);
      if (o78 > this.renderer.animationTimestep || null != t88.forcedAnimationTime || r79 || this._needsRender) {
        const e79 = n5(o78 / this.renderer.animationTimeDilation), r80 = new h14(t88.camera, e79, t88.forcedAnimationTime);
        this.renderer.updateAnimation(r80) && this.requestRender(O5.BACKGROUND), this._lastAnimationUpdate = s85;
      }
    }, render: ({ time: e79 }) => {
      if ((this._needsRender || !this._idleSuspend || !this.renderer.isCameraFinal || this._needsWaterReflectionUpdate) && t88.camera.fullWidth > 0 && t88.camera.fullHeight > 0) {
        const r80 = this._needsUpdate && this._idleSuspend && this.renderer.isCameraFinal;
        this._needsRender = false, this._needsUpdate = false, this._needsWaterReflectionUpdate = false, this.renderer.render(null, null, t88, s22.ON, e79), s84 = true, r80 && this.renderer.hasReflections && (this.requestRender(O5.BACKGROUND), this._needsWaterReflectionUpdate = true);
      }
    }, update: ({ time: e79 }) => {
      const r80 = new p65(t88, this.renderer.hasSlicePlane || this._magnifierHelper.enabled);
      this._textureRepository.update(), this._screenshotManager.update(r80, e79);
    }, finish: () => {
      s84 && (this.renderer.finish(t88.mode === I2.IDLE ? i78 : O5.UPDATE), s84 = false);
    } };
    this._frameTask = A(o77);
  }
  _initializeContext(e78) {
    const t88 = e78.options;
    this._canvas = t88.canvas, this._canvas || (this._canvas = document.createElement("canvas")), this._canvas.setAttribute("style", "width: 100%; height:100%; display:block;");
    const r79 = { alpha: t88.alpha || false, premultipliedAlpha: true, antialias: false, depth: true, stencil: t88.stencil ?? true, powerPreference: "high-performance", preserveDrawingBuffer: t88.preserveDrawingBuffer ?? false }, s84 = o18("3d", this._canvas, r79);
    null != s84 ? (this._rctx = this._newRenderingContext(s84, e78), this._loadShaderOnlyExtensions(), !t88.alpha && this._rctx.contextAttributes.alpha && s3.getLogger(this).error("WebGL context has alpha channel even though no alpha channel was requested"), !this._rctx.contextAttributes.alpha && has("safari") >= 11 && (this._container.style.backgroundColor = "black"), this._container.appendChild(this._canvas)) : s3.getLogger(this).error("A WebGL2 context could not be created.");
  }
  _newRenderingContext(e78, t88) {
    const r79 = { disabledExtensions: t88.options.deactivatedWebGLExtensions || {}, debugWebGLExtensions: t88.options.debugWebGLExtensions || {}, maxAnisotropy: 8 }, i78 = (e79, r80) => t88.view.resourceController.memoryController.newCache(e79, r80);
    if (o75.enabled) {
      let t89 = E42.get(e78);
      return t89 ? (t89.configure(r79), t89.newCache = i78, t89.ref(), t89) : (t89 = new s82(e78, r79, i78), E42.set(e78, t89), t89.ref(), t89);
    }
    return new s82(e78, r79, i78);
  }
  _loadShaderOnlyExtensions() {
    this._rctx.capabilities.enable("textureFloat");
  }
  getObjectAndLayerIdColor(e78) {
    return null != this.objectAndLayerIdRenderHelper ? this.objectAndLayerIdRenderHelper.getObjectAndLayerIdColor(e78) : null;
  }
  get componentObjectCollection() {
    return null == this._componentObjectCollection && (this._componentObjectCollection = new Q13(this.renderer.renderPassManager, this._viewingMode)), this._componentObjectCollection;
  }
  set componentObjectCollection(e78) {
    this._componentObjectCollection = e78;
  }
};
e([y({ type: Boolean, readOnly: true })], M25.prototype, "updating", null), e([y({ autoDestroy: true })], M25.prototype, "_rctx", void 0), e([y({ autoDestroy: true })], M25.prototype, "_container", void 0), e([y({ autoDestroy: true })], M25.prototype, "_canvas", void 0), e([y({ autoDestroy: true })], M25.prototype, "stippleTextureRepository", void 0), e([y({ autoDestroy: true })], M25.prototype, "markerTextureRepository", void 0), e([y({ autoDestroy: true })], M25.prototype, "waterTextureRepository", void 0), e([y({ autoDestroy: true })], M25.prototype, "_magnifierHelper", void 0), e([y({ readOnly: true })], M25.prototype, "objectAndLayerIdRenderHelper", void 0), e([y({ autoDestroy: true })], M25.prototype, "_textureRepository", void 0), e([y({ autoDestroy: true })], M25.prototype, "_compositingHelper", void 0), e([y({ autoDestroy: true, readOnly: true })], M25.prototype, "renderer", void 0), e([y({ autoDestroy: true })], M25.prototype, "_screenshotManager", void 0), e([y()], M25.prototype, "componentObjectCollection", null), e([y({ autoDestroy: true })], M25.prototype, "_componentObjectCollection", void 0), e([y()], M25.prototype, "_needsUpdate", void 0), e([y()], M25.prototype, "_needsWaterReflectionUpdate", void 0), M25 = e([a4("esri.views.3d.webgl-engine.parts.RenderView")], M25);
var E42 = t84();

// node_modules/@arcgis/core/views/3d/webgl-engine/Stage.js
var u55 = class extends m {
  constructor(e78) {
    super(e78), this._model = new l61(), this._layers = new l2(), this._asyncChangeSet = new s34(), this._syncChangeSet = new s34(), this._layerSyncSet = /* @__PURE__ */ new Set();
  }
  initialize() {
    this._set("renderView", new M25(this)), this._frameTask = this.view.resourceController.scheduler.registerTask(I3.STAGE, this), this.addHandles(this._frameTask);
  }
  destroy() {
    this.removeAllHandles();
  }
  get viewingMode() {
    return this.view.state.viewingMode;
  }
  get updating() {
    return this.running || this.renderView.updating || this._frameTask.updating;
  }
  get renderer() {
    var _a;
    return (_a = this.renderView) == null ? void 0 : _a.renderer;
  }
  add(e78) {
    this._model.add(e78), n38(e78) && this._addLayer(e78), this.renderView.requestRender();
  }
  remove(e78) {
    null == e78 || this.destroyed || (this._model.remove(e78), n38(e78) && this._removeLayer(e78), this.renderView.requestRender());
  }
  addMany(e78) {
    null != e78 && (this._model.addMany(e78), this.renderView.requestRender());
  }
  removeMany(e78) {
    var _a, _b;
    null != e78 && ((_a = this._model) == null ? void 0 : _a.removeMany(e78), (_b = this.renderView) == null ? void 0 : _b.requestRender());
  }
  async load(e78, r79) {
    null != e78 && (Array.isArray(e78) || (e78 = [e78]), await Promise.all(e78.filter((e79) => null == e79.glTexture).map((e79) => this.schedule(() => this._model.has(e79) ? e79.load(this.renderView.renderingContext) : null), r79)));
  }
  loadImmediate(e78) {
    return e78.load(this.renderView.renderingContext);
  }
  forEachOfType(e78, r79) {
    this._model.forEachOfType(e78, r79);
  }
  handleEvent(e78, r79) {
    this.destroyed || (this._model.dirtySet[e78](r79), this.renderView.requestRender());
  }
  get running() {
    return this._model.dirtySet.dirty || !this._asyncChangeSet.empty;
  }
  runTask(e78) {
    this._frameTask.processQueue(e78), this._commit(e78);
  }
  _commit(e78) {
    const r79 = this._model.dirtySet;
    this._asyncChangeSet.empty || e78.done || (this.renderer.modify(this._asyncChangeSet, e78), this.renderView.requestRender(), e78.madeProgress()), this._layers.forAll((t88) => {
      if (e78.done)
        return;
      const s84 = this._layerSyncSet.has(t88.id) || t88.updatePolicy === C9.SYNC, i78 = s84 ? this._syncChangeSet : this._asyncChangeSet;
      r79.commitLayer(t88.id, i78), this._layerSyncSet.delete(t88.id), i78.empty || (this.renderer.modify(i78, s84 ? C4 : e78), this.renderView.requestRender(), e78.madeProgress());
    }), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender(), e78.madeProgress()), this._layers.forAll((t88) => {
      e78.done || this._layerSyncSet.has(t88.id) || t88.updatePolicy !== C9.ASYNC || (r79.commitLayer(t88.id, this._asyncChangeSet), this._asyncChangeSet.empty || (this.renderer.modify(this._asyncChangeSet, e78), this.renderView.requestRender(), e78.madeProgress()));
    }), this._layerSyncSet.clear(), this.notifyChange("running");
  }
  commitSyncLayers() {
    const e78 = this._model.dirtySet;
    this._layers.forAll((r79) => {
      (this._layerSyncSet.has(r79.id) || r79.updatePolicy === C9.SYNC) && (e78.commitLayer(r79.id, this._syncChangeSet), this._layerSyncSet.delete(r79.id));
    });
    for (const r79 of this._layerSyncSet)
      e78.commitLayer(r79, this._syncChangeSet);
    this._layerSyncSet.clear(), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender());
  }
  _commitLayer(e78) {
    this._model.dirtySet.commitLayer(e78.id, this._syncChangeSet), this._layerSyncSet.delete(e78.id), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender());
  }
  schedule(e78, r79) {
    return this._frameTask.schedule(e78, r79);
  }
  reschedule(e78, r79) {
    return this._frameTask.reschedule(e78, r79);
  }
  syncLayer(e78) {
    this._layerSyncSet.add(e78), this.renderView.requestRender();
  }
  getObject(e78) {
    return this._model.getObject(e78);
  }
  get layers() {
    return this._layers;
  }
  _addLayer(e78) {
    this._layers.includes(e78) || this._layers.push(e78);
  }
  _removeLayer(e78) {
    this._commitLayer(e78), null != this._layers.removeUnordered(e78) && (this._model.dirtySet.getResidentRenderGeometries(e78.id, this._syncChangeSet.removes), this.renderer.modify(this._syncChangeSet, C4));
  }
  addRenderPlugin(e78, r79, t88) {
    const i78 = this.renderer.renderPlugins.add(e78, r79, t88), n103 = () => {
      E30(r79) && this.view.sceneIntersectionHelper.addIntersectionHandler(r79);
    };
    if (T(i78))
      return i78.then(n103);
    n103();
  }
  removeRenderPlugin(e78) {
    this.destroyed || (E30(e78) && this.view.sceneIntersectionHelper.removeIntersectionHandler(e78), this.renderer.renderPlugins.remove(e78));
  }
  get performanceInfo() {
    return { renderer: this.renderer.performanceInfo, model: this._model.getStats() };
  }
  get test() {
    const e78 = this;
    return { getCount: (r79) => e78._model.test.content.filter((e79) => e79.type === r79).length, model: e78._model };
  }
};
u55.DebugSettings = { endFrameContentValidation: false }, e([y({ constructOnly: true })], u55.prototype, "view", void 0), e([y({ constructOnly: true })], u55.prototype, "options", void 0), e([y({ readOnly: true })], u55.prototype, "viewingMode", null), e([y({ constructOnly: true })], u55.prototype, "container", void 0), e([y({ readOnly: true })], u55.prototype, "updating", null), e([y({ constructOnly: true })], u55.prototype, "_model", void 0), e([y({ autoDestroy: true })], u55.prototype, "renderView", void 0), e([y({ readOnly: true })], u55.prototype, "renderer", null), e([y({ readOnly: true })], u55.prototype, "running", null), u55 = e([a4("esri.views.3d.webgl-engine.Stage")], u55);

// node_modules/@arcgis/core/views/support/hitTestSelectUtils.js
async function t85(t88, e78) {
  if ("2d" === t88.type)
    return t88.hitTest(e78);
  const r79 = await t88.hitTest(e78);
  if (0 === r79.results.length)
    return r79;
  const s84 = (r79.results[0].distance ?? 0) * (1 + n100), i78 = r79.results.findIndex((t89) => (t89.distance ?? 0) > s84);
  return -1 !== i78 && (r79.results = r79.results.slice(0, i78)), r79;
}
var n100 = 0.05;

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function i74(i78) {
  const s84 = n34(i78);
  if (!s84.available)
    return new s4("webgl:required", "3d" === i78 ? "WebGL2 is required but not supported." : "WebGL is required but not supported.", new Error().stack);
  if ("3d" === i78 && s84.majorPerformanceCaveat)
    return new s4("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.");
  if (!s84.supportsHighPrecisionFragment)
    return new s4("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.");
  if (!s84.supportsVertexShaderSamplers)
    return new s4("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.");
  if (s84.type === n27.WEBGL1) {
    if (!s84.supportsElementIndexUint)
      return new s4("webgl:element-index-uint-required", "WebGL support for uint vertex indices is required but not supported.");
    if (!s84.supportsStandardDerivatives)
      return new s4("webgl:standard-derivatives-required", "WebGL support for standard derivatives is required but not supported.");
    if (!s84.supportsInstancedArrays)
      return new s4("webgl:instanced-arrays-required", "WebGL support for instanced rendering is required but not supported.");
  }
  return null;
}

// node_modules/@arcgis/core/views/ui/Component.js
function i75(t88) {
  return t88 && "nodeType" in t88;
}
function d59(t88) {
  return t88 && "function" == typeof t88.render;
}
var c70 = { component: "esri-component" };
var p66 = class extends m {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    var _a;
    this.node = null, (_a = this.widget) == null ? void 0 : _a.destroy();
  }
  get id() {
    return this.get("widget.id") || this.get("node.id");
  }
  set node(t88) {
    const o77 = this._get("node");
    t88 !== o77 && (t88 && t88.classList.add(c70.component), o77 && o77.classList.remove(c70.component), this._set("node", t88));
  }
  castNode(t88) {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.destroy(), t88 ? "string" == typeof t88 || i75(t88) ? (this._set("widget", null), e10(t88)) : (d59(t88) && !t88.domNode && (t88.domNode = document.createElement("div")), this._set("widget", t88), t88.domNode) : (this._set("widget", null), null);
  }
};
e([y({ dependsOn: [] })], p66.prototype, "id", null), e([y()], p66.prototype, "node", null), e([s9("node")], p66.prototype, "castNode", null), e([y({ readOnly: true })], p66.prototype, "widget", void 0), p66 = e([a4("esri.views.ui.Component")], p66);
var l73 = p66;

// node_modules/@arcgis/core/views/ui/UI.js
var f57 = { left: 0, top: 0, bottom: 0, right: 0 };
var _40 = { bottom: 30, top: 15, right: 15, left: 15 };
var g46 = "esri-ui";
var y39 = { ui: g46, corner: `${g46}-corner`, innerContainer: `${g46}-inner-container`, manualContainer: `${g46}-manual-container`, cornerContainer: `${g46}-corner-container`, topLeft: `${g46}-top-left`, topRight: `${g46}-top-right`, bottomLeft: `${g46}-bottom-left`, bottomRight: `${g46}-bottom-right` };
function C29(t88) {
  return t88 && !t88._started && "function" == typeof t88.postMixInProperties && "function" == typeof t88.buildRendering && "function" == typeof t88.postCreate && "function" == typeof t88.startup;
}
function v43(t88) {
  return 0 === t88 ? "0" : `${t88}px`;
}
function b29(t88) {
  const o77 = "object" == typeof t88 && null !== t88 && Object.getPrototypeOf(t88);
  return (null === o77 || o77 === Object.prototype) && ("component" in t88 || "index" in t88 || "position" in t88) ? t88 : null;
}
function w32(t88, { top: o77, bottom: n103, left: i78, right: e78 }) {
  t88.style.top = o77, t88.style.bottom = n103, t88.style.left = i78, t88.style.right = e78;
}
var P28 = class extends n9.EventedAccessor {
  constructor(t88) {
    super(t88), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentMap = /* @__PURE__ */ new Map(), this._locale = c3(), this.view = null, this._applyViewPadding = () => {
      const t89 = this.container;
      t89 && w32(t89, this._toPixelPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t89 = this._innerContainer;
      t89 && w32(t89, this._toPixelPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this.addHandles([l6(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, h3), l6(() => this.padding, this._applyUIPadding, h3), l6(() => [this.container, this._locale], ([t88, o77]) => {
      t88 && t88.setAttribute("lang", o77);
    }, h3), s14((t88) => {
      this._locale = t88;
    })]);
  }
  destroy() {
    this.container = null;
    for (const t88 of this._components)
      t88.destroy();
    this._components.length = 0, this._componentMap.clear();
  }
  set container(t88) {
    const o77 = this._get("container");
    t88 !== o77 && (t88 && (t88.classList.add(y39.ui), n13(t88), this._attachContainers(t88)), o77 && (o77.classList.remove(y39.ui), w32(o77, { top: "", bottom: "", left: "", right: "" }), n11(o77)), this._set("container", t88));
  }
  get height() {
    var _a;
    const t88 = ((_a = this.view) == null ? void 0 : _a.height) ?? 0;
    if (0 === t88)
      return t88;
    const o77 = this._getViewPadding(), { top: n103, bottom: i78 } = o77;
    return Math.max(t88 - n103 - i78, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t88) {
    this._overrideIfSome("padding", t88);
  }
  castPadding(t88) {
    return "number" == typeof t88 ? { bottom: t88, top: t88, right: t88, left: t88 } : { ..._40, ...t88 };
  }
  get width() {
    var _a;
    const t88 = ((_a = this.view) == null ? void 0 : _a.width) ?? 0;
    if (0 === t88)
      return t88;
    const o77 = this._getViewPadding(), { left: n103, right: i78 } = o77;
    return Math.max(t88 - n103 - i78, 0);
  }
  add(t88, o77) {
    let n103, i78, e78;
    if (Array.isArray(t88))
      return void t88.forEach((t89) => this.add(t89, o77));
    const r79 = b29(t88);
    r79 && ({ index: n103, position: o77, component: t88, key: i78 } = r79), o77 && "object" == typeof o77 && ({ index: n103, key: i78, position: o77, internal: e78 } = o77), !t88 || o77 && !this._isValidPosition(o77) || this._add(t88, o77, n103, i78, e78);
  }
  remove(t88, o77) {
    var _a;
    if (!t88)
      return;
    if (Array.isArray(t88))
      return t88.map((t89) => this.remove(t89, o77));
    const n103 = this._find(t88);
    if (n103) {
      if (this._componentMap.has(t88) && ((_a = this._componentMap.get(t88)) == null ? void 0 : _a.key) !== o77)
        return;
      const i78 = this._components.indexOf(n103), e78 = n103.node.parentNode;
      return e78 == null ? void 0 : e78.removeChild(n103.node), this._componentMap.delete(t88), this._components.splice(i78, 1)[0];
    }
  }
  empty(t88, o77 = { removeInternal: false }) {
    if (Array.isArray(t88)) {
      for (const n104 of t88)
        this.empty(n104, o77);
      return;
    }
    const n103 = this._positionNameToContainerLookup[t88 ?? "manual"], i78 = Array.prototype.slice.call(n103.children).map((t89) => this._findByNode(t89)).filter((t89) => {
      var _a;
      if (null == t89)
        return false;
      return !(((_a = this._componentMap.get(t89)) == null ? void 0 : _a.internal) ?? false) || o77.removeInternal;
    });
    for (const e78 of i78)
      this.remove(e78);
  }
  move(t88, o77) {
    if (Array.isArray(t88) && t88.forEach((t89) => this.move(t89, o77)), !t88)
      return;
    let n103;
    const i78 = b29(t88) || b29(o77);
    if (i78 && (n103 = i78.index, o77 = i78.position, t88 = i78.component || t88), o77 && !this._isValidPosition(o77))
      return;
    const e78 = this.remove(t88);
    e78 && this.add(e78, { position: o77, index: n103 });
  }
  find(t88) {
    if (!t88)
      return null;
    const o77 = this._findById(t88);
    return o77 && (o77.widget || o77.node);
  }
  getComponents(t88, o77 = { includeInternal: false }) {
    return t88 ? Array.isArray(t88) ? t88.map((t89) => this._getComponentsAtPosition(t89, o77)).flat() : this._getComponentsAtPosition(t88, o77) : this._components.filter((t89) => {
      var _a;
      return o77.includeInternal || !((_a = this._componentMap.get(t89)) == null ? void 0 : _a.internal);
    }).map(({ widget: t89, node: o78 }) => t89 ?? o78);
  }
  getPosition(t88) {
    for (const o77 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o77].contains(t88))
        return o77;
    }
    return null;
  }
  _add(t88, o77, n103, i78, e78) {
    t88 instanceof l73 || (t88 = new l73({ node: t88 })), this._place({ component: t88, position: o77, index: n103 }), this._components.push(t88), this._componentMap.set(t88, { key: i78, internal: e78 });
  }
  _find(t88) {
    return t88 ? t88 instanceof l73 ? this._findByComponent(t88) : "string" == typeof t88 ? this._findById(t88) : this._findByNode(t88.domNode || t88) : null;
  }
  _getViewPadding() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.padding) ?? f57;
  }
  _attachContainers(t88) {
    t88.appendChild(this._innerContainer), t88.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t88 = document.createElement("div");
    t88.classList.add(y39.innerContainer, y39.cornerContainer);
    const o77 = document.createElement("div");
    o77.classList.add(y39.innerContainer, y39.manualContainer);
    const n103 = document.createElement("div");
    n103.classList.add(y39.topLeft, y39.corner), t88.appendChild(n103);
    const i78 = document.createElement("div");
    i78.classList.add(y39.topRight, y39.corner), t88.appendChild(i78);
    const e78 = document.createElement("div");
    e78.classList.add(y39.bottomLeft, y39.corner), t88.appendChild(e78);
    const r79 = document.createElement("div");
    r79.classList.add(y39.bottomRight, y39.corner), t88.appendChild(r79), this._innerContainer = t88, this._manualContainer = o77;
    const s84 = h4();
    this._cornerNameToContainerLookup = { "top-left": n103, "top-right": i78, "bottom-left": e78, "bottom-right": r79, "top-leading": s84 ? i78 : n103, "top-trailing": s84 ? n103 : i78, "bottom-leading": s84 ? r79 : e78, "bottom-trailing": s84 ? e78 : r79 }, this._positionNameToContainerLookup = { manual: o77, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t88) {
    return !!this._positionNameToContainerLookup[t88];
  }
  _place(t88) {
    const o77 = t88.position ?? "manual", { component: n103, index: e78 } = t88, r79 = this._positionNameToContainerLookup[o77], s84 = null != e78 && e78 > -1;
    if (C29(n103.widget) && n103.widget.startup(), !s84)
      return void r79.appendChild(n103.node);
    const a85 = Array.from(r79.children);
    if (0 === e78)
      return void (r79.firstChild ? o7(n103.node, r79.firstChild) : r79.appendChild(n103.node));
    e78 >= a85.length ? r79.appendChild(n103.node) : o7(n103.node, a85[e78]);
  }
  _toPixelPosition(t88) {
    return { top: v43(t88.top), left: v43(t88.left), right: v43(t88.right), bottom: v43(t88.bottom) };
  }
  _findByComponent(t88) {
    return this._components.find((o77) => o77 === t88) ?? null;
  }
  _findById(t88) {
    return this._components.find(({ id: o77 }) => o77 === t88) ?? null;
  }
  _findByNode(t88) {
    return this._components.find(({ node: o77 }) => o77 === t88) ?? null;
  }
  _getComponentsAtPosition(t88, n103) {
    const i78 = this._positionNameToContainerLookup[t88];
    return Array.prototype.slice.call(i78.children).map((t89) => this._findByNode(t89)).filter(R).filter((t89) => {
      var _a;
      return n103.includeInternal || !((_a = this._componentMap.get(t89)) == null ? void 0 : _a.internal);
    }).map(({ widget: t89, node: o77 }) => t89 ?? o77);
  }
};
e([y()], P28.prototype, "_locale", void 0), e([y()], P28.prototype, "container", null), e([y()], P28.prototype, "height", null), e([y({ value: _40 })], P28.prototype, "padding", null), e([s9("padding")], P28.prototype, "castPadding", null), e([y()], P28.prototype, "view", void 0), e([y()], P28.prototype, "width", null), P28 = e([a4("esri.views.ui.UI")], P28);
var L27 = P28;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function m52(t88, e78) {
  return t88 && "copyright" in t88 && (!e78 || "function" == typeof t88.originOf && "user" === t88.originOf("copyright"));
}
function f58(t88, e78) {
  return t88.length !== e78.length || t88.some((t89, i78) => t89.text !== e78[i78].text);
}
function y40(t88, e78, i78) {
  if (!i78 || !e78)
    return;
  t88.find((t89) => t89.layerView === e78 && t89.text === i78) || t88.push({ text: i78, layerView: e78 });
}
function b30(t88) {
  return "bing-maps" === t88.type;
}
var g47 = [];
var _41 = class extends d7 {
  constructor(t88) {
    super(t88), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.handles.remove("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new V2(), this.view = null, this._allLayerViewsChange = (t89) => {
      this.handles.remove("suspension");
      const e78 = this.get("view.allLayerViews");
      e78 && this.handles.add(e78.map((t90) => l6(() => {
        var _a;
        return [t90.suspended, (_a = t90.layer) == null ? void 0 : _a.attributionVisible];
      }, () => this._updateAttributionItems())), "suspension"), t89 && t89.removed && t89.removed.forEach((t90) => {
        this._pendingAttributions.delete(t90), this._fetchedAttributionData.delete(t90);
      }), this._updateAttributionItems();
    }, this.handles.add([a9(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t89) => this._allLayerViewsChange(t89), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), f6(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    return this.get("view.ready") ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t88 = this.view, e78 = t88 == null ? void 0 : t88.allLayerViews;
    g47.length = 0, t88 && e78 ? (e78.forEach((e79) => {
      var _a;
      if (e79.suspended || !((_a = e79.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const i78 = e79.layer;
      if (m52(i78, "user"))
        return void y40(g47, e79, i78.copyright);
      if (i78.hasAttributionData) {
        if (this._fetchedAttributionData.has(e79)) {
          const r80 = this._fetchedAttributionData.get(e79);
          return void (r80 ? y40(g47, e79, this._getDynamicAttribution(r80, t88, i78)) : m52(i78) && y40(g47, e79, i78.copyright));
        }
        return void this._fetchAttributionData(e79);
      }
      const r79 = i78.get("portalItem.accessInformation");
      y40(g47, e79, r79 || i78.copyright);
    }), f58(this.items, g47) && (this.items.removeAll(), this.items.addMany(g47)), g47.length = 0, this.notifyChange("state")) : this._clear();
  }
  async _fetchAttributionData(t88) {
    if (this._pendingAttributions.has(t88))
      return;
    this._pendingAttributions.add(t88);
    const i78 = await _3(t88.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t88)) {
      const e78 = i78.ok ? this._createContributionIndex(i78.value, b30(t88.layer)) : null;
      this._pendingAttributions.delete(t88), this._fetchedAttributionData.set(t88, e78);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t88, e78) {
    const i78 = t88.contributors, r79 = {};
    if (!i78)
      return r79;
    for (let o77 = 0; o77 < i78.length; o77++) {
      const t89 = i78[o77], s84 = t89.coverageAreas;
      if (!s84)
        return;
      for (const i79 of s84) {
        const s85 = i79.bbox, n103 = i79.zoomMin - (e78 && i79.zoomMin ? 1 : 0), a85 = i79.zoomMax - (e78 && i79.zoomMax ? 1 : 0), c75 = new M({ xmin: s85[1], ymin: s85[0], xmax: s85[3], ymax: s85[2], spatialReference: f2.WGS84 }), l75 = { extent: d4(c75), attribution: t89.attribution || "", score: null != i79.score ? i79.score : 100, id: o77 };
        for (let t90 = n103; t90 <= a85; t90++)
          r79[t90] ?? (r79[t90] = []), r79[t90].push(l75);
      }
    }
    return r79.maxKey = Math.max.apply(null, Object.keys(r79)), r79;
  }
  _getDynamicAttribution(t88, e78, i78) {
    var _a;
    const { extent: r79, scale: o77 } = e78;
    let s84 = ((_a = i78.tileInfo) == null ? void 0 : _a.scaleToZoom(o77)) ?? 0;
    if (s84 = Math.min(t88.maxKey ?? 0, Math.round(s84)), !r79 || null == s84 || s84 <= -1)
      return "";
    const n103 = t88[s84], a85 = g2(r79.center.clone().normalize(), e78.spatialReference), c75 = /* @__PURE__ */ new Set();
    return n103 ? n103.filter((t89) => {
      const e79 = t89.id, i79 = !c75.has(e79) && a85 && t89.extent && t7(t89.extent, a85);
      return i79 && c75.add(e79), i79;
    }).sort((t89, e79) => e79.score - t89.score || t89.objectId - e79.objectId).map((t89) => t89.attribution).join(", ") : "";
  }
};
e([y({ readOnly: true, type: V2 })], _41.prototype, "items", void 0), e([y({ readOnly: true })], _41.prototype, "state", null), e([y()], _41.prototype, "view", void 0), _41 = e([a4("esri.widgets.Attribution.AttributionViewModel")], _41);
var A38 = _41;

// node_modules/@arcgis/core/widgets/Attribution.js
var l74 = "esri-attribution";
var d60 = { base: `${l74} esri-widget`, poweredBy: `${l74}__powered-by`, sources: `${l74}__sources`, open: `${l74}--open`, sourcesOpen: `${l74}__sources--open`, link: `${l74}__link`, widgetIcon: "esri-icon-description", interactive: "esri-interactive" };
var a81 = class extends W {
  constructor(e78, t88) {
    super(e78, t88), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e79) => e79.forEach(({ target: e80 }) => this._checkSourceTextOverflow(e80))), this.iconClass = d60.widgetIcon, this.icon = null, this.itemDelimiter = " | ", this.messages = null, this.viewModel = new A38();
  }
  initialize() {
    this.addHandles(a9(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e78, t88) => (e78.includes(t88.text) || e78.push(t88.text), e78), []).join(this.itemDelimiter);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e78) {
    this._overrideIfSome("label", e78);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e78) {
    this.viewModel.view = e78;
  }
  render() {
    const e78 = { [d60.open]: this._isOpen };
    return n12("div", { bind: this, class: this.classes(d60.base, e78), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this.renderSourcesNode(), this.renderPoweredBy());
  }
  renderPoweredBy() {
    return n12("div", { class: d60.poweredBy }, "Powered by", " ", n12("a", { class: d60.link, href: "http://www.esri.com/", target: "_blank", rel: "noreferrer" }, "Esri"));
  }
  renderSourcesNode() {
    const e78 = this._isOpen, t88 = this._isInteractive, i78 = t88 ? "0" : "", { attributionText: r79 } = this, s84 = { [d60.sourcesOpen]: e78, [d60.interactive]: t88 };
    return n12("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(d60.sources, s84), innerHTML: r79, tabindex: i78 });
  }
  _afterSourcesNodeCreate(e78) {
    this._prevSourceNodeHeight = e78.clientWidth, this._resizeObserver.observe(e78);
  }
  _checkSourceTextOverflow(e78) {
    let t88 = false;
    const { clientHeight: i78, clientWidth: r79, scrollWidth: s84 } = e78, o77 = s84 > r79, n103 = this._attributionTextOverflowed !== o77;
    if (this._attributionTextOverflowed = o77, n103 && (t88 = true), this._isOpen) {
      const e79 = i78 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i78, e79 && (this._isOpen = false, t88 = true);
    }
    t88 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e([y()], a81.prototype, "_isOpen", void 0), e([y()], a81.prototype, "_isInteractive", null), e([y()], a81.prototype, "_attributionTextOverflowed", void 0), e([y()], a81.prototype, "_prevSourceNodeHeight", void 0), e([y({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], a81.prototype, "attributionText", null), e([y()], a81.prototype, "iconClass", void 0), e([y()], a81.prototype, "icon", void 0), e([y()], a81.prototype, "itemDelimiter", void 0), e([y()], a81.prototype, "label", null), e([y(), e11("esri/widgets/Attribution/t9n/Attribution")], a81.prototype, "messages", void 0), e([y()], a81.prototype, "view", null), e([y({ type: A38 })], a81.prototype, "viewModel", void 0), e([t9()], a81.prototype, "_toggleState", null), a81 = e([a4("esri.widgets.Attribution")], a81);
var h55 = a81;

// node_modules/@arcgis/core/widgets/Compass/CompassViewModel.js
var h56 = "esri.widgets.CompassViewModel";
var d61 = class extends t29(m) {
  constructor(t88) {
    super(t88), this._handles = new t3(), this.orientation = { x: 0, y: 0, z: 0 }, this.view = null, this._updateForCamera = this._updateForCamera.bind(this), this._updateForRotation = this._updateForRotation.bind(this), this._updateRotationWatcher = this._updateRotationWatcher.bind(this);
  }
  initialize() {
    this._handles.add(l6(() => this.view, this._updateRotationWatcher, h3));
  }
  destroy() {
    o(this._handles), this.view = null;
  }
  get canShowNorth() {
    const t88 = this.get("view.spatialReference");
    return !(!t88 || !t88.isWebMercator && !t88.isGeographic);
  }
  get state() {
    return this.get("view.ready") ? this.canShowNorth ? "compass" : "rotation" : "disabled";
  }
  reset() {
    var _a;
    if (!this.get("view.ready"))
      return;
    const t88 = {};
    "2d" === ((_a = this.view) == null ? void 0 : _a.type) ? t88.rotation = 0 : t88.heading = 0, this.callGoTo({ target: t88 });
  }
  _updateForRotation(t88) {
    null != t88 && (this.orientation = { z: t88 });
  }
  _updateForCamera(t88) {
    if (!t88)
      return;
    const o77 = -t88.heading;
    this.orientation = { x: 0, y: 0, z: o77 };
  }
  _updateRotationWatcher(t88) {
    this._handles.removeAll(), t88 && this._handles.add("2d" === t88.type ? l6(() => t88 == null ? void 0 : t88.rotation, this._updateForRotation, h3) : l6(() => t88 == null ? void 0 : t88.camera, this._updateForCamera, h3));
  }
};
e([y({ readOnly: true })], d61.prototype, "canShowNorth", null), e([y()], d61.prototype, "orientation", void 0), e([y({ readOnly: true })], d61.prototype, "state", null), e([y()], d61.prototype, "view", void 0), d61 = e([a4(h56)], d61);
var c71 = d61;

// node_modules/@arcgis/core/widgets/Compass/css.js
var i76 = { base: "esri-compass esri-widget--button esri-widget", text: "esri-icon-font-fallback-text", icon: "esri-compass__icon", rotationIcon: "esri-icon-dial", northIcon: "esri-icon-compass", widgetIcon: "esri-icon-locate-circled", interactive: "esri-interactive", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/Compass.js
var n101 = class extends W {
  constructor(e78, s84) {
    super(e78, s84), this.iconClass = i76.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new c71();
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e78) {
    this.viewModel.goToOverride = e78;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e78) {
    this._overrideIfSome("label", e78);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e78) {
    this.viewModel.view = e78;
  }
  reset() {
    return this.viewModel.reset();
  }
  render() {
    const { orientation: e78, state: s84 } = this.viewModel, o77 = "disabled" === s84, t88 = "compass" === ("rotation" === s84 ? "rotation" : "compass"), r79 = o77 ? -1 : 0, a85 = { [i76.disabled]: o77, [i76.interactive]: !o77 }, p70 = { [i76.northIcon]: t88, [i76.rotationIcon]: !t88 }, { messages: n103 } = this;
    return n12("div", { bind: this, class: this.classes(i76.base, a85), onclick: this._reset, onkeydown: this._reset, role: "button", tabIndex: r79, "aria-label": n103.reset, title: n103.reset }, n12("span", { "aria-hidden": "true", class: this.classes(i76.icon, p70), styles: this._toRotationTransform(e78) }), n12("span", { class: i76.text }, n103.reset));
  }
  _reset() {
    this.viewModel.reset();
  }
  _toRotationTransform(e78) {
    return { transform: `rotateZ(${e78.z}deg)` };
  }
};
e([y()], n101.prototype, "goToOverride", null), e([y()], n101.prototype, "iconClass", void 0), e([y()], n101.prototype, "icon", void 0), e([y()], n101.prototype, "label", null), e([y(), e11("esri/widgets/Compass/t9n/Compass")], n101.prototype, "messages", void 0), e([y()], n101.prototype, "view", null), e([y({ type: c71 })], n101.prototype, "viewModel", void 0), e([t9()], n101.prototype, "_reset", null), n101 = e([a4("esri.widgets.Compass")], n101);
var d62 = n101;

// node_modules/@arcgis/core/widgets/NavigationToggle/css.js
var t86 = "esri-navigation-toggle";
var o76 = { base: `${t86} esri-widget`, button: `${t86}__button esri-widget--button`, activeButton: `${t86}__button--active`, panButton: `${t86}__button--pan`, rotateButton: `${t86}__button--rotate`, isLayoutHorizontal: `${t86}--horizontal`, rotationIcon: "esri-icon-rotate", panIcon: "esri-icon-pan", widgetIcon: "esri-icon-pan2", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var r78 = class extends m {
  constructor(t88) {
    super(t88), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.own(f6(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    var _a;
    return this.get("view.ready") && "3d" === ((_a = this.view) == null ? void 0 : _a.type) ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    this.get("view.inputManager").primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate";
  }
};
e([y({ readOnly: true })], r78.prototype, "state", null), e([y()], r78.prototype, "navigationMode", void 0), e([y()], r78.prototype, "view", void 0), r78 = e([a4("esri.widgets.NavigationToggleViewModel")], r78);
var a82 = r78;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var p67 = class extends W {
  constructor(t88, o77) {
    super(t88, o77), this.iconClass = o76.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new a82();
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t88) {
    this._overrideIfSome("label", t88);
  }
  set layout(t88) {
    "horizontal" !== t88 && (t88 = "vertical"), this._set("layout", t88);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t88) {
    this.viewModel.view = t88;
  }
  toggle() {
    return this.viewModel.toggle();
  }
  render() {
    const t88 = "disabled" === this.get("viewModel.state"), o77 = "pan" === this.get("viewModel.navigationMode"), e78 = { [o76.disabled]: t88, [o76.isLayoutHorizontal]: "horizontal" === this.layout }, s84 = { [o76.activeButton]: o77 }, r79 = { [o76.activeButton]: !o77 }, a85 = t88 ? -1 : 0, l75 = this.messages.toggle;
    return n12("div", { bind: this, class: this.classes(o76.base, e78), onclick: this._toggle, onkeydown: this._toggle, tabIndex: a85, "aria-label": l75, title: l75 }, n12("div", { class: this.classes(o76.button, o76.panButton, s84) }, n12("span", { class: o76.panIcon })), n12("div", { class: this.classes(o76.button, o76.rotateButton, r79) }, n12("span", { class: o76.rotationIcon })));
  }
  _toggle() {
    this.toggle();
  }
};
e([y()], p67.prototype, "iconClass", void 0), e([y()], p67.prototype, "icon", void 0), e([y()], p67.prototype, "label", null), e([y({ value: "vertical" })], p67.prototype, "layout", null), e([y(), e11("esri/widgets/NavigationToggle/t9n/NavigationToggle")], p67.prototype, "messages", void 0), e([y()], p67.prototype, "view", null), e([y({ type: a82 })], p67.prototype, "viewModel", void 0), e([t9()], p67.prototype, "_toggle", null), p67 = e([a4("esri.widgets.NavigationToggle")], p67);
var g48 = p67;

// node_modules/@arcgis/core/widgets/Zoom/IconButton.js
var c72 = { button: "esri-widget--button esri-widget", disabled: "esri-disabled", interactive: "esri-interactive", iconText: "esri-icon-font-fallback-text", icon: "esri-icon" };
var n102 = class extends W {
  constructor() {
    super(...arguments), this.enabled = true, this.iconClass = null, this.icon = null, this.title = "";
  }
  render() {
    const t88 = this.enabled ? 0 : -1, s84 = { [c72.disabled]: !this.enabled, [c72.interactive]: this.enabled };
    return n12("div", { bind: this, class: this.classes(c72.button, s84), onclick: this._triggerAction, onkeydown: this._triggerAction, role: "button", tabIndex: t88, title: this.title }, n12("span", { "aria-hidden": "true", role: "presentation", class: this.classes(c72.icon, this.iconClass ?? "") }), n12("span", { class: c72.iconText }, this.title));
  }
  _triggerAction() {
    this.action.call(this);
  }
};
e([y()], n102.prototype, "action", void 0), e([y()], n102.prototype, "enabled", void 0), e([y()], n102.prototype, "iconClass", void 0), e([y()], n102.prototype, "icon", void 0), e([y()], n102.prototype, "title", void 0), e([t9()], n102.prototype, "_triggerAction", null), n102 = e([a4("esri.widgets.IconButton")], n102);
var a83 = n102;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions2D.js
var s83 = class extends m {
  get canZoomIn() {
    if (!this.get("view.ready"))
      return false;
    const e78 = this.get("view.animation.target.scale") || this.get("view.scale"), t88 = this.get("view.constraints.effectiveMaxScale");
    return 0 === t88 || e78 > t88;
  }
  get canZoomOut() {
    if (!this.get("view.ready"))
      return false;
    const e78 = this.get("view.animation.target.scale") || this.get("view.scale"), t88 = this.get("view.constraints.effectiveMinScale");
    return 0 === t88 || e78 < t88;
  }
};
e([y({ readOnly: true })], s83.prototype, "canZoomIn", null), e([y({ readOnly: true })], s83.prototype, "canZoomOut", null), e([y()], s83.prototype, "view", void 0), s83 = e([a4("esri.widgets.Zoom.ZoomConditions2D")], s83);
var i77 = s83;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions3D.js
var t87 = class extends m {
  get canZoomIn() {
    return !!this.view.ready;
  }
  get canZoomOut() {
    return !!this.view.ready;
  }
};
e([y({ readOnly: true })], t87.prototype, "canZoomIn", null), e([y({ readOnly: true })], t87.prototype, "canZoomOut", null), e([y()], t87.prototype, "view", void 0), t87 = e([a4("esri.widgets.Zoom.ZoomConditions3D")], t87);
var c73 = t87;

// node_modules/@arcgis/core/widgets/Zoom/ZoomViewModel.js
var m53 = class extends m {
  constructor(o77) {
    super(o77);
  }
  destroy() {
    this.view = null;
  }
  get canZoomIn() {
    return null != this._zoomConditions && this._zoomConditions.canZoomIn;
  }
  get canZoomOut() {
    var _a;
    return null != this._zoomConditions && ((_a = this._zoomConditions) == null ? void 0 : _a.canZoomOut);
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? "ready" : "disabled";
  }
  set view(o77) {
    o77 ? "2d" === o77.type ? this._zoomConditions = new i77({ view: o77 }) : "3d" === o77.type && (this._zoomConditions = new c73({ view: o77 })) : this._zoomConditions = null, this._set("view", o77);
  }
  zoomIn() {
    if (!this.canZoomIn)
      return;
    const o77 = this.view;
    "2d" === o77.type ? o77.mapViewNavigation.zoomIn() : y2(o77.goTo({ zoomFactor: 2 }));
  }
  zoomOut() {
    if (!this.canZoomOut)
      return;
    const o77 = this.view;
    "2d" === o77.type ? o77.mapViewNavigation.zoomOut() : y2(o77.goTo({ zoomFactor: 0.5 }));
  }
};
e([y()], m53.prototype, "_zoomConditions", void 0), e([y()], m53.prototype, "canZoomIn", null), e([y()], m53.prototype, "canZoomOut", null), e([y({ readOnly: true })], m53.prototype, "state", null), e([y()], m53.prototype, "view", null), m53 = e([a4("esri.widgets.Zoom.ZoomViewModel")], m53);
var p68 = m53;

// node_modules/@arcgis/core/widgets/Zoom.js
var u56 = { base: "esri-zoom esri-widget", horizontalLayout: "esri-zoom--horizontal", zoomInIcon: "esri-icon-plus", zoomOutIcon: "esri-icon-minus", widgetIcon: "esri-icon-zoom-in-magnifying-glass" };
var a84 = class extends W {
  constructor(o77, t88) {
    super(o77, t88), this.iconClass = u56.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new p68();
  }
  initialize() {
    this._zoomInButton = new a83({ action: this.zoomIn.bind(this), iconClass: u56.zoomInIcon }), this._zoomOutButton = new a83({ action: this.zoomOut.bind(this), iconClass: u56.zoomOutIcon });
  }
  destroy() {
    this._zoomInButton = l(this._zoomInButton), this._zoomOutButton = l(this._zoomOutButton);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(o77) {
    this._overrideIfSome("label", o77);
  }
  set layout(o77) {
    "horizontal" !== o77 && (o77 = "vertical"), this._set("layout", o77);
  }
  set view(o77) {
    this.viewModel.view = o77;
  }
  get view() {
    return this.viewModel.view;
  }
  render() {
    const o77 = this.viewModel, t88 = { [u56.horizontalLayout]: "horizontal" === this.layout }, { canZoomIn: s84, canZoomOut: e78 } = o77;
    this._zoomInButton.enabled = s84, this._zoomOutButton.enabled = e78;
    const { zoomIn: i78, zoomOut: r79 } = this.messages;
    return this._zoomInButton.title = i78, this._zoomOutButton.title = r79, n12("div", { class: this.classes(u56.base, t88) }, this._zoomInButton.render(), this._zoomOutButton.render());
  }
  zoomIn() {
    return this.viewModel.zoomIn();
  }
  zoomOut() {
    return this.viewModel.zoomOut();
  }
};
e([y()], a84.prototype, "iconClass", void 0), e([y()], a84.prototype, "icon", void 0), e([y()], a84.prototype, "label", null), e([y({ value: "vertical" })], a84.prototype, "layout", null), e([y(), e11("esri/widgets/Zoom/t9n/Zoom")], a84.prototype, "messages", void 0), e([y()], a84.prototype, "view", null), e([y({ type: p68 })], a84.prototype, "viewModel", void 0), a84 = e([a4("esri.widgets.Zoom")], a84);
var c74 = a84;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m54(t88) {
  return void 0 !== (t88 == null ? void 0 : t88.view);
}
var u57 = class extends L27 {
  constructor(t88) {
    super(t88), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [], this._updateViewAwareWidgets = (t89) => {
      this.components.forEach((o77) => {
        const e78 = this._find(o77), s84 = e78 == null ? void 0 : e78.widget;
        m54(s84) && (s84.view = t89);
      });
    }, this._componentsWatcher = (t89, o77) => {
      this._removeComponents(o77), this._addComponents(t89), this._adjustPadding(t89);
    };
  }
  initialize() {
    this.addHandles([l6(() => this.components, this._componentsWatcher, h3), l6(() => this.view, this._updateViewAwareWidgets, h3)]);
  }
  _add(t88, o77, e78, s84, i78) {
    let r79 = t88;
    if ("string" == typeof t88 && this._defaultPositionLookup[t88]) {
      if (this._find(t88))
        return;
      r79 = this._createComponent(t88);
    }
    super._add(r79, o77, e78, s84, i78);
  }
  _removeComponents(t88) {
    t88.forEach((t89) => {
      const o77 = this._find(t89);
      o77 && (this.remove(o77), o77.destroy());
    });
  }
  _adjustPadding(t88) {
    if (!t88.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t89 } = this.padding;
      this.padding = t89;
    }
  }
  _addComponents(t88) {
    this.constructed && t88.forEach((t89) => this.add(this._createComponent(t89), this._defaultPositionLookup[t89]));
  }
  _createComponent(t88) {
    const o77 = this._createWidget(t88);
    return new l73({ id: t88, node: o77 });
  }
  _createWidget(t88) {
    const { view: o77 } = this;
    switch (t88) {
      case "attribution":
        return new h55({ view: o77 });
      case "compass":
        return new d62({ view: o77 });
      case "navigation-toggle":
        return new g48({ view: o77 });
      case "zoom":
        return new c74({ view: o77 });
    }
  }
};
e([y()], u57.prototype, "components", void 0), u57 = e([a4("esri.views.ui.DefaultUI")], u57);
var h57 = u57;

// node_modules/@arcgis/core/views/ui/3d/DefaultUI3D.js
var e77 = class extends h57 {
  constructor(o77) {
    super(o77), this.components = ["attribution", "zoom", "navigation-toggle", "compass"];
  }
};
e([y()], e77.prototype, "components", void 0), e77 = e([a4("esri.views.ui.3d.DefaultUI3D")], e77);
var p69 = e77;

// node_modules/@arcgis/core/views/SceneView.js
var nt5 = class extends w15(w17(C11(z10))) {
  constructor(e78) {
    super(e78), this._userClippingArea = null, this._clippingArea = null, this._initialDefaultSpatialReference = null, this._defaults = {}, this._externallySet = { environment: false }, this._createGraphicsViewController = null, this._resolveWhenReady = [], this._propertiesPool = new o27({ slicePlane: G6 }, this), this._resourceController = T23(this), this._defaultToMapOptions = { include: /* @__PURE__ */ new Set() }, this._defaultHitTestOptions = { exclude: /* @__PURE__ */ new Set() }, this.deconflictor = new _26({ view: this }), this.labeler = new F12({ view: this, deconflictor: this.deconflictor.labels }), this.sharedSymbolResources = null, this.analyses = new t46(), this.basemapTerrain = null, this.elevationProvider = null, this.canvas = null, this.constraints = new c31(), this.environmentManager = new k10(), this.floors = new V2(), this.fullOpacity = 1, this.graphicsView = null, this.analysisViewManager = new v16({ view: this }), this.groundView = null, this.map = null, this.screenSizePerspectiveEnabled = true, this.state = new f39(), this.spatialReference = null, this.alphaCompositingEnabled = false, this.preserveDrawingBufferEnabled = false, this.supersampleScreenshotsEnabled = true, this.type = "3d", this.ui = new p69(), this._numUpdating = 0, this._lastUpdateTime = 0, this.updatingProgress = 0.5, this.highlightOptions = new f40(), this.voxelWasm = null, this.voxelWasmPromise = null, c12(), e78 && e78.environment || (this._defaults.environment = new f28(), this.environment = this._defaults.environment);
    const t88 = (e79 = null) => {
      null != e79 && e79.type === E3.MOVE || (this._updatingChanged(), this.map && this.map.allLayers.forEach(async (e80) => {
        try {
          await e80.when();
        } catch {
        }
        this._updatingChanged();
      }));
    };
    this.addHandles([a9(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.allLayers;
    }, "after-changes", (e79) => t88(e79), { onListenerAdd: () => t88(), onListenerRemove: () => t88(), sync: true }), this.allLayerViews.on("after-changes", (e79) => this._updateUpdatingMonitors(e79)), l6(() => this.map, (e79) => {
      e79 && "load" in e79 && e79.load && e79.load().catch(() => {
      });
    })]), this.inputManager = new N13({ view: this }), this.stateManager = new J9({ view: this });
  }
  initialize() {
    this.groundView = new d27({ view: this }), this._updateUpdatingMonitors();
    const e78 = () => this._updateDefaultToMapOptions();
    this.addHandles(a9(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.allLayers;
    }, "after-changes", e78, { onListenerAdd: e78, onListenerRemove: e78 })), this.updatingHandles.add(() => this.qualitySettings.memoryLimit, (e79) => {
      this.resourceController && (this.resourceController.memoryController.maxMemory = e79);
    }, h3), this.updatingHandles.add(() => this.qualitySettings.additionalCacheMemory, (e79) => {
      this.resourceController && (this.resourceController.memoryController.additionalCacheMemory = e79);
    }, h3), this.updatingHandles.add(() => this.qualitySettings.frameRate ?? 0, (e79) => F(e79 > 0 ? 1e3 / Math.ceil(e79) : 0), h3), this.updatingHandles.add(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.ground;
    }, e78, w3), this.updatingHandles.add(() => {
      var _a, _b;
      return (_b = (_a = this.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.opacity;
    }, () => this._updateDefaultHitTestOptions(), w3), this.addHandles(l6(() => this.spatialReference, () => this.notifyChange("clippingArea"), U3));
  }
  destroy() {
    var _a;
    this.destroyed || (this.updatingHandles.removeAll(), this.removeAllHandles(), this.invalidate(), this.activeTool = null, this.layerViewManager.clear(), this._exitSurface(), this._disposeGraphicsView(), this.sharedSymbolResources = l(this.sharedSymbolResources), this._set("labeler", l(this.labeler)), this._set("deconflictor", l(this.deconflictor)), this._resourceController = l(this._resourceController), this._set("stateManager", l(this.stateManager)), this._set("inputManager", l(this.inputManager)), this.state.destroy(), this._propertiesPool.destroy(), this.removeHandles("updatingMonitors"), this._set("environmentManager", l(this.environmentManager)), this.groundView = l(this.groundView), this._exitBasemapTerrain(), (_a = this._stage) == null ? void 0 : _a.destroy(), this.removeAllHandles(), this.updatingHandles.removeAll(), this.handles.removeAll());
  }
  get renderSpatialReference() {
    return this.renderCoordsHelper && this.renderCoordsHelper.spatialReference;
  }
  get basemapSpatialReference() {
    var _a;
    return (_a = this.basemapTerrain) == null ? void 0 : _a.spatialReference;
  }
  get animation() {
    var _a;
    return (_a = this.state) == null ? void 0 : _a.animation;
  }
  get camera() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.camera;
  }
  set camera(e78) {
    this.stateManager && (this.stateManager.camera = e78);
  }
  get contentCamera() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.contentCamera;
  }
  set contentCamera(e78) {
    this.stateManager && (this.stateManager.contentCamera = e78);
  }
  installContentCameraReset(e78 = { sticky: false }) {
    return this.stateManager.installContentCameraReset(e78);
  }
  get center() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.center;
  }
  set center(e78) {
    this.stateManager && (this.stateManager.center = e78);
  }
  get clippingArea() {
    var _a;
    if ("global" === this.viewingMode)
      return null;
    let e78 = this._userClippingArea || ("clippingArea" in this.map ? (_a = this.map) == null ? void 0 : _a.clippingArea : void 0);
    return !this._userClippingArea && !this.get("map.clippingEnabled") || null == e78 ? (this._clippingArea = null, null) : e78 instanceof M ? this.spatialReference && (e78 = lt5(e78, this.spatialReference), null == e78) ? (s3.getLogger(this).error("#clippingArea", "setting clippingArea with incompatible SpatialReference"), this._clippingArea) : (e78 = e78.clone(), null == e78.intersection(this._groundAndLayersExtent) && (e78.xmin = e78.xmax, e78.ymin = e78.ymax), e78.zmin = void 0, e78.zmax = void 0, e78.equals(this._clippingArea) || (this._clippingArea = e78), this._clippingArea) : (s3.getLogger(this).error("#clippingArea", "only clippingArea geometries of type Extent are supported"), this._clippingArea);
  }
  set clippingArea(e78) {
    this.ready && "global" === this.viewingMode && null != e78 ? s3.getLogger(this).error("#clippingArea=", "Clipping area is only supported in local viewingMode") : this._userClippingArea = e78;
  }
  get renderDataExtent() {
    if (this.state.viewingMode === l14.Global)
      return null;
    const e78 = this.renderSpatialReference, t88 = this.dataExtent;
    return null == t88 || null == e78 || t88.spatialReference.equals(e78) ? t88 : lt5(t88, e78);
  }
  get dataExtent() {
    let e78 = this._groundAndLayersExtent;
    const t88 = this.spatialReference || f2.WGS84, i78 = lt5(this.clippingArea, t88);
    null != i78 && (e78 = null != e78 ? e78.intersection(i78) : i78);
    const r79 = this._get("dataExtent");
    return null != e78 && e78.equals(r79) ? r79 : e78;
  }
  get _groundAndLayersExtent() {
    const e78 = this.spatialReference || f2.WGS84;
    let t88;
    const i78 = (i79) => {
      const r80 = lt5(i79, e78);
      null != r80 && (null != t88 ? t88.union(r80) : t88 = r80.clone());
    }, r79 = this.basemapTerrain;
    if (r79 == null ? void 0 : r79.spatialReference) {
      const e79 = r79.groundExtent;
      i78(new M({ xmin: e79[0], ymin: e79[1], zmin: 0, xmax: e79[2], ymax: e79[3], zmax: 0, spatialReference: r79.spatialReference }));
    }
    if (this.map) {
      const e79 = (e80) => {
        null == e80.fullExtent || "graphics" === e80.type && e80.internal || i78(e80.fullExtent);
      };
      this.map.allLayers.forEach((t89) => e79(t89));
    }
    if (null == t88)
      return null;
    t88.hasZ ? (t88.zmin = Math.min(0, t88.zmin ?? 0), t88.zmax = Math.max(0, t88.zmax ?? 0)) : (t88.zmin = 0, t88.zmax = 0);
    const s84 = this._get("_groundAndLayersExtent");
    return t88.equals(s84) ? s84 : t88;
  }
  set environment(e78) {
    e78 !== this._defaults.environment && (this._externallySet.environment = true), this._set("environment", e78);
  }
  castEnvironment(e78) {
    return e78 ? e78 instanceof f28 ? e78 : e78 instanceof j10 ? null != this.environment ? this.environment.cloneWithWebsceneEnvironment(e78) : f28.fromWebsceneEnvironment(e78) : d(f28, e78) : new f28();
  }
  get extent() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.extent;
  }
  set extent(e78) {
    this.stateManager && (this.stateManager.extent = e78);
  }
  get screenCenter() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.screenCenter;
  }
  get frustum() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.frustum;
  }
  get initialExtentRequired() {
    return this.stateManager && !this.stateManager.hasInitialView;
  }
  get _defaultsFromMapSettings() {
    return { required: { tileInfo: false, heightModelInfo: true, extent: false } };
  }
  get interacting() {
    var _a;
    return this.navigating || (((_a = this.toolViewManager) == null ? void 0 : _a.interacting) ?? false);
  }
  get stationary() {
    return !this.animation && !this.resizing && (null == this.state || this.state.stationary);
  }
  get navigating() {
    var _a;
    return ((_a = this.state) == null ? void 0 : _a.navigating) ?? false;
  }
  get padding() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.padding;
  }
  set padding(e78) {
    this.stateManager && (this.stateManager.padding = e78);
  }
  set qualityProfile(e78) {
    o58.isValidProfile(e78) && (o58.apply(e78, this.qualitySettings), this._set("qualityProfile", e78));
  }
  get qualityProfile() {
    return this._get("qualityProfile") || o58.getDefaultProfile();
  }
  set slicePlane(e78) {
    if (null != this._stage && this._stage.renderer.setParameters({ slicePlane: e78 }), null == e78)
      return void this._set("slicePlane", null);
    const t88 = this._propertiesPool.get("slicePlane");
    Z2(e78, t88), this._set("slicePlane", t88);
  }
  get typeSpecificPreconditionsReady() {
    return !!this.viewingMode;
  }
  get resolution() {
    return null != this.spatialReference ? r31(this.scale, this.spatialReference) : 0;
  }
  get scale() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.scale;
  }
  set scale(e78) {
    this.stateManager && (this.stateManager.scale = e78);
  }
  get heightModelInfo() {
    const e78 = this.getDefaultHeightModelInfo();
    return null != e78 ? v7.deriveUnitFromSR(e78, this.spatialReference) : null;
  }
  get updating() {
    var _a, _b, _c;
    if (this.destroyed)
      return false;
    let e78 = 0, t88 = this.layerViewManager.updating, i78 = t88 ? this.layerViewManager.updatingRemaining : 0;
    this.allLayerViews.forEach((r80) => {
      if (r80.isFulfilled()) {
        if (r80.updating) {
          if (t88 = true, r80.suspended || N4(r80))
            return;
          ++i78, e78 += r80.updatingProgress;
        }
      } else
        ++i78;
    });
    for (const s84 of this._updatingObjects)
      if (null != s84 && s84.updating) {
        const t89 = 0.1;
        i78 += t89, e78 += 0.5 * t89;
      }
    for (const s84 of this._updatingObjectsWithProgress)
      null != s84 && s84.updating && (++i78, e78 += s84.updatingProgress);
    const r79 = !this.stateManager.test.updatingIgnoreRenderState && this.state.updating;
    if (t88 = !!(t88 || i78 > 0 || this.updatingHandles.updating || !this.ready || !this.stationary || r79 || this._createGraphicsViewController || ((_a = this.inputManager) == null ? void 0 : _a.updating) || ((_c = (_b = this.map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.some((e79) => !e79.isFulfilled()))), t88 ? (this._numUpdating = Math.max(i78, this._numUpdating), e78 += this._numUpdating - i78) : this._numUpdating = 0, this._numUpdating > 0 ? e78 /= this._numUpdating : e78 = t88 ? 0 : 1, this._get("updatingProgress") !== e78) {
      const i79 = performance.now();
      if (e78 < 1) {
        const t89 = Math.min((i79 - this._lastUpdateTime) / 2e3, 1);
        e78 = this.updatingProgress * (1 - t89) + e78 * t89;
      }
      this._set("updatingProgress", e78), this._lastUpdateTime = t88 && e78 < 1 ? i79 : 0;
    }
    return t88;
  }
  get _updatingObjects() {
    return [this.graphicsView, this.basemapView, this._resourceController, this._stage, this.featureTiles, this.pointsOfInterest, this.environmentManager, this.overlay, this._featureTreeDebugger, this.toolViewManager, this.analysisViewManager];
  }
  get _updatingObjectsWithProgress() {
    return [this.deconflictor, this.labeler, this.basemapTerrain];
  }
  get viewingMode() {
    var _a;
    const e78 = this._predeterminedViewingMode;
    if (null != e78)
      return a20(e78);
    const t88 = this.spatialReference;
    return t88 ? null != ((_a = this.defaultsFromMap) == null ? void 0 : _a.viewingMode) && t88.equals(this.defaultsFromMap.spatialReference) ? a20(this.defaultsFromMap.viewingMode) : r49(t88, l14.Global) ? "global" : "local" : "global";
  }
  set viewingMode(e78) {
    this.ready ? s3.getLogger(this).error("#viewingMode", "viewingMode cannot be set once view is ready") : this._overrideIfSome("viewingMode", e78);
  }
  get viewpoint() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.viewpoint;
  }
  set viewpoint(e78) {
    this.stateManager && (this.stateManager.viewpoint = e78);
  }
  get zoom() {
    return this.stateManager.zoom;
  }
  set zoom(e78) {
    this.stateManager && (this.stateManager.zoom = e78);
  }
  get resourceController() {
    return this._resourceController;
  }
  get performanceInfo() {
    return new s65(this);
  }
  on(e78, t88, i78, r79) {
    const s84 = this.viewEvents.on(e78, t88, i78, r79);
    return s84 || super.on(e78, t88);
  }
  hasEventListener(e78) {
    return super.hasEventListener(e78) || this.viewEvents.hasHandler(e78);
  }
  toMap(e78, t88) {
    if (!this.ready)
      return s3.getLogger(this).error("#toMap()", "Scene view cannot be used before it is ready"), null;
    const i78 = t88 ? this.externalToInternalIntersectOptions(t88) : this._defaultToMapOptions, r79 = null != i78.graphics && (null != i78.graphics.include || null != i78.graphics.exclude), s84 = o30(e78) ? r33(this, e78) : e78, n103 = d6(s84);
    i78.enableDraped = i78.include && !i78.include.has(L4) || i78.exclude && i78.exclude.has(L4);
    const a85 = this.sceneIntersectionHelper, o77 = A15(this.state.viewingMode);
    if (o77.options.selectionMode = true, o77.options.store = r79 ? t33.ALL : t33.MIN, a85.intersectIntersectorScreen(n103, o77, i78), r79) {
      for (const e79 of o77.results.all) {
        const t89 = d17(e79, this);
        if (null == t89)
          return this._intersectResultToMapPoint(e79);
        if ("graphic" !== t89.type || this._testGraphicUidFilter(i78.graphics, t89.graphic))
          return this._intersectResultToMapPoint(e79);
      }
      return null;
    }
    return this._intersectResultToMapPoint(o77.results.min);
  }
  toScreen(e78) {
    if (!this.ready)
      return s3.getLogger(this).error("#toScreen()", "Scene view cannot be used before it is ready"), null;
    const t88 = (null == e78.z ? a30(this.elevationProvider, e78) : null) ?? 0;
    return In(e78, ht5, this.renderSpatialReference, t88), this.state.camera.projectToScreen(ht5, dt4), c6(dt4[0], dt4[1]);
  }
  pixelSizeAt(e78) {
    return this.ready ? e78 ? (In(e78, ht5, this.renderSpatialReference), this.state.camera.computeScreenPixelSizeAt(ht5)) : 0 : (s3.getLogger(this).error("#pixelSizeAt()", "Scene view cannot be used before it is ready"), null);
  }
  overlayPixelSizeInMapUnits(e78) {
    const t88 = this.basemapTerrain.overlayManager;
    return t88 ? t88.overlayPixelSizeInMapUnits(e78) : 1;
  }
  hitTest(e78, t88) {
    if (!this.ready)
      return s3.getLogger(this).error("#hitTest()", "Scene view cannot be used before it is ready"), null;
    const i78 = o30(e78) ? r33(this, e78) : e78, r79 = i10(i78.x, i78.y), s84 = t88 ? this.externalToInternalIntersectOptions(t88) : this._defaultHitTestOptions;
    s84.requiresGroundFeedback = true, s84.enableDraped = true;
    const n103 = A15(this.state.viewingMode);
    n103.options.selectionMode = true, n103.options.store = t33.ALL, this.sceneIntersectionHelper.intersectIntersectorScreen(r79, n103, s84);
    const a85 = this._intersectResultsToHits(n103.results.all, s84.graphics), o77 = n103.results.ground, l75 = f19(o77, this), p70 = null != l75 && "type" in l75 && "integrated-mesh" === l75.type ? l75 : null, h58 = { screenPoint: i78, results: a85, ground: { mapPoint: this._intersectResultToMapPoint(o77), distance: o32(o77) ? o77.distanceInRenderSpace : 0, layer: p70 } };
    return t27.SCENEVIEW_HITTEST_RETURN_INTERSECTOR && (h58.intersector = n103), Promise.resolve(h58);
  }
  async popupHitTest(e78) {
    const { results: t88, ground: i78 } = await t85(this, e78);
    let r79 = null;
    return !(0 === t88.length || Math.abs((t88[0].distance ?? 0) - i78.distance) < 1e-5) || i78.layer && "integrated-mesh" === i78.layer.type || (r79 = i78.mapPoint), { results: t88, screenPoint: e78, mapPoint: r79 };
  }
  goTo(e78, t88) {
    return this.updatingHandles.addPromise(this.stateManager.goTo(e78, t88));
  }
  async whenAnalysisView(e78) {
    if (null == e78.parent)
      throw new s4("view:no-analysisview-for-analysis", "The analysis has not been added to view.analyses", { analysis: e78 });
    switch (e78.parent.type) {
      case "line-of-sight":
      case "dimension":
        return (await this.whenLayerView(e78.parent)).whenAnalysisView();
      default:
        return this.analysisViewManager.whenAnalysisView(e78);
    }
  }
  whenLayerView(e78) {
    return super.whenLayerView(e78);
  }
  async takeScreenshot(e78) {
    const t88 = this._completeSettings(e78);
    await this.whenReady();
    const i78 = await this._stage.renderView.takeScreenshot(t88);
    return a80(i78, t88, this._pixelFormat());
  }
  async _takeScreenshot(e78) {
    const t88 = this._completeSettings(e78);
    await this.whenReady();
    const i78 = await this._stage.renderView.takeScreenshot(t88);
    return r77(i78, this._pixelFormat());
  }
  async _takeScreenshotWithObjectAndLayerId(e78) {
    const t88 = this._completeSettings(e78);
    await this.whenReady();
    const i78 = await this._stage.renderView.takeScreenshotWithOID(t88);
    return [r77(i78[0], this._pixelFormat()), r77(i78[1], this._pixelFormat())];
  }
  _completeSettings(e78) {
    const t88 = n99(e78, this);
    return t88.pixelRatio /= this.state.pixelRatio, M24(t88, this.supersampleScreenshotsEnabled, this.padding);
  }
  _pixelFormat() {
    return { flipY: true, premultipliedAlpha: this._stage.renderView.getAlpha() };
  }
  get test() {
    return { takeScreenshot: (e78) => this._takeScreenshot(e78), takeScreenshotWithObjectAndLayerId: (e78) => this._takeScreenshotWithObjectAndLayerId(e78) };
  }
  async takeScreenshotWithObjectAndLayerId(e78) {
    if (!has("enable-feature:objectAndLayerId-rendering"))
      throw new Error("has enable-feature:objectAndLayerId-rendering must be true");
    const t88 = this._completeSettings(e78);
    await this.whenReady();
    const i78 = await this._stage.renderView.takeScreenshotWithOID(t88), r79 = a80(i78[0], t88, this._pixelFormat()), s84 = this._completeSettings(e78);
    s84.format = "png";
    return [r79, a80(i78[1], s84, this._pixelFormat())];
  }
  getColorToObjectAndLayerIdMapping() {
    if (null == this._stage.renderView.objectAndLayerIdRenderHelper)
      throw new Error("has enable-feature:objectAndLayerId-rendering must be true");
    return this._stage.renderView.objectAndLayerIdRenderHelper.getColorToObjectAndLayerIdMapping();
  }
  addUpdatingPromise(e78) {
    return this.updatingHandles.addPromise(e78);
  }
  importLayerView(e78) {
    return l30.importLayerView(e78);
  }
  hasLayerViewModule(e78) {
    return l30.hasLayerViewModule(e78);
  }
  forceDOMReadyCycle() {
    this.forceReadyCycle();
  }
  getDefaultSpatialReference() {
    var _a, _b, _c, _d;
    return this.map && "initialViewProperties" in this.map && ((_b = (_a = this.map) == null ? void 0 : _a.initialViewProperties) == null ? void 0 : _b.spatialReference) || ((_c = this.defaultsFromMap) == null ? void 0 : _c.spatialReference) || ((_d = this.defaultsFromMap) == null ? void 0 : _d.ready) && this._initialDefaultSpatialReference || null;
  }
  async validate() {
    let e78 = i74(this.type);
    const t88 = has("safari");
    if (t88 && t88 < 9 && (e78 = new s4("sceneview:browser-not-supported", "This browser is not supported by SceneView (Safari < 9)", { type: "safari", requiredVersion: 9, detectedVersion: t88 })), null != e78)
      throw s3.getLogger(this).warn("#validate()", e78.message), e78;
  }
  get _predeterminedViewingMode() {
    var _a;
    const e78 = this._isOverridden("viewingMode") ? this._get("viewingMode") : (this.map && "initialViewProperties" in this.map ? (_a = this.map.initialViewProperties) == null ? void 0 : _a.viewingMode : null) ?? null;
    return null != e78 ? o15(e78) : null;
  }
  getSpatialReferenceSupport({ spatialReference: e78, layer: t88 }) {
    const i78 = this._predeterminedViewingMode;
    if (null != i78)
      return this._validateSpatialReferenceForViewingMode(e78, t88, i78) ? { constraints: this._makeSpatialReferenceConstraints(e78, t88, i78) } : null;
    const r79 = this._validateSpatialReferenceForViewingMode(e78, t88, l14.Local), s84 = this._validateSpatialReferenceForViewingMode(e78, t88, l14.Global);
    return r79 || s84 ? r79 && s84 ? { constraints: this._makeSpatialReferenceConstraints(e78, t88, null) } : r79 ? { constraints: this._makeSpatialReferenceConstraints(e78, t88, l14.Local) } : { constraints: this._makeSpatialReferenceConstraints(e78, t88, l14.Global) } : null;
  }
  _validateSpatialReferenceForViewingMode(e78, t88, i78) {
    return !!r49(e78, i78) && (null == t88 || (!!f7(t88) || (!s16(t88) || null != b3(t88, e78, i78)) && (!l7(t88) || i78 !== l14.Global)));
  }
  _makeSpatialReferenceConstraints(e78, t88, i78) {
    if (null == t88)
      return [{ spatialReference: e78, viewingMode: i78 }];
    const r79 = e78.isWebMercator, s84 = e78.isWGS84;
    if (f7(t88) && (r79 || s84)) {
      return !s84 || i78 === l14.Local || null === C8(t88.tileInfo, t88.fullExtent, e78, l14.Global) ? [{ spatialReference: e78, viewingMode: i78 }, { spatialReference: f2.WebMercator, viewingMode: i78 }] : [{ spatialReference: r79 ? f2.WGS84 : f2.WebMercator, viewingMode: i78 }];
    }
    return s16(t88) || l7(t88) || !r79 && !s84 ? s16(t88) && r79 && i78 !== l14.Global ? [{ spatialReference: e78, viewingMode: i78 }, { spatialReference: f2.WGS84, viewingMode: l14.Local }] : [{ spatialReference: e78, viewingMode: i78 }] : [{ spatialReference: e78, viewingMode: i78 }, { spatialReference: r79 ? f2.WGS84 : f2.WebMercator, viewingMode: i78 }];
  }
  _validateSpatialReference(e78) {
    const t88 = null != this.getSpatialReferenceSupport({ spatialReference: e78 }), i78 = this._predeterminedViewingMode;
    return t88 || (null != i78 ? s3.getLogger(this).warnOnce(`Spatial reference defined on view not supported in ${a20(i78)} viewing mode.`) : e78.isGeographic && s3.getLogger(this).warnOnce("Spatial reference is geographic but not supported.")), t88;
  }
  whenReady() {
    return new Promise((e78) => {
      this.ready ? e78(this) : this._resolveWhenReady.push(e78);
    });
  }
  computeMapPointFromVec3d(e78, t88) {
    let i78 = this.spatialReference || f2.WGS84;
    return Hn(e78, this.renderSpatialReference, e78, i78) || (i78 = f2.WGS84, Hn(e78, this.renderSpatialReference, e78, i78)), t88 ? (t88.x = e78[0], t88.y = e78[1], t88.z = e78[2], t88.spatialReference = i78) : t88 = new x3(e78, i78), t88;
  }
  trackGraphicState(e78) {
    if (!e78.graphic)
      return s3.getLogger(this).error("trackGraphicState", "GraphicState.graphic must not be null or undefined to start tracking"), null;
    const t88 = this.getViewForGraphic(e78.graphic);
    let i78 = null, r79 = false;
    const s84 = (t89) => {
      var _a;
      !r79 && null != t89 && "processor" in t89 && "graphics-3d" === ((_a = t89.processor) == null ? void 0 : _a.type) && t89.processor.graphicsCore && (i78 = t89.processor.graphicsCore.trackGraphicState(e78));
    };
    return null != t88 ? s84(t88) : this.whenViewForGraphic(e78.graphic, { waitForLayer: true }).then((e79) => s84(e79), () => {
    }).catch(() => {
    }), { remove: () => {
      r79 = true, null != i78 && (i78.remove(), i78 = null);
    } };
  }
  highlight(e78) {
    if (Array.isArray(e78))
      return n3(e78.map((e79) => this.highlight(e79)));
    if (V2.isCollection(e78))
      return n3(e78.toArray().map((e79) => this.highlight(e79)));
    const t88 = this.getViewForGraphic(e78);
    return t88 && "highlight" in t88 ? t88.highlight(e78) : e2();
  }
  maskOccludee(e78) {
    if (!e78)
      return s3.getLogger(this).error("maskOccludee", "GraphicState.graphic must not be null or undefined to mask an occludee"), null;
    const t88 = this.getViewForGraphic(e78);
    let i78 = null, r79 = false;
    const s84 = (t89) => {
      !r79 && null != t89 && e28(t89) && (i78 = t89.maskOccludee(e78));
    };
    return null != t88 ? s84(t88) : this.whenViewForGraphic(e78, { waitForLayer: true }).then((e79) => s84(e79), () => {
    }).catch(() => {
    }), { remove: () => {
      r79 = true, null != i78 && (i78.remove(), i78 = null);
    } };
  }
  getViewForGraphic(e78) {
    return e78.layer === this.graphics ? this.graphicsView : e78.layer ? this.allLayerViews.find((t88) => t88.layer === e78.layer) : null;
  }
  graphicChanged(e78) {
    null != this.graphicsView && this.graphicsView.graphicChanged(e78);
  }
  async whenViewForGraphic(e78, t88) {
    if (e78.layer === this)
      return await j4(() => this.graphicsView), this.graphicsView;
    if (!e78.layer || !this.map)
      throw new s4("no-view-for-graphic");
    return t88 && t88.waitForLayer && !this.map.allLayers.includes(e78.layer) ? new Promise((t89, i78) => {
      const r79 = this.map.allLayers.on("change", (s84) => {
        s84.added.includes(e78.layer) && (r79.remove(), this.whenLayerView(e78.layer).then(t89, i78));
      });
    }) : this.whenLayerView(e78.layer);
  }
  externalToInternalIntersectOptions(e78) {
    const t88 = this._externalToInternalRenderItems(e78.include, pt4.INCLUDE), i78 = this._externalToInternalRenderItems(e78.exclude, pt4.EXCLUDE);
    return { include: t88.layerUids, exclude: i78.layerUids, graphics: { include: t88.graphicUids, exclude: i78.graphicUids } };
  }
  _intersectResultToMapPoint(e78, t88) {
    return e78.getIntersectionPoint(ht5) ? (t88 = this.computeMapPointFromVec3d(ht5, t88), e78.intersector === i27.TERRAIN && this.basemapTerrain && (t88.z = a30(this.basemapTerrain, t88) ?? 0), t88) : null;
  }
  _intersectResultsToHits(e78, t88) {
    const i78 = new Array();
    let r79 = null;
    for (let s84 = 0; s84 < e78.length; s84++) {
      const n103 = e78[s84], a85 = f19(n103, this);
      if (null != a85 && (a85 === this.map.ground || "type" in a85 && "integrated-mesh" === a85.type))
        break;
      const o77 = d17(n103, this);
      if (null == o77)
        continue;
      if ("graphic" === o77.type) {
        if (null == r79 && s84 !== e78.length - 1 && (r79 = /* @__PURE__ */ new Set()), null != r79) {
          const e79 = this._getGraphicFilterUid(o77.graphic);
          if (r79.has(e79))
            continue;
          r79.add(e79);
        }
        if (!this._testGraphicUidFilter(t88, o77.graphic))
          continue;
      }
      const l75 = this._intersectResultToMapPoint(n103), p70 = n103.distanceInRenderSpace;
      i78.push({ ...o77, mapPoint: l75, distance: p70 });
    }
    return i78;
  }
  _getGraphicFilterUid(e78) {
    var _a;
    const t88 = e78.sourceLayer, i78 = e78.layer, r79 = t88 && "objectIdField" in t88 ? t88 : i78 && "objectIdField" in i78 ? i78 : t88;
    if (r79) {
      const t89 = r79.objectIdField ?? o26, i79 = (_a = e78.attributes) == null ? void 0 : _a[t89];
      if (i79)
        return `o-${r79.id}-${i79}`;
    }
    return `u-${e78.uid}`;
  }
  _testGraphicUidFilter(e78, t88) {
    const i78 = this._getGraphicFilterUid(t88);
    return null == e78 || (null == e78.include || e78.include.has(i78)) && (null == e78.exclude || !e78.exclude.has(i78));
  }
  _externalToInternalRenderItems(e78, t88, r79 = { layerUids: void 0, graphicUids: void 0 }) {
    if (!e78)
      return r79;
    if (e78 instanceof h17)
      ot5(r79, this._getGraphicFilterUid(e78)), t88 === pt4.INCLUDE && (null != this.graphicsView && e78.layer === this ? at5(r79, this.graphicsView.processor.layer.id) : e78.layer && at5(r79, e78.layer.uid));
    else if (t2(e78))
      for (const i78 of e78)
        i78 === this.graphics && null != this.graphicsView ? at5(r79, this.graphicsView.processor.layer.id) : i78 === this.map.ground ? at5(r79, L4) : this._externalToInternalRenderItems(i78, t88, r79);
    else
      "uid" in e78 && at5(r79, e78.uid);
    return r79;
  }
  _initBasemapTerrain() {
    this._set("basemapTerrain", new lt4({ view: this })), this._set("elevationProvider", new c53({ view: this })), this.elevationProvider.register("ground", this.basemapTerrain);
  }
  _exitBasemapTerrain() {
    this.basemapTerrain && (this.elevationProvider.unregister(this.basemapTerrain), this.elevationProvider.destroy(), this._set("elevationProvider", null), this.basemapTerrain.destroy(), this._set("basemapTerrain", null));
  }
  _initGlobe() {
    this._initCoordinateSystem(), this.state.createInitialCamera(), this._initBasemapTerrain(), this._set("pointsOfInterest", new P21({ view: this })), this._set("featureTiles", new x26({ renderCoordsHelper: this.renderCoordsHelper, cameraOnSurface: this.pointsOfInterest.cameraOnSurface, focus: this.pointsOfInterest.focus, tilingSchemeOwner: this.basemapTerrain, viewState: this.state, scheduler: this._resourceController.scheduler, terrain: this.basemapTerrain }));
    const e78 = () => {
      var _a;
      const e79 = (_a = this.basemapTerrain) == null ? void 0 : _a.extent;
      if (this.clippingArea || e79)
        if (e79 && this.basemapTerrain.spatialReference) {
          const e80 = null != this.basemapTerrain.extent && null != this.basemapTerrain.spatialReference ? nn(c2(this.basemapTerrain.extent, this.basemapTerrain.spatialReference), this.spatialReference) : null;
          null != this.clippingArea ? this.featureTiles.filterExtent = this.clippingArea.intersection(e80) : this.featureTiles.filterExtent = e80;
        } else
          this.featureTiles.filterExtent = this.clippingArea;
      else
        this.featureTiles.filterExtent = null;
    };
    this.addHandles([this.updatingHandles.add(() => t27.FEATURE_TILE_TREE_SHOW_TILES, (e79) => {
      e79 && this.featureTiles && !this._featureTreeDebugger ? this.updatingHandles.addPromise(import("./FeatureTileTree3DDebugger-DRBSXHE5.js")).then(({ FeatureTileTree3DDebugger: e80 }) => {
        !this._featureTreeDebugger && t27.FEATURE_TILE_TREE_SHOW_TILES && (this._featureTreeDebugger = new e80({ view: this }));
      }) : e79 || !this._featureTreeDebugger || t27.FEATURE_TILE_TREE_SHOW_TILES || (this._featureTreeDebugger.destroy(), this._featureTreeDebugger = null);
    }, w3), this.updatingHandles.add(() => this.clippingArea, e78, w3), this.updatingHandles.add(() => this.basemapTerrain.extent, e78, w3)], "feature-tiles"), this.stateManager.init();
  }
  _exitGlobe() {
    this.state && (this.stateManager.exit(), this.removeHandles("render-coords-helper"), this.removeHandles("feature-tiles"), this.featureTiles.destroy(), this._set("featureTiles", null), this.pointsOfInterest.destroy(), this._set("pointsOfInterest", null), this._exitBasemapTerrain(), this.state.exit(), this._exitCoordinateSystem());
  }
  _initCoordinateSystem() {
    if (this.spatialReference) {
      const e78 = this.spatialReference;
      this.mapCoordsHelper && this.mapCoordsHelper.spatialReference.equals(e78) || this._set("mapCoordsHelper", new a61(this.map, e78));
      const t88 = this.state.isGlobal, i78 = F10(t88, e78);
      i78 !== this.renderSpatialReference && (this._set("renderCoordsHelper", U7.create(this.state.viewingMode, i78)), t88 || this.addHandles(l6(() => {
        var _a;
        return (_a = this.basemapTerrain) == null ? void 0 : _a.extent;
      }, (e79) => {
        const t89 = this.renderCoordsHelper.spatialReference;
        null == e79 || 0 === e79[0] && 0 === e79[1] && 0 === e79[2] && 0 === e79[3] || !kn(e79, this.basemapTerrain.spatialReference, ct5, t89) || (this.renderCoordsHelper.extent = ct5);
      }, U3), "render-coords-helper"), this.sceneIntersectionHelper && this.sceneIntersectionHelper.setTolerance(w12 / this.renderCoordsHelper.unitInMeters));
    } else
      this._set("mapCoordsHelper", null), this._set("renderCoordsHelper", null);
  }
  _exitCoordinateSystem() {
    this.mapCoordsHelper && (this.removeHandles("render-coords-helper"), this._set("renderCoordsHelper", null), this._set("mapCoordsHelper", null));
  }
  _updatingChanged() {
    this.notifyChange("updating");
  }
  _updateUpdatingMonitors(e78 = null) {
    null != e78 && e78.type === E3.MOVE || (this.removeHandles("updatingMonitors"), this.allLayerViews.forEach((e79) => {
      e79.destroyed || (this.addHandles(l6(() => [e79.updating, e79.updatingProgress], () => this._updatingChanged(), U3), "updatingMonitors"), e79.when(() => this._updatingChanged(), () => this._updatingChanged()));
    }), this._updatingChanged());
  }
  async _prepareScreenshotOverlay() {
    this.overlay && await this.overlay.prepare();
  }
  _renderScreenshotOverlay(e78, t88) {
    if (!this.overlay || !this.overlay.hasVisibleItems)
      return t88;
    const i78 = e78.getContext("2d");
    return i78.putImageData(t88, 0, 0), this.overlay.renderCanvas(e78), i78.getImageData(0, 0, t88.width, t88.height);
  }
  _initStage() {
    const e78 = { deactivatedWebGLExtensions: this.deactivatedWebGLExtensions, debugWebGLExtensions: this.debugWebGLExtensions, alpha: this.alphaCompositingEnabled, preserveDrawingBuffer: this.preserveDrawingBufferEnabled, canvas: this.renderCanvas, screenshot: { prepareOverlay: () => this._prepareScreenshotOverlay(), renderOverlay: (e79, t89) => this._renderScreenshotOverlay(e79, t89) } }, t88 = new b19(this.state.viewingMode, (e79) => this._stage.layers.forAll(e79), this);
    this._set("sceneIntersectionHelper", t88);
    const i78 = e10(this.surface);
    this._stage = new u55({ view: this, options: e78, container: i78 }), this._stage.renderer.setParameters({ slicePlane: this.slicePlane }), this.addHandles([this.updatingHandles.add(() => this.qualitySettings.antialiasingEnabled, () => this._stage.renderer.setParameters({ antialiasingEnabled: this.qualitySettings.antialiasingEnabled }), h3), this.updatingHandles.add(() => this.qualitySettings.highQualityTransparency, (e79) => this._stage.renderer.setParameters({ highQualityTransparency: e79 }), h3), l6(() => this.magnifier, (e79) => this._stage.renderView.magnifier = e79, w3), this.on("pointer-move", () => {
      var _a;
      return (_a = this._stage) == null ? void 0 : _a.renderer.resetAnimation();
    }), r3(this._stage.renderView.canvas, "webglcontextlost", (e79) => this.fatalError = new s4("webgl-context-lost", e79.statusMessage))], "stage");
    const r79 = () => {
      this._stage.renderer.setParameters({ defaultHighlightOptions: f40.toEngineOptions(this.highlightOptions) });
    };
    this.addHandles(this.updatingHandles.add(() => [this.highlightOptions.color, this.highlightOptions.haloColor, this.highlightOptions.haloOpacity, this.highlightOptions.fillOpacity, this.highlightOptions.shadowOpacity, this.highlightOptions.shadowColor, this.highlightOptions.shadowDifference], r79), "stage"), r79(), this.renderCoordsHelper && this.sceneIntersectionHelper.setTolerance(w12 / this.renderCoordsHelper.unitInMeters), this._set("canvas", this._stage.renderView.canvas);
  }
  _exitStage() {
    this._set("sceneIntersectionHelper", null), this._stage = l(this._stage), this.removeHandles("stage"), this._set("canvas", null);
  }
  _initSurface(e78) {
    this._exitSurface(), this.state.init(e78, this.spatialReference), this._initStage(), this._initGlobe(), this.sharedSymbolResources = new S19({ view: this, viewingMode: e78, resourceController: this._resourceController, pointsOfInterest: this.pointsOfInterest, viewState: this.state });
  }
  _exitSurface() {
    this.sharedSymbolResources && (this.sharedSymbolResources.objectResourceCache.destroy(), this.sharedSymbolResources.destroy(), this.sharedSymbolResources = null, this._exitGlobe(), this._exitStage());
  }
  _createGraphicsViewIfNeeded() {
    if (this.graphicsView || this._createGraphicsViewController)
      return;
    if (0 === this.graphics.length)
      return;
    this.removeHandles("graphics-view"), this._createGraphicsViewController = new AbortController();
    const e78 = () => {
      this._createGraphicsViewController = null, this._updatingChanged();
    };
    this._createGraphicsViewAsync(this._createGraphicsViewController.signal).then(e78, e78), this._updatingChanged();
  }
  async _createGraphicsViewAsync(e78) {
    const t88 = (await import("./GraphicsView3D-PKQDZJCZ.js")).default;
    s6(e78), await j4(() => {
      var _a;
      return (_a = this.basemapTerrain) == null ? void 0 : _a.ready;
    }, e78), this._set("graphicsView", new t88({ view: this }));
  }
  _disposeGraphicsView() {
    this._createGraphicsViewController && (this._createGraphicsViewController.abort(), this._createGraphicsViewController = null), this.removeHandles("graphics-view"), null != this.graphicsView && (this.removeHandles(this.graphicsView.processor.layer.id), this.graphicsView.destroy(), this._set("graphicsView", null));
  }
  _startup() {
    const e78 = o15(this.viewingMode);
    if (e78 === l14.Global && (this._clippingArea = null), this._initSurface(e78), this._set("ready", true), this.addHandles(a9(() => this.graphics, "after-changes", () => this._createGraphicsViewIfNeeded()), "graphics-view"), this._createGraphicsViewIfNeeded(), !this._externallySet.environment) {
      const e79 = this.get("map.initialViewProperties.environment");
      e79 && (this.environment = e79);
    }
    this.labeler.setup(), this.environmentManager.connectView(this), this.inputManager.connect();
    const t88 = this._resolveWhenReady;
    this._resolveWhenReady = [], t88.forEach((e79) => e79(this));
  }
  _teardown() {
    this._initialDefaultSpatialReference = null, this.inputManager.disconnect(), this.environmentManager.disconnectView(), this.labeler.dispose(), this._disposeGraphicsView(), this.removeHandles("graphics-view"), this._exitSurface(), this._set("ready", false);
  }
  _updateDefaultToMapOptions() {
    if (this._defaultToMapOptions.include.clear(), this.map) {
      this.map.ground && this._defaultToMapOptions.include.add(L4);
      for (const e78 of this.map.allLayers.items)
        "integrated-mesh" === e78.type && this._defaultToMapOptions.include.add(e78.uid);
    }
  }
  _updateDefaultHitTestOptions() {
    if (this._defaultHitTestOptions.exclude.clear(), this.map) {
      this.map.ground && this.map.ground.opacity < 1 && this._defaultHitTestOptions.exclude.add(L4);
      for (const e78 of this.map.allLayers.items)
        "integrated-mesh" === e78.type && e78.opacity < 1 && this._defaultHitTestOptions.exclude.add(e78.uid);
    }
  }
  addVoxelLayerViewToWasm(e78) {
    return null == this.voxelWasm ? (null == this.voxelWasmPromise && (this.voxelWasmPromise = import("./VoxelWasmPerSceneView-H5PTDD4V.js").then((e79) => (this.voxelWasm = new e79.default(this), this.voxelWasm))), this.voxelWasmPromise.then((t88) => t88.addVoxelLayer(e78))) : this.voxelWasm.addVoxelLayer(e78);
  }
  removeVoxelLayerViewFromWasm(e78) {
    if (null != this.voxelWasm) {
      this.voxelWasm.removeVoxelLayer(e78) < 1 && (this.voxelWasm = null, this.voxelWasmPromise = null);
    }
  }
};
function at5(e78, t88) {
  e78.layerUids || (e78.layerUids = /* @__PURE__ */ new Set()), e78.layerUids.add(t88);
}
function ot5(e78, t88) {
  e78.graphicUids || (e78.graphicUids = /* @__PURE__ */ new Set()), e78.graphicUids.add(t88);
}
function lt5(e78, t88) {
  return null != e78 && Cn(e78.spatialReference, t88) ? nn(e78, t88) : null;
}
var pt4;
nt5.type = "3d", e([y()], nt5.prototype, "_userClippingArea", void 0), e([y()], nt5.prototype, "_resourceController", void 0), e([y()], nt5.prototype, "_stage", void 0), e([y({ readOnly: true })], nt5.prototype, "deconflictor", void 0), e([y({ readOnly: true })], nt5.prototype, "labeler", void 0), e([y(p12(t46, "analyses"))], nt5.prototype, "analyses", void 0), e([y({ type: a41, readOnly: true })], nt5.prototype, "animation", null), e([y({ readOnly: true })], nt5.prototype, "basemapTerrain", void 0), e([y({ readOnly: true })], nt5.prototype, "elevationProvider", void 0), e([y()], nt5.prototype, "camera", null), e([y({ type: d26 })], nt5.prototype, "contentCamera", null), e([y({ readOnly: true })], nt5.prototype, "canvas", void 0), e([y({ type: x3 })], nt5.prototype, "center", null), e([y({ type: M })], nt5.prototype, "clippingArea", null), e([y({ type: c31 })], nt5.prototype, "constraints", void 0), e([y({ type: M, readOnly: true })], nt5.prototype, "renderDataExtent", null), e([y({ type: M, readOnly: true })], nt5.prototype, "dataExtent", null), e([y({ type: M, readOnly: true })], nt5.prototype, "_groundAndLayersExtent", null), e([y({ value: null, type: f28 })], nt5.prototype, "environment", null), e([s9("environment")], nt5.prototype, "castEnvironment", null), e([y({ readOnly: true })], nt5.prototype, "environmentManager", void 0), e([y({ type: M })], nt5.prototype, "extent", null), e([y()], nt5.prototype, "floors", void 0), e([y()], nt5.prototype, "screenCenter", null), e([y()], nt5.prototype, "frustum", null), e([y({ type: Number, readOnly: true })], nt5.prototype, "fullOpacity", void 0), e([y({ readOnly: true })], nt5.prototype, "graphicsView", void 0), e([y({ readOnly: true })], nt5.prototype, "analysisViewManager", void 0), e([y()], nt5.prototype, "groundView", void 0), e([y({ type: Boolean })], nt5.prototype, "initialExtentRequired", null), e([y()], nt5.prototype, "_defaultsFromMapSettings", null), e([y()], nt5.prototype, "interacting", null), e([y()], nt5.prototype, "stationary", null), e([y()], nt5.prototype, "navigating", null), e([y()], nt5.prototype, "map", void 0), e([y({ readOnly: true })], nt5.prototype, "mapCoordsHelper", void 0), e([y()], nt5.prototype, "padding", null), e([y({ type: P21, readOnly: true })], nt5.prototype, "pointsOfInterest", void 0), e([y({ type: x26, readOnly: true })], nt5.prototype, "featureTiles", void 0), e([y()], nt5.prototype, "_featureTreeDebugger", void 0), e([y({ type: Boolean })], nt5.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ constructOnly: true })], nt5.prototype, "deactivatedWebGLExtensions", void 0), e([y({ constructOnly: true })], nt5.prototype, "debugWebGLExtensions", void 0), e([y({ constructOnly: true })], nt5.prototype, "renderCanvas", void 0), e([y({ constructOnly: true })], nt5.prototype, "state", void 0), e([y({ readOnly: true })], nt5.prototype, "inputManager", void 0), e([y({ readOnly: true })], nt5.prototype, "stateManager", void 0), e([y({ type: ["low", "medium", "high"] })], nt5.prototype, "qualityProfile", null), e([y({ type: u40, get() {
  let e78 = this._get("qualitySettings");
  return e78 || (e78 = new u40(), o58.apply(this.qualityProfile, e78)), e78;
} })], nt5.prototype, "qualitySettings", void 0), e([y()], nt5.prototype, "slicePlane", null), e([y({ readOnly: true })], nt5.prototype, "typeSpecificPreconditionsReady", null), e([y({ readOnly: true })], nt5.prototype, "renderCoordsHelper", void 0), e([y({ readOnly: true })], nt5.prototype, "sceneIntersectionHelper", void 0), e([y({ type: Number, dependsOn: ["scale", "spatialReference"], readOnly: true })], nt5.prototype, "resolution", null), e([y({ type: Number })], nt5.prototype, "scale", null), e([y()], nt5.prototype, "heightModelInfo", null), e([y()], nt5.prototype, "spatialReference", void 0), e([y({ type: Boolean, constructOnly: true })], nt5.prototype, "alphaCompositingEnabled", void 0), e([y({ constructOnly: true })], nt5.prototype, "preserveDrawingBufferEnabled", void 0), e([y({ type: Boolean })], nt5.prototype, "supersampleScreenshotsEnabled", void 0), e([y({ readOnly: true })], nt5.prototype, "type", void 0), e([y(), s9((e78) => e78 instanceof h57 ? e78 : v(p69, e78))], nt5.prototype, "ui", void 0), e([y({ type: Boolean, readOnly: true, dependsOn: ["graphicsView.updating", "basemapView.updating", "basemapTerrain.updating", "layerViewManager.updating", "layerViewManager.updatingRemaining", "_resourceController.updating", "_stage.updating", "featureTiles.updating", "pointsOfInterest.updating", "environmentManager.updating", "overlay.updating", "updatingHandles.updating", "featureTreeDebugger.updating", "labeler.updating", "deconflictor.updating", "ready", "stationary", "inputManager.updating", "toolViewManager.updating", "analysisViewManager.updating", "state.updating"] })], nt5.prototype, "updating", null), e([y()], nt5.prototype, "_updatingObjects", null), e([y()], nt5.prototype, "_updatingObjectsWithProgress", null), e([y({ type: Number, readOnly: true, dependsOn: ["updating"] })], nt5.prototype, "updatingProgress", void 0), e([y({ type: ["global", "local"] })], nt5.prototype, "viewingMode", null), e([y({ type: l27 })], nt5.prototype, "viewpoint", null), e([y({ type: Number })], nt5.prototype, "zoom", null), e([y({ type: f40 })], nt5.prototype, "highlightOptions", void 0), nt5 = e([a4("esri.views.SceneView")], nt5), function(e78) {
  e78[e78.INCLUDE = 0] = "INCLUDE", e78[e78.EXCLUDE = 1] = "EXCLUDE";
}(pt4 || (pt4 = {}));
var ht5 = n7();
var dt4 = i10();
var ct5 = i4();
var ut5 = nt5;
export {
  ut5 as default
};
//# sourceMappingURL=@arcgis_core_views_SceneView__js.js.map
