import {
  I,
  a2,
  n,
  o as o2,
  o2 as o3,
  r
} from "./chunk-5BLDWPLW.js";
import {
  $,
  B,
  M,
  S,
  _,
  b,
  d,
  j as j2,
  k,
  w
} from "./chunk-7G6CKDLW.js";
import {
  T,
  g as g2,
  o
} from "./chunk-FFUMVAL2.js";
import {
  b as b2,
  e,
  f,
  g,
  i2 as i,
  i3 as i2,
  y2 as y
} from "./chunk-3JQ6N63Z.js";
import {
  e as e2
} from "./chunk-2UENN434.js";
import {
  l,
  p
} from "./chunk-UYRCWUYQ.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a,
  j
} from "./chunk-IYZKKFJM.js";
import {
  L,
  has
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/core/accessorSupport/set.js
function t(o5, e4, s5) {
  if (o5 && e4)
    if ("object" == typeof e4)
      for (const r4 of Object.getOwnPropertyNames(e4))
        t(o5, r4, e4[r4]);
    else {
      if (e4.includes(".")) {
        const n6 = e4.split("."), i4 = n6.splice(n6.length - 1, 1)[0];
        return void t(o(o5, n6), i4, s5);
      }
      const i3 = o5.__accessor__;
      null != i3 && n2(e4, i3), o5[e4] = s5;
    }
}
function n2(r4, t8) {
  if (has("esri-unknown-property-errors") && !e3(r4, t8))
    throw new s2("set:unknown-property", s3(r4, t8));
}
function e3(o5, r4) {
  return null != r4.metadatas[o5];
}
function s3(o5, r4) {
  return "setting unknown property '" + o5 + "' on instance of " + r4.host.declaredClass;
}

// node_modules/@arcgis/core/core/accessorSupport/decorators/property.js
function y2(n6 = {}) {
  return (o5, s5) => {
    if (o5 === Function.prototype)
      throw new Error(`Inappropriate use of @property() on a static field: ${o5.name}.${s5}. Accessor does not support static properties.`);
    const i3 = Object.getOwnPropertyDescriptor(o5, s5), a4 = o2(o5, s5);
    i3 && (i3.get || i3.set ? (a4.get = i3.get || a4.get, a4.set = i3.set || a4.set) : "value" in i3 && ("value" in n6 && s.getLogger("esri.core.accessorSupport.decorators.property").warn(`@property() will redefine the value of "${s5}" on "${o5.constructor.name}" already defined in the metadata`, n6), a4.value = n6.value = i3.value)), null != n6.readOnly && (a4.readOnly = n6.readOnly);
    const p3 = n6.aliasOf;
    if (p3) {
      const t8 = "string" == typeof p3 ? p3 : p3.source, e4 = "string" == typeof p3 ? null : true === p3.overridable;
      let r4;
      a4.dependsOn = [t8], a4.get = function() {
        let e5 = o(this, t8);
        if ("function" == typeof e5) {
          r4 || (r4 = t8.split(".").slice(0, -1).join("."));
          const n7 = o(this, r4);
          n7 && (e5 = e5.bind(n7));
        }
        return e5;
      }, a4.readOnly || (a4.set = e4 ? function(t9) {
        this._override(s5, t9);
      } : function(e5) {
        t(this, t8, e5);
      });
    }
    const u3 = n6.type, c2 = n6.types;
    a4.cast || (u3 ? a4.cast = h(u3) : c2 && (Array.isArray(c2) ? a4.cast = b(S(c2[0])) : a4.cast = S(c2))), n(a4, n6), n6.range && (a4.cast = j3(a4.cast, n6.range));
  };
}
function d2(t8, e4, r4) {
  const n6 = o2(t8, r4);
  n6.json || (n6.json = {});
  let o5 = n6.json;
  return void 0 !== e4 && (o5.origins || (o5.origins = {}), o5.origins[e4] || (o5.origins[e4] = {}), o5 = o5.origins[e4]), o5;
}
function h(t8) {
  let e4 = 0, r4 = t8;
  if (_(t8))
    return B(t8);
  for (; Array.isArray(r4) && 1 === r4.length && "string" != typeof r4[0] && "number" != typeof r4[0]; )
    r4 = r4[0], e4++;
  const f3 = r4;
  if (k(f3))
    return 0 === e4 ? M(f3) : $(M(f3), e4);
  if (1 === e4)
    return w(f3);
  if (e4 > 1)
    return j2(f3, e4);
  const l3 = t8;
  return l3.from ? l3.from : d(l3);
}
function j3(t8, e4) {
  return (r4) => {
    let n6 = +t8(r4);
    return null != e4.step && (n6 = Math.round(n6 / e4.step) * e4.step), null != e4.min && (n6 = Math.max(e4.min, n6)), null != e4.max && (n6 = Math.min(e4.max, n6)), n6;
  };
}

// node_modules/@arcgis/core/core/iteratorUtils.js
function n3(n6) {
  const o5 = [];
  return function* () {
    yield* o5;
    for (const t8 of n6)
      o5.push(t8), yield t8;
  };
}
function o4(n6, o5) {
  for (const t8 of n6)
    if (null != t8 && o5(t8))
      return t8;
}
function t2(n6) {
  return null != n6 && "function" == typeof n6[Symbol.iterator];
}

// node_modules/@arcgis/core/core/Handles.js
var t3 = class _t {
  constructor() {
    this._groups = /* @__PURE__ */ new Map();
  }
  destroy() {
    this.removeAll();
  }
  get size() {
    let r4 = 0;
    return this._groups.forEach((e4) => {
      r4 += e4.length;
    }), r4;
  }
  add(e4, t8) {
    if (t2(e4)) {
      const r4 = this._getOrCreateGroup(t8);
      for (const t9 of e4)
        this._isHandle(t9) && r4.push(t9);
    } else if (this._isHandle(e4)) {
      this._getOrCreateGroup(t8).push(e4);
    }
    return this;
  }
  forEach(r4, e4) {
    if ("function" == typeof r4)
      this._groups.forEach((e5) => e5.forEach(r4));
    else {
      const t8 = this._getGroup(r4);
      t8 && e4 && t8.forEach(e4);
    }
  }
  has(r4) {
    return this._groups.has(this._ensureGroupKey(r4));
  }
  remove(e4) {
    if ("string" != typeof e4 && t2(e4)) {
      for (const r4 of e4)
        this.remove(r4);
      return this;
    }
    return this.has(e4) ? (this._removeAllFromGroup(this._getGroup(e4)), this._groups.delete(this._ensureGroupKey(e4)), this) : this;
  }
  removeAll() {
    return this._groups.forEach((r4) => this._removeAllFromGroup(r4)), this._groups.clear(), this;
  }
  _isHandle(r4) {
    return r4 && (!!r4.remove || r4 instanceof _t);
  }
  _getOrCreateGroup(r4) {
    if (this.has(r4))
      return this._getGroup(r4);
    const e4 = [];
    return this._groups.set(this._ensureGroupKey(r4), e4), e4;
  }
  _getGroup(r4) {
    return p(this._groups.get(this._ensureGroupKey(r4)));
  }
  _ensureGroupKey(r4) {
    return r4 || "_default_";
  }
  _removeAllFromGroup(r4) {
    for (const e4 of r4)
      e4 instanceof _t ? e4.removeAll() : e4.remove();
  }
};

// node_modules/@arcgis/core/core/accessorSupport/PropertyOrigin.js
var r2;
!function(e4) {
  e4[e4.DEFAULTS = 0] = "DEFAULTS", e4[e4.COMPUTED = 1] = "COMPUTED", e4[e4.SERVICE = 2] = "SERVICE", e4[e4.PORTAL_ITEM = 3] = "PORTAL_ITEM", e4[e4.WEB_SCENE = 4] = "WEB_SCENE", e4[e4.WEB_MAP = 5] = "WEB_MAP", e4[e4.LINK_CHART = 6] = "LINK_CHART", e4[e4.USER = 7] = "USER";
}(r2 || (r2 = {}));
var t4 = r2.USER + 1;
function n4(e4) {
  switch (e4) {
    case "defaults":
      return r2.DEFAULTS;
    case "service":
      return r2.SERVICE;
    case "portal-item":
      return r2.PORTAL_ITEM;
    case "web-scene":
      return r2.WEB_SCENE;
    case "web-map":
      return r2.WEB_MAP;
    case "link-chart":
      return r2.LINK_CHART;
    case "user":
      return r2.USER;
    default:
      return null;
  }
}
function E(t8) {
  switch (t8) {
    case r2.DEFAULTS:
      return "defaults";
    case r2.SERVICE:
      return "service";
    case r2.PORTAL_ITEM:
      return "portal-item";
    case r2.WEB_SCENE:
      return "web-scene";
    case r2.WEB_MAP:
      return "web-map";
    case r2.LINK_CHART:
      return "link-chart";
    case r2.USER:
      return "user";
  }
  return p(void 0);
}
function c(e4) {
  return E(e4);
}

// node_modules/@arcgis/core/core/accessorSupport/tracking/ObservationHandle.js
var s4 = class {
  constructor(r4, s5) {
    this._observers = r4, this._observer = s5;
  }
  remove() {
    L(this._observers, this._observer);
  }
};

// node_modules/@arcgis/core/core/accessorSupport/ObservableBase.js
var r3 = class {
  constructor() {
    this._observers = null, this.destroyed = false;
  }
  observe(e4) {
    if (this.destroyed || e4.destroyed)
      return t5;
    null == this._observers && (this._observers = []);
    const r4 = this._observers;
    let o5 = false, i3 = false;
    const n6 = r4.length;
    for (let s5 = 0; s5 < n6; ++s5) {
      const t8 = r4[s5];
      if (t8.destroyed)
        i3 = true;
      else if (t8 === e4) {
        o5 = true;
        break;
      }
    }
    return o5 || (r4.push(e4), i3 && this._removeDestroyedObservers()), new s4(r4, e4);
  }
  _removeDestroyedObservers() {
    const e4 = this._observers;
    if (!e4 || 0 === e4.length)
      return;
    const s5 = e4.length;
    let r4 = 0;
    for (let t8 = 0; t8 < s5; ++t8) {
      for (; t8 + r4 < s5; ) {
        if (!e4[t8 + r4].destroyed)
          break;
        ++r4;
      }
      if (r4 > 0) {
        if (!(t8 + r4 < s5))
          break;
        e4[t8] = e4[t8 + r4];
      }
    }
    e4.length = s5 - r4;
  }
  destroy() {
    if (this.destroyed)
      return;
    this.destroyed = true;
    const e4 = this._observers;
    if (null != e4) {
      for (const s5 of e4)
        s5.onCommitted();
      this._observers = null;
    }
  }
};
var t5 = e();

// node_modules/@arcgis/core/core/accessorSupport/Property.js
var a3 = class {
  constructor(t8, e4) {
    this.propertyName = t8, this.metadata = e4, this.observerObject = new l2(), this._accessed = null, this._handles = null, this.observerObject.flags = i.Dirty | (e4.nonNullable ? i.NonNullable : 0) | (e4.hasOwnProperty("value") ? i.HasDefaultValue : 0) | (void 0 === e4.get ? i.DepTrackingInitialized : 0) | (void 0 === e4.dependsOn ? i.AutoTracked : 0);
  }
  destroy() {
    this.observerObject.destroy(), this._accessed = null, this._clearObservationHandles();
  }
  getComputed(t8) {
    const a4 = this.observerObject;
    i2(a4);
    const l3 = t8.store, c2 = this.propertyName, h2 = a4.flags, d5 = l3.get(c2);
    if (h2 & i.Computing)
      return d5;
    if (~h2 & i.Dirty && l3.has(c2))
      return d5;
    a4.flags |= i.Computing;
    const g4 = t8.host;
    let f3;
    h2 & i.AutoTracked ? f3 = f(this, this.metadata.get, g4) : (y(g4, this), f3 = this.metadata.get.call(g4)), l3.set(c2, f3, r2.COMPUTED);
    const m3 = l3.get(c2);
    return m3 === d5 ? a4.flags &= ~i.Dirty : g(this.commit, this), a4.flags &= ~i.Computing, m3;
  }
  onObservableAccessed(t8) {
    if (t8 === this.observerObject)
      return;
    let e4 = this._accessed;
    if (null == e4)
      e4 = [], this._accessed = e4;
    else if (e4.includes(t8))
      return;
    e4.push(t8);
  }
  onTrackingEnd() {
    this._clearObservationHandles();
    const t8 = this.observerObject;
    t8.flags |= i.DepTrackingInitialized;
    const e4 = this._accessed;
    if (null == e4 || 0 === e4.length)
      return;
    let s5 = this._handles;
    null == s5 && (s5 = [], this._handles = s5);
    for (let i3 = 0; i3 < e4.length; ++i3)
      s5.push(e4[i3].observe(t8));
    e4.length = 0;
  }
  notifyChange() {
    const t8 = this.observerObject;
    t8.onInvalidated(), t8.onCommitted();
  }
  invalidate() {
    this.observerObject.onInvalidated();
  }
  commit() {
    const t8 = this.observerObject;
    t8.flags &= ~i.Dirty, t8.onCommitted();
  }
  _clearObservationHandles() {
    const t8 = this._handles;
    if (null !== t8) {
      for (let e4 = 0; e4 < t8.length; ++e4)
        t8[e4].remove();
      t8.length = 0;
    }
  }
};
var l2 = class extends r3 {
  constructor() {
    super(...arguments), this.flags = 0;
  }
  onInvalidated() {
    ~this.flags & i.Overriden && (this.flags |= i.Dirty);
    const t8 = this._observers;
    if (t8 && t8.length > 0)
      for (const e4 of t8)
        e4.onInvalidated();
  }
  onCommitted() {
    const t8 = this._observers;
    if (t8 && t8.length > 0) {
      const e4 = t8.slice();
      for (const t9 of e4)
        t9.onCommitted();
    }
  }
  destroy() {
    this.flags & i.Dirty && this.onCommitted(), super.destroy();
  }
};

// node_modules/@arcgis/core/core/accessorSupport/Store.js
var t6 = class _t {
  constructor() {
    this._values = /* @__PURE__ */ new Map(), this.multipleOriginsSupported = false;
  }
  clone(s5) {
    const r4 = new _t();
    return this._values.forEach((t8, i3) => {
      s5 && s5.has(i3) || r4.set(i3, a(t8));
    }), r4;
  }
  get(e4) {
    return this._values.get(e4);
  }
  originOf() {
    return r2.USER;
  }
  keys() {
    return [...this._values.keys()];
  }
  set(e4, s5) {
    this._values.set(e4, s5);
  }
  delete(e4) {
    this._values.delete(e4);
  }
  has(e4) {
    return this._values.has(e4);
  }
  forEach(e4) {
    this._values.forEach(e4);
  }
};

// node_modules/@arcgis/core/core/accessorSupport/Properties.js
function g3(t8, e4, r4) {
  return void 0 !== t8;
}
function u(t8, e4, r4, i3) {
  return void 0 !== t8 && (!(null == r4 && t8.observerObject.flags & i.NonNullable) || (i3.lifecycle, I.INITIALIZING, false));
}
function d3(t8) {
  return t8 && "function" == typeof t8.destroy;
}
s.getLogger("esri.core.accessorSupport.Properties");
var m = class {
  constructor(t8) {
    this.host = t8, this.propertiesByName = /* @__PURE__ */ new Map(), this.ctorArgs = null, this.destroyed = false, this.lifecycle = I.INITIALIZING, this.store = new t6(), this._origin = r2.USER;
    const e4 = this.host.constructor.__accessorMetadata__;
    for (const r4 in e4) {
      const t9 = new a3(r4, e4[r4]);
      this.propertiesByName.set(r4, t9);
    }
    this.metadatas = e4;
  }
  initialize() {
    this.lifecycle = I.CONSTRUCTING;
  }
  constructed() {
    this.lifecycle = I.CONSTRUCTED;
  }
  destroy() {
    this.destroyed = true;
    for (const [t8, e4] of this.propertiesByName) {
      if (e4.metadata.autoDestroy) {
        const r4 = this.internalGet(t8);
        r4 && d3(r4) && (r4.destroy(), ~e4.observerObject.flags & i.NonNullable && this._internalSet(e4, null));
      }
      e4.destroy();
    }
  }
  get initialized() {
    return this.lifecycle !== I.INITIALIZING;
  }
  get(t8) {
    const e4 = this.propertiesByName.get(t8);
    if (e4.metadata.get)
      return e4.getComputed(this);
    i2(e4.observerObject);
    const r4 = this.store;
    return r4.has(t8) ? r4.get(t8) : e4.metadata.value;
  }
  originOf(t8) {
    const e4 = this.store.originOf(t8);
    if (void 0 === e4) {
      const e5 = this.propertiesByName.get(t8);
      if (void 0 !== e5 && e5.observerObject.flags & i.HasDefaultValue)
        return "defaults";
    }
    return E(e4);
  }
  has(t8) {
    return !!this.propertiesByName.has(t8) && this.store.has(t8);
  }
  keys() {
    return [...this.propertiesByName.keys()];
  }
  internalGet(t8) {
    const e4 = this.propertiesByName.get(t8);
    if (g3(e4))
      return this.store.has(t8) ? this.store.get(t8) : e4.metadata.value;
  }
  internalSet(t8, e4) {
    const r4 = this.propertiesByName.get(t8);
    g3(r4) && this._internalSet(r4, e4);
  }
  getDependsInfo(t8, e4, r4) {
    const s5 = this.propertiesByName.get(e4);
    if (!g3(s5))
      return "";
    const o5 = /* @__PURE__ */ new Set(), n6 = f({ onObservableAccessed: (t9) => o5.add(t9), onTrackingEnd: () => {
    } }, () => {
      var _a;
      return (_a = s5.metadata.get) == null ? void 0 : _a.call(t8);
    });
    let a4 = `${r4}${t8.declaredClass.split(".").pop()}.${e4}: ${n6}
`;
    if (0 === o5.size)
      return a4;
    r4 += "  ";
    for (const c2 of o5) {
      if (!(c2 instanceof a3))
        continue;
      a4 += `${r4}${c2.propertyName}: undefined
`;
    }
    return a4;
  }
  setAtOrigin(t8, e4, r4) {
    const s5 = this.propertiesByName.get(t8);
    if (g3(s5))
      return this._setAtOrigin(s5, e4, r4);
  }
  isOverridden(t8) {
    const e4 = this.propertiesByName.get(t8);
    return void 0 !== e4 && !!(e4.observerObject.flags & i.Overriden);
  }
  clearOverride(t8) {
    const e4 = this.propertiesByName.get(t8), r4 = e4 == null ? void 0 : e4.observerObject;
    r4 && r4.flags & i.Overriden && (r4.flags &= ~i.Overriden, e4.notifyChange());
  }
  override(t8, e4) {
    const r4 = this.propertiesByName.get(t8);
    if (!u(r4, t8, e4, this))
      return;
    const s5 = r4.metadata.cast;
    if (s5) {
      const t9 = this._cast(s5, e4), { valid: r5, value: i3 } = t9;
      if (y3.release(t9), !r5)
        return;
      e4 = i3;
    }
    r4.observerObject.flags |= i.Overriden, this._internalSet(r4, e4);
  }
  set(t8, e4) {
    const r4 = this.propertiesByName.get(t8);
    if (!u(r4, t8, e4, this))
      return;
    const s5 = r4.metadata.cast;
    if (s5) {
      const t9 = this._cast(s5, e4), { valid: r5, value: i4 } = t9;
      if (y3.release(t9), !r5)
        return;
      e4 = i4;
    }
    const i3 = r4.metadata.set;
    i3 ? i3.call(this.host, e4) : this._internalSet(r4, e4);
  }
  setDefaultOrigin(t8) {
    this._origin = n4(t8);
  }
  getDefaultOrigin() {
    return E(this._origin);
  }
  notifyChange(t8) {
    const e4 = this.propertiesByName.get(t8);
    void 0 !== e4 && e4.notifyChange();
  }
  invalidate(t8) {
    const e4 = this.propertiesByName.get(t8);
    void 0 !== e4 && e4.invalidate();
  }
  commit(t8) {
    const e4 = this.propertiesByName.get(t8);
    void 0 !== e4 && e4.commit();
  }
  _internalSet(t8, e4) {
    const r4 = this.lifecycle !== I.INITIALIZING ? this._origin : r2.DEFAULTS;
    this._setAtOrigin(t8, e4, r4);
  }
  _setAtOrigin(e4, r4, s5) {
    const i3 = this.store, o5 = e4.propertyName;
    i3.has(o5, s5) && j(r4, i3.get(o5)) && ~e4.observerObject.flags & i.Overriden && s5 === i3.originOf(o5) || (e4.invalidate(), i3.set(o5, r4, s5), e4.commit(), b2(this.host, e4));
  }
  _cast(t8, e4) {
    const r4 = y3.acquire();
    return r4.valid = true, r4.value = e4, t8 && (r4.value = t8.call(this.host, e4, r4)), r4;
  }
};
var v = class {
  constructor() {
    this.value = null, this.valid = true;
  }
  acquire() {
    this.valid = true;
  }
  release() {
    this.value = null;
  }
};
var y3 = new e2(v);

// node_modules/@arcgis/core/core/accessorSupport/testSupport.js
var n5;
function t7() {
  return n5;
}

// node_modules/@arcgis/core/core/Accessor.js
var u2;
var p2;
function d4(t8) {
  var _a;
  if (null == t8)
    return { value: t8 };
  if (Array.isArray(t8))
    return { type: [t8[0]], value: null };
  switch (typeof t8) {
    case "object":
      return ((_a = t8.constructor) == null ? void 0 : _a.__accessorMetadata__) || t8 instanceof Date ? { type: t8.constructor, value: t8 } : t8;
    case "boolean":
      return { type: Boolean, value: t8 };
    case "string":
      return { type: String, value: t8 };
    case "number":
      return { type: Number, value: t8 };
    case "function":
      return { type: t8, value: null };
    default:
      return;
  }
}
var y4 = Symbol("Accessor-Handles");
var f2 = Symbol("Accessor-Initialized");
var m2 = class _m {
  static createSubclass(t8 = {}) {
    if (Array.isArray(t8))
      throw new Error("Multi-inheritance unsupported since 4.16");
    const { properties: r4, declaredClass: e4, constructor: s5 } = t8;
    delete t8.declaredClass, delete t8.properties, delete t8.constructor;
    const i3 = this;
    class c2 extends i3 {
      constructor(...t9) {
        super(...t9), this.inherited = null, s5 && s5.apply(this, t9);
      }
    }
    r(c2.prototype);
    for (const o5 in t8) {
      const r5 = t8[o5];
      c2.prototype[o5] = "function" == typeof r5 ? function(...t9) {
        const e5 = this.inherited;
        let s6;
        this.inherited = function(...t10) {
          if (i3.prototype[o5])
            return i3.prototype[o5].apply(this, t10);
        };
        try {
          s6 = r5.apply(this, t9);
        } catch (c3) {
          throw this.inherited = e5, c3;
        }
        return this.inherited = e5, s6;
      } : t8[o5];
    }
    for (const o5 in r4) {
      const t9 = d4(r4[o5]);
      y2(t9)(c2.prototype, o5);
    }
    return a2(e4)(c2);
  }
  constructor(...t8) {
    var _a;
    if (this[u2] = null, this[p2] = false, this.constructor === _m)
      throw new Error("[accessor] cannot instantiate Accessor. This can be fixed by creating a subclass of Accessor");
    const r4 = new m(this);
    Object.defineProperty(this, "__accessor__", { enumerable: false, value: r4 }), t8.length > 0 && this.normalizeCtorArgs && (r4.ctorArgs = this.normalizeCtorArgs.apply(this, t8)), (_a = t7()) == null ? void 0 : _a.onInstanceConstruct(this), v2.register(this, r4.propertiesByName, this);
  }
  postscript(t8) {
    const r4 = this.__accessor__, e4 = r4.ctorArgs || t8;
    r4.initialize(), e4 && (this.set(e4), r4.ctorArgs = null), r4.constructed(), this.initialize(), this[f2] = true;
  }
  initialize() {
  }
  [o3]() {
    this[y4] = l(this[y4]);
  }
  destroy() {
    var _a;
    this.destroyed || (v2.unregister(this), g2(this), this.__accessor__.destroy(), (_a = t7()) == null ? void 0 : _a.onInstanceDestroy(this));
  }
  get constructed() {
    return this.__accessor__ && this.__accessor__.initialized || false;
  }
  get initialized() {
    return this[f2];
  }
  get destroyed() {
    return this.__accessor__ && this.__accessor__.destroyed || false;
  }
  commitProperty(t8) {
    this.get(t8);
  }
  get(t8) {
    return o(this, t8);
  }
  hasOwnProperty(t8) {
    return this.__accessor__ ? this.__accessor__.has(t8) : Object.prototype.hasOwnProperty.call(this, t8);
  }
  keys() {
    return this.__accessor__ ? this.__accessor__.keys() : [];
  }
  set(t8, r4) {
    return t(this, t8, r4), this;
  }
  watch(t8, r4, e4) {
    return T(this, t8, r4, e4);
  }
  own(t8) {
    this.addHandles(t8);
  }
  addHandles(r4, e4) {
    if (this.destroyed) {
      const t8 = Array.isArray(r4) ? r4 : [r4];
      for (const r5 of t8)
        r5.remove();
      return;
    }
    let s5 = this[y4];
    null == s5 && (s5 = this[y4] = new t3()), s5.add(r4, e4);
  }
  removeHandles(t8) {
    const r4 = this[y4];
    null != r4 && r4.remove(t8);
  }
  removeAllHandles() {
    const t8 = this[y4];
    null != t8 && t8.removeAll();
  }
  hasHandles(t8) {
    const r4 = this[y4];
    return null != r4 && r4.has(t8);
  }
  _override(t8, r4) {
    void 0 === r4 ? this.__accessor__.clearOverride(t8) : this.__accessor__.override(t8, r4);
  }
  _clearOverride(t8) {
    return this.__accessor__.clearOverride(t8);
  }
  _overrideIfSome(t8, r4) {
    null == r4 ? this.__accessor__.clearOverride(t8) : this.__accessor__.override(t8, r4);
  }
  _isOverridden(t8) {
    return this.__accessor__.isOverridden(t8);
  }
  notifyChange(t8) {
    this.__accessor__.notifyChange(t8);
  }
  _get(t8) {
    return this.__accessor__.internalGet(t8);
  }
  _set(t8, r4) {
    return this.__accessor__.internalSet(t8, r4), this;
  }
};
u2 = y4, p2 = f2;
var v2 = new FinalizationRegistry((t8) => {
  for (const r4 of t8.values())
    r4.destroy();
});

export {
  y2 as y,
  d2 as d,
  j3 as j,
  n3 as n,
  o4 as o,
  t2 as t,
  t3 as t2,
  r3 as r,
  r2,
  t4 as t3,
  n4 as n2,
  E,
  c,
  m2 as m
};
//# sourceMappingURL=chunk-453UIKKW.js.map
