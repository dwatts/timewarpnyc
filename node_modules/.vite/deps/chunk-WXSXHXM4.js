import {
  a as a5,
  p as p2
} from "./chunk-NHHKW3WR.js";
import {
  m as m2,
  p
} from "./chunk-V4EIGIRT.js";
import {
  a as a7
} from "./chunk-VYG5A4VI.js";
import {
  a as a6,
  d as d2,
  e as e2,
  i as i3,
  t
} from "./chunk-2NTQWEQZ.js";
import {
  c as c2,
  l as l3
} from "./chunk-7BMUKKBX.js";
import {
  l as l2
} from "./chunk-HPWZ2OON.js";
import {
  F,
  M,
  P,
  S,
  j2 as j,
  u as u3
} from "./chunk-5HSVWQOA.js";
import {
  i
} from "./chunk-GWA3PLGA.js";
import {
  a as a4
} from "./chunk-FXWSVUF2.js";
import {
  o as o3
} from "./chunk-DOQ3SAAR.js";
import {
  I,
  T as T2,
  i as i4
} from "./chunk-UHAU5IXU.js";
import {
  c,
  i as i2
} from "./chunk-3U2FS2TT.js";
import {
  n as n2,
  r as r2
} from "./chunk-6UW2VZVV.js";
import {
  o as o2
} from "./chunk-F42HXUMI.js";
import {
  j as j2
} from "./chunk-UNJDKTFU.js";
import {
  o,
  r
} from "./chunk-NFY4EX6G.js";
import {
  s as s5
} from "./chunk-ULGEYK3G.js";
import {
  s as s4
} from "./chunk-F3KGLZDZ.js";
import {
  l
} from "./chunk-CHTUPHTO.js";
import {
  m,
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a3,
  s as s3,
  u as u2
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T,
  a as a2,
  d,
  u
} from "./chunk-7G6CKDLW.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a,
  n
} from "./chunk-IYZKKFJM.js";
import {
  R
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/renderers/support/AuthoringInfoClassBreakInfo.js
var t2;
var p3 = t2 = class extends l {
  constructor(r3) {
    super(r3), this.minValue = 0, this.maxValue = 0;
  }
  clone() {
    return new t2({ minValue: this.minValue, maxValue: this.maxValue });
  }
};
e([y({ type: Number, json: { write: true } })], p3.prototype, "minValue", void 0), e([y({ type: Number, json: { write: true } })], p3.prototype, "maxValue", void 0), p3 = t2 = e([a3("esri.renderer.support.AuthoringInfoClassBreakInfo")], p3);

// node_modules/@arcgis/core/renderers/support/AuthoringInfoFieldInfo.js
var n3;
var p4 = n3 = class extends l {
  constructor(o4) {
    super(o4), this.field = "", this.normalizationField = "", this.label = "", this.classBreakInfos = [];
  }
  clone() {
    return new n3({ field: this.field, normalizationField: this.normalizationField, label: this.label, classBreakInfos: a(this.classBreakInfos) });
  }
};
e([y({ type: String, json: { write: true } })], p4.prototype, "field", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "normalizationField", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "label", void 0), e([y({ type: [p3], json: { write: true } })], p4.prototype, "classBreakInfos", void 0), p4 = n3 = e([a3("esri.renderers.support.AuthoringInfoFieldInfo")], p4);

// node_modules/@arcgis/core/renderers/support/AuthoringInfoVisualVariable.js
var n4;
var l4 = new s4({ percentTotal: "percent-of-total", ratio: "ratio", percent: "percent" });
var p5 = new s4({ sizeInfo: "size", colorInfo: "color", transparencyInfo: "opacity", rotationInfo: "rotation" });
var a8 = { key: (e4) => "number" == typeof e4 ? "number" : "string", typeMap: { number: Number, string: String }, base: null };
var u4 = ["high-to-low", "above-and-below", "centered-on", "extremes"];
var m3 = [.../* @__PURE__ */ new Set([...["high-to-low", "above-and-below", "centered-on", "extremes", "90-10", "above", "below"], ...["high-to-low", "above-and-below", "90-10", "above", "below"]])];
var y2 = ["seconds", "minutes", "hours", "days", "months", "years"];
var d3 = n4 = class extends l {
  constructor(e4) {
    super(e4), this.endTime = null, this.field = null, this.maxSliderValue = null, this.minSliderValue = null, this.startTime = null, this.type = null, this.units = null;
  }
  castEndTime(e4) {
    return "string" == typeof e4 || "number" == typeof e4 ? e4 : null;
  }
  castStartTime(e4) {
    return "string" == typeof e4 || "number" == typeof e4 ? e4 : null;
  }
  get style() {
    return "color" === this.type ? this._get("style") : null;
  }
  set style(e4) {
    this._set("style", e4);
  }
  get theme() {
    return "color" === this.type || "size" === this.type ? this._get("theme") || "high-to-low" : null;
  }
  set theme(e4) {
    this._set("theme", e4);
  }
  clone() {
    return new n4({ endTime: this.endTime, field: this.field, maxSliderValue: this.maxSliderValue, minSliderValue: this.minSliderValue, startTime: this.startTime, style: this.style, theme: this.theme, type: this.type, units: this.units });
  }
};
e([y({ types: a8, json: { write: true } })], d3.prototype, "endTime", void 0), e([s5("endTime")], d3.prototype, "castEndTime", null), e([y({ type: String, json: { write: true } })], d3.prototype, "field", void 0), e([y({ type: Number, json: { write: true } })], d3.prototype, "maxSliderValue", void 0), e([y({ type: Number, json: { write: true } })], d3.prototype, "minSliderValue", void 0), e([y({ types: a8, json: { write: true } })], d3.prototype, "startTime", void 0), e([s5("startTime")], d3.prototype, "castStartTime", null), e([y({ type: l4.apiValues, value: null, json: { type: l4.jsonValues, read: l4.read, write: l4.write } })], d3.prototype, "style", null), e([y({ type: m3, value: null, json: { type: m3, origins: { "web-scene": { type: u4, write: { writer: (e4, t6) => {
  u4.includes(e4) && (t6.theme = e4);
} } } }, write: true } })], d3.prototype, "theme", null), e([y({ type: p5.apiValues, json: { type: p5.jsonValues, read: p5.read, write: p5.write } })], d3.prototype, "type", void 0), e([y({ type: y2, json: { type: y2, write: true } })], d3.prototype, "units", void 0), d3 = n4 = e([a3("esri.renderers.support.AuthoringInfoVisualVariable")], d3);
var h = d3;

// node_modules/@arcgis/core/renderers/support/AuthoringInfo.js
var c3;
var h2 = new s4({ esriClassifyDefinedInterval: "defined-interval", esriClassifyEqualInterval: "equal-interval", esriClassifyManual: "manual", esriClassifyNaturalBreaks: "natural-breaks", esriClassifyQuantile: "quantile", esriClassifyStandardDeviation: "standard-deviation" });
var y3 = new s4({ pieChart: "pie-chart", classedSize: "class-breaks-size", classedColor: "class-breaks-color", univariateColorSize: "univariate-color-size", relationship: "relationship", predominance: "predominance", dotDensity: "dot-density", flow: "flow" });
var m4 = new s4({ classedSize: "class-breaks-size", classedColor: "class-breaks-color", univariateColorSize: "univariate-color-size", relationship: "relationship", predominance: "predominance", dotDensity: "dot-density" });
var f = ["inches", "feet", "yards", "miles", "nautical-miles", "millimeters", "centimeters", "decimeters", "meters", "kilometers", "decimal-degrees"];
var v = ["high-to-low", "above-and-below", "above", "below", "90-10"];
var w = ["flow-line", "wave-front"];
var b = ["caret", "circle-caret", "arrow", "circle-arrow", "plus-minus", "circle-plus-minus", "square", "circle", "triangle", "happy-sad", "thumb", "custom"];
var g = c3 = class extends l {
  constructor(e4) {
    super(e4), this.colorRamp = null, this.fadeRatio = null, this.isAutoGenerated = false, this.lengthUnit = null, this.maxSliderValue = null, this.minSliderValue = null, this.visualVariables = null;
  }
  get classificationMethod() {
    const e4 = this._get("classificationMethod"), t6 = this.type;
    return t6 && "relationship" !== t6 ? "class-breaks-size" === t6 || "class-breaks-color" === t6 ? e4 || "manual" : null : e4;
  }
  set classificationMethod(e4) {
    this._set("classificationMethod", e4);
  }
  readColorRamp(e4) {
    return e4 ? p(e4) : void 0;
  }
  get fields() {
    return this.type && "predominance" !== this.type ? null : this._get("fields");
  }
  set fields(e4) {
    this._set("fields", e4);
  }
  get field1() {
    return this.type && "relationship" !== this.type ? null : this._get("field1");
  }
  set field1(e4) {
    this._set("field1", e4);
  }
  get field2() {
    return this.type && "relationship" !== this.type ? null : this._get("field2");
  }
  set field2(e4) {
    this._set("field2", e4);
  }
  get flowTheme() {
    return "flow" === this.type ? this._get("flowTheme") : null;
  }
  set flowTheme(e4) {
    this._set("flowTheme", e4);
  }
  get focus() {
    return this.type && "relationship" !== this.type ? null : this._get("focus");
  }
  set focus(e4) {
    this._set("focus", e4);
  }
  get numClasses() {
    return this.type && "relationship" !== this.type ? null : this._get("numClasses");
  }
  set numClasses(e4) {
    this._set("numClasses", e4);
  }
  get statistics() {
    return "univariate-color-size" === this.type && "above-and-below" === this.univariateTheme ? this._get("statistics") : null;
  }
  set statistics(e4) {
    this._set("statistics", e4);
  }
  get standardDeviationInterval() {
    const e4 = this.type;
    return e4 && "relationship" !== e4 && "class-breaks-size" !== e4 && "class-breaks-color" !== e4 || this.classificationMethod && "standard-deviation" !== this.classificationMethod ? null : this._get("standardDeviationInterval");
  }
  set standardDeviationInterval(e4) {
    this._set("standardDeviationInterval", e4);
  }
  get type() {
    return this._get("type");
  }
  set type(e4) {
    let t6 = e4;
    "classed-size" === e4 ? t6 = "class-breaks-size" : "classed-color" === e4 && (t6 = "class-breaks-color"), this._set("type", t6);
  }
  get univariateSymbolStyle() {
    return "univariate-color-size" === this.type && "above-and-below" === this.univariateTheme ? this._get("univariateSymbolStyle") : null;
  }
  set univariateSymbolStyle(e4) {
    this._set("univariateSymbolStyle", e4);
  }
  get univariateTheme() {
    return "univariate-color-size" === this.type ? this._get("univariateTheme") : null;
  }
  set univariateTheme(e4) {
    this._set("univariateTheme", e4);
  }
  clone() {
    return new c3({ classificationMethod: this.classificationMethod, colorRamp: a(this.colorRamp), fadeRatio: a(this.fadeRatio), fields: this.fields && this.fields.slice(0), field1: a(this.field1), field2: a(this.field2), isAutoGenerated: this.isAutoGenerated, focus: this.focus, numClasses: this.numClasses, maxSliderValue: this.maxSliderValue, minSliderValue: this.minSliderValue, lengthUnit: this.lengthUnit, statistics: this.statistics, standardDeviationInterval: this.standardDeviationInterval, type: this.type, visualVariables: this.visualVariables && this.visualVariables.map((e4) => e4.clone()), univariateSymbolStyle: this.univariateSymbolStyle, univariateTheme: this.univariateTheme, flowTheme: this.flowTheme });
  }
};
e([y({ type: h2.apiValues, value: null, json: { type: h2.jsonValues, read: h2.read, write: h2.write, origins: { "web-document": { default: "manual", type: h2.jsonValues, read: h2.read, write: h2.write } } } })], g.prototype, "classificationMethod", null), e([y({ types: m2, json: { write: true } })], g.prototype, "colorRamp", void 0), e([o("colorRamp")], g.prototype, "readColorRamp", null), e([y({ json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "fadeRatio", void 0), e([y({ type: [String], value: null, json: { write: true } })], g.prototype, "fields", null), e([y({ type: p4, value: null, json: { write: true } })], g.prototype, "field1", null), e([y({ type: p4, value: null, json: { write: true } })], g.prototype, "field2", null), e([y({ type: w, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "flowTheme", null), e([y({ type: ["HH", "HL", "LH", "LL"], value: null, json: { write: true } })], g.prototype, "focus", null), e([y({ type: Boolean, json: { write: true, default: false, origins: { "web-scene": { write: false } } } })], g.prototype, "isAutoGenerated", void 0), e([y({ type: Number, value: null, json: { type: T, write: true } })], g.prototype, "numClasses", null), e([y({ type: f, json: { type: f, read: false, write: false, origins: { "web-scene": { read: true, write: true } } } })], g.prototype, "lengthUnit", void 0), e([y({ type: Number, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "maxSliderValue", void 0), e([y({ type: Number, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "minSliderValue", void 0), e([y({ type: Object, value: null, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "statistics", null), e([y({ type: [0.25, 0.33, 0.5, 1], value: null, json: { type: [0.25, 0.33, 0.5, 1], write: true } })], g.prototype, "standardDeviationInterval", null), e([y({ type: y3.apiValues, value: null, json: { type: y3.jsonValues, read: y3.read, write: y3.write, origins: { "web-scene": { type: m4.jsonValues, write: { writer: m4.write, overridePolicy: (e4) => ({ enabled: "flow" !== e4 }) } } } } })], g.prototype, "type", null), e([y({ type: [h], json: { write: true } })], g.prototype, "visualVariables", void 0), e([y({ type: b, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "univariateSymbolStyle", null), e([y({ type: v, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "univariateTheme", null), g = c3 = e([a3("esri.renderers.support.AuthoringInfo")], g);
var j3 = g;

// node_modules/@arcgis/core/renderers/Renderer.js
var n5 = new s4({ simple: "simple", uniqueValue: "unique-value", classBreaks: "class-breaks", heatmap: "heatmap", dotDensity: "dot-density", dictionary: "dictionary", pieChart: "pie-chart" }, { ignoreUnknown: true });
var a9 = class extends l {
  constructor(r3) {
    super(r3), this.authoringInfo = null, this.type = null;
  }
  async getRequiredFields(r3) {
    if (!this.collectRequiredFields)
      return [];
    const e4 = /* @__PURE__ */ new Set();
    return await this.collectRequiredFields(e4, r3), Array.from(e4).sort();
  }
  getSymbol(r3, e4) {
  }
  async getSymbolAsync(r3, e4) {
  }
  getSymbols() {
    return [];
  }
  getAttributeHash() {
    return JSON.stringify(this);
  }
  getMeshHash() {
    return JSON.stringify(this);
  }
};
e([y({ type: j3, json: { write: true } })], a9.prototype, "authoringInfo", void 0), e([y({ type: n5.apiValues, readOnly: true, json: { type: n5.jsonValues, read: false, write: { writer: n5.write, ignoreOrigin: true } } })], a9.prototype, "type", void 0), a9 = e([a3("esri.renderers.Renderer")], a9);
var p6 = a9;

// node_modules/@arcgis/core/renderers/support/randomRotationExpression.js
function e3(e4) {
  var _a, _b;
  return ((_b = (_a = e4.match(t3)) == null ? void 0 : _a[1]) == null ? void 0 : _b.replace(/\\'/g, "'")) ?? null;
}
var t3 = /^hash\(\$feature\['((\\'|[^'])+)'\]\) \* 8\.381e-8$/;

// node_modules/@arcgis/core/renderers/visualVariables/support/VisualVariableLegendOptions.js
var t4;
var p7 = t4 = class extends p2 {
  constructor() {
    super(...arguments), this.showLegend = null;
  }
  clone() {
    return new t4({ title: this.title, showLegend: this.showLegend });
  }
};
e([y({ type: Boolean, json: { write: true } })], p7.prototype, "showLegend", void 0), p7 = t4 = e([a3("esri.renderers.visualVariables.support.VisualVariableLegendOptions")], p7);
var i5 = p7;

// node_modules/@arcgis/core/renderers/visualVariables/VisualVariable.js
var a10 = new s4({ colorInfo: "color", transparencyInfo: "opacity", rotationInfo: "rotation", sizeInfo: "size" });
var u5 = class extends l {
  constructor(e4) {
    super(e4), this.index = null, this.type = null, this.field = null, this.valueExpression = null, this.valueExpressionTitle = null, this.legendOptions = null;
  }
  castField(e4) {
    return null == e4 ? e4 : "function" == typeof e4 ? (s.getLogger(this).error(".field: field must be a string value"), null) : u(e4);
  }
  get arcadeRequired() {
    return !!this.valueExpression;
  }
  clone() {
  }
  getAttributeHash() {
    return `${this.type}-${this.field}-${this.valueExpression}`;
  }
};
e([y()], u5.prototype, "index", void 0), e([y({ type: a10.apiValues, readOnly: true, json: { read: a10.read, write: a10.write } })], u5.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "field", void 0), e([s5("field")], u5.prototype, "castField", null), e([y({ type: String, json: { write: true } })], u5.prototype, "valueExpression", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "valueExpressionTitle", void 0), e([y({ readOnly: true })], u5.prototype, "arcadeRequired", null), e([y({ type: i5, json: { write: true } })], u5.prototype, "legendOptions", void 0), u5 = e([a3("esri.renderers.visualVariables.VisualVariable")], u5);
var c4 = u5;

// node_modules/@arcgis/core/renderers/visualVariables/ColorVariable.js
var i6;
var p8 = i6 = class extends c4 {
  constructor(t6) {
    super(t6), this.type = "color", this.normalizationField = null;
  }
  get cache() {
    return { ipData: this._interpolateData(), hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  set stops(t6) {
    t6 && Array.isArray(t6) && (t6 = t6.filter((t7) => !!t7)).sort((t7, s6) => t7.value - s6.value), this._set("stops", t6);
  }
  clone() {
    return new i6({ field: this.field, normalizationField: this.normalizationField, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, stops: this.stops && this.stops.map((t6) => t6.clone()), legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
  getAttributeHash() {
    return `${super.getAttributeHash()}-${this.normalizationField}`;
  }
  _interpolateData() {
    return this.stops && this.stops.map((t6) => t6.value || 0);
  }
};
e([y({ readOnly: true })], p8.prototype, "cache", null), e([y({ type: ["color"], json: { type: ["colorInfo"] } })], p8.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], p8.prototype, "normalizationField", void 0), e([y({ type: [a5], json: { write: true } })], p8.prototype, "stops", null), p8 = i6 = e([a3("esri.renderers.visualVariables.ColorVariable")], p8);
var a11 = p8;

// node_modules/@arcgis/core/renderers/visualVariables/support/OpacityStop.js
var l5;
var u6 = l5 = class extends l {
  constructor(r3) {
    super(r3), this.label = null, this.opacity = null, this.value = null;
  }
  readOpacity(r3, t6) {
    return r2(t6.transparency);
  }
  writeOpacity(r3, t6, o4) {
    t6[o4] = n2(r3);
  }
  clone() {
    return new l5({ label: this.label, opacity: this.opacity, value: this.value });
  }
};
e([y({ type: String, json: { write: true } })], u6.prototype, "label", void 0), e([y({ type: Number, json: { type: T, write: { target: "transparency" } } })], u6.prototype, "opacity", void 0), e([o("opacity", ["transparency"])], u6.prototype, "readOpacity", null), e([r("opacity")], u6.prototype, "writeOpacity", null), e([y({ type: Number, json: { write: true } })], u6.prototype, "value", void 0), u6 = l5 = e([a3("esri.renderers.visualVariables.support.OpacityStop")], u6);
var y4 = u6;

// node_modules/@arcgis/core/renderers/visualVariables/OpacityVariable.js
var i7;
var p9 = i7 = class extends c4 {
  constructor(t6) {
    super(t6), this.type = "opacity", this.normalizationField = null;
  }
  get cache() {
    return { ipData: this._interpolateData(), hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  set stops(t6) {
    t6 && Array.isArray(t6) && (t6 = t6.filter((t7) => !!t7)).sort((t7, s6) => t7.value - s6.value), this._set("stops", t6);
  }
  clone() {
    return new i7({ field: this.field, normalizationField: this.normalizationField, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, stops: this.stops && this.stops.map((t6) => t6.clone()), legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
  getAttributeHash() {
    return `${super.getAttributeHash()}-${this.normalizationField}`;
  }
  _interpolateData() {
    return this.stops && this.stops.map((t6) => t6.value || 0);
  }
};
e([y({ readOnly: true })], p9.prototype, "cache", null), e([y({ type: ["opacity"], json: { type: ["transparencyInfo"] } })], p9.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], p9.prototype, "normalizationField", void 0), e([y({ type: [y4], json: { write: true } })], p9.prototype, "stops", null), p9 = i7 = e([a3("esri.renderers.visualVariables.OpacityVariable")], p9);
var a12 = p9;

// node_modules/@arcgis/core/renderers/visualVariables/RotationVariable.js
var p10;
var a13 = p10 = class extends c4 {
  constructor(e4) {
    super(e4), this.axis = null, this.type = "rotation", this.rotationType = "geographic", this.valueExpressionTitle = null;
  }
  get cache() {
    return { hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  writeValueExpressionTitleWebScene(e4, s6, o4, r3) {
    if (r3 && r3.messages) {
      const e5 = `visualVariables[${this.index}]`;
      r3.messages.push(new s2("property:unsupported", this.type + "VisualVariable.valueExpressionTitle is not supported in Web Scene. Please remove this property to save the Web Scene.", { instance: this, propertyName: e5 + ".valueExpressionTitle", context: r3 }));
    }
  }
  clone() {
    return new p10({ axis: this.axis, rotationType: this.rotationType, field: this.field, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
};
e([y({ readOnly: true })], a13.prototype, "cache", null), e([y({ type: ["heading", "tilt", "roll"], json: { origins: { "web-scene": { default: "heading", write: true } } } })], a13.prototype, "axis", void 0), e([y({ type: ["rotation"], json: { type: ["rotationInfo"] } })], a13.prototype, "type", void 0), e([y({ type: ["geographic", "arithmetic"], json: { write: true, origins: { "web-document": { write: true, default: "geographic" } } } })], a13.prototype, "rotationType", void 0), e([y({ type: String, json: { write: true } })], a13.prototype, "valueExpressionTitle", void 0), e([r("web-scene", "valueExpressionTitle")], a13.prototype, "writeValueExpressionTitleWebScene", null), a13 = p10 = e([a3("esri.renderers.visualVariables.RotationVariable")], a13);
var n6 = a13;

// node_modules/@arcgis/core/renderers/visualVariables/support/SizeStop.js
var p11;
var i8 = p11 = class extends l {
  constructor(r3) {
    super(r3), this.label = null, this.size = null, this.value = null;
  }
  clone() {
    return new p11({ label: this.label, size: this.size, value: this.value });
  }
};
e([y({ type: String, json: { write: true } })], i8.prototype, "label", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], i8.prototype, "size", void 0), e([y({ type: Number, json: { write: true } })], i8.prototype, "value", void 0), i8 = p11 = e([a3("esri.renderers.visualVariables.support.SizeStop")], i8);
var l6 = i8;

// node_modules/@arcgis/core/renderers/visualVariables/support/SizeVariableLegendOptions.js
var t5;
var i9 = t5 = class extends i5 {
  constructor() {
    super(...arguments), this.customValues = null;
  }
  clone() {
    return new t5({ title: this.title, showLegend: this.showLegend, customValues: this.customValues && this.customValues.slice(0) });
  }
};
e([y({ type: [Number], json: { write: true } })], i9.prototype, "customValues", void 0), i9 = t5 = e([a3("esri.renderers.visualVariables.support.SizeVariableLegendOptions")], i9);
var a14 = i9;

// node_modules/@arcgis/core/renderers/visualVariables/SizeVariable.js
var z;
var v2 = new s4({ width: "width", depth: "depth", height: "height", widthAndDepth: "width-and-depth", all: "all" });
var g2 = new s4({ unknown: "unknown", inch: "inches", foot: "feet", yard: "yards", mile: "miles", "nautical-mile": "nautical-miles", millimeter: "millimeters", centimeter: "centimeters", decimeter: "decimeters", meter: "meters", kilometer: "kilometers", "decimal-degree": "decimal-degrees" });
function w2(e4) {
  if (null != e4)
    return "string" == typeof e4 || "number" == typeof e4 ? o3(e4) : "size" === e4.type ? e2(e4) ? e4 : (delete (e4 = { ...e4 }).type, new V(e4)) : void 0;
}
function f2(e4, t6, i12) {
  if ("object" != typeof e4)
    return e4;
  const s6 = new V();
  return s6.read(e4, i12), s6;
}
var V = z = class extends c4 {
  constructor(e4) {
    super(e4), this.axis = null, this.legendOptions = null, this.normalizationField = null, this.scaleBy = null, this.target = null, this.type = "size", this.useSymbolValue = null, this.valueExpression = null, this.valueRepresentation = null, this.valueUnit = null;
  }
  get cache() {
    return { ipData: this._interpolateData(), hasExpression: !!this.valueExpression, compiledFunc: null, isScaleDriven: null != this.valueExpression && d2.test(this.valueExpression) };
  }
  set expression(e4) {
    s.getLogger(this).warn("'expression' is deprecated since version 4.2. Use 'valueExpression' instead. The only supported expression is 'view.scale'."), "view.scale" === e4 ? (this.valueExpression = "$view.scale", this._set("expression", e4)) : this._set("expression", null);
  }
  set index(e4) {
    e2(this.maxSize) && (this.maxSize.index = `visualVariables[${e4}].maxSize`), e2(this.minSize) && (this.minSize.index = `visualVariables[${e4}].minSize`), this._set("index", e4);
  }
  get inputValueType() {
    return t(this);
  }
  set maxDataValue(e4) {
    e4 && this.stops && (s.getLogger(this).warn("cannot set maxDataValue when stops is not null."), e4 = null), this._set("maxDataValue", e4);
  }
  set maxSize(e4) {
    e4 && this.stops && (s.getLogger(this).warn("cannot set maxSize when stops is not null."), e4 = null), this._set("maxSize", e4);
  }
  castMaxSize(e4) {
    return w2(e4);
  }
  readMaxSize(e4, t6, i12) {
    return f2(e4, t6, i12);
  }
  set minDataValue(e4) {
    e4 && this.stops && (s.getLogger(this).warn("cannot set minDataValue when stops is not null."), e4 = null), this._set("minDataValue", e4);
  }
  set minSize(e4) {
    e4 && this.stops && (s.getLogger(this).warn("cannot set minSize when stops is not null."), e4 = null), this._set("minSize", e4);
  }
  castMinSize(e4) {
    return w2(e4);
  }
  readMinSize(e4, t6, i12) {
    return f2(e4, t6, i12);
  }
  get arcadeRequired() {
    return !!this.valueExpression || (null != this.minSize && "object" == typeof this.minSize && this.minSize.arcadeRequired || null != this.maxSize && "object" == typeof this.maxSize && this.maxSize.arcadeRequired);
  }
  set stops(e4) {
    null == this.minDataValue && null == this.maxDataValue && null == this.minSize && null == this.maxSize ? e4 && Array.isArray(e4) && (e4 = e4.filter((e5) => !!e5)).sort((e5, t6) => e5.value - t6.value) : e4 && (s.getLogger(this).warn("cannot set stops when one of minDataValue, maxDataValue, minSize or maxSize is not null."), e4 = null), this._set("stops", e4);
  }
  get transformationType() {
    return a6(this, this.inputValueType);
  }
  readValueExpression(e4, t6) {
    return e4 || t6.expression && "$view.scale";
  }
  writeValueExpressionWebScene(e4, i12, s6, r3) {
    if ("$view.scale" === e4) {
      if (r3 && r3.messages) {
        const e5 = this.index, i13 = "string" == typeof e5 ? e5 : `visualVariables[${e5}]`;
        r3.messages.push(new s2("property:unsupported", this.type + "VisualVariable.valueExpression = '$view.scale' is not supported in Web Scene. Please remove this property to save the Web Scene.", { instance: this, propertyName: i13 + ".valueExpression", context: r3 }));
      }
    } else
      i12[s6] = e4;
  }
  readValueUnit(e4) {
    return e4 ? g2.read(e4) : null;
  }
  clone() {
    return new z({ axis: this.axis, field: this.field, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, maxDataValue: this.maxDataValue, maxSize: e2(this.maxSize) ? this.maxSize.clone() : this.maxSize, minDataValue: this.minDataValue, minSize: e2(this.minSize) ? this.minSize.clone() : this.minSize, normalizationField: this.normalizationField, stops: this.stops && this.stops.map((e4) => e4.clone()), target: this.target, useSymbolValue: this.useSymbolValue, valueRepresentation: this.valueRepresentation, valueUnit: this.valueUnit, legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
  flipSizes() {
    if (this.transformationType === i3.ClampedLinear) {
      const { minSize: e4, maxSize: t6 } = this;
      return this.minSize = t6, this.maxSize = e4, this;
    }
    if (this.transformationType === i3.Stops) {
      const e4 = this.stops;
      if (!e4)
        return this;
      const t6 = e4.map((e5) => e5.size).reverse(), i12 = e4.length;
      for (let s6 = 0; s6 < i12; s6++)
        e4[s6].size = t6[s6];
      return this;
    }
    return this;
  }
  getAttributeHash() {
    return `${super.getAttributeHash()}-${this.target}-${this.normalizationField}`;
  }
  _interpolateData() {
    return this.stops && this.stops.map((e4) => e4.value || 0);
  }
};
e([y({ readOnly: true })], V.prototype, "cache", null), e([y({ type: v2.apiValues, json: { type: v2.jsonValues, origins: { "web-map": { read: false } }, read: v2.read, write: v2.write } })], V.prototype, "axis", void 0), e([y({ type: String, value: null, json: { read: false } })], V.prototype, "expression", null), e([y()], V.prototype, "index", null), e([y({ type: String, readOnly: true })], V.prototype, "inputValueType", null), e([y({ type: a14, json: { write: true } })], V.prototype, "legendOptions", void 0), e([y({ type: Number, value: null, json: { write: true } })], V.prototype, "maxDataValue", null), e([y({ type: Number, value: null, json: { write: true } })], V.prototype, "maxSize", null), e([s5("maxSize")], V.prototype, "castMaxSize", null), e([o("maxSize")], V.prototype, "readMaxSize", null), e([y({ type: Number, value: null, json: { write: true } })], V.prototype, "minDataValue", null), e([y({ type: Number, value: null, json: { write: true } })], V.prototype, "minSize", null), e([s5("minSize")], V.prototype, "castMinSize", null), e([o("minSize")], V.prototype, "readMinSize", null), e([y({ type: String, json: { write: true } })], V.prototype, "normalizationField", void 0), e([y({ readOnly: true })], V.prototype, "arcadeRequired", null), e([y({ type: String })], V.prototype, "scaleBy", void 0), e([y({ type: [l6], value: null, json: { write: true } })], V.prototype, "stops", null), e([y({ type: ["outline"], json: { write: true } })], V.prototype, "target", void 0), e([y({ type: String, readOnly: true })], V.prototype, "transformationType", null), e([y({ type: ["size"], json: { type: ["sizeInfo"] } })], V.prototype, "type", void 0), e([y({ type: Boolean, json: { write: true, origins: { "web-map": { read: false } } } })], V.prototype, "useSymbolValue", void 0), e([y({ type: String, json: { write: true } })], V.prototype, "valueExpression", void 0), e([o("valueExpression", ["valueExpression", "expression"])], V.prototype, "readValueExpression", null), e([r("web-scene", "valueExpression")], V.prototype, "writeValueExpressionWebScene", null), e([y({ type: ["radius", "diameter", "area", "width", "distance"], json: { write: true } })], V.prototype, "valueRepresentation", void 0), e([y({ type: g2.apiValues, json: { write: g2.write, origins: { "web-map": { read: false }, "web-scene": { write: true }, "portal-item": { write: true } } } })], V.prototype, "valueUnit", void 0), e([o("valueUnit")], V.prototype, "readValueUnit", null), V = z = e([a3("esri.renderers.visualVariables.SizeVariable")], V);
var b2 = V;

// node_modules/@arcgis/core/renderers/visualVariables/VisualVariableFactory.js
var u7 = { color: a11, size: b2, opacity: a12, rotation: n6 };
var b3 = new s4({ colorInfo: "color", transparencyInfo: "opacity", rotationInfo: "rotation", sizeInfo: "size" });
var h3 = /^\[([^\]]+)\]$/i;
var m5 = class extends m {
  constructor() {
    super(...arguments), this.colorVariables = null, this.opacityVariables = null, this.rotationVariables = null, this.sizeVariables = null;
  }
  set visualVariables(r3) {
    if (this._resetVariables(), (r3 = r3 && r3.filter((r4) => !!r4)) && r3.length) {
      for (const s6 of r3)
        switch (s6.type) {
          case "color":
            this.colorVariables.push(s6);
            break;
          case "opacity":
            this.opacityVariables.push(s6);
            break;
          case "rotation":
            this.rotationVariables.push(s6);
            break;
          case "size":
            this.sizeVariables.push(s6);
        }
      if (this.sizeVariables.length) {
        this.sizeVariables.some((r4) => !!r4.target) && r3.sort((r4, s6) => {
          let e4 = null;
          return e4 = r4.target === s6.target ? 0 : r4.target ? 1 : -1, e4;
        });
      }
      for (let s6 = 0; s6 < r3.length; s6++) {
        r3[s6].index = s6;
      }
      this._set("visualVariables", r3);
    } else
      this._set("visualVariables", r3);
  }
  readVariables(r3, s6, e4) {
    const { rotationExpression: a16, rotationType: i12 } = s6, l10 = a16 && a16.match(h3), n9 = l10 && l10[1];
    if (n9 && (r3 || (r3 = []), r3.push({ type: "rotationInfo", rotationType: i12, field: n9 })), r3)
      return r3.map((r4) => {
        const s7 = b3.read(r4.type), a17 = u7[s7];
        a17 || (s.getLogger(this).warn(`Unknown variable type: ${s7}`), e4 && e4.messages && e4.messages.push(new s3("visual-variable:unsupported", `visualVariable of type '${s7}' is not supported`, { definition: r4, context: e4 })));
        const i13 = new a17();
        return i13.read(r4, e4), i13;
      });
  }
  writeVariables(r3, s6) {
    const e4 = [];
    for (const o4 of r3) {
      const r4 = o4.toJSON(s6);
      r4 && e4.push(r4);
    }
    return e4;
  }
  _resetVariables() {
    this.colorVariables = [], this.opacityVariables = [], this.rotationVariables = [], this.sizeVariables = [];
  }
};
e([y()], m5.prototype, "visualVariables", null), m5 = e([a3("esri.renderers.visualVariables.VisualVariableFactory")], m5);
var V2 = m5;

// node_modules/@arcgis/core/renderers/mixins/VisualVariablesMixin.js
var m6 = { base: c4, key: "type", typeMap: { opacity: a12, color: a11, rotation: n6, size: b2 } };
var v3 = (l10) => {
  let u10 = class extends l10 {
    constructor() {
      super(...arguments), this._vvFactory = new V2();
    }
    set visualVariables(r3) {
      this._vvFactory.visualVariables = r3, this._set("visualVariables", this._vvFactory.visualVariables);
    }
    readVisualVariables(r3, a16, s6) {
      return this._vvFactory.readVariables(r3, a16, s6);
    }
    writeVisualVariables(r3, a16, s6, i12) {
      a16[s6] = this._vvFactory.writeVariables(r3, i12);
    }
    get arcadeRequiredForVisualVariables() {
      if (!this.visualVariables)
        return false;
      for (const r3 of this.visualVariables)
        if (r3.arcadeRequired)
          return true;
      return false;
    }
    hasVisualVariables(r3, a16) {
      return r3 ? this.getVisualVariablesForType(r3, a16).length > 0 : this.getVisualVariablesForType("size", a16).length > 0 || this.getVisualVariablesForType("color", a16).length > 0 || this.getVisualVariablesForType("opacity", a16).length > 0 || this.getVisualVariablesForType("rotation", a16).length > 0;
    }
    getVisualVariablesForType(r3, a16) {
      const s6 = this.visualVariables;
      return s6 ? s6.filter((s7) => s7.type === r3 && ("string" == typeof a16 ? s7.target === a16 : false !== a16 || !s7.target)) : [];
    }
    async collectVVRequiredFields(r3, a16) {
      let s6 = [];
      this.visualVariables && (s6 = s6.concat(this.visualVariables));
      for (const i12 of s6)
        i12 && (i12.field && I(r3, a16, i12.field), i12.normalizationField && I(r3, a16, i12.normalizationField), i12.valueExpression && (y5(i12.valueExpression, r3, a16) || await T2(r3, a16, i12.valueExpression)));
    }
  };
  return e([y({ types: [m6], value: null, json: { write: true } })], u10.prototype, "visualVariables", null), e([o("visualVariables", ["visualVariables", "rotationType", "rotationExpression"])], u10.prototype, "readVisualVariables", null), e([r("visualVariables")], u10.prototype, "writeVisualVariables", null), u10 = e([a3("esri.renderers.mixins.VisualVariablesMixin")], u10), u10;
};
function y5(r3, a16, s6) {
  const i12 = e3(r3);
  return null != i12 && (I(a16, s6, i12), true);
}

// node_modules/@arcgis/core/renderers/support/commonProperties.js
var l7 = { types: M, json: { write: { writer: l3 }, origins: { "web-scene": { types: F, write: { writer: l3 }, read: { reader: u2({ types: F }) } } } } };
var y6 = { types: { base: a4, key: "type", typeMap: { "simple-fill": j.typeMap["simple-fill"], "picture-fill": j.typeMap["picture-fill"], "polygon-3d": j.typeMap["polygon-3d"] } }, json: { write: { writer: l3 }, origins: { "web-scene": { type: S, write: { writer: l3 } } } } };
var m7 = { cast: (e4) => null == e4 || "string" == typeof e4 || "number" == typeof e4 ? e4 : `${e4}`, json: { type: String, write: { writer: (e4, r3) => {
  r3.value = e4 == null ? void 0 : e4.toString();
} } } };

// node_modules/@arcgis/core/renderers/support/ClassBreakInfo.js
var i10;
var l8 = i10 = class extends l {
  constructor(s6) {
    super(s6), this.description = null, this.label = null, this.minValue = null, this.maxValue = 0, this.symbol = null;
  }
  clone() {
    return new i10({ description: this.description, label: this.label, minValue: this.minValue, maxValue: this.maxValue, symbol: this.symbol ? this.symbol.clone() : null });
  }
  getMeshHash() {
    const s6 = JSON.stringify(this.symbol);
    return `${this.minValue}.${this.maxValue}.${s6}`;
  }
};
e([y({ type: String, json: { write: true } })], l8.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], l8.prototype, "label", void 0), e([y({ type: Number, json: { read: { source: "classMinValue" }, write: { target: "classMinValue" } } })], l8.prototype, "minValue", void 0), e([y({ type: Number, json: { read: { source: "classMaxValue" }, write: { target: "classMaxValue" } } })], l8.prototype, "maxValue", void 0), e([y(l7)], l8.prototype, "symbol", void 0), l8 = i10 = e([a3("esri.renderers.support.ClassBreakInfo")], l8);
var a15 = l8;

// node_modules/@arcgis/core/renderers/ClassBreaksRenderer.js
var B;
var S2 = "log";
var F2 = "percent-of-total";
var V3 = "field";
var E = new s4({ esriNormalizeByLog: S2, esriNormalizeByPercentOfTotal: F2, esriNormalizeByField: V3 });
var j4 = d(a15);
var z2 = B = class extends v3(p6) {
  constructor(e4) {
    super(e4), this._compiledValueExpression = { valueExpression: null, compiledFunction: null }, this.backgroundFillSymbol = null, this.classBreakInfos = null, this.defaultLabel = null, this.defaultSymbol = null, this.field = null, this.isMaxInclusive = true, this.legendOptions = null, this.normalizationField = null, this.normalizationTotal = null, this.type = "class-breaks", this.valueExpression = null, this.valueExpressionTitle = null, this._set("classBreakInfos", []);
  }
  readClassBreakInfos(e4, s6, t6) {
    if (!Array.isArray(e4))
      return;
    let o4 = s6.minValue;
    return e4.map((e5) => {
      const s7 = new a15();
      return s7.read(e5, t6), null == s7.minValue && (s7.minValue = o4), null == s7.maxValue && (s7.maxValue = s7.minValue), o4 = s7.maxValue, s7;
    });
  }
  writeClassBreakInfos(e4, s6, t6, o4) {
    const i12 = e4.map((e5) => e5.write({}, o4));
    this._areClassBreaksConsecutive() && i12.forEach((e5) => delete e5.classMinValue), s6[t6] = i12;
  }
  castField(e4) {
    return null == e4 ? e4 : "function" == typeof e4 ? (s.getLogger(this).error(".field: field must be a string value"), null) : u(e4);
  }
  get minValue() {
    return this.classBreakInfos && this.classBreakInfos[0] && this.classBreakInfos[0].minValue || 0;
  }
  get normalizationType() {
    let e4 = this._get("normalizationType");
    const s6 = !!this.normalizationField, t6 = null != this.normalizationTotal;
    return s6 || t6 ? (e4 = s6 && V3 || t6 && F2 || null, s6 && t6 && s.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")) : e4 !== V3 && e4 !== F2 || (e4 = null), e4;
  }
  set normalizationType(e4) {
    this._set("normalizationType", e4);
  }
  addClassBreakInfo(e4, t6, i12) {
    let r3 = null;
    r3 = "number" == typeof e4 ? new a15({ minValue: e4, maxValue: t6, symbol: P(i12) }) : j4(a(e4)), this.classBreakInfos.push(r3), 1 === this.classBreakInfos.length && this.notifyChange("minValue");
  }
  removeClassBreakInfo(e4, s6) {
    const t6 = this.classBreakInfos.length;
    for (let o4 = 0; o4 < t6; o4++) {
      const t7 = [this.classBreakInfos[o4].minValue, this.classBreakInfos[o4].maxValue];
      if (t7[0] === e4 && t7[1] === s6) {
        this.classBreakInfos.splice(o4, 1);
        break;
      }
    }
  }
  getBreakIndex(e4, s6) {
    return !this.valueExpression || null != s6 && null != s6.arcade || s.getLogger(this).warn(""), this.valueExpression ? this._getBreakIndexForExpression(e4, s6) : this._getBreakIndexForField(e4);
  }
  async getClassBreakInfo(e4, s6) {
    let t6 = s6;
    !this.valueExpression || null != s6 && null != s6.arcade || (t6 = { ...t6, arcade: await i4() });
    const o4 = this.getBreakIndex(e4, t6);
    return -1 !== o4 ? this.classBreakInfos[o4] : null;
  }
  getSymbol(e4, s6) {
    if (this.valueExpression && (null == s6 || null == s6.arcade))
      return void s.getLogger(this).error("#getSymbol()", "Please use getSymbolAsync if valueExpression is used");
    const t6 = this.getBreakIndex(e4, s6);
    return t6 > -1 ? this.classBreakInfos[t6].symbol : this.defaultSymbol;
  }
  async getSymbolAsync(e4, s6) {
    let t6 = s6;
    if (this.valueExpression && (null == s6 || null == s6.arcade)) {
      const e5 = await i4(), { arcadeUtils: s7 } = e5;
      s7.hasGeometryOperations(this.valueExpression) && await s7.enableGeometryOperations(), t6 = { ...t6, arcade: e5 };
    }
    const o4 = this.getBreakIndex(e4, t6);
    return o4 > -1 ? this.classBreakInfos[o4].symbol : this.defaultSymbol;
  }
  getSymbols() {
    const e4 = [];
    return this.classBreakInfos.forEach((s6) => {
      s6.symbol && e4.push(s6.symbol);
    }), this.defaultSymbol && e4.push(this.defaultSymbol), e4;
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e4, s6) => e4 + s6.getAttributeHash(), "");
  }
  getMeshHash() {
    const e4 = JSON.stringify(this.backgroundFillSymbol), s6 = JSON.stringify(this.defaultSymbol), t6 = `${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;
    return `${e4}.${s6}.${this.classBreakInfos.reduce((e5, s7) => e5 + s7.getMeshHash(), "")}.${t6}.${this.field}.${this.valueExpression}`;
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;
  }
  clone() {
    return new B({ field: this.field, backgroundFillSymbol: this.backgroundFillSymbol && this.backgroundFillSymbol.clone(), defaultLabel: this.defaultLabel, defaultSymbol: this.defaultSymbol && this.defaultSymbol.clone(), valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, classBreakInfos: a(this.classBreakInfos), isMaxInclusive: this.isMaxInclusive, normalizationField: this.normalizationField, normalizationTotal: this.normalizationTotal, normalizationType: this.normalizationType, visualVariables: a(this.visualVariables), legendOptions: a(this.legendOptions), authoringInfo: this.authoringInfo && this.authoringInfo.clone() });
  }
  async collectRequiredFields(e4, s6) {
    const t6 = [this.collectVVRequiredFields(e4, s6), this.collectSymbolFields(e4, s6)];
    await Promise.all(t6);
  }
  async collectSymbolFields(e4, s6) {
    const t6 = [...this.getSymbols().map((t7) => t7.collectRequiredFields(e4, s6)), T2(e4, s6, this.valueExpression)];
    I(e4, s6, this.field), I(e4, s6, this.normalizationField), await Promise.all(t6);
  }
  _getBreakIndexForExpression(e4, s6) {
    const { viewingMode: t6, scale: o4, spatialReference: i12, arcade: r3 } = s6 ?? {}, { valueExpression: a16 } = this;
    let l10 = this._compiledValueExpression.valueExpression === a16 ? this._compiledValueExpression.compiledFunction : null;
    const n9 = r3.arcadeUtils;
    if (!l10) {
      const e5 = n9.createSyntaxTree(a16);
      l10 = n9.createFunction(e5), this._compiledValueExpression.compiledFunction = l10;
    }
    this._compiledValueExpression.valueExpression = a16;
    const u10 = n9.executeFunction(l10, n9.createExecContext(e4, n9.getViewInfo({ viewingMode: t6, scale: o4, spatialReference: i12 })));
    return this._getBreakIndexfromInfos(u10);
  }
  _getBreakIndexForField(e4) {
    const s6 = this.field, t6 = e4.attributes, o4 = this.normalizationType;
    let i12 = parseFloat(t6[s6]);
    if (o4) {
      const e5 = this.normalizationTotal, s7 = parseFloat(this.normalizationField ? t6[this.normalizationField] : void 0);
      if (o4 === S2)
        i12 = Math.log(i12) * Math.LOG10E;
      else if (o4 !== F2 || null == e5 || isNaN(e5)) {
        if (o4 === V3 && !isNaN(s7)) {
          if (isNaN(i12) || isNaN(s7))
            return -1;
          i12 /= s7;
        }
      } else
        i12 = i12 / e5 * 100;
    }
    return this._getBreakIndexfromInfos(i12);
  }
  _getBreakIndexfromInfos(e4) {
    const s6 = this.isMaxInclusive;
    if (null != e4 && "number" == typeof e4 && !isNaN(e4))
      for (let t6 = 0; t6 < this.classBreakInfos.length; t6++) {
        const o4 = [this.classBreakInfos[t6].minValue, this.classBreakInfos[t6].maxValue];
        if (o4[0] <= e4 && (s6 ? e4 <= o4[1] : e4 < o4[1]))
          return t6;
      }
    return -1;
  }
  _areClassBreaksConsecutive() {
    const e4 = this.classBreakInfos, s6 = e4.length;
    for (let t6 = 1; t6 < s6; t6++)
      if (e4[t6 - 1].maxValue !== e4[t6].minValue)
        return false;
    return true;
  }
};
e([y(y6)], z2.prototype, "backgroundFillSymbol", void 0), e([y({ type: [a15] })], z2.prototype, "classBreakInfos", void 0), e([o("classBreakInfos")], z2.prototype, "readClassBreakInfos", null), e([r("classBreakInfos")], z2.prototype, "writeClassBreakInfos", null), e([y({ type: String, json: { write: true } })], z2.prototype, "defaultLabel", void 0), e([y(l7)], z2.prototype, "defaultSymbol", void 0), e([y({ type: String, json: { write: true } })], z2.prototype, "field", void 0), e([s5("field")], z2.prototype, "castField", null), e([y({ type: Boolean })], z2.prototype, "isMaxInclusive", void 0), e([y({ type: p2, json: { write: true } })], z2.prototype, "legendOptions", void 0), e([y({ type: Number, readOnly: true, value: null, json: { read: false, write: { overridePolicy() {
  return 0 !== this.classBreakInfos.length && this._areClassBreaksConsecutive() ? { enabled: true } : { enabled: false };
} } } })], z2.prototype, "minValue", null), e([y({ type: String, json: { write: true } })], z2.prototype, "normalizationField", void 0), e([y({ type: Number, cast: (e4) => a2(e4), json: { write: true } })], z2.prototype, "normalizationTotal", void 0), e([y({ type: E.apiValues, value: null, json: { type: E.jsonValues, read: E.read, write: E.write } })], z2.prototype, "normalizationType", null), e([o2({ classBreaks: "class-breaks" })], z2.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], z2.prototype, "valueExpression", void 0), e([y({ type: String, json: { write: true } })], z2.prototype, "valueExpressionTitle", void 0), z2 = B = e([a3("esri.renderers.ClassBreaksRenderer")], z2);
var w3 = z2;

// node_modules/@arcgis/core/renderers/support/UniqueValue.js
var c5 = class extends i(l) {
  constructor(o4) {
    super(o4), this.value = null, this.value2 = null, this.value3 = null;
  }
};
e([y(m7)], c5.prototype, "value", void 0), e([y(m7)], c5.prototype, "value2", void 0), e([y(m7)], c5.prototype, "value3", void 0), c5 = e([a3("esri.renderers.support.UniqueValue")], c5);
var u8 = c5;

// node_modules/@arcgis/core/renderers/support/UniqueValueClass.js
var n7 = class extends i(l) {
  constructor(r3) {
    super(r3), this.description = null, this.label = null, this.symbol = null, this.values = null;
  }
  castValues(r3) {
    if (null == r3)
      return null;
    const o4 = typeof (r3 = Array.isArray(r3) ? r3 : [r3])[0];
    return "string" === o4 || "number" === o4 ? r3.map((r4) => new u8({ value: r4 })) : "object" === o4 ? r3[0] instanceof u8 ? r3 : r3.map((r4) => new u8(r4)) : null;
  }
};
e([y({ type: String, json: { write: true } })], n7.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], n7.prototype, "label", void 0), e([y(l7)], n7.prototype, "symbol", void 0), e([y({ type: [u8], json: { type: [[String]], read: { reader: (r3) => r3 ? r3.map((r4) => new u8({ value: r4[0], value2: r4[1], value3: r4[2] })) : null }, write: { writer: (r3, e4) => {
  const t6 = [];
  for (const s6 of r3) {
    const r4 = [s6.value, s6.value2, s6.value3].filter(R).map((r5) => r5.toString());
    t6.push(r4);
  }
  e4.values = t6;
} } } })], n7.prototype, "values", void 0), e([s5("values")], n7.prototype, "castValues", null), n7 = e([a3("esri.renderers.support.UniqueValueClass")], n7);
var u9 = n7;

// node_modules/@arcgis/core/renderers/support/UniqueValueGroup.js
var c6 = class extends i(l) {
  constructor(r3) {
    super(r3), this.heading = null, this.classes = null;
  }
};
e([y({ type: String, json: { write: true } })], c6.prototype, "heading", void 0), e([y({ type: [u9], json: { write: true } })], c6.prototype, "classes", void 0), c6 = e([a3("esri.renderers.support.UniqueValueGroup")], c6);
var i11 = c6;

// node_modules/@arcgis/core/renderers/support/UniqueValueInfo.js
var l9;
var p12 = l9 = class extends l {
  constructor(o4) {
    super(o4), this.description = null, this.label = null, this.symbol = null, this.value = null;
  }
  clone() {
    return new l9({ value: this.value, description: this.description, label: this.label, symbol: this.symbol ? this.symbol.clone() : null });
  }
  getMeshHash() {
    const o4 = JSON.stringify(this.symbol && this.symbol.toJSON());
    return `${this.value}.${o4}`;
  }
};
e([y({ type: String, json: { write: true } })], p12.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], p12.prototype, "label", void 0), e([y(l7)], p12.prototype, "symbol", void 0), e([y(m7)], p12.prototype, "value", void 0), p12 = l9 = e([a3("esri.renderers.support.UniqueValueInfo")], p12);
var n8 = p12;

// node_modules/@arcgis/core/renderers/UniqueValueRenderer.js
var E2;
var M2 = "esri.renderers.UniqueValueRenderer";
var N = s.getLogger(M2);
var R2 = "uvInfos-watcher";
var P2 = "uvGroups-watcher";
var C = ",";
var $ = d(n8);
function z3(e4) {
  const { field1: t6, field2: s6, field3: i12, fieldDelimiter: o4, uniqueValueInfos: l10, valueExpression: r3 } = e4, u10 = !(!t6 || !s6);
  return [{ classes: (l10 ?? []).map((e5) => {
    var _a;
    const { symbol: l11, label: n9, value: a16, description: p13 } = e5, [f3, d4, c7] = u10 ? ((_a = a16 == null ? void 0 : a16.toString()) == null ? void 0 : _a.split(o4 || "")) || [] : [a16], h4 = [];
    return (t6 || r3) && h4.push(f3), s6 && h4.push(d4), i12 && h4.push(c7), { symbol: l11, label: n9, values: [h4], description: p13 };
  }) }];
}
var k = E2 = class extends v3(p6) {
  constructor(e4) {
    super(e4), this._valueInfoMap = {}, this._isDefaultSymbolDerived = false, this._isInfosSource = null, this.type = "unique-value", this.backgroundFillSymbol = null, this.orderByClassesEnabled = false, this.valueExpressionTitle = null, this.legendOptions = null, this.defaultLabel = null, this.portal = null, this.styleOrigin = null, this.diff = { uniqueValueInfos(e5, t6) {
      if (!e5 && !t6)
        return;
      if (!e5 || !t6)
        return { type: "complete", oldValue: e5, newValue: t6 };
      let s6 = false;
      const i12 = { type: "collection", added: [], removed: [], changed: [], unchanged: [] };
      for (let o4 = 0; o4 < t6.length; o4++) {
        const l10 = e5.find((e6) => e6.value === t6[o4].value);
        l10 ? a7(l10, t6[o4]) ? (i12.changed.push({ type: "complete", oldValue: l10, newValue: t6[o4] }), s6 = true) : i12.unchanged.push({ oldValue: l10, newValue: t6[o4] }) : (i12.added.push(t6[o4]), s6 = true);
      }
      for (let o4 = 0; o4 < e5.length; o4++) {
        t6.find((t7) => t7.value === e5[o4].value) || (i12.removed.push(e5[o4]), s6 = true);
      }
      return s6 ? i12 : void 0;
    } }, this._set("uniqueValueInfos", []), this._set("uniqueValueGroups", []);
  }
  get _cache() {
    return { compiledFunc: null };
  }
  set field(e4) {
    this._set("field", e4), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  castField(e4) {
    return null == e4 || "function" == typeof e4 ? e4 : u(e4);
  }
  writeField(e4, t6, i12, o4) {
    "string" == typeof e4 ? t6[i12] = e4 : o4 && o4.messages ? o4.messages.push(new s2("property:unsupported", "UniqueValueRenderer.field set to a function cannot be written to JSON")) : N.error(".field: cannot write field to JSON since it's not a string value");
  }
  set field2(e4) {
    this._set("field2", e4), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  set field3(e4) {
    this._set("field3", e4), this._updateUniqueValues();
  }
  set valueExpression(e4) {
    this._set("valueExpression", e4), this._updateUniqueValues();
  }
  set defaultSymbol(e4) {
    this._isDefaultSymbolDerived = false, this._set("defaultSymbol", e4);
  }
  set fieldDelimiter(e4) {
    this._set("fieldDelimiter", e4), this._updateUniqueValues();
  }
  readPortal(e4, t6, s6) {
    return s6.portal || j2.getDefault();
  }
  readStyleOrigin(e4, t6, s6) {
    if (t6.styleName)
      return Object.freeze({ styleName: t6.styleName });
    if (t6.styleUrl) {
      const e5 = i2(t6.styleUrl, s6);
      return Object.freeze({ styleUrl: e5 });
    }
  }
  writeStyleOrigin(e4, t6, s6, i12) {
    e4.styleName ? t6.styleName = e4.styleName : e4.styleUrl && (t6.styleUrl = c(e4.styleUrl, i12));
  }
  set uniqueValueGroups(e4) {
    this.styleOrigin ? N.error("#uniqueValueGroups=", "Cannot modify unique value groups of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueGroups", e4), this._updateInfosFromGroups(), this._isInfosSource = false, this._watchUniqueValueGroups());
  }
  set uniqueValueInfos(e4) {
    this.styleOrigin ? N.error("#uniqueValueInfos=", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueInfos", e4), this._updateValueInfoMap(), this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos());
  }
  addUniqueValueInfo(e4, s6) {
    var _a;
    if (this.styleOrigin)
      return void N.error("#addUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    let i12;
    i12 = "object" == typeof e4 ? $(e4) : new n8({ value: e4, symbol: P(s6) }), (_a = this.uniqueValueInfos) == null ? void 0 : _a.push(i12), this._valueInfoMap[i12.value] = i12, this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  removeUniqueValueInfo(e4) {
    if (this.styleOrigin)
      return void N.error("#removeUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    const t6 = this.uniqueValueInfos;
    if (t6)
      for (let s6 = 0; s6 < t6.length; s6++) {
        if (t6[s6].value === e4 + "") {
          delete this._valueInfoMap[e4], t6.splice(s6, 1);
          break;
        }
      }
    this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  async getUniqueValueInfo(e4, t6) {
    let s6 = t6;
    return !this.valueExpression || null != t6 && null != t6.arcade || (s6 = { ...s6, arcade: await i4() }), this._getUniqueValueInfo(e4, s6);
  }
  getSymbol(e4, t6) {
    if (this.valueExpression && (null == t6 || null == t6.arcade))
      return void N.error("#getSymbol()", "Please use getSymbolAsync if valueExpression is used");
    const s6 = this._getUniqueValueInfo(e4, t6);
    return s6 && s6.symbol || this.defaultSymbol;
  }
  async getSymbolAsync(e4, t6) {
    let s6 = t6;
    if (this.valueExpression && (null == s6 || null == s6.arcade)) {
      const e5 = await i4(), { arcadeUtils: t7 } = e5;
      t7.hasGeometryOperations(this.valueExpression) && await t7.enableGeometryOperations(), s6 = { ...s6, arcade: e5 };
    }
    const i12 = this._getUniqueValueInfo(e4, s6);
    return i12 && i12.symbol || this.defaultSymbol;
  }
  getSymbols() {
    const e4 = [];
    for (const t6 of this.uniqueValueInfos ?? [])
      t6.symbol && e4.push(t6.symbol);
    return this.defaultSymbol && e4.push(this.defaultSymbol), e4;
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e4, t6) => e4 + t6.getAttributeHash(), "");
  }
  getMeshHash() {
    var _a;
    const e4 = JSON.stringify(this.backgroundFillSymbol), t6 = JSON.stringify(this.defaultSymbol), s6 = (_a = this.uniqueValueInfos) == null ? void 0 : _a.reduce((e5, t7) => e5 + t7.getMeshHash(), "");
    return `${e4}.${t6}.${s6}.${`${this.field}.${this.field2}.${this.field3}.${this.fieldDelimiter}`}.${this.valueExpression}`;
  }
  clone() {
    const e4 = new E2({ field: this.field, field2: this.field2, field3: this.field3, defaultLabel: this.defaultLabel, defaultSymbol: a(this.defaultSymbol), orderByClassesEnabled: this.orderByClassesEnabled, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, fieldDelimiter: this.fieldDelimiter, visualVariables: a(this.visualVariables), legendOptions: a(this.legendOptions), authoringInfo: this.authoringInfo && this.authoringInfo.clone(), backgroundFillSymbol: a(this.backgroundFillSymbol) });
    this._isDefaultSymbolDerived && (e4._isDefaultSymbolDerived = true), e4._set("portal", this.portal);
    const t6 = a(this.uniqueValueInfos), s6 = a(this.uniqueValueGroups);
    return this.styleOrigin && (e4._set("styleOrigin", Object.freeze(a(this.styleOrigin))), Object.freeze(t6), Object.freeze(s6)), e4._set("uniqueValueInfos", t6), e4._updateValueInfoMap(), e4._set("uniqueValueGroups", s6), e4._isInfosSource = this._isInfosSource, e4._watchUniqueValueInfosAndGroups(), e4;
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;
  }
  async collectRequiredFields(e4, t6) {
    const s6 = [this.collectVVRequiredFields(e4, t6), this.collectSymbolFields(e4, t6)];
    await Promise.all(s6);
  }
  async collectSymbolFields(e4, t6) {
    const s6 = [...this.getSymbols().map((s7) => s7.collectRequiredFields(e4, t6)), T2(e4, t6, this.valueExpression)];
    I(e4, t6, this.field), I(e4, t6, this.field2), I(e4, t6, this.field3), await Promise.all(s6);
  }
  populateFromStyle() {
    return c2(this.styleOrigin, { portal: this.portal }).then((e4) => {
      var _a;
      const t6 = [];
      return this._valueInfoMap = {}, e4 && e4.data && Array.isArray(e4.data.items) && e4.data.items.forEach((s6) => {
        const i12 = new u3({ styleUrl: e4.styleUrl, styleName: e4.styleName, portal: this.portal, name: s6.name });
        this.defaultSymbol || s6.name !== e4.data.defaultItem || (this.defaultSymbol = i12, this._isDefaultSymbolDerived = true);
        const o4 = new n8({ value: s6.name, symbol: i12 });
        t6.push(o4), this._valueInfoMap[s6.name] = o4;
      }), this._set("uniqueValueInfos", Object.freeze(t6)), this._updateGroupsFromInfos(true), this._isInfosSource = null, this._watchUniqueValueInfos(), !this.defaultSymbol && ((_a = this.uniqueValueInfos) == null ? void 0 : _a.length) && (this.defaultSymbol = this.uniqueValueInfos[0].symbol, this._isDefaultSymbolDerived = true), this;
    });
  }
  _updateFieldDelimiter() {
    this.field && this.field2 && !this.fieldDelimiter && this._set("fieldDelimiter", C);
  }
  _updateUniqueValues() {
    null != this._isInfosSource && (this._isInfosSource ? this._updateGroupsFromInfos() : this._updateInfosFromGroups());
  }
  _updateValueInfoMap() {
    this._valueInfoMap = {};
    const { uniqueValueInfos: e4 } = this;
    if (e4)
      for (const t6 of e4)
        this._valueInfoMap[t6.value + ""] = t6;
  }
  _watchUniqueValueInfosAndGroups() {
    this._watchUniqueValueInfos(), this._watchUniqueValueGroups();
  }
  _watchUniqueValueInfos() {
    this.removeHandles(R2);
    const { uniqueValueInfos: e4 } = this;
    if (e4) {
      const t6 = [];
      for (const s6 of e4)
        t6.push(l2(() => ({ symbol: s6.symbol, value: s6.value, label: s6.label, description: s6.description }), (e5, t7) => {
          e5 !== t7 && (this._updateGroupsFromInfos(), this._isInfosSource = true);
        }, { sync: true }));
      this.addHandles(t6, R2);
    }
  }
  _watchUniqueValueGroups() {
    this.removeHandles(P2);
    const { uniqueValueGroups: e4 } = this;
    if (e4) {
      const t6 = [];
      for (const s6 of e4) {
        t6.push(l2(() => ({ classes: s6.classes }), (e5, t7) => {
          e5 !== t7 && (this._updateInfosFromGroups(), this._isInfosSource = false);
        }, { sync: true }));
        for (const e5 of s6.classes ?? [])
          t6.push(l2(() => ({ symbol: e5.symbol, values: e5.values, label: e5.label, description: e5.description }), (e6, t7) => {
            e6 !== t7 && (this._updateInfosFromGroups(), this._isInfosSource = false);
          }, { sync: true }));
      }
      this.addHandles(t6, P2);
    }
  }
  _updateInfosFromGroups() {
    if (!this.uniqueValueGroups)
      return this._set("uniqueValueInfos", null), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const e4 = [], { field: t6, field2: s6, field3: i12, fieldDelimiter: o4, uniqueValueGroups: l10, valueExpression: r3 } = this;
    if (!t6 && !r3)
      return this._set("uniqueValueInfos", e4), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const u10 = !(!t6 || !s6);
    for (const n9 of l10)
      for (const t7 of n9.classes ?? []) {
        const { symbol: l11, label: r4, values: n10, description: a16 } = t7;
        for (const t8 of n10 ?? []) {
          const { value: n11, value2: p13, value3: f3 } = t8, d4 = [n11];
          s6 && d4.push(p13), i12 && d4.push(f3);
          const c7 = u10 ? d4.join(o4 || "") : d4[0];
          e4.push(new n8({ symbol: l11, label: r4, value: c7, description: a16 }));
        }
      }
    this._set("uniqueValueInfos", e4), this._updateValueInfoMap(), this._watchUniqueValueInfos();
  }
  _updateGroupsFromInfos(e4 = false) {
    if (!this.uniqueValueInfos)
      return this._set("uniqueValueGroups", null), void this._watchUniqueValueGroups();
    const { field: t6, field2: s6, valueExpression: i12, fieldDelimiter: o4, uniqueValueInfos: l10 } = this;
    if (!t6 && !i12 || !l10.length)
      return this._set("uniqueValueGroups", []), void this._watchUniqueValueGroups();
    const r3 = !(!t6 || !s6), u10 = l10.map((e5) => {
      var _a;
      const { symbol: t7, label: s7, value: i13, description: l11 } = e5, [u11, n10, a16] = r3 ? ((_a = i13 == null ? void 0 : i13.toString()) == null ? void 0 : _a.split(o4 || "")) || [] : [i13];
      return new u9({ symbol: t7, label: s7, description: l11, values: [new u8({ value: u11, value2: n10, value3: a16 })] });
    }), n9 = [new i11({ classes: u10 })];
    e4 && Object.freeze(n9), this._set("uniqueValueGroups", n9), this._watchUniqueValueGroups();
  }
  _getUniqueValueInfo(e4, t6) {
    return this.valueExpression ? this._getUnqiueValueInfoForExpression(e4, t6) : this._getUnqiueValueInfoForFields(e4);
  }
  _getUnqiueValueInfoForExpression(e4, t6) {
    const { viewingMode: s6, scale: i12, spatialReference: o4, arcade: l10 } = t6 ?? {};
    let r3 = this._cache.compiledFunc;
    const u10 = l10.arcadeUtils;
    if (!r3) {
      const e5 = u10.createSyntaxTree(this.valueExpression);
      r3 = u10.createFunction(e5), this._cache.compiledFunc = r3;
    }
    const n9 = u10.executeFunction(r3, u10.createExecContext(e4, u10.getViewInfo({ viewingMode: s6, scale: i12, spatialReference: o4 })));
    return this._valueInfoMap[n9 + ""];
  }
  _getUnqiueValueInfoForFields(e4) {
    const t6 = this.field, s6 = e4.attributes;
    let i12;
    if ("function" != typeof t6 && this.field2) {
      const e5 = this.field2, o4 = this.field3, l10 = [];
      t6 && l10.push(s6[t6]), e5 && l10.push(s6[e5]), o4 && l10.push(s6[o4]), i12 = l10.join(this.fieldDelimiter || "");
    } else
      "function" == typeof t6 ? i12 = t6(e4) : t6 && (i12 = s6[t6]);
    return this._valueInfoMap[i12 + ""];
  }
  static fromPortalStyle(e4, t6) {
    const s6 = new E2(t6 && t6.properties);
    s6._set("styleOrigin", Object.freeze({ styleName: e4 })), s6._set("portal", t6 && t6.portal || j2.getDefault());
    const i12 = s6.populateFromStyle();
    return i12.catch((t7) => {
      N.error(`#fromPortalStyle('${e4}'[, ...])`, "Failed to create unique value renderer from style name", t7);
    }), i12;
  }
  static fromStyleUrl(e4, t6) {
    const s6 = new E2(t6 && t6.properties);
    s6._set("styleOrigin", Object.freeze({ styleUrl: e4 }));
    const i12 = s6.populateFromStyle();
    return i12.catch((t7) => {
      N.error(`#fromStyleUrl('${e4}'[, ...])`, "Failed to create unique value renderer from style URL", t7);
    }), i12;
  }
};
e([y({ readOnly: true })], k.prototype, "_cache", null), e([o2({ uniqueValue: "unique-value" })], k.prototype, "type", void 0), e([y(y6)], k.prototype, "backgroundFillSymbol", void 0), e([y({ value: null, json: { type: String, read: { source: "field1" }, write: { target: "field1" } } })], k.prototype, "field", null), e([s5("field")], k.prototype, "castField", null), e([r("field")], k.prototype, "writeField", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "field2", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "field3", null), e([y({ type: Boolean, json: { name: "drawInClassOrder", default: false, write: true, origins: { "web-scene": { write: false } } } })], k.prototype, "orderByClassesEnabled", void 0), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "valueExpression", null), e([y({ type: String, json: { write: true } })], k.prototype, "valueExpressionTitle", void 0), e([y({ type: p2, json: { write: true } })], k.prototype, "legendOptions", void 0), e([y({ type: String, json: { write: true } })], k.prototype, "defaultLabel", void 0), e([y(n({ ...l7 }, { json: { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} }, origins: { "web-scene": { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} } } } } }))], k.prototype, "defaultSymbol", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "fieldDelimiter", null), e([y({ type: j2, readOnly: true })], k.prototype, "portal", void 0), e([o("portal", ["styleName"])], k.prototype, "readPortal", null), e([y({ readOnly: true, json: { write: { enabled: false, overridePolicy: () => ({ enabled: true }) } } })], k.prototype, "styleOrigin", void 0), e([o("styleOrigin", ["styleName", "styleUrl"])], k.prototype, "readStyleOrigin", null), e([r("styleOrigin", { styleName: { type: String }, styleUrl: { type: String } })], k.prototype, "writeStyleOrigin", null), e([y({ type: [i11], json: { read: { source: ["uniqueValueGroups", "uniqueValueInfos"], reader: (e4, t6, s6) => (t6.uniqueValueGroups || z3(t6)).map((e5) => i11.fromJSON(e5, s6)) }, write: { overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true };
} } } })], k.prototype, "uniqueValueGroups", null), e([y({ type: [n8], json: { read: false, write: { overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true };
} } } })], k.prototype, "uniqueValueInfos", null), k = E2 = e([a3(M2)], k);
var A = k;

export {
  j3 as j,
  p6 as p,
  e3 as e,
  n6 as n,
  l6 as l,
  b2 as b,
  v3 as v,
  l7 as l2,
  a15 as a,
  w3 as w,
  n8 as n2,
  A
};
//# sourceMappingURL=chunk-WXSXHXM4.js.map
