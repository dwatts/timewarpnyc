import {
  i as i2,
  j,
  l as l3,
  p,
  r,
  s as s3
} from "./chunk-MTP3D562.js";
import {
  i
} from "./chunk-QEB7IAEU.js";
import {
  L,
  d as d2,
  l as l2,
  o as o2
} from "./chunk-A3SLC5TK.js";
import {
  t2 as t3
} from "./chunk-W2BFH4NJ.js";
import {
  E,
  c,
  xt
} from "./chunk-YA6P3ZMV.js";
import {
  D2 as D,
  s2
} from "./chunk-OBTF4YMI.js";
import "./chunk-LUW5YH5K.js";
import "./chunk-TFBK4UWT.js";
import "./chunk-57BN4YG4.js";
import "./chunk-DEBQNQHK.js";
import "./chunk-RHUGUXGR.js";
import "./chunk-PKQ2SINV.js";
import "./chunk-SYR2G6XU.js";
import "./chunk-NCJWSWGW.js";
import "./chunk-MHABBCOV.js";
import "./chunk-UVYXRE2S.js";
import {
  n as n3
} from "./chunk-GD75B7SP.js";
import "./chunk-AGK2CKWJ.js";
import "./chunk-ANLIVU2T.js";
import "./chunk-KGLSZSEH.js";
import {
  o
} from "./chunk-WON6TZX6.js";
import "./chunk-Y77F4U6W.js";
import "./chunk-5GTBTJ5J.js";
import "./chunk-NCMHNGYC.js";
import "./chunk-JEI4GCDQ.js";
import {
  n as n2
} from "./chunk-NWXX4RT6.js";
import "./chunk-IRHHHG7O.js";
import "./chunk-3VYBBKPH.js";
import "./chunk-DDU77THI.js";
import "./chunk-5RQTPWCM.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-FP4CFXG6.js";
import "./chunk-V5N62ACA.js";
import "./chunk-RMQ3PJIC.js";
import "./chunk-6OVHX5ZO.js";
import "./chunk-3LR4MDXK.js";
import "./chunk-V7IVNH7O.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-O2Q4W74O.js";
import "./chunk-RRRAGAMB.js";
import "./chunk-PVUG2RDQ.js";
import "./chunk-J3HE7QNA.js";
import "./chunk-GRB6LNZN.js";
import "./chunk-GZTLZ6RD.js";
import {
  f
} from "./chunk-LFQ3TKCC.js";
import "./chunk-HSZYWTXA.js";
import "./chunk-YZ24SAPZ.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-UY6LF23L.js";
import "./chunk-6XUC2FZF.js";
import "./chunk-BUKSB3RJ.js";
import "./chunk-7DUQU7X7.js";
import "./chunk-FQPEAXKN.js";
import "./chunk-QL3WCPM7.js";
import "./chunk-JBKOFMVJ.js";
import "./chunk-LB5DD6MA.js";
import "./chunk-UYTOEYIN.js";
import "./chunk-JQKL7AD5.js";
import "./chunk-UXILD4EC.js";
import "./chunk-SU7C3V7L.js";
import "./chunk-KV3PR5T6.js";
import "./chunk-Y554AESO.js";
import "./chunk-SCHIU6CT.js";
import "./chunk-AD4YIQAV.js";
import "./chunk-4DMQJ2S2.js";
import "./chunk-SFLHXPT4.js";
import "./chunk-ICIEEFA3.js";
import "./chunk-UTDRCXKP.js";
import "./chunk-HXNDA4EJ.js";
import "./chunk-ZFRKFGUZ.js";
import "./chunk-6YRYWMPZ.js";
import "./chunk-ADAZBQKN.js";
import "./chunk-6EBCANA3.js";
import "./chunk-K7N526Q4.js";
import "./chunk-JRSZCAZV.js";
import "./chunk-YIZLAUCA.js";
import "./chunk-3ZJOLTPQ.js";
import "./chunk-V4MUDRER.js";
import "./chunk-FUNFO42Y.js";
import "./chunk-N33CV3QM.js";
import "./chunk-FF3JARPY.js";
import "./chunk-UP7SW73R.js";
import "./chunk-VHOCNQAB.js";
import "./chunk-OK2X54ZK.js";
import "./chunk-RDB3JY7T.js";
import "./chunk-WO5DESPO.js";
import "./chunk-W5D3JTKS.js";
import "./chunk-JGNIGIZR.js";
import "./chunk-LUC7NVZB.js";
import "./chunk-XEG7QIWD.js";
import "./chunk-SFZTK3JV.js";
import "./chunk-GZLXOXKP.js";
import "./chunk-SME753HL.js";
import "./chunk-4QCFWJ22.js";
import "./chunk-PC4A4CQR.js";
import "./chunk-MIJNMSZR.js";
import "./chunk-HKJ2JMCX.js";
import {
  t as t2
} from "./chunk-644IM3NW.js";
import "./chunk-KWPMDFFW.js";
import "./chunk-O25GNIYL.js";
import "./chunk-XKYCNHCM.js";
import "./chunk-KFBN32GM.js";
import "./chunk-N4JKQR77.js";
import "./chunk-ZPXPJ2G7.js";
import "./chunk-GXIJZVS6.js";
import "./chunk-6LC2JTLC.js";
import "./chunk-LYVSHBLV.js";
import "./chunk-NZZXHYUD.js";
import "./chunk-S2XINYNZ.js";
import "./chunk-ZIP4LO57.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-5IGN7QB3.js";
import "./chunk-AN7CDKM7.js";
import "./chunk-AA5GXCZF.js";
import "./chunk-X3ONRBOR.js";
import "./chunk-UF4LSGC7.js";
import "./chunk-VG7E4EAR.js";
import "./chunk-Y5WQRWCP.js";
import "./chunk-JI3FA4UR.js";
import "./chunk-HXPEPPWJ.js";
import "./chunk-A76FH7WO.js";
import "./chunk-3JWSWLNQ.js";
import "./chunk-MUDJ2KE7.js";
import "./chunk-EVSMDRIW.js";
import "./chunk-2CJB7VCN.js";
import "./chunk-5AW2TAZE.js";
import "./chunk-Z2RTGLQI.js";
import "./chunk-77DVCCTB.js";
import "./chunk-VVBWSIUG.js";
import "./chunk-TXZY5TKH.js";
import "./chunk-YMGFO2D7.js";
import "./chunk-FZT425TB.js";
import "./chunk-6AORBEIP.js";
import "./chunk-E4SXYCGV.js";
import "./chunk-CYWA6YJM.js";
import "./chunk-5DK7WWJE.js";
import "./chunk-M3ODSYZR.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-UG4QYACC.js";
import "./chunk-GRRIWI4U.js";
import "./chunk-X5HNB5JI.js";
import "./chunk-K43XJEZQ.js";
import "./chunk-6JSGBXI6.js";
import "./chunk-KBPF5PFD.js";
import "./chunk-STAL4WDK.js";
import "./chunk-GXJIA6VA.js";
import "./chunk-L5ONWTZL.js";
import "./chunk-UI5O37MZ.js";
import "./chunk-XFZB3R5P.js";
import "./chunk-YRKEWWDW.js";
import "./chunk-KHQ5TXSL.js";
import "./chunk-NU4UASX6.js";
import "./chunk-LQIVAUXR.js";
import "./chunk-F4YTVHY4.js";
import "./chunk-4FXCMZ3U.js";
import "./chunk-SADO52IH.js";
import "./chunk-FOJITELY.js";
import "./chunk-NCXRF7LF.js";
import "./chunk-73PNWDTS.js";
import "./chunk-PKS3ZVLN.js";
import "./chunk-XMR2X5WG.js";
import "./chunk-KUPJ3HED.js";
import "./chunk-36L3RRF7.js";
import "./chunk-BUCIQGFS.js";
import "./chunk-OUYOFOVY.js";
import "./chunk-HVLYIZVQ.js";
import "./chunk-FDGDKKWR.js";
import "./chunk-25GSBURT.js";
import "./chunk-63ERNIOV.js";
import "./chunk-KKDPZLGI.js";
import "./chunk-XTOI3E3Y.js";
import "./chunk-WT7BDUIR.js";
import "./chunk-IWGINM6K.js";
import "./chunk-WUQZO2AO.js";
import "./chunk-IVCEO3SL.js";
import "./chunk-3RKFJO4O.js";
import "./chunk-P4NNXJS3.js";
import "./chunk-LZAQ3R3T.js";
import "./chunk-Y67AAEQ4.js";
import "./chunk-L2MGQ544.js";
import "./chunk-O2CT6XUA.js";
import "./chunk-DWF7HN4X.js";
import "./chunk-2ORXZKWN.js";
import "./chunk-KTGLOZE4.js";
import "./chunk-K6DV6EVZ.js";
import "./chunk-EDILO3VR.js";
import "./chunk-2CKXYQCA.js";
import "./chunk-JP7O2ZWE.js";
import "./chunk-6AGTIZBD.js";
import "./chunk-UT4ZWPHT.js";
import "./chunk-LWDDTPWX.js";
import "./chunk-LWKRCHND.js";
import "./chunk-USOI6RP2.js";
import "./chunk-TLBJBU3X.js";
import "./chunk-YYE6WDO2.js";
import "./chunk-WDZ5AAFL.js";
import "./chunk-QNBIVGAZ.js";
import "./chunk-5KLICR5E.js";
import "./chunk-RSPVLZNN.js";
import "./chunk-PR2OEILG.js";
import "./chunk-Q3MNDGIO.js";
import "./chunk-JPKFB2QL.js";
import "./chunk-2AUW3MT4.js";
import "./chunk-UM64E5NS.js";
import "./chunk-2SZNVP5H.js";
import "./chunk-MXVQCJ4K.js";
import "./chunk-G4LSNP77.js";
import "./chunk-S5RIUWET.js";
import {
  I
} from "./chunk-MNDNZJD5.js";
import "./chunk-LVVQ2RQY.js";
import "./chunk-CUZNACFZ.js";
import "./chunk-ZHUFARKQ.js";
import "./chunk-ICEO3WMK.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-L3FCQBVC.js";
import "./chunk-IUCM3FNB.js";
import "./chunk-PCEMOYTZ.js";
import "./chunk-4RU6WIRN.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-OX5TJXHM.js";
import "./chunk-BDWD2ZNU.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-HLBPEADQ.js";
import "./chunk-FIBWCATC.js";
import "./chunk-NLWV7Q6F.js";
import "./chunk-JPAY3V43.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-RR3IDPQP.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-X7JRTY3V.js";
import "./chunk-VVUQCXYW.js";
import {
  V,
  pe,
  ye
} from "./chunk-S7T3AEV6.js";
import {
  t
} from "./chunk-3FVFBGNT.js";
import "./chunk-FLVP2XLK.js";
import "./chunk-XKENZ7D5.js";
import "./chunk-BPWFCV3C.js";
import "./chunk-AI6XUWWS.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-BZL5MAFP.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-XY26YCFX.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-7FNOSSSO.js";
import "./chunk-LLQMBVBO.js";
import "./chunk-DS6JZDZO.js";
import "./chunk-OTNLRAEN.js";
import "./chunk-OKABUMQT.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-SS3YG6J3.js";
import "./chunk-4KXQQ53L.js";
import {
  d
} from "./chunk-TBKQVVVQ.js";
import "./chunk-CDI6XFV5.js";
import "./chunk-SJSAYHBJ.js";
import "./chunk-WXSXHXM4.js";
import "./chunk-PYQNXC2L.js";
import "./chunk-NHHKW3WR.js";
import "./chunk-V4EIGIRT.js";
import "./chunk-MD5VUVM5.js";
import {
  b
} from "./chunk-CF43FEIV.js";
import "./chunk-GNESNC4Q.js";
import "./chunk-VYG5A4VI.js";
import "./chunk-ANW6V73Y.js";
import "./chunk-FJ3XUIT3.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-BFZI4PK4.js";
import "./chunk-HVAOWOGC.js";
import "./chunk-6NPJZOPM.js";
import "./chunk-MNR4BIGQ.js";
import "./chunk-FVR25IMN.js";
import "./chunk-IHCIS6PT.js";
import "./chunk-OHH3UAUS.js";
import "./chunk-2NTQWEQZ.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-E2PV5YTZ.js";
import "./chunk-GLVTFP5O.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-2NXAWKLI.js";
import "./chunk-AUKNAK3D.js";
import "./chunk-2TWR6EVF.js";
import "./chunk-IR32DXLL.js";
import {
  n
} from "./chunk-7BMUKKBX.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-HKUQGT3G.js";
import "./chunk-LTYDGBC5.js";
import "./chunk-XR4HIGQP.js";
import "./chunk-H2WAWDF5.js";
import "./chunk-LG2ZH3JE.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-DR3XNW4L.js";
import "./chunk-DKCDRJ5N.js";
import "./chunk-PCTUO7WS.js";
import "./chunk-KGA7WAD3.js";
import "./chunk-ZEMUATMN.js";
import "./chunk-RG2YRACH.js";
import "./chunk-ZUBHLDU6.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-PZXYASUU.js";
import "./chunk-VYGC2LVC.js";
import "./chunk-VHPS7AS5.js";
import "./chunk-GH3XG2RA.js";
import "./chunk-3ESTI2X4.js";
import "./chunk-YK2WEG7V.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-GVQH342Z.js";
import "./chunk-POEWD5LS.js";
import "./chunk-HTVQN75V.js";
import "./chunk-W3WHCGIQ.js";
import {
  h
} from "./chunk-HPWZ2OON.js";
import {
  h as h2
} from "./chunk-WAPUHORU.js";
import "./chunk-HXDFHMRK.js";
import "./chunk-5HSVWQOA.js";
import "./chunk-C2BBLDPU.js";
import "./chunk-GWA3PLGA.js";
import "./chunk-FXWSVUF2.js";
import "./chunk-CNS4YGGN.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-CEXY22SC.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7JNPZC53.js";
import "./chunk-ZXXKE5XP.js";
import "./chunk-MATER45R.js";
import "./chunk-6UW2VZVV.js";
import "./chunk-GAARA5JM.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-REPJV7SP.js";
import "./chunk-F42HXUMI.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import "./chunk-J2V5CZSS.js";
import "./chunk-7D57YBLP.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-T35GN7EL.js";
import "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import {
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import {
  l
} from "./chunk-UYRCWUYQ.js";
import {
  s2 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/views/3d/layers/SceneLayerView3D.js
var L2 = i2();
var U = class extends xt(t3(i(n3(j)))) {
  constructor() {
    super(...arguments), this.type = "scene-layer-3d", this._setVisibilityHiddenObjectIds = new s2(), this.progressiveLoadFactor = 1, this._elevationContext = "scene", this._isIntegratedMesh = false, this._supportsLabeling = true, this._interactiveEditingSessions = /* @__PURE__ */ new Map(), this._queryEngine = null;
  }
  get i3slayer() {
    return this.layer;
  }
  tryRecycleWith(e2, t4) {
    return e2.url === this.layer.url && this.i3sOverrides.isEmpty ? e2.load(t4).then(() => {
      var _a;
      ye(this.layer, e2, this.i3sOverrides), this.layer = e2, this.i3sOverrides.destroy();
      const t5 = (_a = this.view.resourceController) == null ? void 0 : _a.memoryController;
      this.i3sOverrides = new D({ view: this.view, layer: e2, memoryController: t5 }), this.resetHighlights();
    }) : null;
  }
  get layerPopupEnabledAndHasTemplate() {
    var _a;
    return this.layer.popupEnabled && t(this.layer, (_a = this.view.popup) == null ? void 0 : _a.defaultPopupTemplateEnabled);
  }
  get filter() {
    return this._get("filter");
  }
  set filter(e2) {
    this._set("filter", L.checkSupport(e2) ? e2 : null);
  }
  get viewFilter() {
    const e2 = this.filter, t4 = this.layerFilter;
    if (null == e2 && null == t4)
      return null;
    const i3 = this._get("viewFilter");
    return null == i3 ? new L({ layerFilter: t4, viewFilter: e2, layerFieldsIndex: this.layer.fieldsIndex, loadAsyncModule: (e3) => this._loadAsyncModule(e3), addSqlFilter: (e3, t5) => this.addSqlFilter(e3, t5, this.logError) }) : (i3.viewFilter = e2, i3.layerFilter = t4, i3);
  }
  get requiredFields() {
    var _a;
    return ((_a = this._fieldsHelper) == null ? void 0 : _a.requiredFields) ?? [];
  }
  get _floorFilterClause() {
    const e2 = o(this);
    return null != e2 ? f.create(e2, this.layer.fieldsIndex) : null;
  }
  get _excludeObjectIdsSorted() {
    const e2 = this.layer.excludeObjectIds.toArray();
    return e2.length ? e2.sort((e3, t4) => e3 - t4) : null;
  }
  get _setVisibilityHiddenObjectIdsSorted() {
    return this._setVisibilityHiddenObjectIds.size ? Array.from(this._setVisibilityHiddenObjectIds).sort((e2, t4) => e2 - t4) : null;
  }
  get _objectQualitySettings() {
    var _a, _b, _c;
    return (_c = (_b = (_a = this.view) == null ? void 0 : _a.qualitySettings) == null ? void 0 : _b.sceneService) == null ? void 0 : _c.object;
  }
  get lodFactor() {
    var _a;
    return ((_a = this._objectQualitySettings) == null ? void 0 : _a.lodFactor) ?? 1;
  }
  get lodCrossfadeinDuration() {
    return this._objectQualitySettings.lodCrossfadeinDuration ?? 0;
  }
  get lodCrossfadeoutDuration() {
    return this._objectQualitySettings.lodCrossfadeoutDuration ?? 0;
  }
  get lodCrossfadeUncoveredDuration() {
    return this._objectQualitySettings.lodCrossfadeUncoveredDuration ?? 0;
  }
  get updatingProgressValue() {
    var _a;
    return ((_a = this._controller) == null ? void 0 : _a.updatingProgress) ?? 0;
  }
  initialize() {
    this._fieldsHelper = new p({ layerView: this }), this.updatingHandles.add(() => this.layer.rangeInfos, (e3) => this._rangeInfosChanged(e3), h), this.updatingHandles.add(() => this.layer.renderer, (e3) => this.updatingHandles.addPromise(this._rendererChange(e3)), h);
    const e2 = () => this._filterChange();
    this.updatingHandles.add(() => this.parsedDefinitionExpression, e2), this.updatingHandles.add(() => this.filter, e2), this.updatingHandles.add(() => this._floorFilterClause, e2), this.updatingHandles.add(() => this._excludeObjectIdsSorted, e2), this.updatingHandles.add(() => this._setVisibilityHiddenObjectIdsSorted, e2), this.updatingHandles.add(() => null != this.viewFilter ? this.viewFilter.sortedObjectIds : null, e2), this.updatingHandles.add(() => null != this.viewFilter ? this.viewFilter.parsedWhereClause : null, e2), this.updatingHandles.add(() => [null != this.viewFilter ? this.viewFilter.parsedGeometry : null, null != this.filter ? this.filter.spatialRelationship : null, null != this.layer.filter ? this.layer.filter.spatialRelationship : null], () => this._geometryFilterChange()), n() && this.i3sOverrides.is3DOFL && this.updatingHandles.add(() => this.i3sOverrides.sortedGeometryChangedObjectIds, e2), this.handles.add(this.layer.on("apply-edits", (e3) => this.updatingHandles.addPromise(e3.result))), this.handles.add(this.layer.on("edits", (e3) => this._handleEdits(e3)));
  }
  destroy() {
    this._fieldsHelper = l(this._fieldsHelper);
  }
  _rangeInfosChanged(e2) {
    null != e2 && e2.length > 0 && s.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");
  }
  createQuery() {
    const e2 = { outFields: ["*"], returnGeometry: false, outSpatialReference: this.view.spatialReference };
    return null != this.filter ? this.filter.createQuery(e2) : new b(e2);
  }
  queryExtent(e2, t4) {
    return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  queryFeatureCount(e2, t4) {
    return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  queryFeatures(e2, t4) {
    return this._ensureQueryEngine().executeQuery(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal).then((e3) => {
      if (!(e3 == null ? void 0 : e3.features))
        return e3;
      const t5 = this.layer;
      for (const i3 of e3.features)
        i3.layer = t5, i3.sourceLayer = t5;
      return e3;
    });
  }
  queryObjectIds(e2, t4) {
    return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  _ensureQueryEngine() {
    return this._queryEngine || (this._queryEngine = this._createQueryEngine()), this._queryEngine;
  }
  _createQueryEngine() {
    const e2 = c(this.view.spatialReference, this.view.renderSpatialReference, this._collection);
    return new d2({ layerView: this, priority: I.FEATURE_QUERY_ENGINE, spatialIndex: new l2({ featureAdapter: new o2({ objectIdField: this.layer.objectIdField, attributeStorageInfo: this.layer.attributeStorageInfo ?? [], getFeatureExtent: e2 }), forAllFeatures: (e3, t4) => this._forAllFeatures((t5, i3, r2) => e3({ id: t5, index: i3, meta: r2 }), t4, E.QUERYABLE), getFeatureExtent: e2, sourceSpatialReference: pe(this.layer), viewSpatialReference: this.view.spatialReference }) });
  }
  highlight(e2) {
    const t4 = this._highlights;
    if (e2 instanceof b) {
      const { set: i3, handle: r2 } = t4.acquireSet();
      return this.queryObjectIds(e2).then((e3) => t4.setFeatureIds(i3, e3)), r2;
    }
    return super.highlight(e2);
  }
  createInteractiveEditSession(e2) {
    return r(this._attributeEditingContext, e2);
  }
  _createLayerGraphic(e2) {
    const i3 = new h2(null, null, e2);
    return i3.layer = this.layer, i3.sourceLayer = this.layer, i3;
  }
  getFilters() {
    const e2 = super.getFilters();
    n() && this.i3sOverrides.is3DOFL && this.i3sOverrides.sortedGeometryChangedObjectIds.length > 0 && e2.push((e3, t5) => {
      t5.node.index >= 0 && V(this.i3sOverrides.sortedGeometryChangedObjectIds, false, e3);
    });
    const t4 = this._setVisibilityHiddenObjectIdsSorted;
    null != t4 && e2.push((e3) => V(t4, false, e3));
    const i3 = this._excludeObjectIdsSorted;
    return null != i3 && e2.push((e3) => V(i3, false, e3)), this._floorFilterClause && this.addSqlFilter(e2, this._floorFilterClause, this.logError), this.addSqlFilter(e2, this.parsedDefinitionExpression, this.logError), null != this.viewFilter && this.viewFilter.addFilters(e2, this.view, this._controller.crsIndex, this._collection), e2;
  }
  setVisibility(e2, t4) {
    t4 ? this._setVisibilityHiddenObjectIds.delete(e2) : this._setVisibilityHiddenObjectIds.add(e2);
  }
  isUpdating() {
    return super.isUpdating() || this.layerFilterUpdating || null != this.viewFilter && this.viewFilter.updating || null != this.i3sOverrides && this.i3sOverrides.updating;
  }
  _ensureQuery(e2) {
    return this._addDefinitionExpressionToQuery(null == e2 ? this.createQuery() : b.from(e2));
  }
  get _attributeEditingContext() {
    return { sessions: this._interactiveEditingSessions, fieldsIndex: this.layer.fieldsIndex, objectIdField: this._getObjectIdField(), globalIdField: this._getGlobalIdField(), forEachNode: (e2) => this._forAllNodes((t4) => null != t4 ? e2(t4.node, t4.featureIds) : null), attributeStorageInfo: this.i3slayer.attributeStorageInfo ?? [], i3sOverrides: this.i3sOverrides, getAttributeData: (e2) => this.getAttributeData(e2), setAttributeData: (e2, t4) => this.setAttributeData(e2, t4), clearMemCache: () => this.clearMemCache() };
  }
  _handleEdits(e2) {
    n() && s3(this._attributeEditingContext, e2), l3(this._attributeEditingContext, e2);
  }
  get hasGeometryFilter() {
    const e2 = this.viewFilter;
    return null != e2 && null != e2.parsedGeometry;
  }
  computeNodeFiltering(e2) {
    const t4 = this.viewFilter;
    return null == t4 || !this.view.spatialReference || t4.isMBSGeometryVisible(e2, this.view.spatialReference, this._controller.crsIndex) ? n2.Unmodified : n2.Culled;
  }
};
e([y()], U.prototype, "i3slayer", null), e([y(t2)], U.prototype, "updatingProgress", void 0), e([y({ type: d })], U.prototype, "filter", null), e([y({ readOnly: true })], U.prototype, "viewFilter", null), e([y(L2.requiredFields)], U.prototype, "requiredFields", null), e([y(L2.availableFields)], U.prototype, "availableFields", void 0), e([y()], U.prototype, "_fieldsHelper", void 0), e([y()], U.prototype, "_floorFilterClause", null), e([y()], U.prototype, "_excludeObjectIdsSorted", null), e([y()], U.prototype, "_setVisibilityHiddenObjectIds", void 0), e([y()], U.prototype, "_setVisibilityHiddenObjectIdsSorted", null), e([y()], U.prototype, "_objectQualitySettings", null), e([y()], U.prototype, "lodFactor", null), e([y()], U.prototype, "updatingProgressValue", null), U = e([a("esri.views.3d.layers.SceneLayerView3D")], U);
var G = U;
export {
  G as default
};
//# sourceMappingURL=SceneLayerView3D-2B2DL354.js.map
