import {
  Be
} from "./chunk-3VPZVTN6.js";
import "./chunk-QI23XDMF.js";
import "./chunk-7OGVILXO.js";
import "./chunk-XXTY5WL7.js";
import "./chunk-FARFKR7T.js";
import "./chunk-FN34IFMV.js";
import "./chunk-2YAYYYAB.js";
import "./chunk-6AEQHCZC.js";
import "./chunk-4KXQQ53L.js";
import "./chunk-TBKQVVVQ.js";
import "./chunk-MWAJRN5U.js";
import "./chunk-EUVEJGWN.js";
import "./chunk-F7YRUNS5.js";
import "./chunk-D3WWUQCY.js";
import "./chunk-WVOJZIIB.js";
import "./chunk-RF5IWX6P.js";
import "./chunk-GU7K6YXW.js";
import "./chunk-CDI6XFV5.js";
import "./chunk-QPX2ZKPM.js";
import "./chunk-SJSAYHBJ.js";
import "./chunk-S5B42CTM.js";
import "./chunk-252JHW3U.js";
import "./chunk-KPA3L4VZ.js";
import "./chunk-OK4LIPGX.js";
import "./chunk-WXSXHXM4.js";
import "./chunk-5PY53SV2.js";
import "./chunk-S7O4FDVD.js";
import "./chunk-MR3XQOHR.js";
import "./chunk-F66BE4ZW.js";
import "./chunk-PYQNXC2L.js";
import "./chunk-NHHKW3WR.js";
import "./chunk-V4EIGIRT.js";
import "./chunk-MD5VUVM5.js";
import "./chunk-CF43FEIV.js";
import "./chunk-GNESNC4Q.js";
import "./chunk-VYG5A4VI.js";
import "./chunk-ANW6V73Y.js";
import "./chunk-FJ3XUIT3.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-BFZI4PK4.js";
import "./chunk-KUZEG5DZ.js";
import "./chunk-QO446QEK.js";
import "./chunk-4FZRA4VI.js";
import "./chunk-G32FVJ4L.js";
import "./chunk-XJXVKVA7.js";
import "./chunk-HVAOWOGC.js";
import "./chunk-6NPJZOPM.js";
import "./chunk-MNR4BIGQ.js";
import "./chunk-FVR25IMN.js";
import "./chunk-IHCIS6PT.js";
import "./chunk-OHH3UAUS.js";
import "./chunk-EIQYIBNS.js";
import "./chunk-2NTQWEQZ.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-E2PV5YTZ.js";
import "./chunk-GLVTFP5O.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-2NXAWKLI.js";
import "./chunk-AUKNAK3D.js";
import "./chunk-2TWR6EVF.js";
import "./chunk-MIHY6FSC.js";
import "./chunk-IR32DXLL.js";
import "./chunk-7BMUKKBX.js";
import "./chunk-WIQR3T32.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-DR3XNW4L.js";
import "./chunk-DKCDRJ5N.js";
import "./chunk-PCTUO7WS.js";
import "./chunk-BS4MX2AF.js";
import "./chunk-R47DHBCM.js";
import "./chunk-KGA7WAD3.js";
import "./chunk-ZEMUATMN.js";
import "./chunk-RG2YRACH.js";
import "./chunk-ZUBHLDU6.js";
import "./chunk-C3PCK5WU.js";
import "./chunk-HE256ZWN.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-PZXYASUU.js";
import "./chunk-GVQH342Z.js";
import "./chunk-POEWD5LS.js";
import "./chunk-HTVQN75V.js";
import "./chunk-W3WHCGIQ.js";
import "./chunk-HPWZ2OON.js";
import "./chunk-WAPUHORU.js";
import "./chunk-HXDFHMRK.js";
import "./chunk-5HSVWQOA.js";
import "./chunk-C2BBLDPU.js";
import "./chunk-GWA3PLGA.js";
import "./chunk-FXWSVUF2.js";
import "./chunk-CNS4YGGN.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-UHAU5IXU.js";
import "./chunk-3U2FS2TT.js";
import "./chunk-CEXY22SC.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7JNPZC53.js";
import "./chunk-ZXXKE5XP.js";
import "./chunk-MATER45R.js";
import "./chunk-6UW2VZVV.js";
import "./chunk-GAARA5JM.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EHNCW2SL.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-REPJV7SP.js";
import "./chunk-F42HXUMI.js";
import "./chunk-BAMKEIAF.js";
import "./chunk-CZNLCEZN.js";
import "./chunk-UNJDKTFU.js";
import "./chunk-DH42JQZX.js";
import "./chunk-674HAVOZ.js";
import "./chunk-MHGDFNBE.js";
import "./chunk-J2V5CZSS.js";
import "./chunk-7D57YBLP.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-ZF5PVI2P.js";
import "./chunk-EQK73KLU.js";
import "./chunk-OBGBLQQX.js";
import "./chunk-FXYPEAR7.js";
import "./chunk-V3CNLYUD.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-T35GN7EL.js";
import "./chunk-7U6V6KY2.js";
import "./chunk-NFY4EX6G.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-ULGEYK3G.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-CHTUPHTO.js";
import {
  y
} from "./chunk-453UIKKW.js";
import {
  a2 as a
} from "./chunk-5BLDWPLW.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-7G6CKDLW.js";
import "./chunk-FFUMVAL2.js";
import "./chunk-3JQ6N63Z.js";
import "./chunk-U3J7253Q.js";
import "./chunk-FWH3QSBQ.js";
import "./chunk-2UENN434.js";
import "./chunk-UYRCWUYQ.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-6TJCVOLN.js";

// node_modules/@arcgis/core/layers/OrientedImageryLayer.js
function i(e2) {
  return (r, t, o) => {
    if (!r)
      return null;
    const a2 = r[0].orientedImageryProperties;
    return (a2 == null ? void 0 : a2[e2]) ?? null;
  };
}
var s2 = class extends Be {
  constructor() {
    super(...arguments), this.geometryType = "point", this.operationalLayerType = "OrientedImageryLayer", this.type = "oriented-imagery";
  }
  get effectiveElevationSource() {
    var _a;
    const { elevationSource: e2, demPathPrefix: r, demPathSuffix: t } = this;
    if (!((_a = e2 == null ? void 0 : e2.url) == null ? void 0 : _a.trim()))
      return e2;
    let o = e2.url.trim();
    return (r == null ? void 0 : r.trim()) && (o = `${r.trim()}/${o}`), (t == null ? void 0 : t.trim()) && (o += `/${t.trim()}`), { ...e2, url: o };
  }
  _verifySource() {
    if (super._verifySource(), "point" !== this.geometryType)
      throw new s("oriented-imagery-layer:invalid-geometry-type", "OrientedImageryLayer only supports point geometry type");
  }
};
e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeading") } } })], s2.prototype, "cameraHeading", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeight") } } })], s2.prototype, "cameraHeight", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraPitch") } } })], s2.prototype, "cameraPitch", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraRoll") } } })], s2.prototype, "cameraRoll", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("coveragePercent") } } })], s2.prototype, "coveragePercent", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathPrefix") } } })], s2.prototype, "demPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathSuffix") } } })], s2.prototype, "demPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathPrefix") } } })], s2.prototype, "depthImagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathSuffix") } } })], s2.prototype, "depthImagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("farDistance") } } })], s2.prototype, "farDistance", void 0), e([y({ json: { write: true } })], s2.prototype, "geometryType", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("horizontalFieldOfView") } } })], s2.prototype, "horizontalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("horizontalMeasurementUnit") } } })], s2.prototype, "horizontalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathPrefix") } } })], s2.prototype, "imagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathSuffix") } } })], s2.prototype, "imagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("imageRotation") } } })], s2.prototype, "imageRotation", void 0), e([y({ type: Number, json: { write: true, read: { source: "layers", reader: i("maximumDistance") } } })], s2.prototype, "maximumDistance", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("nearDistance") } } })], s2.prototype, "nearDistance", void 0), e([y({ type: ["OrientedImageryLayer"] })], s2.prototype, "operationalLayerType", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("orientedImageryType") } } })], s2.prototype, "orientedImageryType", void 0), e([y({ json: { read: false }, value: "oriented-imagery", readOnly: true })], s2.prototype, "type", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalFieldOfView") } } })], s2.prototype, "verticalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalMeasurementUnit") } } })], s2.prototype, "verticalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathPrefix") } } })], s2.prototype, "videoPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathSuffix") } } })], s2.prototype, "videoPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("elevationSource") } } })], s2.prototype, "elevationSource", void 0), e([y()], s2.prototype, "effectiveElevationSource", null), s2 = e([a("esri.layers.OrientedImageryLayer")], s2);
var d = s2;
export {
  d as default
};
//# sourceMappingURL=OrientedImageryLayer-KCHBU2LI.js.map
