import{b0 as n,aw as p,aN as m,ay as i,az as e,b1 as l,aB as d}from"./index-ef4eb327.js";import{x as h}from"./I3SMeshView3D-7e63e6d6.js";import{n as c}from"./LayerView3D-69d8ba54.js";import{d as u}from"./LayerView-04b4f064.js";import"./I3SOverrides-c5366a7b.js";import"./I3SNode-7e17817b.js";import"./meshFeatureSet-92ec9cf6.js";import"./MeshGeoreferencedRelativeVertexSpace-3207bafc.js";import"./MeshLocalVertexSpace-2efefd39.js";import"./georeference-39e567f1.js";import"./External-c6221421.js";import"./FeatureLayerView3D-6263471d.js";import"./FeatureLayerViewBase3D-388d5c90.js";import"./FeatureLikeLayerView3D-feed8de5.js";import"./dehydratedFeatureComparison-24006da4.js";import"./queryForSymbologySnapping-2783d49a.js";import"./elevationInfoUtils-06dd022f.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-9c9e1686.js";import"./optimizedFeatureQueryEngineAdapter-f48b64e9.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-7242cbe8.js";import"./quickselect-74639f31.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-a92c3ca7.js";import"./normalizeUtils-3f5557ff.js";import"./normalizeUtilsCommon-4281dae0.js";import"./WhereClause-96effb94.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-4406448e.js";import"./generateRendererUtils-e3bbd19c.js";import"./FeatureStore-dc6ae856.js";import"./BoundsStore-7ef5fedc.js";import"./projectExtentUtils-a104cb00.js";import"./query-4ddde5df.js";import"./pbfQueryUtils-38ef5680.js";import"./pbf-b9a007c2.js";import"./EventedSet-9e9b1f5a.js";import"./RefreshableLayerView-b547f753.js";import"./SceneModification-075cc915.js";import"./SceneLayerWorker-685ae55f.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};
