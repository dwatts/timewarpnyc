import{b0 as n,aw as p,aN as m,ay as i,az as e,b1 as l,aB as d}from"./index-c4c50d1e.js";import{x as h}from"./I3SMeshView3D-a3745a59.js";import{n as c}from"./LayerView3D-795072ea.js";import{d as u}from"./LayerView-53ad03a0.js";import"./I3SOverrides-a502880a.js";import"./I3SNode-1d1d8ace.js";import"./meshFeatureSet-3288e64e.js";import"./MeshGeoreferencedRelativeVertexSpace-6aae6b12.js";import"./MeshLocalVertexSpace-d0f92601.js";import"./georeference-c077426f.js";import"./External-be462bed.js";import"./FeatureLayerView3D-5f5a5e6d.js";import"./FeatureLayerViewBase3D-41a41968.js";import"./FeatureLikeLayerView3D-47dbd3fe.js";import"./dehydratedFeatureComparison-819455b2.js";import"./queryForSymbologySnapping-97e58cc5.js";import"./elevationInfoUtils-a9ca3937.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-8188131f.js";import"./optimizedFeatureQueryEngineAdapter-32503064.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-a98b61f1.js";import"./quickselect-f64d8e69.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-d3e1b1ee.js";import"./normalizeUtils-bf6d2a58.js";import"./normalizeUtilsCommon-004518b1.js";import"./WhereClause-ba439084.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-24d44269.js";import"./generateRendererUtils-ddc6f0fd.js";import"./FeatureStore-6378bbcc.js";import"./BoundsStore-ddd62052.js";import"./projectExtentUtils-79fda211.js";import"./query-ead99fcf.js";import"./pbfQueryUtils-77120dc1.js";import"./pbf-0e72ae03.js";import"./EventedSet-ba5a9113.js";import"./RefreshableLayerView-6d13e61b.js";import"./SceneModification-0adf5cac.js";import"./SceneLayerWorker-aeb5f175.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};
